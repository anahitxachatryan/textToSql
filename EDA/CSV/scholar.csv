question,source,sql
How many heads of the departments are older than var0 ?,spider,SELECT COUNT( * ) FROM HEAD AS HEADalias0 WHERE HEADalias0.AGE > var0 ;
"List the name , born state and age of the heads of departments ordered by age .",spider,"SELECT HEADalias0.AGE , HEADalias0.BORN_STATE , HEADalias0.NAME FROM HEAD AS HEADalias0 ORDER BY HEADalias0.AGE ;"
"List the creation year , name and budget of each department .",spider,"SELECT DEPARTMENTalias0.BUDGET_IN_BILLIONS , DEPARTMENTalias0.CREATION , DEPARTMENTalias0.NAME FROM DEPARTMENT AS DEPARTMENTalias0 ;"
What are the maximum and minimum budget of the departments ?,spider,"SELECT MAX( DEPARTMENTalias0.BUDGET_IN_BILLIONS ) , MIN( DEPARTMENTalias0.BUDGET_IN_BILLIONS ) FROM DEPARTMENT AS DEPARTMENTalias0 ;"
What is the average number of employees of the departments whose rank is between var0 and var1 ?,spider,SELECT AVG( DEPARTMENTalias0.NUM_EMPLOYEES ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.RANKING BETWEEN var0 AND var1 ;
What are the names of the heads who are born outside the var0 state ?,spider,"SELECT HEADalias0.NAME FROM HEAD AS HEADalias0 WHERE HEADalias0.BORN_STATE != ""var0"" ;"
What are the distinct creation years of the departments managed by a secretary born in state ' var0 ' ?,spider,"SELECT DISTINCT DEPARTMENTalias0.CREATION FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE HEADalias0.BORN_STATE = ""var0"" ;"
What are the names of the states where at least var0 heads were born ?,spider,SELECT HEADalias0.BORN_STATE FROM HEAD AS HEADalias0 GROUP BY HEADalias0.BORN_STATE HAVING COUNT( * ) >= var0 ;
In which year were most departments established ?,spider,SELECT DEPARTMENTalias0.CREATION FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY CREATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the name and number of employees for the departments managed by heads whose temporary acting value is ' var0 ' ?,spider,"SELECT DEPARTMENTalias0.NAME , DEPARTMENTalias0.NUM_EMPLOYEES FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID WHERE MANAGEMENTalias0.TEMPORARY_ACTING = ""var0"" ;"
How many acting statuses are there ?,spider,SELECT COUNT( DISTINCT MANAGEMENTalias0.TEMPORARY_ACTING ) FROM MANAGEMENT AS MANAGEMENTalias0 ;
How many departments are led by heads who are not mentioned ?,spider,SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DEPARTMENT_ID NOT IN ( SELECT MANAGEMENTalias0.DEPARTMENT_ID FROM MANAGEMENT AS MANAGEMENTalias0 ) ;
What are the distinct ages of the heads who are acting ?,spider,"SELECT DISTINCT HEADalias0.AGE FROM MANAGEMENT AS MANAGEMENTalias0 JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE MANAGEMENTalias0.TEMPORARY_ACTING = ""var0"" ;"
List the states where both the secretary of ' var0 ' department and the secretary of ' var1 ' were born .,spider,"SELECT HEADalias0.BORN_STATE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MANAGEMENT AS MANAGEMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID JOIN HEAD AS HEADalias0 ON MANAGEMENTalias0.HEAD_ID = HEADalias0.HEAD_ID WHERE DEPARTMENTalias0.NAME = ""var0"" INTERSECT SELECT HEADalias1.BORN_STATE FROM DEPARTMENT AS DEPARTMENTalias1 JOIN MANAGEMENT AS MANAGEMENTalias1 ON MANAGEMENTalias1.DEPARTMENT_ID = DEPARTMENTalias1.DEPARTMENT_ID JOIN HEAD AS HEADalias1 ON MANAGEMENTalias1.HEAD_ID = HEADalias1.HEAD_ID WHERE DEPARTMENTalias1.NAME = ""var1"" ;"
"Which department has more than var0 head at a time ? List the id , name and the number of heads .",spider,"SELECT COUNT( MANAGEMENTalias0.* ) , DEPARTMENTalias0.DEPARTMENT_ID , DEPARTMENTalias0.NAME FROM MANAGEMENT AS MANAGEMENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON MANAGEMENTalias0.DEPARTMENT_ID = DEPARTMENTalias0.DEPARTMENT_ID GROUP BY DEPARTMENTalias0.DEPARTMENT_ID HAVING COUNT( MANAGEMENTalias0.* ) > var0 ;"
Which head's name has the substring ' var0 ' ? List the id and name .,spider,"SELECT HEADalias0.HEAD_ID , HEADalias0.NAME FROM HEAD AS HEADalias0 WHERE HEADalias0.NAME LIKE ""var0"" ;"
How many farms are there ?,spider,SELECT COUNT( * ) FROM FARM AS FARMalias0 ;
Count the number of farms .,spider,SELECT COUNT( * ) FROM FARM AS FARMalias0 ;
List the total number of horses on farms in ascending order .,spider,SELECT FARMalias0.TOTAL_HORSES FROM FARM AS FARMalias0 ORDER BY FARMalias0.TOTAL_HORSES ASC ;
"What is the total horses record for each farm , sorted ascending ?",spider,SELECT FARMalias0.TOTAL_HORSES FROM FARM AS FARMalias0 ORDER BY FARMalias0.TOTAL_HORSES ASC ;
"What are the hosts of competitions whose theme is not "" var0 "" ?",spider,"SELECT FARM_COMPETITIONalias0.HOSTS FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 WHERE FARM_COMPETITIONalias0.THEME != ""var0"" ;"
Return the hosts of competitions for which the theme is not var0 ?,spider,"SELECT FARM_COMPETITIONalias0.HOSTS FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 WHERE FARM_COMPETITIONalias0.THEME != ""var0"" ;"
What are the themes of farm competitions sorted by year in ascending order ?,spider,SELECT FARM_COMPETITIONalias0.THEME FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 ORDER BY FARM_COMPETITIONalias0.YEAR ASC ;
"Return the themes of farm competitions , sorted by year ascending .",spider,SELECT FARM_COMPETITIONalias0.THEME FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 ORDER BY FARM_COMPETITIONalias0.YEAR ASC ;
What is the average number of working horses of farms with more than var0 total number of horses ?,spider,SELECT AVG( FARMalias0.WORKING_HORSES ) FROM FARM AS FARMalias0 WHERE FARMalias0.TOTAL_HORSES > var0 ;
Give the average number of working horses on farms with more than var0 total horses .,spider,SELECT AVG( FARMalias0.WORKING_HORSES ) FROM FARM AS FARMalias0 WHERE FARMalias0.TOTAL_HORSES > var0 ;
What are the maximum and minimum number of cows across all farms .,spider,"SELECT MAX( FARMalias0.COWS ) , MIN( FARMalias0.COWS ) FROM FARM AS FARMalias0 ;"
Return the maximum and minimum number of cows across all farms .,spider,"SELECT MAX( FARMalias0.COWS ) , MIN( FARMalias0.COWS ) FROM FARM AS FARMalias0 ;"
How many different statuses do cities have ?,spider,SELECT COUNT( DISTINCT CITYalias0.STATUS ) FROM CITY AS CITYalias0 ;
Count the number of different statuses .,spider,SELECT COUNT( DISTINCT CITYalias0.STATUS ) FROM CITY AS CITYalias0 ;
List official names of cities in descending order of population .,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC ;
"What are the official names of cities , ordered descending by population ?",spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC ;
List the official name and status of the city with the largest population .,spider,"SELECT CITYalias0.OFFICIAL_NAME , CITYalias0.STATUS FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"
What is the official name and status of the city with the most residents ?,spider,"SELECT CITYalias0.OFFICIAL_NAME , CITYalias0.STATUS FROM CITY AS CITYalias0 ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"
Show the years and the official names of the host cities of competitions .,spider,"SELECT CITYalias0.OFFICIAL_NAME , FARM_COMPETITIONalias0.YEAR FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID ;"
Give the years and official names of the cities of each competition .,spider,"SELECT CITYalias0.OFFICIAL_NAME , FARM_COMPETITIONalias0.YEAR FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID ;"
Show the official names of the cities that have hosted more than one competition .,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID HAVING COUNT( * ) > var0 ;
What are the official names of cities that have hosted more than one competition ?,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID HAVING COUNT( * ) > var0 ;
Show the status of the city that has hosted the greatest number of competitions .,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the status of the city that has hosted the most competitions ?,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID GROUP BY FARM_COMPETITIONalias0.HOST_CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Please show the themes of competitions with host cities having populations larger than var0 .,spider,SELECT FARM_COMPETITIONalias0.THEME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.POPULATION > var0 ;
What are the themes of competitions that have corresponding host cities with more than var0 residents ?,spider,SELECT FARM_COMPETITIONalias0.THEME FROM CITY AS CITYalias0 JOIN FARM_COMPETITION AS FARM_COMPETITIONalias0 ON FARM_COMPETITIONalias0.HOST_CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.POPULATION > var0 ;
Please show the different statuses of cities and the average population of cities with each status .,spider,"SELECT AVG( CITYalias0.POPULATION ) , CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATUS ;"
What are the statuses and average populations of each city ?,spider,"SELECT AVG( CITYalias0.POPULATION ) , CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY CITYalias0.STATUS ;"
"Please show the different statuses , ordered by the number of cities that have each .",spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) ASC ;
"Return the different statuses of cities , ascending by frequency .",spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) ASC ;
List the most common type of Status across cities .,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common status across all cities ?,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the official names of cities that have not held any competition .,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_ID NOT IN ( SELECT FARM_COMPETITIONalias0.HOST_CITY_ID FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 ) ;
What are the official names of cities that have not hosted a farm competition ?,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_ID NOT IN ( SELECT FARM_COMPETITIONalias0.HOST_CITY_ID FROM FARM_COMPETITION AS FARM_COMPETITIONalias0 ) ;
Show the status shared by cities with population bigger than var0 and smaller than var1 .,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 INTERSECT SELECT CITYalias1.STATUS FROM CITY AS CITYalias1 WHERE CITYalias1.POPULATION < var1 ;
Which statuses correspond to both cities that have a population over var0 and cities that have a population lower than var1 ?,spider,SELECT CITYalias0.STATUS FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 INTERSECT SELECT CITYalias1.STATUS FROM CITY AS CITYalias1 WHERE CITYalias1.POPULATION < var1 ;
Find the official names of cities with population bigger than var0 or smaller than var1 .,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION < var1 OR CITYalias0.POPULATION > var0 ;
What are the official names of cities that have population over var0 or less than var1 ?,spider,SELECT CITYalias0.OFFICIAL_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION < var1 OR CITYalias0.POPULATION > var0 ;
"Show the census ranking of cities whose status are not "" var0 "" .",spider,"SELECT CITYalias0.CENSUS_RANKING FROM CITY AS CITYalias0 WHERE CITYalias0.STATUS != ""var0"" ;"
"What are the census rankings of cities that do not have the status "" var0 "" ?",spider,"SELECT CITYalias0.CENSUS_RANKING FROM CITY AS CITYalias0 WHERE CITYalias0.STATUS != ""var0"" ;"
which course has most number of registered students ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the course with the most registered students ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
what is id of students who registered some courses but the least number of courses in these students ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 GROUP BY STUDENT_ID ORDER BY COUNT( * ) LIMIT 1 ;
What are the ids of the students who registered for some courses but had the least number of courses for all students ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 GROUP BY STUDENT_ID ORDER BY COUNT( * ) LIMIT 1 ;
what are the first name and last name of all candidates ?,spider,"SELECT PEOPLEalias0.FIRST_NAME , PEOPLEalias0.LAST_NAME FROM CANDIDATES AS CANDIDATESalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID ;"
What are the first and last names of all the candidates ?,spider,"SELECT PEOPLEalias0.FIRST_NAME , PEOPLEalias0.LAST_NAME FROM CANDIDATES AS CANDIDATESalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID ;"
List the id of students who never attends courses ?,spider,SELECT STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
What are the ids of every student who has never attended a course ?,spider,SELECT STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
List the id of students who attended some courses ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
What are the ids of all students who have attended at least one course ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
What are the ids of all students for courses and what are the names of those courses ?,spider,"SELECT COURSESalias0.COURSE_NAME , STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID ;"
What is detail of the student who most recently registered course ?,spider,SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE DESC LIMIT 1 ;
What details do we have on the students who registered for courses most recently ?,spider,SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE DESC LIMIT 1 ;
How many students attend course var0 ?,spider,"SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
How many students are attending var0 courses ?,spider,"SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
How many courses do the student whose id is var0 attend ?,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var0 ;
How many courses does the student with id var0 actually attend ?,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var0 ;
Find id of the candidate whose email is var0 ?,spider,"SELECT CANDIDATESalias0.CANDIDATE_ID FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATES AS CANDIDATESalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE PEOPLEalias0.EMAIL_ADDRESS = ""var0"" ;"
What is the id of the candidate whose email is var0 ?,spider,"SELECT CANDIDATESalias0.CANDIDATE_ID FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATES AS CANDIDATESalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE PEOPLEalias0.EMAIL_ADDRESS = ""var0"" ;"
Find id of the candidate who most recently accessed the course ?,spider,SELECT CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID FROM CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ORDER BY CANDIDATE_ASSESSMENTSalias0.ASSESSMENT_DATE DESC LIMIT 1 ;
What is the id of the candidate who most recently accessed the course ?,spider,SELECT CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID FROM CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ORDER BY CANDIDATE_ASSESSMENTSalias0.ASSESSMENT_DATE DESC LIMIT 1 ;
What is detail of the student who registered the most number of courses ?,spider,SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the details of the student who registered for the most number of courses ?,spider,SELECT STUDENTSalias0.STUDENT_DETAILS FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the id of students who registered some courses and the number of their registered courses ?,spider,"SELECT COUNT( * ) , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ;"
"For every student who is registered for some course , how many courses are they registered for ?",spider,"SELECT COUNT( * ) , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ;"
How many registed students do each course have ? List course name and the number of their registered students ?,spider,"SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID ;"
"For each course id , how many students are registered and what are the course names ?",spider,"SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN COURSES AS COURSESalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID ;"
"Find id of candidates whose assessment code is "" var0 "" ?",spider,"SELECT CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID FROM CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = ""var0"" ;"
What are the ids of the candidates that have an outcome code of var0 ?,spider,"SELECT CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID FROM CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = ""var0"" ;"
"Find the cell mobile number of the candidates whose assessment code is "" var0 "" ?",spider,"SELECT PEOPLEalias0.CELL_MOBILE_NUMBER FROM CANDIDATES AS CANDIDATESalias0 JOIN CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ON CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID = CANDIDATESalias0.CANDIDATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = ""var0"" ;"
"What are the cell phone numbers of the candidates that received an assessment code of "" var0 "" ?",spider,"SELECT PEOPLEalias0.CELL_MOBILE_NUMBER FROM CANDIDATES AS CANDIDATESalias0 JOIN CANDIDATE_ASSESSMENTS AS CANDIDATE_ASSESSMENTSalias0 ON CANDIDATE_ASSESSMENTSalias0.CANDIDATE_ID = CANDIDATESalias0.CANDIDATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PERSON_ID = CANDIDATESalias0.CANDIDATE_ID WHERE CANDIDATE_ASSESSMENTSalias0.ASESSMENT_OUTCOME_CODE = ""var0"" ;"
What are the id of students who registered course var0 ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = var0 ;
What are the ids of the students who registered for course var0 ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = var0 ;
What is the id of the student who most recently registered course var0 ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE COURSE_ID = var0 ORDER BY STUDENT_COURSE_ATTENDANCEalias0.DATE_OF_ATTENDANCE DESC LIMIT 1 ;
What are the ids of the students who registered for course var0 most recently ?,spider,SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE COURSE_ID = var0 ORDER BY STUDENT_COURSE_ATTENDANCEalias0.DATE_OF_ATTENDANCE DESC LIMIT 1 ;
Find distinct cities of addresses of people ?,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ;
What are the different cities where people live ?,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ;
Find distinct cities of address of students ?,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = PEOPLE_ADDRESSESalias0.PERSON_ID ;
What are the different cities where students live ?,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN PEOPLE_ADDRESSES AS PEOPLE_ADDRESSESalias0 ON PEOPLE_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = PEOPLE_ADDRESSESalias0.PERSON_ID ;
List the names of courses in alphabetical order ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 ORDER BY COURSESalias0.COURSE_NAME ;
What are the names of the courses in alphabetical order ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 ORDER BY COURSESalias0.COURSE_NAME ;
List the first names of people in alphabetical order ?,spider,SELECT PEOPLEalias0.FIRST_NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.FIRST_NAME ;
What are the first names of the people in alphabetical order ?,spider,SELECT PEOPLEalias0.FIRST_NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.FIRST_NAME ;
What are the id of students who registered courses or attended courses ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
What are the ids of the students who either registered or attended a course ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ;
Find the id of courses which are registered or attended by student whose id is var0 ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = var0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var1 ;
What are the ids of the courses that are registered or attended by the student whose id is var0 ?,spider,SELECT STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID = var0 UNION SELECT STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 WHERE STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID = var1 ;
What are all info of students who registered courses but not attended courses ?,spider,SELECT * FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
What are all details of the students who registered but did not attend any course ?,spider,SELECT * FROM STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 WHERE STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ) ;
List the id of students who registered course var0 in the order of registration date .,spider,"SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE ;"
What are the ids of the students who registered course var0 by order of registration date ?,spider,"SELECT STUDENT_COURSE_REGISTRATIONSalias0.STUDENT_ID FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_REGISTRATIONS AS STUDENT_COURSE_REGISTRATIONSalias0 ON STUDENT_COURSE_REGISTRATIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ORDER BY STUDENT_COURSE_REGISTRATIONSalias0.REGISTRATION_DATE ;"
List the id of students who attended var0 courses in the order of attendance date .,spider,"SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ORDER BY STUDENT_COURSE_ATTENDANCEalias0.DATE_OF_ATTENDANCE ;"
What are the ids of the students who attended courses in the var0 department in order of attendance date .,spider,"SELECT STUDENT_COURSE_ATTENDANCEalias0.STUDENT_ID FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ATTENDANCE AS STUDENT_COURSE_ATTENDANCEalias0 ON STUDENT_COURSE_ATTENDANCEalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ORDER BY STUDENT_COURSE_ATTENDANCEalias0.DATE_OF_ATTENDANCE ;"
Give me the dates when the max temperature was higher than var0 .,spider,SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MAX_TEMPERATURE_F > var0 ;
What are the dates with a maximum temperature higher than var0 ?,spider,SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MAX_TEMPERATURE_F > var0 ;
What are the names of stations that have latitude lower than var0 ?,spider,SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE LAT < var0 ;
What are the names of all stations with a latitude smaller than var0 ?,spider,SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE LAT < var0 ;
"For each city , return the highest latitude among its stations .",spider,"SELECT MAX( LAT ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY ;"
"For each city , what is the highest latitude for its stations ?",spider,"SELECT MAX( LAT ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY ;"
Give me the start station and end station for the trips with the three oldest id .,spider,"SELECT TRIPalias0.END_STATION_NAME , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.ID LIMIT var0 ;"
What is the station station and end station for the trips with the three smallest ids ?,spider,"SELECT TRIPalias0.END_STATION_NAME , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.ID LIMIT var0 ;"
What is the average latitude and longitude of stations located in var0 city ?,spider,"SELECT AVG( LAT ) , AVG( LONG ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ;"
What is the average latitude and longitude in var0 ?,spider,"SELECT AVG( LAT ) , AVG( LONG ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ;"
What is the id of the trip that has the shortest duration ?,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION LIMIT 1 ;
What is the id of the shortest trip ?,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION LIMIT 1 ;
What is the total and maximum duration of trips with bike id var0 ?,spider,"SELECT MAX( TRIPalias0.DURATION ) , SUM( TRIPalias0.DURATION ) FROM TRIP AS TRIPalias0 WHERE TRIPalias0.BIKE_ID = var0 ;"
What is the total and maximum duration for all trips with the bike id var0 ?,spider,"SELECT MAX( TRIPalias0.DURATION ) , SUM( TRIPalias0.DURATION ) FROM TRIP AS TRIPalias0 WHERE TRIPalias0.BIKE_ID = var0 ;"
"For each zip code , return the average mean temperature of August there .",spider,"SELECT AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE DATE LIKE ""var0/%"" GROUP BY WEATHERalias0.ZIP_CODE ;"
"For each zip code , what is the average mean temperature for all dates that start with ' var0 ' ?",spider,"SELECT AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE DATE LIKE ""var0/%"" GROUP BY WEATHERalias0.ZIP_CODE ;"
"From the trip record , find the number of unique bikes .",spider,SELECT COUNT( DISTINCT TRIPalias0.BIKE_ID ) FROM TRIP AS TRIPalias0 ;
How many different bike ids are there ?,spider,SELECT COUNT( DISTINCT TRIPalias0.BIKE_ID ) FROM TRIP AS TRIPalias0 ;
What is the number of distinct cities the stations are located at ?,spider,SELECT COUNT( DISTINCT STATIONalias0.CITY ) FROM STATION AS STATIONalias0 ;
How many different cities have these stations ?,spider,SELECT COUNT( DISTINCT STATIONalias0.CITY ) FROM STATION AS STATIONalias0 ;
How many stations does var0 city has ?,spider,"SELECT COUNT( * ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ;"
How many stations are in var0 ?,spider,"SELECT COUNT( * ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ;"
Return the unique name for stations that have ever had var0 bikes available .,spider,SELECT DISTINCT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE = var0 ;
What are the different names for each station that has ever had var0 bikes available ?,spider,SELECT DISTINCT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE = var0 ;
Which start station had the most trips starting from August ? Give me the name and id of the station .,spider,"SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE START_DATE LIKE ""var0/%"" GROUP BY START_STATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the start station's name and id for the one that had the most start trips in August ?,spider,"SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE START_DATE LIKE ""var0/%"" GROUP BY START_STATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which bike traveled the most often in zip code var0 ?,spider,SELECT TRIPalias0.BIKE_ID FROM TRIP AS TRIPalias0 WHERE ZIP_CODE = var0 GROUP BY BIKE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the id of the bike that traveled the most in var0 ?,spider,SELECT TRIPalias0.BIKE_ID FROM TRIP AS TRIPalias0 WHERE ZIP_CODE = var0 GROUP BY BIKE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many days had both mean humidity above var0 and mean visibility above var1 ?,spider,SELECT COUNT( WEATHERalias0.* ) FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MEAN_HUMIDITY > var0 AND WEATHERalias0.MEAN_VISIBILITY_MILES > var1 ;
What is the number of days that had an average humity above var0 and an average visibility above var1 ?,spider,SELECT COUNT( WEATHERalias0.* ) FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MEAN_HUMIDITY > var0 AND WEATHERalias0.MEAN_VISIBILITY_MILES > var1 ;
"What is the latitude , longitude , city of the station from which the shortest trip started ?",spider,"SELECT STATIONalias0.CITY , STATIONalias0.LAT , STATIONalias0.LONG FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY TRIPalias0.DURATION LIMIT 1 ;"
"What is the latitude , longitude , and city of the station from which the trip with smallest duration started ?",spider,"SELECT STATIONalias0.CITY , STATIONalias0.LAT , STATIONalias0.LONG FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY TRIPalias0.DURATION LIMIT 1 ;"
What are the ids of stations that are located in var0 and have average bike availability above var1 .,spider,"SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" INTERSECT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var1 ;"
What are the ids of the stations in var0 that normally have more than var1 bikes available ?,spider,"SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" INTERSECT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var1 ;"
What are the names and ids of stations that had more than var0 bikes available on average or were installed in December ?,spider,"SELECT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var0 UNION SELECT STATIONalias1.ID , STATIONalias1.NAME FROM STATION AS STATIONalias1 WHERE STATIONalias1.INSTALLATION_DATE LIKE ""var1/%"" ;"
What are the names and ids of all stations that have more than var0 bikes available on average or had bikes installed in December ?,spider,"SELECT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var0 UNION SELECT STATIONalias1.ID , STATIONalias1.NAME FROM STATION AS STATIONalias1 WHERE STATIONalias1.INSTALLATION_DATE LIKE ""var1/%"" ;"
What is the var1 most common cloud cover rates in the region of zip code var0 ?,spider,SELECT WEATHERalias0.CLOUD_COVER FROM WEATHER AS WEATHERalias0 WHERE ZIP_CODE = var0 GROUP BY CLOUD_COVER ORDER BY COUNT( WEATHERalias0.* ) DESC LIMIT var1 ;
What are the var1 most common cloud covers in the zip code of var0 ?,spider,SELECT WEATHERalias0.CLOUD_COVER FROM WEATHER AS WEATHERalias0 WHERE ZIP_CODE = var0 GROUP BY CLOUD_COVER ORDER BY COUNT( WEATHERalias0.* ) DESC LIMIT var1 ;
What is the zip code in which the average mean sea level pressure is the lowest ?,spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY ZIP_CODE ORDER BY AVG( WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES ) LIMIT 1 ;
What is the zip code that has the lowest average mean sea level pressure ?,spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY ZIP_CODE ORDER BY AVG( WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES ) LIMIT 1 ;
What is the average bike availability in stations that are not located in var0 ?,spider,"SELECT AVG( STATUSalias0.BIKES_AVAILABLE ) FROM STATUS AS STATUSalias0 WHERE STATUSalias0.STATION_ID NOT IN ( SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ) ;"
What is the average bike availablility for stations not in var0 ?,spider,"SELECT AVG( STATUSalias0.BIKES_AVAILABLE ) FROM STATUS AS STATUSalias0 WHERE STATUSalias0.STATION_ID NOT IN ( SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" ) ;"
What is the average longitude of stations that never had bike availability more than var0 ?,spider,SELECT AVG( LONG ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.ID NOT IN ( SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MAX( STATUSalias0.BIKES_AVAILABLE ) > var0 ) ;
What is the mean longitude for all stations that have never had more than var0 bikes available ?,spider,SELECT AVG( LONG ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.ID NOT IN ( SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MAX( STATUSalias0.BIKES_AVAILABLE ) > var0 ) ;
When and in what zip code did max temperature reach var0 ?,spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MAX_TEMPERATURE_F >= var0 ;"
What zip codes have a station with a max temperature greater than or equal to var0 and when did it reach that temperature ?,spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MAX_TEMPERATURE_F >= var0 ;"
Give me ids for all the trip that took place in a zip code area with average mean temperature above var0 .,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN WEATHER AS WEATHERalias0 ON WEATHERalias0.ZIP_CODE = TRIPalias0.ZIP_CODE GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) > var0 ;
"For each zip code , find the ids of all trips that have a higher average mean temperature above var0 ?",spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN WEATHER AS WEATHERalias0 ON WEATHERalias0.ZIP_CODE = TRIPalias0.ZIP_CODE GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_TEMPERATURE_F ) > var0 ;
"For each zip code , return how many times max wind speed reached var0 ?",spider,"SELECT COUNT( WEATHERalias0.* ) , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE MAX_WIND_SPEED_MPH >= var0 GROUP BY WEATHERalias0.ZIP_CODE ;"
"For each zip code , how many times has the maximum wind speed reached var0 mph ?",spider,"SELECT COUNT( WEATHERalias0.* ) , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE MAX_WIND_SPEED_MPH >= var0 GROUP BY WEATHERalias0.ZIP_CODE ;"
On which day and in which zip code was the min dew point lower than any day in zip code var0 ?,spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MIN_DEW_POINT_F < ( SELECT MIN( WEATHERalias1.MIN_DEW_POINT_F ) FROM WEATHER AS WEATHERalias1 WHERE WEATHERalias1.ZIP_CODE = var0 ) ;"
"Which days had a minimum dew point smaller than any day in zip code var0 , and in which zip codes were those measurements taken ?",spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MIN_DEW_POINT_F < ( SELECT MIN( WEATHERalias1.MIN_DEW_POINT_F ) FROM WEATHER AS WEATHERalias1 WHERE WEATHERalias1.ZIP_CODE = var0 ) ;"
"For each trip , return its ending station's installation date .",spider,"SELECT STATIONalias0.INSTALLATION_DATE , TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID ;"
What is the installation date for each ending station on all the trips ?,spider,"SELECT STATIONalias0.INSTALLATION_DATE , TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID ;"
Which trip started from the station with the largest dock count ? Give me the trip id .,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY STATIONalias0.DOCK_COUNT DESC LIMIT 1 ;
What is the id of the trip that started from the station with the highest dock count ?,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ORDER BY STATIONalias0.DOCK_COUNT DESC LIMIT 1 ;
Count the number of trips that did not end in var0 city .,spider,"SELECT COUNT( * ) FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID WHERE STATIONalias0.CITY != ""var0"" ;"
How many trips did not end in var0 ?,spider,"SELECT COUNT( * ) FROM TRIP AS TRIPalias0 JOIN STATION AS STATIONalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID WHERE STATIONalias0.CITY != ""var0"" ;"
"In zip code var0 , on which day neither var1 nor var2 was not observed ?",spider,"SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.EVENTS != ""var1"" AND WEATHERalias0.EVENTS != ""var2"" AND WEATHERalias0.ZIP_CODE = var0 ;"
On which day has it neither been foggy nor rained in the zip code of var0 ?,spider,"SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.EVENTS != ""var1"" AND WEATHERalias0.EVENTS != ""var2"" AND WEATHERalias0.ZIP_CODE = var0 ;"
What are the ids of stations that have latitude above var0 and never had bike availability below var1 ?,spider,SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE LAT > var0 EXCEPT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MIN( STATUSalias0.BIKES_AVAILABLE ) < var1 ;
What are the ids of all stations that have a latitude above var0 and have never had less than var1 bikes available ?,spider,SELECT STATIONalias0.ID FROM STATION AS STATIONalias0 WHERE LAT > var0 EXCEPT SELECT STATUSalias0.STATION_ID FROM STATUS AS STATUSalias0 GROUP BY STATUSalias0.STATION_ID HAVING MIN( STATUSalias0.BIKES_AVAILABLE ) < var1 ;
What are names of stations that have average bike availability above var0 and are not located in var1 city ?,spider,"SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var0 EXCEPT SELECT STATIONalias1.NAME FROM STATION AS STATIONalias1 WHERE STATIONalias1.CITY = ""var1"" ;"
What are the names of all stations that have more than var0 bikes available and are not located in var1 ?,spider,"SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID GROUP BY STATUSalias0.STATION_ID HAVING AVG( STATUSalias0.BIKES_AVAILABLE ) > var0 EXCEPT SELECT STATIONalias1.NAME FROM STATION AS STATIONalias1 WHERE STATIONalias1.CITY = ""var1"" ;"
"What are the name , latitude , and city of the station with the lowest latitude ?",spider,"SELECT LAT , STATIONalias0.CITY , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY LAT LIMIT 1 ;"
"What is the name , latitude , and city of the station that is located the furthest South ?",spider,"SELECT LAT , STATIONalias0.CITY , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY LAT LIMIT 1 ;"
"What are the date , mean temperature and mean humidity for the top var0 days with the largest max gust speeds ?",spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.MEAN_HUMIDITY , WEATHERalias0.MEAN_TEMPERATURE_F FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.MAX_GUST_SPEED_MPH DESC LIMIT var0 ;"
"What is the date , average temperature and mean humidity for the days with the var0 largest maximum gust speeds ?",spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.MEAN_HUMIDITY , WEATHERalias0.MEAN_TEMPERATURE_F FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.MAX_GUST_SPEED_MPH DESC LIMIT var0 ;"
List the name and the number of stations for all the cities that have at least var0 stations .,spider,"SELECT COUNT( * ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY HAVING COUNT( * ) >= var0 ;"
What is the name of every city that has at least var0 stations and how many stations does it have ?,spider,"SELECT COUNT( * ) , STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.CITY HAVING COUNT( * ) >= var0 ;"
Find the ids and names of stations from which at least var0 trips started .,spider,"SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.START_STATION_NAME HAVING COUNT( * ) >= var0 ;"
What are the ids and names of all start stations that were the beginning of at least var0 trips ?,spider,"SELECT TRIPalias0.START_STATION_ID , TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.START_STATION_NAME HAVING COUNT( * ) >= var0 ;"
Find the zip code in which the average mean visibility is lower than var0 .,spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_VISIBILITY_MILES ) < var0 ;
"For each zip code , select all those that have an average mean visiblity below var0 .",spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_VISIBILITY_MILES ) < var0 ;
List all the cities in a decreasing order of each city's stations ' highest latitude .,spider,SELECT STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY CITY ORDER BY MAX( LAT ) DESC ;
"For each city , list their names in decreasing order by their highest station latitude .",spider,SELECT STATIONalias0.CITY FROM STATION AS STATIONalias0 GROUP BY CITY ORDER BY MAX( LAT ) DESC ;
What are the dates that had the top var0 cloud cover rates ? Also tell me the cloud cover rate .,spider,"SELECT WEATHERalias0.CLOUD_COVER , WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.CLOUD_COVER DESC LIMIT var0 ;"
What are the dates that have the var0 highest cloud cover rates and what are the rates ?,spider,"SELECT WEATHERalias0.CLOUD_COVER , WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.CLOUD_COVER DESC LIMIT var0 ;"
What are the ids and durations of the trips with the top var0 durations ?,spider,"SELECT TRIPalias0.DURATION , TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION DESC LIMIT var0 ;"
What are the ids of the trips that lasted the longest and how long did they last ?,spider,"SELECT TRIPalias0.DURATION , TRIPalias0.ID FROM TRIP AS TRIPalias0 ORDER BY TRIPalias0.DURATION DESC LIMIT var0 ;"
"For each station , return its longitude and the average duration of trips that started from the station .",spider,"SELECT AVG( TRIPalias0.DURATION ) , STATIONalias0.LONG , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID GROUP BY TRIPalias0.START_STATION_ID ;"
"For each start station id , what is its name , longitude and average duration of trips started there ?",spider,"SELECT AVG( TRIPalias0.DURATION ) , STATIONalias0.LONG , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID GROUP BY TRIPalias0.START_STATION_ID ;"
"For each station , find its latitude and the minimum duration of trips that ended at the station .",spider,"SELECT MIN( TRIPalias0.DURATION ) , STATIONalias0.LAT , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID GROUP BY TRIPalias0.END_STATION_ID ;"
"For each end station id , what is its name , latitude , and minimum duration for trips ended there ?",spider,"SELECT MIN( TRIPalias0.DURATION ) , STATIONalias0.LAT , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.END_STATION_ID = STATIONalias0.ID GROUP BY TRIPalias0.END_STATION_ID ;"
List all the distinct stations from which a trip of duration below var0 started .,spider,SELECT DISTINCT TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION < var0 ;
What are all the different start station names for a trip that lasted less than var0 ?,spider,SELECT DISTINCT TRIPalias0.START_STATION_NAME FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION < var0 ;
Find all the zip codes in which the max dew point have never reached var0 .,spider,SELECT DISTINCT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 EXCEPT SELECT DISTINCT WEATHERalias1.ZIP_CODE FROM WEATHER AS WEATHERalias1 WHERE WEATHERalias1.MAX_DEW_POINT_F >= var0 ;
What are all the different zip codes that have a maximum dew point that was always below var0 ?,spider,SELECT DISTINCT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 EXCEPT SELECT DISTINCT WEATHERalias1.ZIP_CODE FROM WEATHER AS WEATHERalias1 WHERE WEATHERalias1.MAX_DEW_POINT_F >= var0 ;
Find the id for the trips that lasted at least as long as the average duration of trips in zip code var0 .,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION >= ( SELECT AVG( TRIPalias1.DURATION ) FROM TRIP AS TRIPalias1 WHERE TRIPalias1.ZIP_CODE = var0 ) ;
What are the ids of all trips that had a duration as long as the average trip duration in the zip code var0 ?,spider,SELECT TRIPalias0.ID FROM TRIP AS TRIPalias0 WHERE TRIPalias0.DURATION >= ( SELECT AVG( TRIPalias1.DURATION ) FROM TRIP AS TRIPalias1 WHERE TRIPalias1.ZIP_CODE = var0 ) ;
What are the dates in which the mean sea level pressure was between var0 and var1 ?,spider,SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES BETWEEN var0 AND var1 ;
What are the dates that have an average sea level pressure between var0 and var1 ?,spider,SELECT WEATHERalias0.DATE FROM WEATHER AS WEATHERalias0 WHERE WEATHERalias0.MEAN_SEA_LEVEL_PRESSURE_INCHES BETWEEN var0 AND var1 ;
Find the day in which the difference between the max temperature and min temperature was the smallest . Also report the difference .,spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F LIMIT 1 ;"
"What are the days that had the smallest temperature range , and what was that range ?",spider,"SELECT WEATHERalias0.DATE , WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F FROM WEATHER AS WEATHERalias0 ORDER BY WEATHERalias0.MAX_TEMPERATURE_F - WEATHERalias0.MIN_TEMPERATURE_F LIMIT 1 ;"
What are the id and name of the stations that have ever had more than var0 bikes available ?,spider,"SELECT DISTINCT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE > var0 ;"
What are the different ids and names of the stations that have had more than var0 bikes available ?,spider,"SELECT DISTINCT STATIONalias0.ID , STATIONalias0.NAME FROM STATION AS STATIONalias0 JOIN STATUS AS STATUSalias0 ON STATUSalias0.STATION_ID = STATIONalias0.ID WHERE STATUSalias0.BIKES_AVAILABLE > var0 ;"
Give me the zip code where the average mean humidity is below var0 and at least var1 trips took place .,spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_HUMIDITY ) < var0 INTERSECT SELECT TRIPalias0.ZIP_CODE FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.ZIP_CODE HAVING COUNT( * ) >= var1 ;
What are the zip codes that have an average mean humidity below var0 and had at least var1 trips come through there ?,spider,SELECT WEATHERalias0.ZIP_CODE FROM WEATHER AS WEATHERalias0 GROUP BY WEATHERalias0.ZIP_CODE HAVING AVG( WEATHERalias0.MEAN_HUMIDITY ) < var0 INTERSECT SELECT TRIPalias0.ZIP_CODE FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.ZIP_CODE HAVING COUNT( * ) >= var1 ;
What are the names of stations that are located in var0 city but have never been the ending point of trips more than var1 times ?,spider,"SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" EXCEPT SELECT TRIPalias0.END_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.END_STATION_NAME HAVING COUNT( * ) > var1 ;"
What are the names of the stations that are located in var0 but have never been the ending point of the trips,spider,"SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE STATIONalias0.CITY = ""var0"" EXCEPT SELECT TRIPalias0.END_STATION_NAME FROM TRIP AS TRIPalias0 GROUP BY TRIPalias0.END_STATION_NAME HAVING COUNT( * ) > var1 ;"
How many trips started from var0 city and ended at var1 city ?,spider,"SELECT COUNT( * ) FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 JOIN STATION AS STATIONalias1 JOIN TRIP AS TRIPalias1 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID AND TRIPalias1.ID = TRIPalias0.ID AND TRIPalias1.END_STATION_ID = STATIONalias1.ID WHERE STATIONalias0.CITY = ""var0"" AND STATIONalias1.CITY = ""var1"" ;"
How many trips stated from a station in var0 and ended at one in var1 ?,spider,"SELECT COUNT( * ) FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 JOIN STATION AS STATIONalias1 JOIN TRIP AS TRIPalias1 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID AND TRIPalias1.ID = TRIPalias0.ID AND TRIPalias1.END_STATION_ID = STATIONalias1.ID WHERE STATIONalias0.CITY = ""var0"" AND STATIONalias1.CITY = ""var1"" ;"
What is the average latitude and longitude of the starting points of all trips ?,spider,"SELECT AVG( STATIONalias0.LAT ) , AVG( STATIONalias0.LONG ) FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ;"
What is the average latitude and longitude of all starting stations for the trips ?,spider,"SELECT AVG( STATIONalias0.LAT ) , AVG( STATIONalias0.LONG ) FROM STATION AS STATIONalias0 JOIN TRIP AS TRIPalias0 ON TRIPalias0.START_STATION_ID = STATIONalias0.ID ;"
How many books are there ?,spider,SELECT COUNT( BOOKalias0.* ) FROM BOOK AS BOOKalias0 ;
List the writers of the books in ascending alphabetical order .,spider,SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 ORDER BY BOOKalias0.WRITER ASC ;
List the titles of the books in ascending order of issues .,spider,SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 ORDER BY BOOKalias0.ISSUES ASC ;
"What are the titles of the books whose writer is not "" var0 "" ?",spider,"SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 WHERE BOOKalias0.WRITER != ""var0"" ;"
What are the title and issues of the books ?,spider,"SELECT BOOKalias0.ISSUES , BOOKalias0.TITLE FROM BOOK AS BOOKalias0 ;"
What are the dates of publications in descending order of price ?,spider,SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.PRICE DESC ;
What are the distinct publishers of publications with price higher than var0 ?,spider,SELECT DISTINCT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PRICE > var0 ;
List the publisher of the publication with the highest price .,spider,SELECT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.PRICE DESC LIMIT 1 ;
List the publication dates of publications with var0 lowest prices .,spider,SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.PRICE ASC LIMIT var0 ;
Show the title and publication dates of books .,spider,"SELECT BOOKalias0.TITLE , PUBLICATIONalias0.PUBLICATION_DATE FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID ;"
Show writers who have published a book with price more than var0 .,spider,SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID WHERE PUBLICATIONalias0.PRICE > var0 ;
Show the titles of books in descending order of publication price .,spider,SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.BOOK_ID = BOOKalias0.BOOK_ID ORDER BY PUBLICATIONalias0.PRICE DESC ;
Show publishers that have more than one publication .,spider,SELECT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATIONalias0.PUBLISHER HAVING COUNT( * ) > var0 ;
Show different publishers together with the number of publications they have .,spider,"SELECT COUNT( * ) , PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATIONalias0.PUBLISHER ;"
Please show the most common publication date .,spider,SELECT PUBLICATIONalias0.PUBLICATION_DATE FROM PUBLICATION AS PUBLICATIONalias0 GROUP BY PUBLICATION_DATE ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the writers who have written more than one book .,spider,SELECT BOOKalias0.WRITER FROM BOOK AS BOOKalias0 GROUP BY BOOKalias0.WRITER HAVING COUNT( BOOKalias0.* ) > var0 ;
List the titles of books that are not published .,spider,SELECT BOOKalias0.TITLE FROM BOOK AS BOOKalias0 WHERE BOOKalias0.BOOK_ID NOT IN ( SELECT PUBLICATIONalias0.BOOK_ID FROM PUBLICATION AS PUBLICATIONalias0 ) ;
Show the publishers that have publications with price higher than var0 and publications with price lower than var1 .,spider,SELECT PUBLICATIONalias0.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PRICE > var0 INTERSECT SELECT PUBLICATIONalias1.PUBLISHER FROM PUBLICATION AS PUBLICATIONalias1 WHERE PUBLICATIONalias1.PRICE < var1 ;
What is the number of distinct publication dates ?,spider,SELECT COUNT( DISTINCT PUBLICATIONalias0.PUBLICATION_DATE ) FROM PUBLICATION AS PUBLICATIONalias0 ;
How many distinct publication dates are there in our record ?,spider,SELECT COUNT( DISTINCT PUBLICATIONalias0.PUBLICATION_DATE ) FROM PUBLICATION AS PUBLICATIONalias0 ;
"Show the prices of publications whose publisher is either "" var0 "" or "" var1 """,spider,"SELECT PUBLICATIONalias0.PRICE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.PUBLISHER = ""var0"" OR PUBLICATIONalias0.PUBLISHER = ""var1"" ;"
How many actors are there ?,spider,SELECT COUNT( ACTORalias0.* ) FROM ACTOR AS ACTORalias0 ;
Count the number of actors .,spider,SELECT COUNT( ACTORalias0.* ) FROM ACTOR AS ACTORalias0 ;
List the name of actors in ascending alphabetical order .,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.NAME ASC ;
"What are the names of actors , ordered alphabetically ?",spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.NAME ASC ;
What are the characters and duration of actors ?,spider,"SELECT ACTORalias0.CHARACTER , ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ;"
Return the characters and durations for each actor .,spider,"SELECT ACTORalias0.CHARACTER , ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ;"
List the name of actors whose age is not var0 .,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.AGE != var0 ;
What are the names of actors who are not var0 years old ?,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.AGE != var0 ;
What are the characters of actors in descending order of age ?,spider,SELECT ACTORalias0.CHARACTER FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC ;
"Return the characters for actors , ordered by age descending .",spider,SELECT ACTORalias0.CHARACTER FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC ;
What is the duration of the oldest actor ?,spider,SELECT ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC LIMIT 1 ;
Return the duration of the actor with the greatest age .,spider,SELECT ACTORalias0.DURATION FROM ACTOR AS ACTORalias0 ORDER BY ACTORalias0.AGE DESC LIMIT 1 ;
"What are the names of musicals with nominee "" var0 "" ?",spider,"SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.NOMINEE = ""var0"" ;"
Return the names of musicals who have the nominee var0 .,spider,"SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.NOMINEE = ""var0"" ;"
"What are the distinct nominees of the musicals with the award that is not "" var0 "" ?",spider,"SELECT DISTINCT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD != ""var0"" ;"
Return the different nominees of musicals that have an award that is not the var0 .,spider,"SELECT DISTINCT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD != ""var0"" ;"
Show names of actors and names of musicals they are in .,spider,"SELECT ACTORalias0.NAME , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ;"
What are the names of actors and the musicals that they are in ?,spider,"SELECT ACTORalias0.NAME , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ;"
"Show names of actors that have appeared in musical with name "" var0 "" .",spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID WHERE MUSICALalias0.NAME = ""var0"" ;"
What are the names of actors who have been in the musical titled var0 ?,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID WHERE MUSICALalias0.NAME = ""var0"" ;"
Show names of actors in descending order of the year their musical is awarded .,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ORDER BY MUSICALalias0.YEAR DESC ;
What are the names of actors ordered descending by the year in which their musical was awarded ?,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID ORDER BY MUSICALalias0.YEAR DESC ;
Show names of musicals and the number of actors who have appeared in the musicals .,spider,"SELECT COUNT( ACTORalias0.* ) , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID GROUP BY ACTORalias0.MUSICAL_ID ;"
How many actors have appeared in each musical ?,spider,"SELECT COUNT( ACTORalias0.* ) , MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID GROUP BY ACTORalias0.MUSICAL_ID ;"
Show names of musicals which have at least three actors .,spider,SELECT MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID GROUP BY ACTORalias0.MUSICAL_ID HAVING COUNT( ACTORalias0.* ) >= var0 ;
What are the names of musicals who have at var0 or more actors ?,spider,SELECT MUSICALalias0.NAME FROM ACTOR AS ACTORalias0 JOIN MUSICAL AS MUSICALalias0 ON MUSICALalias0.MUSICAL_ID = ACTORalias0.MUSICAL_ID GROUP BY ACTORalias0.MUSICAL_ID HAVING COUNT( ACTORalias0.* ) >= var0 ;
Show different nominees and the number of musicals they have been nominated .,spider,"SELECT COUNT( * ) , MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE ;"
How many musicals has each nominee been nominated for ?,spider,"SELECT COUNT( * ) , MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE ;"
Please show the nominee who has been nominated the greatest number of times .,spider,SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY NOMINEE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Who is the nominee who has been nominated for the most musicals ?,spider,SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY NOMINEE ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the most common result of the musicals .,spider,SELECT MUSICALalias0.RESULT FROM MUSICAL AS MUSICALalias0 GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the most frequent result across all musicals .,spider,SELECT MUSICALalias0.RESULT FROM MUSICAL AS MUSICALalias0 GROUP BY RESULT ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the nominees that have been nominated more than two musicals .,spider,SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE HAVING COUNT( * ) > var0 ;
Who are the nominees who have been nominated more than two times ?,spider,SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 GROUP BY MUSICALalias0.NOMINEE HAVING COUNT( * ) > var0 ;
List the name of musicals that do not have actors .,spider,SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.MUSICAL_ID NOT IN ( SELECT ACTORalias0.MUSICAL_ID FROM ACTOR AS ACTORalias0 ) ;
What are the names of musicals who have no actors ?,spider,SELECT MUSICALalias0.NAME FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.MUSICAL_ID NOT IN ( SELECT ACTORalias0.MUSICAL_ID FROM ACTOR AS ACTORalias0 ) ;
"Show the nominees that have nominated musicals for both "" var0 "" and "" var1 "" .",spider,"SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = ""var0"" INTERSECT SELECT MUSICALalias1.NOMINEE FROM MUSICAL AS MUSICALalias1 WHERE MUSICALalias1.AWARD = ""var1"" ;"
Who are the nominees who have been nominated for both a var0 and a var1 ?,spider,"SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = ""var0"" INTERSECT SELECT MUSICALalias1.NOMINEE FROM MUSICAL AS MUSICALalias1 WHERE MUSICALalias1.AWARD = ""var1"" ;"
"Show the musical nominee with award "" Bob Fosse "" or "" var1 "" .",spider,"SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = ""var0"" OR MUSICALalias0.AWARD = ""var1"" ;"
Who are the nominees who were nominated for either of the Bob Fosse or var1 awards ?,spider,"SELECT MUSICALalias0.NOMINEE FROM MUSICAL AS MUSICALalias0 WHERE MUSICALalias0.AWARD = ""var0"" OR MUSICALalias0.AWARD = ""var1"" ;"
"Find the emails of the user named "" var0 "" .",spider,"SELECT USER_PROFILESalias0.EMAIL FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.NAME = ""var0"" ;"
"What is the partition id of the user named "" var0 "" .",spider,"SELECT PARTITIONID FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.NAME = ""var0"" ;"
How many users are there ?,spider,SELECT COUNT( USER_PROFILESalias0.* ) FROM USER_PROFILES AS USER_PROFILESalias0 ;
How many followers does each user have ?,spider,SELECT COUNT( * ) FROM FOLLOWS AS FOLLOWSalias0 ;
Find the number of followers for each user .,spider,SELECT COUNT( * ) FROM FOLLOWS AS FOLLOWSalias0 GROUP BY F1 ;
Find the number of tweets in record .,spider,SELECT COUNT( * ) FROM TWEETS AS TWEETSalias0 ;
Find the number of users who posted some tweets .,spider,SELECT COUNT( DISTINCT UID ) FROM TWEETS AS TWEETSalias0 ;
Find the name and email of the user whose name contains the word ' var0 ' .,spider,"SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.NAME LIKE ""var0"" ;"
Find the names of users whose emails contain ' var0 ' or ' var1 ' .,spider,"SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.EMAIL LIKE ""var0"" OR USER_PROFILESalias0.EMAIL LIKE ""var1"" ;"
Return the text of tweets about the topic ' var0 ' .,spider,"SELECT TWEETSalias0.TEXT FROM TWEETS AS TWEETSalias0 WHERE TWEETSalias0.TEXT LIKE ""var0"" ;"
Find the name and email of the users who have more than var0 followers .,spider,"SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.FOLLOWERS > var0 ;"
"Find the names of the users whose number of followers is greater than that of the user named "" var0 "" .",spider,"SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F1 GROUP BY FOLLOWSalias0.F1 HAVING COUNT( USER_PROFILESalias0.* ) > ( SELECT COUNT( USER_PROFILESalias1.* ) FROM USER_PROFILES AS USER_PROFILESalias1 JOIN FOLLOWS AS FOLLOWSalias1 ON USER_PROFILESalias1.UID = FOLLOWSalias1.F1 WHERE USER_PROFILESalias1.NAME = ""var0"" ) ;"
Find the name and email for the users who have more than one follower .,spider,"SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F1 GROUP BY FOLLOWSalias0.F1 HAVING COUNT( USER_PROFILESalias0.* ) > var0 ;"
Find the names of users who have more than one tweet .,spider,SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID HAVING COUNT( USER_PROFILESalias0.* ) > var0 ;
Find the id of users who are followed by var0 and var1 .,spider,"SELECT FOLLOWSalias0.F1 FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F2 WHERE USER_PROFILESalias0.NAME = ""var0"" INTERSECT SELECT FOLLOWSalias1.F1 FROM USER_PROFILES AS USER_PROFILESalias1 JOIN FOLLOWS AS FOLLOWSalias1 ON USER_PROFILESalias1.UID = FOLLOWSalias1.F2 WHERE USER_PROFILESalias1.NAME = ""var1"" ;"
Find the id of users who are followed by var0 or var1 .,spider,"SELECT FOLLOWSalias0.F1 FROM USER_PROFILES AS USER_PROFILESalias0 JOIN FOLLOWS AS FOLLOWSalias0 ON USER_PROFILESalias0.UID = FOLLOWSalias0.F2 WHERE USER_PROFILESalias0.NAME = ""var0"" OR USER_PROFILESalias0.NAME = ""var1"" ;"
Find the name of the user who has the largest number of followers .,spider,SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS DESC LIMIT 1 ;
Find the name and email of the user followed by the least number of people .,spider,"SELECT USER_PROFILESalias0.EMAIL , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS LIMIT 1 ;"
"List the name and number of followers for each user , and sort the results by the number of followers in descending order .",spider,"SELECT USER_PROFILESalias0.FOLLOWERS , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS DESC ;"
List the names of var0 users followed by the largest number of other users .,spider,SELECT USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 ORDER BY USER_PROFILESalias0.FOLLOWERS DESC LIMIT var0 ;
List the text of all tweets in the order of date .,spider,SELECT TWEETSalias0.TEXT FROM TWEETS AS TWEETSalias0 ORDER BY CREATEDATE ;
Find the name of each user and number of tweets tweeted by each of them .,spider,"SELECT COUNT( USER_PROFILESalias0.* ) , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID ;"
Find the name and partition id for users who tweeted less than twice .,spider,"SELECT USER_PROFILESalias0.NAME , USER_PROFILESalias0.PARTITIONID FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID HAVING COUNT( USER_PROFILESalias0.* ) < var0 ;"
"Find the name of the user who tweeted more than once , and number of tweets tweeted by them .",spider,"SELECT COUNT( USER_PROFILESalias0.* ) , USER_PROFILESalias0.NAME FROM USER_PROFILES AS USER_PROFILESalias0 JOIN TWEETS AS TWEETSalias0 ON USER_PROFILESalias0.UID = TWEETSalias0.UID GROUP BY TWEETSalias0.UID HAVING COUNT( USER_PROFILESalias0.* ) > var0 ;"
Find the average number of followers for the users who do not have any tweet .,spider,SELECT AVG( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.UID NOT IN ( SELECT UID FROM TWEETS AS TWEETSalias0 ) ;
Find the average number of followers for the users who had some tweets .,spider,SELECT AVG( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 WHERE USER_PROFILESalias0.UID IN ( SELECT UID FROM TWEETS AS TWEETSalias0 ) ;
Find the maximum and total number of followers of all users .,spider,"SELECT MAX( USER_PROFILESalias0.FOLLOWERS ) , SUM( USER_PROFILESalias0.FOLLOWERS ) FROM USER_PROFILES AS USER_PROFILESalias0 ;"
Find the names of all the catalog entries .,spider,SELECT DISTINCT ( CATALOG_ENTRY_NAME ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
What are all the catalog entry names ?,spider,SELECT DISTINCT ( CATALOG_ENTRY_NAME ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
Find the list of attribute data types possessed by more than var0 attribute definitions .,spider,SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 GROUP BY ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE HAVING COUNT( * ) > var0 ;
What are the attribute data types with more than var0 attribute definitions ?,spider,SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 GROUP BY ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE HAVING COUNT( * ) > var0 ;
"What is the attribute data type of the attribute with name "" var0 "" ?",spider,"SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 WHERE ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME = ""var0"" ;"
"Find the attribute data type for the attribute named "" var0 "" .",spider,"SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_DATA_TYPE FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 WHERE ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME = ""var0"" ;"
Find the name and level of catalog structure with level between var0 and var1 .,spider,"SELECT CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NAME , CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER FROM CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER BETWEEN var0 AND var1 ;"
What are the name and level of catalog structure with level number between var0 and var1,spider,"SELECT CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NAME , CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER FROM CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER BETWEEN var0 AND var1 ;"
"Find all the catalog publishers whose name contains "" var0 """,spider,"SELECT DISTINCT ( CATALOG_PUBLISHER ) FROM CATALOGS AS CATALOGSalias0 WHERE CATALOGSalias0.CATALOG_PUBLISHER LIKE ""var0"" ;"
"Which catalog publishers have substring "" var0 "" in their names ?",spider,"SELECT DISTINCT ( CATALOG_PUBLISHER ) FROM CATALOGS AS CATALOGSalias0 WHERE CATALOGSalias0.CATALOG_PUBLISHER LIKE ""var0"" ;"
Which catalog publisher has published the most catalogs ?,spider,SELECT CATALOGSalias0.CATALOG_PUBLISHER FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOG_PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the catalog publisher that has the most catalogs .,spider,SELECT CATALOGSalias0.CATALOG_PUBLISHER FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOG_PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the names and publication dates of all catalogs that have catalog level number greater than var0 .,spider,"SELECT CATALOGSalias0.CATALOG_NAME , CATALOGSalias0.DATE_OF_PUBLICATION FROM CATALOGS AS CATALOGSalias0 JOIN CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 ON CATALOG_STRUCTUREalias0.CATALOG_ID = CATALOGSalias0.CATALOG_ID WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER > var0 ;"
What are the name and publication date of the catalogs with catalog level number above var0 ?,spider,"SELECT CATALOGSalias0.CATALOG_NAME , CATALOGSalias0.DATE_OF_PUBLICATION FROM CATALOGS AS CATALOGSalias0 JOIN CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 ON CATALOG_STRUCTUREalias0.CATALOG_ID = CATALOGSalias0.CATALOG_ID WHERE CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER > var0 ;"
What are the entry names of catalog with the attribute possessed by most entries .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = ( SELECT CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.ATTRIBUTE_VALUE FROM CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1 GROUP BY ATTRIBUTE_VALUE ORDER BY COUNT( CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.* ) DESC LIMIT 1 ) ;
Find the entry names of the catalog with the attribute that have the most entries .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = ( SELECT CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.ATTRIBUTE_VALUE FROM CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1 GROUP BY ATTRIBUTE_VALUE ORDER BY COUNT( CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias1.* ) DESC LIMIT 1 ) ;
What is the entry name of the most expensive catalog (in USD) ?,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS DESC LIMIT 1 ;
Find the entry name of the catalog with the highest price (in USD) .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS DESC LIMIT 1 ;
What is the level name of the cheapest catalog (in USD) ?,spider,SELECT CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 ON CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER = CATALOG_CONTENTSalias0.CATALOG_LEVEL_NUMBER ORDER BY CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS LIMIT 1 ;
Find the level name of the catalog with the lowest price (in USD) .,spider,SELECT CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_STRUCTURE AS CATALOG_STRUCTUREalias0 ON CATALOG_STRUCTUREalias0.CATALOG_LEVEL_NUMBER = CATALOG_CONTENTSalias0.CATALOG_LEVEL_NUMBER ORDER BY CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS LIMIT 1 ;
What are the average and minimum price (in Euro) of all products ?,spider,"SELECT AVG( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) , MIN( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;"
Give me the average and minimum price (in Euro) of the products .,spider,"SELECT AVG( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) , MIN( CATALOG_CONTENTSalias0.PRICE_IN_EUROS ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;"
What is the product with the highest height ? Give me the catalog entry name .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.HEIGHT DESC LIMIT 1 ;
Which catalog content has the highest height ? Give me the catalog entry name .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.HEIGHT DESC LIMIT 1 ;
Find the name of the product that has the smallest capacity .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.CAPACITY ASC LIMIT 1 ;
Which catalog content has the smallest capacity ? Return the catalog entry name .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ORDER BY CATALOG_CONTENTSalias0.CAPACITY ASC LIMIT 1 ;
"Find the names of all the products whose stock number starts with "" 2 "" .",spider,"SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRODUCT_STOCK_NUMBER LIKE ""var0"" ;"
"Which catalog contents have a product stock number that starts from "" 2 "" ? Show the catalog entry names .",spider,"SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRODUCT_STOCK_NUMBER LIKE ""var0"" ;"
Find the names of catalog entries with level number var0 .,spider,"SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_LEVEL_NUMBER = ""var0"" ;"
What are the names of catalog entries with level number var0 ?,spider,"SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTSalias0.CATALOG_ENTRY_ID = CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_ENTRY_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.CATALOG_LEVEL_NUMBER = ""var0"" ;"
Find the names of the products with length smaller than var0 or height greater than var1 .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.LENGTH < var0 OR CATALOG_CONTENTSalias0.WIDTH > var1 ;
Which catalog contents have length below var0 or above var1 ? Find the catalog entry names .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.LENGTH < var0 OR CATALOG_CONTENTSalias0.WIDTH > var1 ;
Find the name and attribute ID of the attribute definitions with attribute value var0 .,spider,"SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID , ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_ID = ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = var0 ;"
Which attribute definitions have attribute value var0 ? Give me the attribute name and attribute ID .,spider,"SELECT ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID , ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_NAME FROM ATTRIBUTE_DEFINITIONS AS ATTRIBUTE_DEFINITIONSalias0 JOIN CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTES AS CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0 ON CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_ID = ATTRIBUTE_DEFINITIONSalias0.ATTRIBUTE_ID WHERE CATALOG_CONTENTS_ADDITIONAL_ATTRIBUTESalias0.ATTRIBUTE_VALUE = var0 ;"
Find the name and capacity of products with price greater than var0 (in USD) .,spider,"SELECT CATALOG_CONTENTSalias0.CAPACITY , CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS > var0 ;"
Which catalog contents has price above var0 dollars ? Show their catalog entry names and capacities .,spider,"SELECT CATALOG_CONTENTSalias0.CAPACITY , CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.PRICE_IN_DOLLARS > var0 ;"
Find the dates on which more than one revisions were made .,spider,SELECT CATALOGSalias0.DATE_OF_LATEST_REVISION FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOGSalias0.DATE_OF_LATEST_REVISION HAVING COUNT( * ) > var0 ;
On which days more than one revisions were made on catalogs .,spider,SELECT CATALOGSalias0.DATE_OF_LATEST_REVISION FROM CATALOGS AS CATALOGSalias0 GROUP BY CATALOGSalias0.DATE_OF_LATEST_REVISION HAVING COUNT( * ) > var0 ;
How many products are there in the records ?,spider,SELECT COUNT( * ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
Find the total number of catalog contents .,spider,SELECT COUNT( * ) FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 ;
Name all the products with next entry ID greater than var0 .,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.NEXT_ENTRY_ID > var0 ;
What are the catalog entry names of the products with next entry ID above var0 ?,spider,SELECT CATALOG_CONTENTSalias0.CATALOG_ENTRY_NAME FROM CATALOG_CONTENTS AS CATALOG_CONTENTSalias0 WHERE CATALOG_CONTENTSalias0.NEXT_ENTRY_ID > var0 ;
How many aircrafts do we have ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
How many aircrafts exist in the database ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
How many aircrafts are there ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
What is the number of aircraft ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 ;
Show name and distance for all aircrafts .,spider,"SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ;"
What are the names and distances for all airplanes ?,spider,"SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ;"
Show ids for all aircrafts with more than var0 distance .,spider,SELECT AID FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > var0 ;
What are the ids of all aircrafts that can cover a distance of more than var0 ?,spider,SELECT AID FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > var0 ;
How many aircrafts have distance between var0 and var1 ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE BETWEEN var0 AND var1 ;
What is the count of aircrafts that have a distance between var0 and var1 ?,spider,SELECT COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE BETWEEN var0 AND var1 ;
What is the name and distance for aircraft with id var0 ?,spider,"SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AID = var0 ;"
What is the name and distance for the aircraft that has an id of var0 ?,spider,"SELECT AIRCRAFTalias0.DISTANCE , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AID = var0 ;"
"What is the minimum , average , and maximum distance of all aircrafts .",spider,"SELECT AVG( AIRCRAFTalias0.DISTANCE ) , MAX( AIRCRAFTalias0.DISTANCE ) , MIN( AIRCRAFTalias0.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias0 ;"
"Return the minimum , average and maximum distances traveled across all aircrafts .",spider,"SELECT AVG( AIRCRAFTalias0.DISTANCE ) , MAX( AIRCRAFTalias0.DISTANCE ) , MIN( AIRCRAFTalias0.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias0 ;"
Show the id and name of the aircraft with the maximum distance .,spider,"SELECT AID , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE DESC LIMIT 1 ;"
What is the id and name of the aircraft that can cover the maximum distance ?,spider,"SELECT AID , AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE DESC LIMIT 1 ;"
Show the name of aircrafts with top three lowest distances .,spider,SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE LIMIT var0 ;
What are the aircrafts with top var0 shortest lengthes ? List their names .,spider,SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 ORDER BY AIRCRAFTalias0.DISTANCE LIMIT var0 ;
Show names for all aircrafts with distances more than the average .,spider,SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > ( SELECT AVG( AIRCRAFTalias1.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias1 ) ;
What are the names of all aircrafts that can cover more distances than average ?,spider,SELECT AIRCRAFTalias0.NAME FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.DISTANCE > ( SELECT AVG( AIRCRAFTalias1.DISTANCE ) FROM AIRCRAFT AS AIRCRAFTalias1 ) ;
How many employees do we have ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
What is the number of employees ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
Find the total number of employees .,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
How many employees are there all together ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
How many employees are there ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
Count the number of employees,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
Show name and salary for all employees sorted by salary .,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ;"
What is the name and salary of all employees in order of salary ?,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ;"
Show ids for all employees with at least var0 salary .,spider,SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > var0 ;
What is the id of every employee who has at least a salary of var0 ?,spider,SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > var0 ;
How many employees have salary between var0 and var1 ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY BETWEEN var0 AND var1 ;
What is the number of employees that have a salary between var0 and var1 ?,spider,SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY BETWEEN var0 AND var1 ;
What is the name and salary for employee with id var0 ?,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EID = var0 ;"
What is the name and salary of the employee with the id var0 ?,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EID = var0 ;"
What is average and maximum salary of all employees .,spider,"SELECT AVG( EMPLOYEEalias0.SALARY ) , MAX( EMPLOYEEalias0.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;"
What is the average and largest salary of all employees ?,spider,"SELECT AVG( EMPLOYEEalias0.SALARY ) , MAX( EMPLOYEEalias0.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;"
Show the id and name of the employee with maximum salary .,spider,"SELECT EID , EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY DESC LIMIT 1 ;"
What is the id and name of the employee with the highest salary ?,spider,"SELECT EID , EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY DESC LIMIT 1 ;"
Show the name of employees with three lowest salaries .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ASC LIMIT var0 ;
What is the name of the var0 employees who get paid the least ?,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.SALARY ASC LIMIT var0 ;
Show names for all employees with salary more than the average .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > ( SELECT AVG( EMPLOYEEalias1.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias1 ) ;
What are the names of all employees who have a salary higher than average ?,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > ( SELECT AVG( EMPLOYEEalias1.SALARY ) FROM EMPLOYEE AS EMPLOYEEalias1 ) ;
Show the id and salary of var0 .,spider,"SELECT EID , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.NAME = ""var0"" ;"
What is the id and salary of the employee named var0 ?,spider,"SELECT EID , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.NAME = ""var0"" ;"
How many flights do we have ?,spider,SELECT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 ;
What is the number of flights ?,spider,SELECT COUNT( * ) FROM FLIGHT AS FLIGHTalias0 ;
"Show flight number , origin , destination of all flights in the alphabetical order of the departure cities .",spider,"SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN , FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.ORIGIN ;"
"What is the flight number , origin , and destination for all flights in alphabetical order by departure cities ?",spider,"SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN , FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.ORIGIN ;"
Show all flight number from var0 .,spider,"SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = ""var0"" ;"
What are the numbers of all flights coming from var0 ?,spider,"SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = ""var0"" ;"
Show origins of all flights with destination var0 .,spider,"SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var0"" ;"
What are the origins of all flights that are headed to var0 ?,spider,"SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var0"" ;"
Show me the departure date and arrival date for all flights from var0 to var1 .,spider,"SELECT FLIGHTalias0.ARRIVAL_DATE , FLIGHTalias0.DEPARTURE_DATE FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var1"" AND FLIGHTalias0.ORIGIN = ""var0"" ;"
What are the departure and arrival dates of all flights from LA to var1 ?,spider,"SELECT FLIGHTalias0.ARRIVAL_DATE , FLIGHTalias0.DEPARTURE_DATE FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var1"" AND FLIGHTalias0.ORIGIN = ""var0"" ;"
Show flight number for all flights with more than var0 distance .,spider,SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DISTANCE > var0 ;
What are the numbers of all flights that can cover a distance of more than var0 ?,spider,SELECT FLNO FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DISTANCE > var0 ;
What is the average price for flights from var0 to var1 .,spider,"SELECT AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var1"" AND FLIGHTalias0.ORIGIN = ""var0"" ;"
What is the average price for flights from LA to var1 ?,spider,"SELECT AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.DESTINATION = ""var1"" AND FLIGHTalias0.ORIGIN = ""var0"" ;"
Show origin and destination for flights with price higher than var0 .,spider,"SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PRICE > var0 ;"
What is the origin and destination for all flights whose price is higher than var0 ?,spider,"SELECT FLIGHTalias0.DESTINATION , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PRICE > var0 ;"
Show the flight number and distance of the flight with maximum price .,spider,"SELECT FLIGHTalias0.DISTANCE , FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.PRICE DESC LIMIT 1 ;"
What is the flight number and its distance for the one with the maximum price ?,spider,"SELECT FLIGHTalias0.DISTANCE , FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.PRICE DESC LIMIT 1 ;"
Show the flight number of flights with three lowest distances .,spider,SELECT FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.DISTANCE ASC LIMIT var0 ;
What are the numbers of the shortest flights ?,spider,SELECT FLNO FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.DISTANCE ASC LIMIT var0 ;
What is the average distance and average price for flights from var0 .,spider,"SELECT AVG( FLIGHTalias0.DISTANCE ) , AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = ""var0"" ;"
What is the average distance and price for all flights from LA ?,spider,"SELECT AVG( FLIGHTalias0.DISTANCE ) , AVG( FLIGHTalias0.PRICE ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.ORIGIN = ""var0"" ;"
Show all origins and the number of flights from each origin .,spider,"SELECT COUNT( * ) , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.ORIGIN ;"
"For each origin , how many flights came from there ?",spider,"SELECT COUNT( * ) , FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.ORIGIN ;"
Show all destinations and the number of flights to each destination .,spider,"SELECT COUNT( * ) , FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.DESTINATION ;"
What are the destinations and number of flights to each one ?,spider,"SELECT COUNT( * ) , FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY FLIGHTalias0.DESTINATION ;"
Which origin has most number of flights ?,spider,SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY ORIGIN ORDER BY COUNT( * ) DESC LIMIT 1 ;
What place has the most flights coming from there ?,spider,SELECT FLIGHTalias0.ORIGIN FROM FLIGHT AS FLIGHTalias0 GROUP BY ORIGIN ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which destination has least number of flights ?,spider,SELECT FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY DESTINATION ORDER BY COUNT( * ) LIMIT 1 ;
What destination has the fewest number of flights ?,spider,SELECT FLIGHTalias0.DESTINATION FROM FLIGHT AS FLIGHTalias0 GROUP BY DESTINATION ORDER BY COUNT( * ) LIMIT 1 ;
What is the aircraft name for the flight with number var0,spider,SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE FLIGHTalias0.FLNO = var0 ;
What is the name of the aircraft that was on flight number var0 ?,spider,SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE FLIGHTalias0.FLNO = var0 ;
Show all flight numbers with aircraft var0 .,spider,"SELECT FLIGHTalias0.FLNO FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
What are the flight numbers for the aircraft var0 ?,spider,"SELECT FLIGHTalias0.FLNO FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
Show aircraft names and number of flights for each aircraft .,spider,"SELECT AIRCRAFTalias0.NAME , COUNT( * ) FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID ;"
What is the name of each aircraft and how many flights does each one complete ?,spider,"SELECT AIRCRAFTalias0.NAME , COUNT( * ) FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID ;"
Show names for all aircraft with at least two flights .,spider,SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID HAVING COUNT( * ) >= var0 ;
What are the names for all aircrafts with at least var0 flights ?,spider,SELECT AIRCRAFTalias0.NAME FROM FLIGHT AS FLIGHTalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON FLIGHTalias0.AID = AIRCRAFTalias0.AID GROUP BY FLIGHTalias0.AID HAVING COUNT( * ) >= var0 ;
How many employees have certificate .,spider,SELECT COUNT( DISTINCT EID ) FROM CERTIFICATE AS CERTIFICATEalias0 ;
What is the count of distinct employees with certificates ?,spider,SELECT COUNT( DISTINCT EID ) FROM CERTIFICATE AS CERTIFICATEalias0 ;
Show ids for all employees who don't have a certificate .,spider,SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EID FROM CERTIFICATE AS CERTIFICATEalias0 ;
What are the ids of all employees that don't have certificates ?,spider,SELECT EID FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EID FROM CERTIFICATE AS CERTIFICATEalias0 ;
Show names for all aircrafts of which var0 has certificates .,spider,"SELECT AIRCRAFTalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE EMPLOYEEalias0.NAME = ""var0"" ;"
What are the names of all aircrafts that var0 have certificates to be able to fly ?,spider,"SELECT AIRCRAFTalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE EMPLOYEEalias0.NAME = ""var0"" ;"
Show names for all employees who have certificate of var0 .,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
What are the names of all employees who have a certificate to fly var0 ?,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
Show names for all employees who have certificates on both var0 and var1 .,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" INTERSECT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias1 ON EMPLOYEEalias1.EID = CERTIFICATEalias1.EID JOIN AIRCRAFT AS AIRCRAFTalias1 ON CERTIFICATEalias1.AID = AIRCRAFTalias1.AID WHERE AIRCRAFTalias1.NAME = ""var1"" ;"
What are the names of all employees who can fly both the var0 and the var1 ?,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" INTERSECT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias1 ON EMPLOYEEalias1.EID = CERTIFICATEalias1.EID JOIN AIRCRAFT AS AIRCRAFTalias1 ON CERTIFICATEalias1.AID = AIRCRAFTalias1.AID WHERE AIRCRAFTalias1.NAME = ""var1"" ;"
Show names for all employees who do not have certificate of var0 .,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias1.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
What are the names of all employees who are not certified to fly var0s ?,spider,"SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 EXCEPT SELECT EMPLOYEEalias1.NAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias1.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.NAME = ""var0"" ;"
Show the name of aircraft which fewest people have its certificate .,spider,SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
What are the names of the aircraft that the least people are certified to fly ?,spider,SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
Show the name and distance of the aircrafts with more than var0 distance and which at least var1 people have its certificate .,spider,SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) >= var1 ;
What is the name and distance of every aircraft that can cover a distance of more than var0 and which at least var1 people can fly ?,spider,SELECT AIRCRAFTalias0.NAME FROM CERTIFICATE AS CERTIFICATEalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY CERTIFICATEalias0.AID ORDER BY COUNT( CERTIFICATEalias0.* ) >= var1 ;
what is the salary and name of the employee who has the most number of aircraft certificates ?,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID GROUP BY EMPLOYEEalias0.EID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;"
What is the salaray and name of the employee that is certified to fly the most planes ?,spider,"SELECT EMPLOYEEalias0.NAME , EMPLOYEEalias0.SALARY FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID GROUP BY EMPLOYEEalias0.EID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;"
What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than var0 ?,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY EMPLOYEEalias0.EID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
What is the salaray and name of the employee with the most certificates to fly planes more than var0 ?,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CERTIFICATE AS CERTIFICATEalias0 ON EMPLOYEEalias0.EID = CERTIFICATEalias0.EID JOIN AIRCRAFT AS AIRCRAFTalias0 ON CERTIFICATEalias0.AID = AIRCRAFTalias0.AID WHERE AIRCRAFTalias0.DISTANCE > var0 GROUP BY EMPLOYEEalias0.EID ORDER BY COUNT( CERTIFICATEalias0.* ) DESC LIMIT 1 ;
How many allergies are there ?,spider,SELECT COUNT( DISTINCT ALLERGY ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
How many allergy entries are there ?,spider,SELECT COUNT( DISTINCT ALLERGY ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
How many different allergy types exist ?,spider,SELECT COUNT( DISTINCT ALLERGYTYPE ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
How many distinct allergies are there ?,spider,SELECT COUNT( DISTINCT ALLERGYTYPE ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
Show all allergy types .,spider,SELECT DISTINCT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
What are the different allergy types ?,spider,SELECT DISTINCT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;
Show all allergies and their types .,spider,"SELECT ALLERGY , ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;"
What are the allergies and their types ?,spider,"SELECT ALLERGY , ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 ;"
Show all allergies with type var0 .,spider,"SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = ""var0"" ;"
What are all the different var0 allergies ?,spider,"SELECT DISTINCT ALLERGY FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = ""var0"" ;"
What is the type of allergy var0 ?,spider,"SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGY = ""var0"" ;"
What is allergy type of a cat allergy ?,spider,"SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGY = ""var0"" ;"
How many allergies have type var0 ?,spider,"SELECT COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = ""var0"" ;"
How many var0 type allergies exist ?,spider,"SELECT COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 WHERE ALLERGYTYPE = ""var0"" ;"
Show all allergy types and the number of allergies in each type .,spider,"SELECT ALLERGYTYPE , COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ;"
What are the allergy types and how many allergies correspond to each one ?,spider,"SELECT ALLERGYTYPE , COUNT( * ) FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ;"
Which allergy type has most number of allergies ?,spider,SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which allergy type is most common ?,spider,SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which allergy type has least number of allergies ?,spider,SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) ASC LIMIT 1 ;
Which allergy type is the least common ?,spider,SELECT ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 GROUP BY ALLERGYTYPE ORDER BY COUNT( * ) ASC LIMIT 1 ;
How many students are there ?,spider,SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 ;
What is the total number of students ?,spider,SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 ;
Show first name and last name for all students .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 ;"
What are the full names of all students,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 ;"
How many different advisors are listed ?,spider,SELECT COUNT( DISTINCT STUDENTalias0.ADVISOR ) FROM STUDENT AS STUDENTalias0 ;
How many advisors are there ?,spider,SELECT COUNT( DISTINCT STUDENTalias0.ADVISOR ) FROM STUDENT AS STUDENTalias0 ;
Show all majors .,spider,SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 ;
What are the different majors ?,spider,SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 ;
Show all cities where students live .,spider,SELECT DISTINCT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 ;
What cities do students live in ?,spider,SELECT DISTINCT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 ;
"Show first name , last name , age for all female students . Their sex is var0 .",spider,"SELECT FNAME , LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
What are the full names and ages for all female students whose sex is var0 ?,spider,"SELECT FNAME , LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
Show student ids for all male students .,spider,"SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
What are the student ids for all male students ?,spider,"SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
How many students are age var0 ?,spider,SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = var0 ;
How many students are var0 years old ?,spider,SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = var0 ;
Show all student ids who are older than var0 .,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
What are the student ids for students over var0 years old ?,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
"Which city does the student whose last name is "" var0 "" live in ?",spider,"SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE LNAME = ""var0"" ;"
Give the city that the student whose family name is var0 lives in .,spider,"SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE LNAME = ""var0"" ;"
Who is the advisor of student with ID var0 ?,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID = var0 ;
Who advises student var0 ?,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID = var0 ;
How many students live in var0 or var1 ?,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" OR STUDENTalias0.CITY_CODE = ""var1"" ;"
Give the number of students living in either var0 or var1 .,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" OR STUDENTalias0.CITY_CODE = ""var1"" ;"
"Show the minimum , average , and maximum age of all students .",spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;"
"What is the minimum , mean , and maximum age across all students ?",spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;"
What is the last name of the youngest student ?,spider,SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = ( SELECT MIN( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
Provide the last name of the youngest student .,spider,SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = ( SELECT MIN( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
Show the student id of the oldest student .,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = ( SELECT MAX( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
What student id corresponds to the oldest student ?,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE = ( SELECT MAX( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;
Show all majors and corresponding number of students .,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
How many students are there for each major ?,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
Which major has most number of students ?,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
What is the largest major ?,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
Show all ages and corresponding number of students .,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.AGE ;"
How old is each student and how many students are each age ?,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.AGE ;"
Show the average age for male and female students .,spider,"SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SEX ;"
What are the average ages for male and female students ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SEX ;"
Show all cities and corresponding number of students .,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
How many students live in each city ?,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
Show all advisors and corresponding number of students .,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;"
How many students does each advisor have ?,spider,"SELECT COUNT( STUDENTalias0.* ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;"
Which advisor has most number of students ?,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY ADVISOR ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
Give the advisor with the most students .,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY ADVISOR ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;
How many students have cat allergies ?,spider,"SELECT COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" ;"
How many students are affected by cat allergies ?,spider,"SELECT COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" ;"
Show all student IDs who have at least two allergies .,spider,SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY HAS_ALLERGYalias0.STUID HAVING COUNT( * ) >= var0 ;
What are the students ids of students who have more than one allergy ?,spider,SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY HAS_ALLERGYalias0.STUID HAVING COUNT( * ) >= var0 ;
What are the student ids of students who don't have any allergies ?,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 ;
Which students are unaffected by allergies ?,spider,SELECT STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 ;
How many female students have milk or egg allergies ?,spider,"SELECT COUNT( STUDENTalias0.* ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" AND HAS_ALLERGYalias0.ALLERGY = ""var1"" OR HAS_ALLERGYalias0.ALLERGY = ""var2"" ;"
How many students who are female are allergic to milk or eggs ?,spider,"SELECT COUNT( STUDENTalias0.* ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" AND HAS_ALLERGYalias0.ALLERGY = ""var1"" OR HAS_ALLERGYalias0.ALLERGY = ""var2"" ;"
How many students have a var0 allergy ?,spider,"SELECT COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" ;"
How many students are affected by var0 related allergies ?,spider,"SELECT COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" ;"
Which allergy has most number of students affected ?,spider,SELECT HAS_ALLERGYalias0.ALLERGY FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY ALLERGY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which allergy is the most common ?,spider,SELECT HAS_ALLERGYalias0.ALLERGY FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY ALLERGY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all allergies with number of students affected .,spider,"SELECT COUNT( * ) , HAS_ALLERGYalias0.ALLERGY FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY HAS_ALLERGYalias0.ALLERGY ;"
How many students have each different allergy ?,spider,"SELECT COUNT( * ) , HAS_ALLERGYalias0.ALLERGY FROM HAS_ALLERGY AS HAS_ALLERGYalias0 GROUP BY HAS_ALLERGYalias0.ALLERGY ;"
Show all allergy type with number of students affected .,spider,"SELECT ALLERGY_TYPEalias0.ALLERGYTYPE , COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY GROUP BY ALLERGY_TYPEalias0.ALLERGYTYPE ;"
How many students are affected by each allergy type ?,spider,"SELECT ALLERGY_TYPEalias0.ALLERGYTYPE , COUNT( * ) FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY GROUP BY ALLERGY_TYPEalias0.ALLERGYTYPE ;"
Find the last name and age of the student who has allergy to both milk and cat .,spider,"SELECT LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = ""var1"" ) ;"
What are the last names and ages of the students who are allergic to milk and cat ?,spider,"SELECT LNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = ""var1"" ) ;"
What are the allergies and their types that the student with first name var0 has ? And order the result by name of allergies .,spider,"SELECT ALLERGY_TYPEalias0.ALLERGY , ALLERGY_TYPEalias0.ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 JOIN HAS_ALLERGY AS HAS_ALLERGYalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" ORDER BY ALLERGY_TYPEalias0.ALLERGY ;"
What are the allergies the girl named var0 has ? And what are the types of them ? Order the result by allergy names .,spider,"SELECT ALLERGY_TYPEalias0.ALLERGY , ALLERGY_TYPEalias0.ALLERGYTYPE FROM ALLERGY_TYPE AS ALLERGY_TYPEalias0 JOIN HAS_ALLERGY AS HAS_ALLERGYalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" ORDER BY ALLERGY_TYPEalias0.ALLERGY ;"
Find the first name and gender of the student who has allergy to milk but not cat .,spider,"SELECT FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" EXCEPT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = ""var1"" ) ;"
What are the first name and gender of the students who have allergy to milk but can put up with cats ?,spider,"SELECT FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" EXCEPT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 WHERE HAS_ALLERGYalias1.ALLERGY = ""var1"" ) ;"
Find the average age of the students who have allergies with var0 and var1 types .,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias1 ON HAS_ALLERGYalias1.ALLERGY = ALLERGY_TYPEalias1.ALLERGY WHERE ALLERGY_TYPEalias1.ALLERGYTYPE = ""var1"" ) ;"
How old are the students with allergies to var0 and var1 types on average ?,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" INTERSECT SELECT HAS_ALLERGYalias1.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias1 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias1 ON HAS_ALLERGYalias1.ALLERGY = ALLERGY_TYPEalias1.ALLERGY WHERE ALLERGY_TYPEalias1.ALLERGYTYPE = ""var1"" ) ;"
List the first and last name of the students who do not have any var0 type allergy .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" ) ;"
What is the full name of each student who is not allergic to any type of var0 .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var0"" ) ;"
Find the number of male (sex is ' var0') students who have some var1 type allery .,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" AND STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var1"" ) ;"
How many male students (sex is ' var0') are allergic to any type of var1 ?,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" AND STUDENTalias0.STUID IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var1"" ) ;"
Find the different first names and cities of the students who have allergy to milk or cat .,spider,"SELECT DISTINCT STUDENTalias0.CITY_CODE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_ALLERGY AS HAS_ALLERGYalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" OR HAS_ALLERGYalias0.ALLERGY = ""var1"" ;"
What are the distinct first names and cities of the students who have allergy either to milk or to cat ?,spider,"SELECT DISTINCT STUDENTalias0.CITY_CODE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_ALLERGY AS HAS_ALLERGYalias0 ON STUDENTalias0.STUID = HAS_ALLERGYalias0.STUID WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" OR HAS_ALLERGYalias0.ALLERGY = ""var1"" ;"
Find the number of students who are older than var0 and do not have allergy to either var1 or var2 .,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 AND STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var1"" OR ALLERGY_TYPEalias0.ALLERGYTYPE = ""var2"" ) ;"
How many students are over var0 and do not have allergy to var1 type or var2 type ?,spider,"SELECT COUNT( STUDENTalias0.* ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 AND STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 JOIN ALLERGY_TYPE AS ALLERGY_TYPEalias0 ON HAS_ALLERGYalias0.ALLERGY = ALLERGY_TYPEalias0.ALLERGY WHERE ALLERGY_TYPEalias0.ALLERGYTYPE = ""var1"" OR ALLERGY_TYPEalias0.ALLERGYTYPE = ""var2"" ) ;"
Find the first name and major of the students who are not allegry to soy .,spider,"SELECT FNAME , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" ) ;"
What are the first name and major of the students who are able to consume soy ?,spider,"SELECT FNAME , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.STUID NOT IN ( SELECT HAS_ALLERGYalias0.STUID FROM HAS_ALLERGY AS HAS_ALLERGYalias0 WHERE HAS_ALLERGYalias0.ALLERGY = ""var0"" ) ;"
A list of the top var0 countries by number of invoices . List country name and number of invoices .,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY COUNT( * ) DESC LIMIT var0 ;"
What are the top var0 countries by number of invoices and how many do they have ?,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY COUNT( * ) DESC LIMIT var0 ;"
A list of the top var0 countries by gross/total invoice size . List country name and gross invoice size .,spider,"SELECT INVOICESalias0.BILLING_COUNTRY , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
What are the names of the top var0 countries by total invoice size and what are those sizes ?,spider,"SELECT INVOICESalias0.BILLING_COUNTRY , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
A list of the top var0 countries by average invoice size . List country name and average invoice size .,spider,"SELECT AVG( INVOICESalias0.TOTAL ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY AVG( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
What are the names of the countries and average invoice size of the top countries by size ?,spider,"SELECT AVG( INVOICESalias0.TOTAL ) , INVOICESalias0.BILLING_COUNTRY FROM INVOICES AS INVOICESalias0 GROUP BY BILLING_COUNTRY ORDER BY AVG( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
Find out var0 customers who most recently purchased something . List customers ' first and last name .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.INVOICE_DATE DESC LIMIT var0 ;"
What are the first and last names of the var0 customers who purchased something most recently ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.INVOICE_DATE DESC LIMIT var0 ;"
Find out the top var0 customers by total number of orders . List customers ' first and last name and the number of total orders .,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
What are the top var0 customers ' first and last names by total number of orders and how many orders did they make ?,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
List the top var0 customers by total gross sales . List customers ' first and last name and total gross sales .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME , SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
"What are the top var0 customers ' first and last names with the highest gross sales , and also what are the sales ?",spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME , SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID GROUP BY CUSTOMERSalias0.ID ORDER BY SUM( INVOICESalias0.TOTAL ) DESC LIMIT var0 ;"
List the top var0 genres by number of tracks . List genres name and total tracks .,spider,"SELECT COUNT( * ) , GENRESalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID GROUP BY GENRESalias0.ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
How many tracks does each genre have and what are the names of the top var0 ?,spider,"SELECT COUNT( * ) , GENRESalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID GROUP BY GENRESalias0.ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
List every album's title .,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ;
What are the titles of all the albums ?,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ;
List every album ordered by album title in ascending order .,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ORDER BY ALBUMSalias0.TITLE ;
What are the titles of all the albums alphabetically ascending ?,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 ORDER BY ALBUMSalias0.TITLE ;
List every album whose title starts with A in alphabetical order .,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 WHERE TITLE LIKE ""var0"" ORDER BY ALBUMSalias0.TITLE ;"
What are the titles of all albums that start with A in alphabetical order ?,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 WHERE TITLE LIKE ""var0"" ORDER BY ALBUMSalias0.TITLE ;"
List the customers first and last name of var0 least expensive invoices .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.TOTAL LIMIT var0 ;"
What are the first and last names of the customers with the var0 cheapest invoices ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID ORDER BY INVOICESalias0.TOTAL LIMIT var0 ;"
"List total amount of invoice from var0 , var1 .",spider,"SELECT SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = ""var0"" AND INVOICESalias0.BILLING_STATE = ""var1"" ;"
"What are the total amount of money in the invoices billed from var0 , Illinois ?",spider,"SELECT SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = ""var0"" AND INVOICESalias0.BILLING_STATE = ""var1"" ;"
"List the number of invoices from var0 , var1 .",spider,"SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = ""var0"" AND INVOICESalias0.BILLING_STATE = ""var1"" ;"
"How many invoices were billed from var0 , var1 ?",spider,"SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_CITY = ""var0"" AND INVOICESalias0.BILLING_STATE = ""var1"" ;"
"List the number of invoices from the US , grouped by state .",spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = ""var0"" GROUP BY INVOICESalias0.BILLING_STATE ;"
How many invoices were billed from each state ?,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = ""var0"" GROUP BY INVOICESalias0.BILLING_STATE ;"
List the state in the US with the most invoices .,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = ""var0"" GROUP BY BILLING_STATE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the states with the most invoices ?,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE FROM INVOICES AS INVOICESalias0 WHERE BILLING_COUNTRY = ""var0"" GROUP BY BILLING_STATE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
List the number of invoices and the invoice total from California .,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_STATE = ""var0"" ;"
What is the number of invoices and total money billed in them from var0 ?,spider,"SELECT COUNT( * ) , INVOICESalias0.BILLING_STATE , SUM( INVOICESalias0.TOTAL ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.BILLING_STATE = ""var0"" ;"
List var0's albums .,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = ""var0"" ;"
What are the titles of all the var0 albums ?,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = ""var0"" ;"
How many albums does var0 has ?,spider,"SELECT COUNT( * ) FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = ""var0"" ;"
How many albums has Billy Cobam released ?,spider,"SELECT COUNT( * ) FROM ALBUMS AS ALBUMSalias0 JOIN ARTISTS AS ARTISTSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME = ""var0"" ;"
var0 var1 is a customer at which company ?,spider,"SELECT CUSTOMERSalias0.COMPANY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the company where var0 var1 is a customer ?,spider,"SELECT CUSTOMERSalias0.COMPANY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is var0 var1's email and phone number ?,spider,"SELECT CUSTOMERSalias0.EMAIL , CUSTOMERSalias0.PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the email and phone number of var0 var1 the customer ?,spider,"SELECT CUSTOMERSalias0.EMAIL , CUSTOMERSalias0.PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
How many customers live in var0 city ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CITY = ""var0"" ;"
How many customers live in the city of var0 ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CITY = ""var0"" ;"
How many customers in state of var0 ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.STATE = ""var0"" ;"
How many customers are from California ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.STATE = ""var0"" ;"
What country does var0 var1 live ?,spider,"SELECT CUSTOMERSalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
In which country does var0 var1 ?,spider,"SELECT CUSTOMERSalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
List the name of albums that are released by aritist whose name has ' var0 ',spider,"SELECT ALBUMSalias0.TITLE FROM ARTISTS AS ARTISTSalias0 JOIN ALBUMS AS ALBUMSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME LIKE ""var0"" ;"
What is the title of the album that was released by the artist whose name has the phrase ' var0 ' ?,spider,"SELECT ALBUMSalias0.TITLE FROM ARTISTS AS ARTISTSalias0 JOIN ALBUMS AS ALBUMSalias0 ON ARTISTSalias0.ID = ALBUMSalias0.ARTIST_ID WHERE ARTISTSalias0.NAME LIKE ""var0"" ;"
How many customers does var0 var1 support ?,spider,"SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
What is the count of customers that var0 var1 supports ?,spider,"SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
"What is the title , phone and hire date of var0 var1 ?",spider,"SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.PHONE , EMPLOYEESalias0.TITLE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
"What is the title , phone number and hire date for the employee named var0 var1 ?",spider,"SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.PHONE , EMPLOYEESalias0.TITLE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
find the full name of employees who report to var0 var1 ?,spider,"SELECT EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.REPORTS_TO = EMPLOYEESalias0.ID WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
What is the first and last name of the employee who reports to var0 var1 ?,spider,"SELECT EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.REPORTS_TO = EMPLOYEESalias0.ID WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
What is the address of employee var0 var1 ?,spider,"SELECT EMPLOYEESalias0.ADDRESS FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
What is var0 var1's address ?,spider,"SELECT EMPLOYEESalias0.ADDRESS FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
Find the full name of employee who supported the most number of customers .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID GROUP BY EMPLOYEESalias0.ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the full name of the employee who has the most customers ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON EMPLOYEESalias0.ID = CUSTOMERSalias0.SUPPORT_REP_ID GROUP BY EMPLOYEESalias0.ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many employees are living in var0 ?,spider,"SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COUNTRY = ""var0"" ;"
How many employees live in var0 ?,spider,"SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COUNTRY = ""var0"" ;"
What is employee var0 var1's phone number ?,spider,"SELECT EMPLOYEESalias0.PHONE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
What is the the phone number of var0 var1 ?,spider,"SELECT EMPLOYEESalias0.PHONE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME = ""var0"" AND EMPLOYEESalias0.LAST_NAME = ""var1"" ;"
Who is the youngest employee in the company ? List employee's first and last name .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.BIRTH_DATE DESC LIMIT 1 ;"
What si the youngest employee's first and last name ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.BIRTH_DATE DESC LIMIT 1 ;"
List top var0 employee work longest in the company . List employee's first and last name .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.HIRE_DATE ASC LIMIT var0 ;"
What are the first and last names of the top var0 longest-serving employees ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 ORDER BY EMPLOYEESalias0.HIRE_DATE ASC LIMIT var0 ;"
Find the number of employees whose title is var0 from each city ?,spider,"SELECT COUNT( * ) , EMPLOYEESalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE TITLE = ""var0"" GROUP BY EMPLOYEESalias0.CITY ;"
How many employees who are IT staff are from each city ?,spider,"SELECT COUNT( * ) , EMPLOYEESalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE TITLE = ""var0"" GROUP BY EMPLOYEESalias0.CITY ;"
"Which employee manage most number of peoples ? List employee's first and last name , and number of people report to that employee .",spider,"SELECT COUNT( EMPLOYEESalias0.REPORTS_TO ) , EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.ID = EMPLOYEESalias0.REPORTS_TO GROUP BY EMPLOYEESalias0.REPORTS_TO ORDER BY COUNT( EMPLOYEESalias0.REPORTS_TO ) DESC LIMIT 1 ;"
What are the first and last names of all the employees and how many people report to them ?,spider,"SELECT COUNT( EMPLOYEESalias0.REPORTS_TO ) , EMPLOYEESalias1.FIRST_NAME , EMPLOYEESalias1.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.ID = EMPLOYEESalias0.REPORTS_TO GROUP BY EMPLOYEESalias0.REPORTS_TO ORDER BY COUNT( EMPLOYEESalias0.REPORTS_TO ) DESC LIMIT 1 ;"
How many orders does var0 var1 has ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
How many orders does Luca var1 have in his invoices ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the total amount of money spent by var0 var1 ?,spider,"SELECT SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
How much money did var0 var1 spend ?,spider,"SELECT SUM( INVOICESalias0.TOTAL ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
List all media types .,spider,SELECT MEDIA_TYPESalias0.NAME FROM MEDIA_TYPES AS MEDIA_TYPESalias0 ;
What are the names of all the media types ?,spider,SELECT MEDIA_TYPESalias0.NAME FROM MEDIA_TYPES AS MEDIA_TYPESalias0 ;
List all different genre types .,spider,SELECT DISTINCT GENRESalias0.NAME FROM GENRES AS GENRESalias0 ;
What are the different names of the genres ?,spider,SELECT DISTINCT GENRESalias0.NAME FROM GENRES AS GENRESalias0 ;
List the name of all playlist .,spider,SELECT PLAYLISTSalias0.NAME FROM PLAYLISTS AS PLAYLISTSalias0 ;
What are the names of all the playlists ?,spider,SELECT PLAYLISTSalias0.NAME FROM PLAYLISTS AS PLAYLISTSalias0 ;
Who is the composer of track var0 ?,spider,"SELECT TRACKSalias0.COMPOSER FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
"What is the composer who created the track "" var0 "" ?",spider,"SELECT TRACKSalias0.COMPOSER FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
How long does track var0 has ?,spider,"SELECT TRACKSalias0.MILLISECONDS FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
How many milliseconds long is var0 ?,spider,"SELECT TRACKSalias0.MILLISECONDS FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
What is the name of tracks whose genre is var0 ?,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = ""var0"" ;"
What is the name of all tracks in the var0 genre ?,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = ""var0"" ;"
What is title of album which track var0 belongs to ?,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE TRACKSalias0.NAME = ""var0"" ;"
What is the name of the album that has the track Ball to the Wall ?,spider,"SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE TRACKSalias0.NAME = ""var0"" ;"
List name of all tracks in var0 .,spider,"SELECT TRACKSalias0.NAME FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE ALBUMSalias0.TITLE = ""var0"" ;"
What is the name of all tracks in the album named var0 ?,spider,"SELECT TRACKSalias0.NAME FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = ALBUMSalias0.ID WHERE ALBUMSalias0.TITLE = ""var0"" ;"
List title of albums have the number of tracks greater than var0 .,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.ALBUM_ID = ALBUMSalias0.ID GROUP BY ALBUMSalias0.ID HAVING COUNT( ALBUMSalias0.ID ) > var0 ;
What are the names of the albums that have more than var0 tracks ?,spider,SELECT ALBUMSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.ALBUM_ID = ALBUMSalias0.ID GROUP BY ALBUMSalias0.ID HAVING COUNT( ALBUMSalias0.ID ) > var0 ;
List the name of tracks belongs to genre var0 and whose media type is var1 .,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID JOIN MEDIA_TYPES AS MEDIA_TYPESalias0 ON TRACKSalias0.MEDIA_TYPE_ID = MEDIA_TYPESalias0.ID WHERE GENRESalias0.NAME = ""var0"" AND MEDIA_TYPESalias0.NAME = ""var1"" ;"
What are the names of all var0 tracks that are stored on var1s ?,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID JOIN MEDIA_TYPES AS MEDIA_TYPESalias0 ON TRACKSalias0.MEDIA_TYPE_ID = MEDIA_TYPESalias0.ID WHERE GENRESalias0.NAME = ""var0"" AND MEDIA_TYPESalias0.NAME = ""var1"" ;"
List the name of tracks belongs to genre var0 or media type is var1 .,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID JOIN MEDIA_TYPES AS MEDIA_TYPESalias0 ON TRACKSalias0.MEDIA_TYPE_ID = MEDIA_TYPESalias0.ID WHERE GENRESalias0.NAME = ""var0"" OR MEDIA_TYPESalias0.NAME = ""var1"" ;"
What are the names of all tracks that belong to the var0 genre and whose media type is MPEG ?,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID JOIN MEDIA_TYPES AS MEDIA_TYPESalias0 ON TRACKSalias0.MEDIA_TYPE_ID = MEDIA_TYPESalias0.ID WHERE GENRESalias0.NAME = ""var0"" OR MEDIA_TYPESalias0.NAME = ""var1"" ;"
List the name of tracks belongs to genre var0 or genre var1 .,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = ""var0"" OR GENRESalias0.NAME = ""var1"" ;"
What are the names of the tracks that are var0 or var1 songs ?,spider,"SELECT TRACKSalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID WHERE GENRESalias0.NAME = ""var0"" OR GENRESalias0.NAME = ""var1"" ;"
List the name of all tracks in the playlists of var0 .,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" ;"
What are the names of all tracks that are on playlists titled var0 ?,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" ;"
List the name of playlist which has number of tracks greater than var0 .,spider,SELECT PLAYLISTSalias0.NAME FROM PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID GROUP BY PLAYLIST_TRACKSalias0.PLAYLIST_ID HAVING COUNT( PLAYLIST_TRACKSalias0.TRACK_ID ) > var0 ;
What are the names of all playlists that have more than var0 tracks ?,spider,SELECT PLAYLISTSalias0.NAME FROM PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID GROUP BY PLAYLIST_TRACKSalias0.PLAYLIST_ID HAVING COUNT( PLAYLIST_TRACKSalias0.TRACK_ID ) > var0 ;
List all tracks bought by customer var0 var1 .,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN INVOICE_LINES AS INVOICE_LINESalias0 ON TRACKSalias0.ID = INVOICE_LINESalias0.TRACK_ID JOIN INVOICES AS INVOICESalias0 ON INVOICE_LINESalias0.INVOICE_ID = INVOICESalias0.ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What are the tracks that Dean var1 bought ?,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN INVOICE_LINES AS INVOICE_LINESalias0 ON TRACKSalias0.ID = INVOICE_LINESalias0.TRACK_ID JOIN INVOICES AS INVOICESalias0 ON INVOICE_LINESalias0.INVOICE_ID = INVOICESalias0.ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON INVOICESalias0.CUSTOMER_ID = CUSTOMERSalias0.ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
How much is the track var0 ?,spider,"SELECT TRACKSalias0.UNIT_PRICE FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
"What is the unit price of the tune "" var0 "" ?",spider,"SELECT TRACKSalias0.UNIT_PRICE FROM TRACKS AS TRACKSalias0 WHERE TRACKSalias0.NAME = ""var0"" ;"
Find the name of tracks which are in var0 playlist but not in music playlist .,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" EXCEPT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = ""var1"" ;"
What are the names of all tracks that are on the var0 playlist but not in the music playlist ?,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" EXCEPT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = ""var1"" ;"
Find the name of tracks which are in both var0 and music playlists .,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" INTERSECT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = ""var1"" ;"
What are the names of all the tracks that are in both the var0 and music playlists ?,spider,"SELECT TRACKSalias0.NAME FROM TRACKS AS TRACKSalias0 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias0 ON TRACKSalias0.ID = PLAYLIST_TRACKSalias0.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias0 ON PLAYLIST_TRACKSalias0.PLAYLIST_ID = PLAYLISTSalias0.ID WHERE PLAYLISTSalias0.NAME = ""var0"" INTERSECT SELECT TRACKSalias1.NAME FROM TRACKS AS TRACKSalias1 JOIN PLAYLIST_TRACKS AS PLAYLIST_TRACKSalias1 ON TRACKSalias1.ID = PLAYLIST_TRACKSalias1.TRACK_ID JOIN PLAYLISTS AS PLAYLISTSalias1 ON PLAYLIST_TRACKSalias1.PLAYLIST_ID = PLAYLISTSalias1.ID WHERE PLAYLISTSalias1.NAME = ""var1"" ;"
Find number of tracks in each genre ?,spider,"SELECT COUNT( * ) , GENRESalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID GROUP BY GENRESalias0.NAME ;"
How many tracks are in each genre ?,spider,"SELECT COUNT( * ) , GENRESalias0.NAME FROM GENRES AS GENRESalias0 JOIN TRACKS AS TRACKSalias0 ON TRACKSalias0.GENRE_ID = GENRESalias0.ID GROUP BY GENRESalias0.NAME ;"
How many editors are there ?,spider,SELECT COUNT( * ) FROM EDITOR AS EDITORalias0 ;
List the names of editors in ascending order of age .,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ORDER BY EDITORalias0.AGE ASC ;
What are the names and ages of editors ?,spider,"SELECT EDITORalias0.AGE , EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ;"
List the names of editors who are older than var0 .,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 WHERE EDITORalias0.AGE > var0 ;
Show the names of editors of age either var0 or var1 .,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 WHERE EDITORalias0.AGE = var0 OR EDITORalias0.AGE = var1 ;
What is the name of the youngest editor ?,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 ORDER BY EDITORalias0.AGE ASC LIMIT 1 ;
What are the different ages of editors ? Show each age along with the number of editors of that age .,spider,"SELECT COUNT( * ) , EDITORalias0.AGE FROM EDITOR AS EDITORalias0 GROUP BY EDITORalias0.AGE ;"
Please show the most common age of editors .,spider,SELECT EDITORalias0.AGE FROM EDITOR AS EDITORalias0 GROUP BY AGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the distinct themes of journals .,spider,SELECT DISTINCT JOURNALalias0.THEME FROM JOURNAL AS JOURNALalias0 ;
Show the names of editors and the theme of journals for which they serve on committees .,spider,"SELECT EDITORalias0.NAME , JOURNALalias0.THEME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ;"
"For each journal_committee , find the editor name and the journal theme .",spider,"SELECT EDITORalias0.NAME , JOURNALalias0.THEME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ;"
"Show the names and ages of editors and the theme of journals for which they serve on committees , in ascending alphabetical order of theme .",spider,"SELECT EDITORalias0.AGE , EDITORalias0.NAME , JOURNALalias0.THEME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ORDER BY JOURNALalias0.THEME ASC ;"
Show the names of editors that are on the committee of journals with sales bigger than var0 .,spider,SELECT EDITORalias0.NAME FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 JOIN EDITOR AS EDITORalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID WHERE JOURNALalias0.SALES > var0 ;
"Show the id , name of each editor and the number of journal committees they are on .",spider,"SELECT COUNT( JOURNAL_COMMITTEEalias0.* ) , EDITORalias0.EDITOR_ID , EDITORalias0.NAME FROM EDITOR AS EDITORalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID GROUP BY EDITORalias0.EDITOR_ID ;"
Show the names of editors that are on at least two journal committees .,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNAL_COMMITTEEalias0.EDITOR_ID = EDITORalias0.EDITOR_ID GROUP BY EDITORalias0.NAME HAVING COUNT( JOURNAL_COMMITTEEalias0.* ) >= var0 ;
List the names of editors that are not on any journal committee .,spider,SELECT EDITORalias0.NAME FROM EDITOR AS EDITORalias0 WHERE EDITORalias0.EDITOR_ID NOT IN ( SELECT JOURNAL_COMMITTEEalias0.EDITOR_ID FROM JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ) ;
"List the date , theme and sales of the journal which did not have any of the listed editors serving on committee .",spider,"SELECT JOURNALalias0.DATE , JOURNALalias0.SALES , JOURNALalias0.THEME FROM JOURNAL AS JOURNALalias0 EXCEPT SELECT JOURNALalias1.DATE , JOURNALalias1.SALES , JOURNALalias1.THEME FROM JOURNAL AS JOURNALalias1 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNALalias1.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID ;"
What is the average sales of the journals that have an editor whose work type is ' var0 ' ?,spider,"SELECT AVG( JOURNALalias0.SALES ) FROM JOURNAL AS JOURNALalias0 JOIN JOURNAL_COMMITTEE AS JOURNAL_COMMITTEEalias0 ON JOURNALalias0.JOURNAL_ID = JOURNAL_COMMITTEEalias0.JOURNAL_ID WHERE JOURNAL_COMMITTEEalias0.WORK_TYPE = ""var0"" ;"
How many accounts do we have ?,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Count the number of accounts .,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Show the number of accounts .,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
How many accounts are there ?,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
How many accounts are there in total ?,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Count the number of accounts .,spider,SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
"Show ids , customer ids , names for all accounts .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;"
"What are the account ids , customer ids , and account names for all the accounts ?",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;"
Show other account details for account with name var0 .,spider,"SELECT ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
What are the other account details for the account with the name var0 ?,spider,"SELECT ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
"What is the first name , last name , and phone of the customer with account name var0 ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
Give the full name and phone of the customer who has the account name var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
How many accounts does the customer with first name var0 and last name var1 have ?,spider,"SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Return the number of accounts that the customer with the first name var0 and last name var1 has .,spider,"SELECT COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Show all customer ids and the number of accounts for each customer .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
How many accounts are there for each customer id ?,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
How many accounts does each customer have ? List the number and customer id .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
Count the number of accounts corresponding to each customer id .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
Show the customer id and number of accounts with most accounts .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What is the customer id of the customer with the most accounts , and how many accounts does this person have ?",spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What is the customer first , last name and id with least number of accounts .",spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Give the full name and customer id of the customer with the fewest accounts .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Show the number of all customers without an account .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ) ;
How many customers do not have an account ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ) ;
How many customers don't have an account ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ) ;
Count the number of customers who do not have an account .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ) ;
Show the first names and last names of customers without any account .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_FIRST_NAME , CUSTOMERSalias1.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias1.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
What are the full names of customers who do not have any accounts ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_FIRST_NAME , CUSTOMERSalias1.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias1.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
Show distinct first and last names for all customers with an account .,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
What are the full names of customers who have accounts ?,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
How many customers have an account ?,spider,SELECT COUNT( DISTINCT ACCOUNTSalias0.CUSTOMER_ID ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Count the number of customers who hold an account .,spider,SELECT COUNT( DISTINCT ACCOUNTSalias0.CUSTOMER_ID ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
How many customers have opened an account ?,spider,SELECT COUNT( DISTINCT ACCOUNTSalias0.CUSTOMER_ID ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Count the number of customers who have an account .,spider,SELECT COUNT( DISTINCT ACCOUNTSalias0.CUSTOMER_ID ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
How many customers do we have ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Count the number of customers .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Show the number of customers .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Count the number of customers .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Find the number of customers in total .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
How many customers do we have ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Count the number of customers recorded .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
How many customers are there ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Count the number of customers .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
How many customers are there ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Return the total number of distinct customers .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
How many customers in total ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
How many customers are there ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
"Show ids , first names , last names , and phones for all customers .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ;"
"What are the ids , full names , and phones of each customer ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ;"
What is the phone and email for customer with first name var0 and last name var1 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Return the phone and email of the customer with the first name var0 and last name var1 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Show the number of customer cards .,spider,SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
How many customer cards are there ?,spider,SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
"Show ids , customer ids , card type codes , card numbers for all cards .",spider,"SELECT CUSTOMERS_CARDSalias0.CARD_ID , CUSTOMERS_CARDSalias0.CARD_NUMBER , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;"
"What are card ids , customer ids , card types , and card numbers for each customer card ?",spider,"SELECT CUSTOMERS_CARDSalias0.CARD_ID , CUSTOMERS_CARDSalias0.CARD_NUMBER , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;"
Show the date valid from and the date valid to for the card with card number ' var0 ' .,spider,"SELECT CUSTOMERS_CARDSalias0.DATE_VALID_FROM , CUSTOMERS_CARDSalias0.DATE_VALID_TO FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = ""var0"" ;"
What are the valid from and valid to dates for the card with the number var0 ?,spider,"SELECT CUSTOMERS_CARDSalias0.DATE_VALID_FROM , CUSTOMERS_CARDSalias0.DATE_VALID_TO FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = ""var0"" ;"
"What is the first name , last name , and phone of the customer with card var0 .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = ""var0"" ;"
Return the full name and phone of the customer who has card number var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_NUMBER = ""var0"" ;"
How many cards does customer var0 var1 have ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Count the number of cards the customer with the first name var0 and last name var1 has .,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
How many debit cards do we have ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var0"" ;"
Count the number of customer cards of the type var0 .,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var0"" ;"
How many credit cards does customer var0 var1 have ?,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var2"" AND CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Count the number of credit cards that the customer with first name var0 and last name var1 has .,spider,"SELECT COUNT( * ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var2"" AND CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Show all customer ids and the number of cards owned by each customer .,spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ;"
"What are the different customer ids , and how many cards does each one hold ?",spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ;"
"What is the customer id with most number of cards , and how many does he have ?",spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Return the id of the customer who has the most cards , as well as the number of cards .",spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CUSTOMER_ID FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Show id , first and last names for all customers with at least two cards .",spider,"SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
What are the ids and full names of customers who hold two or more cards ?,spider,"SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
"What is the customer id , first and last name with least number of accounts .",spider,"SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Return the id and full name of the customer who has the fewest accounts .,spider,"SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID GROUP BY CUSTOMERS_CARDSalias0.CUSTOMER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Show all card type codes and the number of cards in each type .,spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
"What are the different card types , and how many cards are there of each ?",spider,"SELECT COUNT( * ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
What is the card type code with most number of cards ?,spider,SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CARD_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the code of the card type that is most common .,spider,SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CARD_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show card type codes with at least var0 cards .,spider,SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE HAVING COUNT( * ) >= var0 ;
What are the codes of card types that have var0 or more cards ?,spider,SELECT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE HAVING COUNT( * ) >= var0 ;
Show all card type codes and the number of customers holding cards in each type .,spider,"SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CUSTOMER_ID ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
"What are the different card type codes , and how many different customers hold each type ?",spider,"SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CUSTOMER_ID ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
Show the customer ids and firstname without a credit card .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias1.CUSTOMER_FIRST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var0"" ;"
What are the ids and first names of customers who do not hold a credit card ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERS_CARDSalias0.CUSTOMER_ID , CUSTOMERSalias1.CUSTOMER_FIRST_NAME FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_CARDSalias0.CUSTOMER_ID WHERE CUSTOMERS_CARDSalias0.CARD_TYPE_CODE = ""var0"" ;"
Show all card type codes .,spider,SELECT DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
What are the different card type codes ?,spider,SELECT DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
Show the number of card types .,spider,SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
How many different card types are there ?,spider,SELECT COUNT( DISTINCT CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ) FROM CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ;
Show all transaction types .,spider,SELECT DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
What are the different types of transactions ?,spider,SELECT DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
Show the number of transaction types .,spider,SELECT COUNT( DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
How many different types of transactions are there ?,spider,SELECT COUNT( DISTINCT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
What is the average and total transaction amount ?,spider,"SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
"Return the average transaction amount , as well as the total amount of all transactions .",spider,"SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
Show the card type codes and the number of transactions .,spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ON FINANCIAL_TRANSACTIONSalias0.CARD_ID = CUSTOMERS_CARDSalias0.CARD_ID GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
"What are the different card types , and how many transactions have been made with each ?",spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , CUSTOMERS_CARDSalias0.CARD_TYPE_CODE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN CUSTOMERS_CARDS AS CUSTOMERS_CARDSalias0 ON FINANCIAL_TRANSACTIONSalias0.CARD_ID = CUSTOMERS_CARDSalias0.CARD_ID GROUP BY CUSTOMERS_CARDSalias0.CARD_TYPE_CODE ;"
Show the transaction type and the number of transactions .,spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;"
"What are the different transaction types , and how many transactions of each have taken place ?",spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;"
What is the transaction type that has processed the greatest total amount in transactions ?,spider,SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE ORDER BY SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) DESC LIMIT 1 ;
Return the type of transaction with the highest total amount .,spider,SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE ORDER BY SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) DESC LIMIT 1 ;
Show the account id and the number of transactions for each account,spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID ;"
"What are the different account ids that have made financial transactions , as well as how many transactions correspond to each ?",spider,"SELECT COUNT( FINANCIAL_TRANSACTIONSalias0.* ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID ;"
How many tracks do we have ?,spider,SELECT COUNT( TRACKalias0.* ) FROM TRACK AS TRACKalias0 ;
Count the number of tracks .,spider,SELECT COUNT( TRACKalias0.* ) FROM TRACK AS TRACKalias0 ;
Show the name and location for all tracks .,spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME FROM TRACK AS TRACKalias0 ;"
What are the names and locations of all tracks ?,spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME FROM TRACK AS TRACKalias0 ;"
"Show names and seatings , ordered by seating for all tracks opened after var0 .",spider,"SELECT TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 WHERE YEAR_OPENED > var0 ORDER BY TRACKalias0.SEATING ;"
"What are the names and seatings for all tracks opened after var0 , ordered by seating ?",spider,"SELECT TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 WHERE YEAR_OPENED > var0 ORDER BY TRACKalias0.SEATING ;"
"What is the name , location and seating for the most recently opened track ?",spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 ORDER BY TRACKalias0.YEAR_OPENED DESC LIMIT 1 ;"
"Return the name , location , and seating of the track that was opened in the most recent year .",spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.SEATING FROM TRACK AS TRACKalias0 ORDER BY TRACKalias0.YEAR_OPENED DESC LIMIT 1 ;"
"What is the minimum , maximum , and average seating for all tracks .",spider,"SELECT AVG( TRACKalias0.SEATING ) , MAX( TRACKalias0.SEATING ) , MIN( TRACKalias0.SEATING ) FROM TRACK AS TRACKalias0 ;"
"Return the minimum , maximum , and average seating across all tracks .",spider,"SELECT AVG( TRACKalias0.SEATING ) , MAX( TRACKalias0.SEATING ) , MIN( TRACKalias0.SEATING ) FROM TRACK AS TRACKalias0 ;"
"Show the name , location , open year for all tracks with a seating higher than the average .",spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.YEAR_OPENED FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING > ( SELECT AVG( TRACKalias1.SEATING ) FROM TRACK AS TRACKalias1 ) ;"
"What are the names , locations , and years of opening for tracks with seating higher than average ?",spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME , TRACKalias0.YEAR_OPENED FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING > ( SELECT AVG( TRACKalias1.SEATING ) FROM TRACK AS TRACKalias1 ) ;"
What are distinct locations where tracks are located ?,spider,SELECT DISTINCT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 ;
Give the different locations of tracks .,spider,SELECT DISTINCT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 ;
How many races are there ?,spider,SELECT COUNT( * ) FROM RACE AS RACEalias0 ;
Count the number of races .,spider,SELECT COUNT( * ) FROM RACE AS RACEalias0 ;
What are the distinct classes that races can have ?,spider,SELECT DISTINCT RACEalias0.CLASS FROM RACE AS RACEalias0 ;
Return the different classes of races .,spider,SELECT DISTINCT RACEalias0.CLASS FROM RACE AS RACEalias0 ;
"Show name , class , and date for all races .",spider,"SELECT RACEalias0.CLASS , RACEalias0.DATE , RACEalias0.NAME FROM RACE AS RACEalias0 ;"
"What are the names , classes , and dates for all races ?",spider,"SELECT RACEalias0.CLASS , RACEalias0.DATE , RACEalias0.NAME FROM RACE AS RACEalias0 ;"
Show the race class and number of races in each class .,spider,"SELECT COUNT( * ) , RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS ;"
"What are the different classes of races , and how many races correspond to each ?",spider,"SELECT COUNT( * ) , RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS ;"
What is the race class with most number of races .,spider,SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY CLASS ORDER BY COUNT( * ) DESC LIMIT 1 ;
Give the class of races that is most common .,spider,SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY CLASS ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the race class with at least two races .,spider,SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS HAVING COUNT( * ) >= var0 ;
What are the classes of races that have two or more corresponding races ?,spider,SELECT RACEalias0.CLASS FROM RACE AS RACEalias0 GROUP BY RACEalias0.CLASS HAVING COUNT( * ) >= var0 ;
What are the names for tracks without a race in class ' var0 ' .,spider,"SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 EXCEPT SELECT TRACKalias1.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias1 ON TRACKalias1.TRACK_ID = RACEalias0.TRACK_ID WHERE RACEalias0.CLASS = ""var0"" ;"
Give the names of tracks that do not have a race in the class ' var0 ' .,spider,"SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 EXCEPT SELECT TRACKalias1.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias1 ON TRACKalias1.TRACK_ID = RACEalias0.TRACK_ID WHERE RACEalias0.CLASS = ""var0"" ;"
Show all track names that have had no races .,spider,SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.TRACK_ID NOT IN ( SELECT RACEalias0.TRACK_ID FROM RACE AS RACEalias0 ) ;
Return the names of tracks that have no had any races .,spider,SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.TRACK_ID NOT IN ( SELECT RACEalias0.TRACK_ID FROM RACE AS RACEalias0 ) ;
Show year where a track with a seating at least var1 opened and a track with seating no more than var0 opened .,spider,SELECT TRACKalias0.YEAR_OPENED FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING BETWEEN var0 AND var1 ;
What are the years of opening for tracks with seating between var0 and var1 ?,spider,SELECT TRACKalias0.YEAR_OPENED FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING BETWEEN var0 AND var1 ;
Show the name of track and the number of races in each track .,spider,"SELECT COUNT( TRACKalias0.* ) , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ;"
"What are the names of different tracks , and how many races has each had ?",spider,"SELECT COUNT( TRACKalias0.* ) , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ;"
Show the name of track with most number of races .,spider,SELECT TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ORDER BY COUNT( TRACKalias0.* ) DESC LIMIT 1 ;
What is the name of the track that has had the greatest number of races ?,spider,SELECT TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID ORDER BY COUNT( TRACKalias0.* ) DESC LIMIT 1 ;
Show the name and date for each race and its track name .,spider,"SELECT RACEalias0.DATE , RACEalias0.NAME , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID ;"
"What are the names and dates of races , and the names of the tracks where they are held ?",spider,"SELECT RACEalias0.DATE , RACEalias0.NAME , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID ;"
Show the name and location of track with var0 race .,spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID HAVING COUNT( TRACKalias0.* ) = var0 ;"
What are the names and locations of tracks that have had exactly var0 race ?,spider,"SELECT TRACKalias0.LOCATION , TRACKalias0.NAME FROM RACE AS RACEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.TRACK_ID = RACEalias0.TRACK_ID GROUP BY RACEalias0.TRACK_ID HAVING COUNT( TRACKalias0.* ) = var0 ;"
Find the locations where have both tracks with more than var0 seats and tracks with less than var1 seats .,spider,SELECT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING > var0 INTERSECT SELECT TRACKalias1.LOCATION FROM TRACK AS TRACKalias1 WHERE TRACKalias1.SEATING < var1 ;
"What are the locations that have both tracks with more than var0 seats , and tracks with fewer than var1 seats ?",spider,SELECT TRACKalias0.LOCATION FROM TRACK AS TRACKalias0 WHERE TRACKalias0.SEATING > var0 INTERSECT SELECT TRACKalias1.LOCATION FROM TRACK AS TRACKalias1 WHERE TRACKalias1.SEATING < var1 ;
How many members have the black membership card ?,spider,"SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBERSHIP_CARD = ""var0"" ;"
Find the number of members living in each address .,spider,"SELECT COUNT( * ) , MEMBERalias0.ADDRESS FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.ADDRESS ;"
Give me the names of members whose address is in var0 or var1 .,spider,"SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS = ""var0"" OR MEMBERalias0.ADDRESS = ""var1"" ;"
Find the ids and names of members who are under age var1 or with black membership card .,spider,"SELECT MEMBERalias0.MEMBER_ID , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.AGE < var1 OR MEMBERalias0.MEMBERSHIP_CARD = ""var0"" ;"
"Find the purchase time , age and address of each member , and show the results in the order of purchase time .",spider,"SELECT MEMBERalias0.ADDRESS , MEMBERalias0.AGE , MEMBERalias0.TIME_OF_PURCHASE FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.TIME_OF_PURCHASE ;"
Which membership card has more than var0 members ?,spider,SELECT MEMBERalias0.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.MEMBERSHIP_CARD HAVING COUNT( * ) > var0 ;
Which address has both members younger than var0 and members older than var1 ?,spider,SELECT MEMBERalias0.ADDRESS FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.AGE < var0 INTERSECT SELECT MEMBERalias1.ADDRESS FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.AGE > var1 ;
What is the membership card held by both members living in var0 and ones living in var1 address ?,spider,"SELECT MEMBERalias0.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS = ""var0"" INTERSECT SELECT MEMBERalias1.MEMBERSHIP_CARD FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.ADDRESS = ""var1"" ;"
How many members are not living in var0 ?,spider,"SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.ADDRESS != ""var0"" ;"
Which address do not have any member with the black membership card ?,spider,"SELECT MEMBERalias0.ADDRESS FROM MEMBER AS MEMBERalias0 EXCEPT SELECT MEMBERalias1.ADDRESS FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.MEMBERSHIP_CARD = ""var0"" ;"
Show the shop addresses ordered by their opening year .,spider,SELECT SHOPalias0.ADDRESS FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR ;
What are the average score and average staff number of all shops ?,spider,"SELECT AVG( SHOPalias0.NUM_OF_STAFF ) , AVG( SHOPalias0.SCORE ) FROM SHOP AS SHOPalias0 ;"
Find the id and address of the shops whose score is below the average score .,spider,"SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SCORE < ( SELECT AVG( SHOPalias1.SCORE ) FROM SHOP AS SHOPalias1 ) ;"
Find the address and staff number of the shops that do not have any happy hour .,spider,"SELECT SHOPalias0.ADDRESS , SHOPalias0.NUM_OF_STAFF FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT HAPPY_HOURalias0.SHOP_ID FROM HAPPY_HOUR AS HAPPY_HOURalias0 ) ;"
What are the id and address of the shops which have a happy hour in var0 ?,spider,"SELECT SHOPalias0.ADDRESS , SHOPalias0.SHOP_ID FROM SHOP AS SHOPalias0 JOIN HAPPY_HOUR AS HAPPY_HOURalias0 ON SHOPalias0.SHOP_ID = HAPPY_HOURalias0.SHOP_ID WHERE HAPPY_HOURalias0.MONTH = ""var0"" ;"
which shop has happy hour most frequently ? List its id and number of happy hours .,spider,"SELECT COUNT( * ) , HAPPY_HOURalias0.SHOP_ID FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY SHOP_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which month has the most happy hours ?,spider,SELECT HAPPY_HOURalias0.MONTH FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY MONTH ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which months have more than var0 happy hours ?,spider,SELECT HAPPY_HOURalias0.MONTH FROM HAPPY_HOUR AS HAPPY_HOURalias0 GROUP BY HAPPY_HOURalias0.MONTH HAVING COUNT( * ) > var0 ;
How many albums are there ?,spider,SELECT COUNT( * ) FROM ALBUM AS ALBUMalias0 ;
Find the number of albums .,spider,SELECT COUNT( * ) FROM ALBUM AS ALBUMalias0 ;
List the names of all music genres .,spider,SELECT GENREalias0.NAME FROM GENRE AS GENREalias0 ;
What are the names of different music genres ?,spider,SELECT GENREalias0.NAME FROM GENRE AS GENREalias0 ;
Find all the customer information in state var0 .,spider,"SELECT * FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = ""var0"" ;"
What is all the customer information for customers in var0 state ?,spider,"SELECT * FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = ""var0"" ;"
What are the first names and last names of the employees who live in var0 city .,spider,"SELECT FIRSTNAME , LASTNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.CITY = ""var0"" ;"
Find the full names of employees living in the city of var0 .,spider,"SELECT FIRSTNAME , LASTNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.CITY = ""var0"" ;"
What are the var0 billing countries of the invoices ?,spider,SELECT var0 ( BILLINGCOUNTRY ) FROM INVOICE AS INVOICEalias0 ;
Find the different billing countries for all invoices .,spider,SELECT DISTINCT ( BILLINGCOUNTRY ) FROM INVOICE AS INVOICEalias0 ;
"Find the nvar0mes of var0ll var0rtists thvar0t hvar0ve "" var0 "" in their nvar0mes .",spider,"SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.NAME LIKE ""var0"" ;"
Whvar0t var0re the nvar0mes of var0rtist who hvar0ve the letter ' var0 ' in their nvar0mes ?,spider,"SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.NAME LIKE ""var0"" ;"
"Find the title of all the albums of the artist "" var0 "" .",spider,"SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = ""var0"" ;"
"What are the titles of albums by the artist "" var0 "" ?",spider,"SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = ""var0"" ;"
"Hom many albums does the artist "" var0 "" have ?",spider,"SELECT COUNT( * ) FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = ""var0"" ;"
"Find the number of albums by the artist "" var0 "" .",spider,"SELECT COUNT( * ) FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ARTISTalias0.NAME = ""var0"" ;"
"Which artist does the album "" var0 "" belong to ?",spider,"SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ALBUMalias0.TITLE = ""var0"" ;"
"Find the name of the artist who made the album "" var0 "" .",spider,"SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID WHERE ALBUMalias0.TITLE = ""var0"" ;"
Which artist has the most albums ?,spider,SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ARTISTalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the artist with the greatest number of albums ?,spider,SELECT ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ARTISTalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Find the names of all the tracks that contain the word "" var0 "" .",spider,"SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.NAME LIKE ""var0"" ;"
What are the names of tracks that contain the the word var0 in them ?,spider,"SELECT TRACKalias0.NAME FROM TRACK AS TRACKalias0 WHERE TRACKalias0.NAME LIKE ""var0"" ;"
What is the average unit price of all the tracks ?,spider,SELECT AVG( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
Find the average unit price for a track .,spider,SELECT AVG( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
What are the durations of the longest and the shortest tracks in milliseconds ?,spider,"SELECT MAX( TRACKalias0.MILLISECONDS ) , MIN( TRACKalias0.MILLISECONDS ) FROM TRACK AS TRACKalias0 ;"
Find the maximum and minimum durations of tracks in milliseconds .,spider,"SELECT MAX( TRACKalias0.MILLISECONDS ) , MIN( TRACKalias0.MILLISECONDS ) FROM TRACK AS TRACKalias0 ;"
"Show the album names , ids and the number of tracks for each album .",spider,"SELECT ALBUMalias0.TITLE , COUNT( TRACKalias0.* ) , TRACKalias0.ALBUMID FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID GROUP BY TRACKalias0.ALBUMID ;"
"What are the names and ids of the different albums , and how many tracks are on each ?",spider,"SELECT ALBUMalias0.TITLE , COUNT( TRACKalias0.* ) , TRACKalias0.ALBUMID FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID GROUP BY TRACKalias0.ALBUMID ;"
What is the name of the most common genre in all tracks ?,spider,SELECT GENREalias0.NAME FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID GROUP BY TRACKalias0.GENREID ORDER BY COUNT( TRACKalias0.* ) DESC LIMIT 1 ;
Find the name of the genre that is most frequent across all tracks .,spider,SELECT GENREalias0.NAME FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID GROUP BY TRACKalias0.GENREID ORDER BY COUNT( TRACKalias0.* ) DESC LIMIT 1 ;
What is the least common media type in all tracks ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM MEDIATYPE AS DERIVED_TABLEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.MEDIATYPEID = DERIVED_TABLEalias0.MEDIATYPEID GROUP BY TRACKalias0.MEDIATYPEID ORDER BY COUNT( TRACKalias0.* ) ASC LIMIT 1 ;
What is the name of the media type that is least common across all tracks ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM MEDIATYPE AS DERIVED_TABLEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.MEDIATYPEID = DERIVED_TABLEalias0.MEDIATYPEID GROUP BY TRACKalias0.MEDIATYPEID ORDER BY COUNT( TRACKalias0.* ) ASC LIMIT 1 ;
Show the album names and ids for albums that contain tracks with unit price bigger than var0 .,spider,"SELECT ALBUMalias0.TITLE , TRACKalias0.ALBUMID FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID WHERE TRACKalias0.UNITPRICE > var0 GROUP BY TRACKalias0.ALBUMID ;"
What are the titles and ids for albums containing tracks with unit price greater than var0 ?,spider,"SELECT ALBUMalias0.TITLE , TRACKalias0.ALBUMID FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID WHERE TRACKalias0.UNITPRICE > var0 GROUP BY TRACKalias0.ALBUMID ;"
How many tracks belong to rock genre ?,spider,"SELECT COUNT( TRACKalias0.* ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
Count the number of tracks that are part of the rock genre .,spider,"SELECT COUNT( TRACKalias0.* ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
What is the average unit price of tracks that belong to var0 genre ?,spider,"SELECT AVG( UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
Find the average unit price of jazz tracks .,spider,"SELECT AVG( UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
"What is the first name and last name of the customer that has email "" var0 "" ?",spider,"SELECT FIRSTNAME , LASTNAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL = ""var0"" ;"
"Find the full name of the customer with the email "" var0 "" .",spider,"SELECT FIRSTNAME , LASTNAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL = ""var0"" ;"
"How many customers have email that contains "" var0 "" ?",spider,"SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL LIKE ""var0"" ;"
"Count the number of customers that have an email containing "" var0 "" .",spider,"SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.EMAIL LIKE ""var0"" ;"
What is the first name and last name employee helps the customer with first name var0 ?,spider,"SELECT EMPLOYEEalias0.FIRSTNAME , EMPLOYEEalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.FIRSTNAME = ""var0"" ;"
Find the full names of employees who help customers with the first name var0 .,spider,"SELECT EMPLOYEEalias0.FIRSTNAME , EMPLOYEEalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.FIRSTNAME = ""var0"" ;"
What city does the employee who helps the customer with postal code var0 live in ?,spider,"SELECT EMPLOYEEalias0.CITY FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.POSTALCODE = ""var0"" ;"
Find the cities corresponding to employees who help customers with the postal code var0 .,spider,"SELECT EMPLOYEEalias0.CITY FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID WHERE CUSTOMERalias0.POSTALCODE = ""var0"" ;"
How many distinct cities does the employees live in ?,spider,SELECT COUNT( DISTINCT EMPLOYEEalias0.CITY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
Find the number of different cities that employees live in .,spider,SELECT COUNT( DISTINCT EMPLOYEEalias0.CITY ) FROM EMPLOYEE AS EMPLOYEEalias0 ;
Find all invoice dates corresponding to customers with first name var0 and last name var1 .,spider,"SELECT INVOICEalias0.INVOICEDATE FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
What are the invoice dates for customers with the first name var0 and the last name var1 ?,spider,"SELECT INVOICEalias0.INVOICEDATE FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
Find all the customer last names that do not have invoice totals larger than var0 .,spider,SELECT LASTNAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.LASTNAME FROM CUSTOMER AS CUSTOMERalias1 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias1.CUSTOMERID WHERE INVOICEalias0.TOTAL > var0 ;
What are the last names of customers without invoice totals exceeding var0 ?,spider,SELECT LASTNAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.LASTNAME FROM CUSTOMER AS CUSTOMERalias1 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias1.CUSTOMERID WHERE INVOICEalias0.TOTAL > var0 ;
Find the first names of all customers that live in var0 and have an invoice .,spider,"SELECT DISTINCT CUSTOMERalias0.FIRSTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = ""var0"" ;"
What are the different first names for customers from var0 who have also had an invoice ?,spider,"SELECT DISTINCT CUSTOMERalias0.FIRSTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = ""var0"" ;"
Find the address of all customers that live in var0 and have invoice .,spider,"SELECT DISTINCT CUSTOMERalias0.ADDRESS FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = ""var0"" ;"
What are the addresses of customers living in var0 who have had an invoice ?,spider,"SELECT DISTINCT CUSTOMERalias0.ADDRESS FROM CUSTOMER AS CUSTOMERalias0 JOIN INVOICE AS INVOICEalias0 ON INVOICEalias0.CUSTOMERID = CUSTOMERalias0.CUSTOMERID WHERE CUSTOMERalias0.COUNTRY = ""var0"" ;"
List the phone numbers of all employees .,spider,SELECT EMPLOYEEalias0.PHONE FROM EMPLOYEE AS EMPLOYEEalias0 ;
What are the phone numbers for each employee ?,spider,SELECT EMPLOYEEalias0.PHONE FROM EMPLOYEE AS EMPLOYEEalias0 ;
How many tracks are in the var0 media type ?,spider,"SELECT COUNT( TRACKalias0.* ) FROM MEDIATYPE AS DERIVED_TABLEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.MEDIATYPEID = DERIVED_TABLEalias0.MEDIATYPEID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
"Count the number of tracks that are of the media type "" var0 "" .",spider,"SELECT COUNT( TRACKalias0.* ) FROM MEDIATYPE AS DERIVED_TABLEalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.MEDIATYPEID = DERIVED_TABLEalias0.MEDIATYPEID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
What is the average duration in milliseconds of tracks that belong to var0 or var1 genre ?,spider,"SELECT AVG( TRACKalias0.MILLISECONDS ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" OR GENREalias0.NAME = ""var1"" ;"
Find the average millisecond length of var0 and var1 tracks .,spider,"SELECT AVG( TRACKalias0.MILLISECONDS ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" OR GENREalias0.NAME = ""var1"" ;"
Please show the employee first names and ids of employees who serve at least var0 customers .,spider,"SELECT CUSTOMERalias0.FIRSTNAME , CUSTOMERalias0.SUPPORTREPID FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID GROUP BY CUSTOMERalias0.SUPPORTREPID HAVING COUNT( * ) >= var0 ;"
What are the first names and support rep ids for employees serving var0 or more customers ?,spider,"SELECT CUSTOMERalias0.FIRSTNAME , CUSTOMERalias0.SUPPORTREPID FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID GROUP BY CUSTOMERalias0.SUPPORTREPID HAVING COUNT( * ) >= var0 ;"
Please show the employee last names that serves no more than var0 customers .,spider,SELECT CUSTOMERalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID GROUP BY CUSTOMERalias0.SUPPORTREPID HAVING COUNT( * ) <= var0 ;
What are the last names of employees who serve at most var0 customers ?,spider,SELECT CUSTOMERalias0.LASTNAME FROM CUSTOMER AS CUSTOMERalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMPLOYEEID = CUSTOMERalias0.SUPPORTREPID GROUP BY CUSTOMERalias0.SUPPORTREPID HAVING COUNT( * ) <= var0 ;
Please list all album titles in alphabetical order .,spider,SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 ORDER BY ALBUMalias0.TITLE ;
"What are all the album titles , in alphabetical order ?",spider,SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 ORDER BY ALBUMalias0.TITLE ;
Please list the name and id of all artists that have at least var0 albums in alphabetical order .,spider,"SELECT ALBUMalias0.ARTISTID , ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ALBUMalias0.ARTISTID HAVING COUNT( * ) >= var0 ORDER BY ARTISTalias0.NAME ;"
"What are the names and ids of artists with var0 or more albums , listed in alphabetical order ?",spider,"SELECT ALBUMalias0.ARTISTID , ARTISTalias0.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias0 ON ARTISTalias0.ARTISTID = ALBUMalias0.ARTISTID GROUP BY ALBUMalias0.ARTISTID HAVING COUNT( * ) >= var0 ORDER BY ARTISTalias0.NAME ;"
Find the names of artists that do not have any albums .,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias1 ON ARTISTalias1.ARTISTID = ALBUMalias0.ARTISTID ;
What are the names of artists who have not released any albums ?,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM ALBUM AS ALBUMalias0 JOIN ARTIST AS ARTISTalias1 ON ARTISTalias1.ARTISTID = ALBUMalias0.ARTISTID ;
What is the average unit price of rock tracks ?,spider,"SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
Find the average unit price of tracks from the var0 genre .,spider,"SELECT AVG( TRACKalias0.UNITPRICE ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
What are the duration of the longest and shortest pop tracks in milliseconds ?,spider,"SELECT MAX( TRACKalias0.MILLISECONDS ) , MIN( TRACKalias0.MILLISECONDS ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
Find the maximum and minimum millisecond lengths of pop tracks .,spider,"SELECT MAX( TRACKalias0.MILLISECONDS ) , MIN( TRACKalias0.MILLISECONDS ) FROM GENRE AS GENREalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" ;"
What are the birth dates of employees living in var0 ?,spider,"SELECT BIRTHDATE FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.CITY = ""var0"" ;"
Find the birth dates corresponding to employees who live in the city of var0 .,spider,"SELECT BIRTHDATE FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.CITY = ""var0"" ;"
What are the var0 unit prices of all tracks ?,spider,SELECT var0 ( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
Find the var0 unit prices for tracks .,spider,SELECT var0 ( UNITPRICE ) FROM TRACK AS TRACKalias0 ;
How many artists do not have any album ?,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTID NOT IN ( SELECT ARTISTID FROM ALBUM AS ALBUMalias0 ) ;
Cound the number of artists who have not released an album .,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTID NOT IN ( SELECT ARTISTID FROM ALBUM AS ALBUMalias0 ) ;
What are the album titles for albums containing both ' var0 ' and ' var1 ' genre tracks ?,spider,"SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID JOIN GENRE AS GENREalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" INTERSECT SELECT ALBUMalias1.TITLE FROM ALBUM AS ALBUMalias1 JOIN TRACK AS TRACKalias1 ON TRACKalias1.ALBUMID = ALBUMalias1.ALBUMID JOIN GENRE AS GENREalias1 ON TRACKalias1.GENREID = GENREalias1.GENREID WHERE GENREalias1.NAME = ""var1"" ;"
Find the titles of albums that contain tracks of both the var0 and var1 genres .,spider,"SELECT ALBUMalias0.TITLE FROM ALBUM AS ALBUMalias0 JOIN TRACK AS TRACKalias0 ON TRACKalias0.ALBUMID = ALBUMalias0.ALBUMID JOIN GENRE AS GENREalias0 ON TRACKalias0.GENREID = GENREalias0.GENREID WHERE GENREalias0.NAME = ""var0"" INTERSECT SELECT ALBUMalias1.TITLE FROM ALBUM AS ALBUMalias1 JOIN TRACK AS TRACKalias1 ON TRACKalias1.ALBUMID = ALBUMalias1.ALBUMID JOIN GENRE AS GENREalias1 ON TRACKalias1.GENREID = GENREalias1.GENREID WHERE GENREalias1.NAME = ""var1"" ;"
Find all the phone numbers .,spider,SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ;
What are all the phone numbers ?,spider,SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ;
"What are the customer phone numbers under the policy "" var0 "" ?",spider,"SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = ""var0"" ;"
"What are the phone numbers of customers using the policy with the code "" var0 "" ?",spider,"SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = ""var0"" ;"
Which policy type has the most records in the database ?,spider,SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which policy type appears most frequently in the available policies ?,spider,SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are all the customer phone numbers under the most popular policy type ?,spider,SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = ( SELECT AVAILABLE_POLICIESalias1.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias1 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the phone numbers of customers using the most common policy type among the available policies .,spider,SELECT AVAILABLE_POLICIESalias0.CUSTOMER_PHONE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 WHERE AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE = ( SELECT AVAILABLE_POLICIESalias1.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias1 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the policy type used by more than var0 customers .,spider,SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
Find the policy types more than var0 customers use . Show their type code .,spider,SELECT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 GROUP BY AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
Find the total and average amount of settlements .,spider,"SELECT AVG( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
Return the sum and average of all settlement amounts .,spider,"SELECT AVG( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
Find the name of services that have been used for more than var0 times in first notification of loss .,spider,SELECT SERVICESalias0.SERVICE_NAME FROM FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID GROUP BY FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID HAVING COUNT( * ) > var0 ;
Which services have been used more than twice in first notification of loss ? Return the service name .,spider,SELECT SERVICESalias0.SERVICE_NAME FROM FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID GROUP BY FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID HAVING COUNT( * ) > var0 ;
What is the effective date of the claim that has the largest amount of total settlement ?,spider,SELECT CLAIMSalias0.EFFECTIVE_DATE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) DESC LIMIT 1 ;
Find the claim that has the largest total settlement amount . Return the effective date of the claim .,spider,SELECT CLAIMSalias0.EFFECTIVE_DATE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY SUM( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) DESC LIMIT 1 ;
"How many policies are listed for the customer named "" var0 "" ?",spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Count the total number of policies used by the customer named "" var0 "" .",spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
What is the name of the customer who has the most policies listed ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which customer uses the most policies ? Give me the customer name .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What are all the policy types of the customer named "" var0 "" ?",spider,"SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Tell me the types of the policy used by the customer named "" var0 "" .",spider,"SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
What are all the policy types of the customer that has the most policies listed ?,spider,SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ( SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_POLICIESalias1.CUSTOMER_ID GROUP BY CUSTOMERSalias1.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
List all the policy types used by the customer enrolled in the most policies .,spider,SELECT DISTINCT AVAILABLE_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID JOIN AVAILABLE_POLICIES AS AVAILABLE_POLICIESalias0 ON CUSTOMERS_POLICIESalias0.POLICY_ID = AVAILABLE_POLICIESalias0.POLICY_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ( SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias1 ON CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERS_POLICIESalias1.CUSTOMER_ID GROUP BY CUSTOMERSalias1.CUSTOMER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
List all the services in the alphabetical order .,spider,SELECT SERVICESalias0.SERVICE_NAME FROM SERVICES AS SERVICESalias0 ORDER BY SERVICESalias0.SERVICE_NAME ;
Give me a list of all the service names sorted alphabetically .,spider,SELECT SERVICESalias0.SERVICE_NAME FROM SERVICES AS SERVICESalias0 ORDER BY SERVICESalias0.SERVICE_NAME ;
How many services are there ?,spider,SELECT COUNT( * ) FROM SERVICES AS SERVICESalias0 ;
Count the total number of available services .,spider,SELECT COUNT( * ) FROM SERVICES AS SERVICESalias0 ;
How many services are there ?,spider,SELECT COUNT( * ) FROM SERVICES AS SERVICESalias0 ;
Count the number of services .,spider,SELECT COUNT( * ) FROM SERVICES AS SERVICESalias0 ;
Find the names of users who do not have a first notification of loss record .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
Which customers do not have a first notification of loss record ? Give me the customer names .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
"Find the names of customers who have used either the service "" var0 "" or the service "" var1 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = ""var0"" OR SERVICESalias0.SERVICE_NAME = ""var1"" ;"
"Which customers have used the service named "" var0 "" or "" var1 "" ? Give me the customer names .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = ""var0"" OR SERVICESalias0.SERVICE_NAME = ""var1"" ;"
"Find the names of customers who have used both the service "" var0 "" and the service "" var1 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias1 ON FIRST_NOTIFICATION_OF_LOSSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias1.SERVICE_ID WHERE SERVICESalias1.SERVICE_NAME = ""var1"" ;"
"Which customers have used both the service named "" var0 "" and the service named "" Upgrade a policy "" ? Give me the customer names .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias0 ON FIRST_NOTIFICATION_OF_LOSSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_NAME = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN FIRST_NOTIFICATION_OF_LOSS AS FIRST_NOTIFICATION_OF_LOSSalias1 ON FIRST_NOTIFICATION_OF_LOSSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_ID = FIRST_NOTIFICATION_OF_LOSSalias1.SERVICE_ID WHERE SERVICESalias1.SERVICE_NAME = ""var1"" ;"
"Find the IDs of customers whose name contains "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
"What are the IDs of customers who have "" var0 "" in part of their names ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
What are the maximum and minimum settlement amount on record ?,spider,"SELECT MAX( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , MIN( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
Find the maximum and minimum settlement amount .,spider,"SELECT MAX( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) , MIN( SETTLEMENTSalias0.SETTLEMENT_AMOUNT ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
List all the customers in increasing order of IDs .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_ID ASC ;"
What is the ordered list of customer ids ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_ID ASC ;"
"Retrieve the open and close dates of all the policies associated with the customer whose name contains "" var0 """,spider,"SELECT CUSTOMERS_POLICIESalias0.DATE_CLOSED , CUSTOMERS_POLICIESalias0.DATE_OPENED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
"What are the open and close dates of all the policies used by the customer who have "" var0 "" in part of their names ?",spider,"SELECT CUSTOMERS_POLICIESalias0.DATE_CLOSED , CUSTOMERS_POLICIESalias0.DATE_OPENED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMERS_POLICIES AS CUSTOMERS_POLICIESalias0 ON CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERS_POLICIESalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
How many kinds of enzymes are there ?,spider,SELECT COUNT( * ) FROM ENZYME AS ENZYMEalias0 ;
What is the total count of enzymes ?,spider,SELECT COUNT( * ) FROM ENZYME AS ENZYMEalias0 ;
List the name of enzymes in descending lexicographical order .,spider,SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ORDER BY ENZYMEalias0.NAME DESC ;
What are the names of enzymes in descending order ?,spider,SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ORDER BY ENZYMEalias0.NAME DESC ;
List the names and the locations that the enzymes can make an effect .,spider,"SELECT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ;"
What are the names and locations of all enzymes listed ?,spider,"SELECT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 ;"
What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes ?,spider,SELECT MAX( ENZYMEalias0.OMIM ) FROM ENZYME AS ENZYMEalias0 ;
What is the maximum OMIM value in the database ?,spider,SELECT MAX( ENZYMEalias0.OMIM ) FROM ENZYME AS ENZYMEalias0 ;
"What is the product , chromosome and porphyria related to the enzymes which take effect at the location ' var0 ' ?",spider,"SELECT ENZYMEalias0.CHROMOSOME , ENZYMEalias0.PORPHYRIA , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.LOCATION = ""var0"" ;"
"What is the product , chromosome , and porphyria of the enzymes located at ' var0 ' ?",spider,"SELECT ENZYMEalias0.CHROMOSOME , ENZYMEalias0.PORPHYRIA , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.LOCATION = ""var0"" ;"
What are the names of enzymes who does not produce ' var0 ' ?,spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.PRODUCT != ""var0"" ;"
What are the names of enzymes whose product is not ' var0 ' ?,spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.PRODUCT != ""var0"" ;"
What are the names and trade names of the medicines which has ' var0 ' value in the FDA record ?,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = ""var0"" ;"
What are the names and trade names of the medcines that are FDA approved ?,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = ""var0"" ;"
What are the names of enzymes in the medicine named ' var0 ' that can serve as an ' var1 ' ?,spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID JOIN MEDICINE AS MEDICINEalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var1"" AND MEDICINEalias0.NAME = ""var0"" ;"
What are the names of the enzymes used in the medicine var0 that acts as var1s ?,spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID JOIN MEDICINE AS MEDICINEalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var1"" AND MEDICINEalias0.NAME = ""var0"" ;"
What are the ids and names of the medicine that can interact with two or more enzymes ?,spider,"SELECT MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;"
"For every medicine id , what are the names of the medicines that can interact with more than one enzyme ?",spider,"SELECT MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;"
"What are the ids , names and FDA approval status of medicines in descending order of the number of enzymes that it can interact with .",spider,"SELECT MEDICINEalias0.FDA_APPROVED , MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC ;"
"What are the ids , names , and FDA approval status for medicines ordered by descending number of possible enzyme interactions ?",spider,"SELECT MEDICINEalias0.FDA_APPROVED , MEDICINEalias0.ID , MEDICINEalias0.NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC ;"
What is the id and name of the enzyme with most number of medicines that can interact as ' activator ' ?,spider,"SELECT ENZYMEalias0.ID , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" GROUP BY ENZYMEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;"
What is the id and name of the enzyme that can interact with the most medicines as an activator ?,spider,"SELECT ENZYMEalias0.ID , ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" GROUP BY ENZYMEalias0.ID ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;"
What is the interaction type of the enzyme named ' var0 ' and the medicine named ' var1 ' ?,spider,"SELECT MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 JOIN MEDICINE AS MEDICINEalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.NAME = ""var0"" AND MEDICINEalias0.NAME = ""var1"" ;"
What is the type of interaction for the enzyme named ' var0 ' and the medicine named ' var1 ' ?,spider,"SELECT MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 JOIN MEDICINE AS MEDICINEalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.NAME = ""var0"" AND MEDICINEalias0.NAME = ""var1"" ;"
What is the most common interaction type between enzymes and medicine ? And how many are there ?,spider,"SELECT COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) , MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 GROUP BY INTERACTION_TYPE ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;"
"What are the most common types of interactions between enzymes and medicine , and how many types are there ?",spider,"SELECT COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) , MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 GROUP BY INTERACTION_TYPE ORDER BY COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) DESC LIMIT 1 ;"
How many medicines have the FDA approval status ' var0 ' ?,spider,"SELECT COUNT( * ) FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = ""var0"" ;"
How many medicines were not approved by the FDA ?,spider,"SELECT COUNT( * ) FROM MEDICINE AS MEDICINEalias0 WHERE MEDICINEalias0.FDA_APPROVED = ""var0"" ;"
How many enzymes do not have any interactions ?,spider,SELECT COUNT( * ) FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.ID NOT IN ( SELECT MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ) ;
What is the count of enzymes without any interactions ?,spider,SELECT COUNT( * ) FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.ID NOT IN ( SELECT MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID FROM MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ) ;
What is the id and trade name of the medicines can interact with at least var0 enzymes ?,spider,"SELECT MEDICINEalias0.ID , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;"
What are the ids and trade names of the medicine that can interact with at least var0 enzymes ?,spider,"SELECT MEDICINEalias0.ID , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID GROUP BY MEDICINEalias0.ID HAVING COUNT( MEDICINE_ENZYME_INTERACTIONalias0.* ) >= var0 ;"
"What are the distinct name , location and products of the enzymes which has any ' var0 ' interaction ?",spider,"SELECT DISTINCT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" ;"
"What are the different names , locations , and products of the enzymes that are capable var0 interactions ?",spider,"SELECT DISTINCT ENZYMEalias0.LOCATION , ENZYMEalias0.NAME , ENZYMEalias0.PRODUCT FROM ENZYME AS ENZYMEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" ;"
List the medicine name and trade name which can both interact as ' var0 ' and ' var1 ' with enzymes .,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" INTERSECT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias1 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias1.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias1.INTERACTION_TYPE = ""var1"" ;"
What are the medicine and trade names that can interact as an var0 and var1 with enzymes ?,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias0.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias0.INTERACTION_TYPE = ""var0"" INTERSECT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias1 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias1.MEDICINE_ID WHERE MEDICINE_ENZYME_INTERACTIONalias1.INTERACTION_TYPE = ""var1"" ;"
Show the medicine names and trade names that cannot interact with the enzyme with product ' Heme ' .,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 EXCEPT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.PRODUCT = ""var0"" ;"
What are the medicine and trade names that cannot interact with the enzyme with the product ' Heme ' ?,spider,"SELECT MEDICINEalias0.NAME , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 EXCEPT SELECT MEDICINEalias1.NAME , MEDICINEalias1.TRADE_NAME FROM MEDICINE AS MEDICINEalias1 JOIN MEDICINE_ENZYME_INTERACTION AS MEDICINE_ENZYME_INTERACTIONalias0 ON MEDICINEalias1.ID = MEDICINE_ENZYME_INTERACTIONalias0.MEDICINE_ID JOIN ENZYME AS ENZYMEalias0 ON MEDICINE_ENZYME_INTERACTIONalias0.ENZYME_ID = ENZYMEalias0.ID WHERE ENZYMEalias0.PRODUCT = ""var0"" ;"
How many distinct FDA approval statuses are there for the medicines ?,spider,SELECT COUNT( DISTINCT MEDICINEalias0.FDA_APPROVED ) FROM MEDICINE AS MEDICINEalias0 ;
How many different FDA approval statuses exist for medicines ?,spider,SELECT COUNT( DISTINCT MEDICINEalias0.FDA_APPROVED ) FROM MEDICINE AS MEDICINEalias0 ;
"Which enzyme names have the substring "" var0 "" ?",spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.NAME LIKE ""var0"" ;"
What are the names of enzymes that include the string ' var0 ' ?,spider,"SELECT ENZYMEalias0.NAME FROM ENZYME AS ENZYMEalias0 WHERE ENZYMEalias0.NAME LIKE ""var0"" ;"
find the number of medicines offered by each trade .,spider,"SELECT COUNT( * ) , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 GROUP BY MEDICINEalias0.TRADE_NAME ;"
How many medicines are offered by each trade name ?,spider,"SELECT COUNT( * ) , MEDICINEalias0.TRADE_NAME FROM MEDICINE AS MEDICINEalias0 GROUP BY MEDICINEalias0.TRADE_NAME ;"
List all schools and their nicknames in the order of founded year .,spider,"SELECT UNIVERSITYalias0.NICKNAME , UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.FOUNDED ;"
"What are the different schools and their nicknames , ordered by their founding years ?",spider,"SELECT UNIVERSITYalias0.NICKNAME , UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.FOUNDED ;"
List all public schools and their locations .,spider,"SELECT UNIVERSITYalias0.LOCATION , UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.AFFILIATION = ""var0"" ;"
What are the public schools and what are their locations ?,spider,"SELECT UNIVERSITYalias0.LOCATION , UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.AFFILIATION = ""var0"" ;"
When was the school with the largest enrollment founded ?,spider,SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.ENROLLMENT DESC LIMIT 1 ;
Return the founded year for the school with the largest enrollment .,spider,SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.ENROLLMENT DESC LIMIT 1 ;
Find the founded year of the newest non public school .,spider,"SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 WHERE AFFILIATION != ""var0"" ORDER BY UNIVERSITYalias0.FOUNDED DESC LIMIT 1 ;"
What is the founded year of the non public school that was founded most recently ?,spider,"SELECT UNIVERSITYalias0.FOUNDED FROM UNIVERSITY AS UNIVERSITYalias0 WHERE AFFILIATION != ""var0"" ORDER BY UNIVERSITYalias0.FOUNDED DESC LIMIT 1 ;"
How many schools are in the basketball match ?,spider,SELECT COUNT( DISTINCT BASKETBALL_MATCHalias0.SCHOOL_ID ) FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ;
Count the number of schools that have had basketball matches .,spider,SELECT COUNT( DISTINCT BASKETBALL_MATCHalias0.SCHOOL_ID ) FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ;
What is the highest acc percent score in the competition ?,spider,SELECT BASKETBALL_MATCHalias0.ACC_PERCENT FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ORDER BY BASKETBALL_MATCHalias0.ACC_PERCENT DESC LIMIT 1 ;
Return the highest acc percent across all basketball matches .,spider,SELECT BASKETBALL_MATCHalias0.ACC_PERCENT FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ORDER BY BASKETBALL_MATCHalias0.ACC_PERCENT DESC LIMIT 1 ;
What is the primary conference of the school that has the lowest acc percent score in the competition ?,spider,SELECT UNIVERSITYalias0.PRIMARY_CONFERENCE FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID ORDER BY BASKETBALL_MATCHalias0.ACC_PERCENT LIMIT 1 ;
Return the primary conference of the school with the lowest acc percentage score .,spider,SELECT UNIVERSITYalias0.PRIMARY_CONFERENCE FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID ORDER BY BASKETBALL_MATCHalias0.ACC_PERCENT LIMIT 1 ;
What is the team name and acc regular season score of the school that was founded for the longest time ?,spider,"SELECT BASKETBALL_MATCHalias0.ACC_REGULAR_SEASON , BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;"
Return the name of the team and the acc during the regular season for the school that was founded the earliest .,spider,"SELECT BASKETBALL_MATCHalias0.ACC_REGULAR_SEASON , BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;"
Find the location and all games score of the school that has var0 as its team name .,spider,"SELECT BASKETBALL_MATCHalias0.ALL_GAMES , UNIVERSITYalias0.LOCATION FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE BASKETBALL_MATCHalias0.TEAM_NAME = ""var0"" ;"
What are the all games score and location of the school called var0 ?,spider,"SELECT BASKETBALL_MATCHalias0.ALL_GAMES , UNIVERSITYalias0.LOCATION FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE BASKETBALL_MATCHalias0.TEAM_NAME = ""var0"" ;"
What are the average enrollment size of the universities that are founded before var0 ?,spider,SELECT AVG( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.FOUNDED < var0 ;
Return the average enrollment of universities founded before var0 .,spider,SELECT AVG( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.FOUNDED < var0 ;
Show the enrollment and primary_conference of the oldest college .,spider,"SELECT UNIVERSITYalias0.ENROLLMENT , UNIVERSITYalias0.PRIMARY_CONFERENCE FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;"
What are the enrollment and primary conference for the university which was founded the earliest ?,spider,"SELECT UNIVERSITYalias0.ENROLLMENT , UNIVERSITYalias0.PRIMARY_CONFERENCE FROM UNIVERSITY AS UNIVERSITYalias0 ORDER BY UNIVERSITYalias0.FOUNDED LIMIT 1 ;"
What is the total and minimum enrollment of all schools ?,spider,"SELECT MIN( UNIVERSITYalias0.ENROLLMENT ) , SUM( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;"
Return the total and minimum enrollments across all schools .,spider,"SELECT MIN( UNIVERSITYalias0.ENROLLMENT ) , SUM( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;"
Find the total student enrollment for different affiliation type schools .,spider,"SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
What are the total enrollments of universities of each affiliation type ?,spider,"SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
How many schools do not participate in the basketball match ?,spider,SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.SCHOOL_ID NOT IN ( SELECT BASKETBALL_MATCHalias0.SCHOOL_ID FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ) ;
Count the number of universities that do not participate in the baketball match .,spider,SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.SCHOOL_ID NOT IN ( SELECT BASKETBALL_MATCHalias0.SCHOOL_ID FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ) ;
Find the schools that were either founded after var0 or public .,spider,"SELECT UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.AFFILIATION = ""var1"" OR UNIVERSITYalias0.FOUNDED > var0 ;"
What are the schools that were either founded before var0 or are public ?,spider,"SELECT UNIVERSITYalias0.SCHOOL FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.AFFILIATION = ""var1"" OR UNIVERSITYalias0.FOUNDED > var0 ;"
Find how many different affiliation types there are .,spider,SELECT COUNT( DISTINCT UNIVERSITYalias0.AFFILIATION ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
Count the number of different affiliation types .,spider,SELECT COUNT( DISTINCT UNIVERSITYalias0.AFFILIATION ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
Find how many school locations have the word ' var0 ' .,spider,"SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.LOCATION LIKE ""var0"" ;"
How many universities have a location that contains var0 ?,spider,"SELECT COUNT( UNIVERSITYalias0.* ) FROM UNIVERSITY AS UNIVERSITYalias0 WHERE UNIVERSITYalias0.LOCATION LIKE ""var0"" ;"
Find the team names of the universities whose enrollments are smaller than the average enrollment size .,spider,SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE UNIVERSITYalias0.ENROLLMENT < ( SELECT AVG( UNIVERSITYalias1.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias1 ) ;
What are the names of teams from universities that have a below average enrollment ?,spider,SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM UNIVERSITY AS UNIVERSITYalias0 JOIN BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ON UNIVERSITYalias0.SCHOOL_ID = BASKETBALL_MATCHalias0.SCHOOL_ID WHERE UNIVERSITYalias0.ENROLLMENT < ( SELECT AVG( UNIVERSITYalias1.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias1 ) ;
Find the number of universities that have over a var0 enrollment size for each affiliation type .,spider,"SELECT COUNT( UNIVERSITYalias0.* ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE ENROLLMENT > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
"What are the different affiliations , and how many schools with each have an enrollment size of above var0 ?",spider,"SELECT COUNT( UNIVERSITYalias0.* ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE ENROLLMENT > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
Find the total number of students enrolled in the colleges that were founded after the year of var0 for each affiliation type .,spider,"SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE FOUNDED > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
"What are the different affiliations , and what is the total enrollment of schools founded after var0 for each enrollment type ?",spider,"SELECT SUM( UNIVERSITYalias0.ENROLLMENT ) , UNIVERSITYalias0.AFFILIATION FROM UNIVERSITY AS UNIVERSITYalias0 WHERE FOUNDED > var0 GROUP BY UNIVERSITYalias0.AFFILIATION ;"
What is the maximum enrollment across all schools ?,spider,SELECT MAX( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
Return the maximum enrollment across all schools .,spider,SELECT MAX( UNIVERSITYalias0.ENROLLMENT ) FROM UNIVERSITY AS UNIVERSITYalias0 ;
List all information regarding the basketball match .,spider,SELECT * FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ;
What is all the information about the basketball match ?,spider,SELECT * FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ;
"List names of all teams in the basketball competition , ordered by all home scores in descending order .",spider,SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ORDER BY BASKETBALL_MATCHalias0.ALL_HOME DESC ;
"What are the names of all the teams in the basketball competition , sorted by all home scores in descending order ?",spider,SELECT BASKETBALL_MATCHalias0.TEAM_NAME FROM BASKETBALL_MATCH AS BASKETBALL_MATCHalias0 ORDER BY BASKETBALL_MATCHalias0.ALL_HOME DESC ;
the names of models that launched between var0 and var1 .,spider,SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.LAUNCH_YEAR BETWEEN var0 AND var1 ;
Which model has the least amount of RAM ? List the model name and the amount of RAM .,spider,"SELECT CHIP_MODELalias0.MODEL_NAME , CHIP_MODELalias0.RAM_MIB FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.RAM_MIB ASC LIMIT 1 ;"
"What are the chip model and screen mode of the phone with hardware model name "" var0 "" ?",spider,"SELECT PHONEalias0.CHIP_MODEL , PHONEalias0.SCREEN_MODE FROM PHONE AS PHONEalias0 WHERE PHONEalias0.HARDWARE_MODEL_NAME = ""var0"" ;"
"How many phone hardware models are produced by the company named "" var0 "" ?",spider,"SELECT COUNT( PHONEalias0.* ) FROM PHONE AS PHONEalias0 WHERE PHONEalias0.COMPANY_NAME = ""var0"" ;"
"What is maximum and minimum RAM size of phone produced by company named "" var0 "" ?",spider,"SELECT MAX( CHIP_MODELalias0.RAM_MIB ) , MIN( CHIP_MODELalias0.RAM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE PHONEalias0.COMPANY_NAME = ""var0"" ;"
"What is the average ROM size of phones produced by the company named "" var0 "" ?",spider,"SELECT AVG( CHIP_MODELalias0.ROM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE PHONEalias0.COMPANY_NAME = ""var0"" ;"
List the hardware model name and company name for all the phones that were launched in year var0 or have RAM size greater than var1 .,spider,"SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE CHIP_MODELalias0.LAUNCH_YEAR = var0 OR CHIP_MODELalias0.RAM_MIB > var1 ;"
Find all phones that have word ' var0 ' in their accreditation types . List the Hardware Model name and Company name .,spider,"SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.ACCREDITATION_TYPE LIKE ""var0"" ;"
"Find the Char cells , Pixels and Hardware colours for the screen of the phone whose hardware model name is "" var0 "" .",spider,"SELECT SCREEN_MODEalias0.CHAR_CELLS , SCREEN_MODEalias0.HARDWARE_COLOURS , SCREEN_MODEalias0.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.HARDWARE_MODEL_NAME = ""var0"" ;"
"List the hardware model name and company name for the phone whose screen mode type is "" var0 . """,spider,"SELECT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE SCREEN_MODEalias0.TYPE = ""var0"" ;"
Find the name of the company that has the least number of phone models . List the company name and the number of phone model produced by that company .,spider,"SELECT COUNT( PHONEalias0.* ) , PHONEalias0.COMPANY_NAME FROM PHONE AS PHONEalias0 GROUP BY COMPANY_NAME ORDER BY COUNT( PHONEalias0.* ) ASC LIMIT 1 ;"
List the name of the company that produced more than one phone model .,spider,SELECT PHONEalias0.COMPANY_NAME FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.COMPANY_NAME HAVING COUNT( PHONEalias0.* ) > var0 ;
"List the maximum , minimum and average number of used kb in screen mode .",spider,"SELECT AVG( SCREEN_MODEalias0.USED_KB ) , MAX( SCREEN_MODEalias0.USED_KB ) , MIN( SCREEN_MODEalias0.USED_KB ) FROM SCREEN_MODE AS SCREEN_MODEalias0 ;"
List the name of the phone model launched in year var0 and with the highest RAM size .,spider,SELECT PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME WHERE CHIP_MODELalias0.LAUNCH_YEAR = var0 ORDER BY CHIP_MODELalias0.RAM_MIB DESC LIMIT 1 ;
"What are the wifi and screen mode type of the hardware model named "" var0 "" ?",spider,"SELECT CHIP_MODELalias0.WIFI , SCREEN_MODEalias0.TYPE FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME JOIN SCREEN_MODE AS SCREEN_MODEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.HARDWARE_MODEL_NAME = ""var0"" ;"
"List the hardware model name for the phones that have screen mode type "" var0 "" or RAM size greater than var1 .",spider,"SELECT PHONEalias0.HARDWARE_MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.CHIP_MODEL = CHIP_MODELalias0.MODEL_NAME JOIN SCREEN_MODE AS SCREEN_MODEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE CHIP_MODELalias0.RAM_MIB > var1 OR SCREEN_MODEalias0.TYPE = ""var0"" ;"
"List the hardware model name for the phones that were produced by "" var1 "" or whose screen mode type is "" var0 . """,spider,"SELECT DISTINCT PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.COMPANY_NAME = ""var1"" OR SCREEN_MODEalias0.TYPE = ""var0"" ;"
"List the hardware model name for the phons that were produced by "" var0 "" but whose screen mode type is not var1 .",spider,"SELECT DISTINCT PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.COMPANY_NAME = ""var0"" AND SCREEN_MODEalias0.TYPE != ""var1"" ;"
List the phone hardware model and company name for the phones whose screen usage in kb is between var0 and var1 .,spider,"SELECT DISTINCT PHONEalias0.COMPANY_NAME , PHONEalias0.HARDWARE_MODEL_NAME FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE SCREEN_MODEalias0.USED_KB BETWEEN var0 AND var1 ;"
Find the number of phones for each accreditation type .,spider,"SELECT COUNT( PHONEalias0.* ) , PHONEalias0.ACCREDITATION_TYPE FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.ACCREDITATION_TYPE ;"
How many phones belongs to each accreditation type ?,spider,"SELECT COUNT( PHONEalias0.* ) , PHONEalias0.ACCREDITATION_TYPE FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.ACCREDITATION_TYPE ;"
Find the accreditation level that more than var0 phones use .,spider,SELECT PHONEalias0.ACCREDITATION_LEVEL FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.ACCREDITATION_LEVEL HAVING COUNT( PHONEalias0.* ) > var0 ;
Find the details for all chip models .,spider,SELECT * FROM CHIP_MODEL AS CHIP_MODELalias0 ;
How many models do not have the wifi function ?,spider,"SELECT COUNT( * ) FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.WIFI = ""var0"" ;"
Count the number of chip model that do not have wifi .,spider,"SELECT COUNT( * ) FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.WIFI = ""var0"" ;"
List all the model names sorted by their launch year .,spider,SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 ORDER BY CHIP_MODELalias0.LAUNCH_YEAR ;
Find the average ram mib size of the chip models that are never used by any phone .,spider,SELECT AVG( CHIP_MODELalias0.RAM_MIB ) FROM CHIP_MODEL AS CHIP_MODELalias0 WHERE CHIP_MODELalias0.MODEL_NAME NOT IN ( SELECT PHONEalias0.CHIP_MODEL FROM PHONE AS PHONEalias0 ) ;
Find the names of the chip models that are not used by any phone with full accreditation type .,spider,"SELECT CHIP_MODELalias0.MODEL_NAME FROM CHIP_MODEL AS CHIP_MODELalias0 EXCEPT SELECT PHONEalias0.CHIP_MODEL FROM PHONE AS PHONEalias0 WHERE PHONEalias0.ACCREDITATION_TYPE = ""var0"" ;"
Find the pixels of the screen modes that are used by both phones with full accreditation types and phones with var0 accreditation types .,spider,"SELECT SCREEN_MODEalias0.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias0 JOIN PHONE AS PHONEalias0 ON SCREEN_MODEalias0.GRAPHICS_MODE = PHONEalias0.SCREEN_MODE WHERE PHONEalias0.ACCREDITATION_TYPE = ""var0"" INTERSECT SELECT SCREEN_MODEalias1.PIXELS FROM SCREEN_MODE AS SCREEN_MODEalias1 JOIN PHONE AS PHONEalias1 ON SCREEN_MODEalias1.GRAPHICS_MODE = PHONEalias1.SCREEN_MODE WHERE PHONEalias1.ACCREDITATION_TYPE = ""var1"" ;"
How many countries are there in total ?,spider,SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 ;
Count the number of countries .,spider,SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 ;
Show the country name and capital of all countries .,spider,"SELECT COUNTRYalias0.CAPITAL , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 ;"
What are the names and capitals of each country ?,spider,"SELECT COUNTRYalias0.CAPITAL , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 ;"
"Show all official native languages that contain the word "" var0 "" .",spider,"SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE LIKE ""var0"" ;"
"What are the official native languages that contain the string "" var0 "" .",spider,"SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE LIKE ""var0"" ;"
Show all distinct positions of matches .,spider,SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
What are the different positions for match season ?,spider,SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
Show the players from college var0 .,spider,"SELECT MATCH_SEASONalias0.PLAYER FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" ;"
Who are the players from var0 ?,spider,"SELECT MATCH_SEASONalias0.PLAYER FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" ;"
Show the distinct position of players from college var0 or var1 .,spider,"SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" OR MATCH_SEASONalias0.COLLEGE = ""var1"" ;"
What are the different positions of players from var0 or var1 colleges ?,spider,"SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" OR MATCH_SEASONalias0.COLLEGE = ""var1"" ;"
Show the draft pick numbers and draft classes of players whose positions are defenders .,spider,"SELECT MATCH_SEASONalias0.DRAFT_CLASS , MATCH_SEASONalias0.DRAFT_PICK_NUMBER FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = ""var0"" ;"
What are the draft pick numbers and draft classes for players who play the var0 position ?,spider,"SELECT MATCH_SEASONalias0.DRAFT_CLASS , MATCH_SEASONalias0.DRAFT_PICK_NUMBER FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = ""var0"" ;"
How many distinct teams are involved in match seasons ?,spider,SELECT COUNT( DISTINCT MATCH_SEASONalias0.TEAM ) FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
Count the number of different teams involved in match season .,spider,SELECT COUNT( DISTINCT MATCH_SEASONalias0.TEAM ) FROM MATCH_SEASON AS MATCH_SEASONalias0 ;
Show the players and the years played .,spider,"SELECT PLAYERalias0.PLAYER , PLAYERalias0.YEARS_PLAYED FROM PLAYER AS PLAYERalias0 ;"
Who are the different players and how many years has each played ?,spider,"SELECT PLAYERalias0.PLAYER , PLAYERalias0.YEARS_PLAYED FROM PLAYER AS PLAYERalias0 ;"
Show all team names .,spider,SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 ;
What are the names of all teams ?,spider,SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 ;
"Show the season , the player , and the name of the country that player belongs to .",spider,"SELECT COUNTRYalias0.COUNTRY_NAME , MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID ;"
"For each player , what are their name , season , and country that they belong to ?",spider,"SELECT COUNTRYalias0.COUNTRY_NAME , MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID ;"
Which players are from var0 ?,spider,"SELECT MATCH_SEASONalias0.PLAYER FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.COUNTRY_NAME = ""var0"" ;"
Who are the players from var0 ?,spider,"SELECT MATCH_SEASONalias0.PLAYER FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.COUNTRY_NAME = ""var0"" ;"
What are the distinct positions of the players from a country whose capital is var0 ?,spider,"SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.CAPITAL = ""var0"" ;"
Give the different positions of players who play for the country with the capital var0 .,spider,"SELECT DISTINCT MATCH_SEASONalias0.POSITION FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE COUNTRYalias0.CAPITAL = ""var0"" ;"
What are the official languages of the countries of players from var0 or var1 college ?,spider,"SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" OR MATCH_SEASONalias0.COLLEGE = ""var1"" ;"
Return the official native languages of countries who have players from var0 or var1 colleges .,spider,"SELECT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.COLLEGE = ""var0"" OR MATCH_SEASONalias0.COLLEGE = ""var1"" ;"
How many distinct official languages are there among countries of players whose positions are defenders .,spider,"SELECT COUNT( DISTINCT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = ""var0"" ;"
Count the number of different official languages corresponding to countries that players who play var0 are from .,spider,"SELECT COUNT( DISTINCT COUNTRYalias0.OFFICIAL_NATIVE_LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = ""var0"" ;"
"Show the season , the player , and the name of the team that players belong to .",spider,"SELECT MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON , TEAMalias0.NAME FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM ;"
"Who are the different players , what season do they play in , and what is the name of the team they are on ?",spider,"SELECT MATCH_SEASONalias0.PLAYER , MATCH_SEASONalias0.SEASON , TEAMalias0.NAME FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM ;"
"Show the positions of the players from the team with name "" var0 "" .",spider,"SELECT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
Return the positions of players on the team var0 .,spider,"SELECT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
"How many distinct colleges are associated with players from the team with name "" var0 "" .",spider,"SELECT COUNT( DISTINCT MATCH_SEASONalias0.COLLEGE ) FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
Count the number of different colleges that players who play for var0 are from .,spider,"SELECT COUNT( DISTINCT MATCH_SEASONalias0.COLLEGE ) FROM MATCH_SEASON AS MATCH_SEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = MATCH_SEASONalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
"Show the players and years played for players from team "" var0 "" .",spider,"SELECT PLAYERalias0.PLAYER , PLAYERalias0.YEARS_PLAYED FROM PLAYER AS PLAYERalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = PLAYERalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
"What are the players who played for var0 , and how many years did each play for ?",spider,"SELECT PLAYERalias0.PLAYER , PLAYERalias0.YEARS_PLAYED FROM PLAYER AS PLAYERalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = PLAYERalias0.TEAM WHERE TEAMalias0.NAME = ""var0"" ;"
Show the position of players and the corresponding number of players .,spider,"SELECT COUNT( * ) , MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.POSITION ;"
How many players played each position ?,spider,"SELECT COUNT( * ) , MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.POSITION ;"
Show the country names and the corresponding number of players .,spider,"SELECT COUNT( * ) , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_NAME ;"
How many players are from each country ?,spider,"SELECT COUNT( * ) , COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_NAME ;"
Return all players sorted by college in ascending alphabetical order .,spider,SELECT MATCH_SEASONalias0.PLAYER FROM MATCH_SEASON AS MATCH_SEASONalias0 ORDER BY MATCH_SEASONalias0.COLLEGE ASC ;
"What are all the players who played in match season , sorted by college in ascending alphabetical order ?",spider,SELECT MATCH_SEASONalias0.PLAYER FROM MATCH_SEASON AS MATCH_SEASONalias0 ORDER BY MATCH_SEASONalias0.COLLEGE ASC ;
Show the most common position of players in match seasons .,spider,SELECT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY POSITION ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the position that is most common among players in match seasons ?,spider,SELECT MATCH_SEASONalias0.POSITION FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY POSITION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the top var0 most common colleges of players in match seasons .,spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT var0 ;
What are the three colleges from which the most players are from ?,spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT var0 ;
Show the name of colleges that have at least two players .,spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.COLLEGE HAVING COUNT( * ) >= var0 ;
What are the names of all colleges that have two or more players ?,spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY MATCH_SEASONalias0.COLLEGE HAVING COUNT( * ) >= var0 ;
Show the name of colleges that have at least two players in descending alphabetical order .,spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE HAVING COUNT( * ) >= var0 ORDER BY MATCH_SEASONalias0.COLLEGE DESC ;
"What are the names of colleges that have two or more players , listed in descending alphabetical order ?",spider,SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 GROUP BY COLLEGE HAVING COUNT( * ) >= var0 ORDER BY MATCH_SEASONalias0.COLLEGE DESC ;
What are the names of teams that do no have match season record ?,spider,SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 WHERE TEAMalias0.TEAM_ID NOT IN ( SELECT MATCH_SEASONalias0.TEAM FROM MATCH_SEASON AS MATCH_SEASONalias0 ) ;
Return the names of teams that have no match season record .,spider,SELECT TEAMalias0.NAME FROM TEAM AS TEAMalias0 WHERE TEAMalias0.TEAM_ID NOT IN ( SELECT MATCH_SEASONalias0.TEAM FROM MATCH_SEASON AS MATCH_SEASONalias0 ) ;
What are the names of countries that have both players with position forward and players with position defender ?,spider,"SELECT COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = ""var0"" INTERSECT SELECT COUNTRYalias1.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias1 JOIN MATCH_SEASON AS MATCH_SEASONalias1 ON MATCH_SEASONalias1.COUNTRY = COUNTRYalias1.COUNTRY_ID WHERE MATCH_SEASONalias1.POSITION = ""var1"" ;"
"Return the names of countries that have players that play the var0 position , as well as players who play the var1 position .",spider,"SELECT COUNTRYalias0.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias0 JOIN MATCH_SEASON AS MATCH_SEASONalias0 ON MATCH_SEASONalias0.COUNTRY = COUNTRYalias0.COUNTRY_ID WHERE MATCH_SEASONalias0.POSITION = ""var0"" INTERSECT SELECT COUNTRYalias1.COUNTRY_NAME FROM COUNTRY AS COUNTRYalias1 JOIN MATCH_SEASON AS MATCH_SEASONalias1 ON MATCH_SEASONalias1.COUNTRY = COUNTRYalias1.COUNTRY_ID WHERE MATCH_SEASONalias1.POSITION = ""var1"" ;"
Which college have both players with position midfielder and players with position defender ?,spider,"SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = ""var0"" INTERSECT SELECT MATCH_SEASONalias1.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias1 WHERE MATCH_SEASONalias1.POSITION = ""var1"" ;"
"Return the colleges that have players who play the var0 position , as well as players who play the var1 position .",spider,"SELECT MATCH_SEASONalias0.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias0 WHERE MATCH_SEASONalias0.POSITION = ""var0"" INTERSECT SELECT MATCH_SEASONalias1.COLLEGE FROM MATCH_SEASON AS MATCH_SEASONalias1 WHERE MATCH_SEASONalias1.POSITION = ""var1"" ;"
How many climbers are there ?,spider,SELECT COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 ;
Count the number of climbers .,spider,SELECT COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 ;
List the names of climbers in descending order of points .,spider,SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 ORDER BY CLIMBERalias0.POINTS DESC ;
"What are the names of the climbers , ordered by points descending ?",spider,SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 ORDER BY CLIMBERalias0.POINTS DESC ;
List the names of climbers whose country is not var0 .,spider,"SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY != ""var0"" ;"
What are the names of climbers who are not from the country of var0 ?,spider,"SELECT CLIMBERalias0.NAME FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY != ""var0"" ;"
What is the maximum point for climbers whose country is var0 ?,spider,"SELECT MAX( CLIMBERalias0.POINTS ) FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY = ""var0"" ;"
Return the maximum number of points for climbers from the var0 .,spider,"SELECT MAX( CLIMBERalias0.POINTS ) FROM CLIMBER AS CLIMBERalias0 WHERE CLIMBERalias0.COUNTRY = ""var0"" ;"
How many distinct countries are the climbers from ?,spider,SELECT COUNT( DISTINCT CLIMBERalias0.COUNTRY ) FROM CLIMBER AS CLIMBERalias0 ;
Count the number of different countries that climbers are from .,spider,SELECT COUNT( DISTINCT CLIMBERalias0.COUNTRY ) FROM CLIMBER AS CLIMBERalias0 ;
What are the names of mountains in ascending alphabetical order ?,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.NAME ASC ;
Give the names of mountains in alphabetical order .,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.NAME ASC ;
What are the countries of mountains with height bigger than var0 ?,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 ;
Return the countries of the mountains that have a height larger than var0 .,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 ;
What is the name of the highest mountain ?,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.HEIGHT DESC LIMIT 1 ;
Return the name of the mountain with the greatest height .,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.HEIGHT DESC LIMIT 1 ;
List the distinct ranges of the mountains with the top var0 prominence .,spider,SELECT DISTINCT MOUNTAINalias0.RANGE FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.PROMINENCE DESC LIMIT var0 ;
What are the different ranges of the var0 mountains with the highest prominence ?,spider,SELECT DISTINCT MOUNTAINalias0.RANGE FROM MOUNTAIN AS MOUNTAINalias0 ORDER BY MOUNTAINalias0.PROMINENCE DESC LIMIT var0 ;
Show names of climbers and the names of mountains they climb .,spider,"SELECT CLIMBERalias0.NAME , MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;"
What are the names of climbers and the corresponding names of mountains that they climb ?,spider,"SELECT CLIMBERalias0.NAME , MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;"
Show the names of climbers and the heights of mountains they climb .,spider,"SELECT CLIMBERalias0.NAME , MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;"
What are the names of climbers and the corresponding heights of the mountains that they climb ?,spider,"SELECT CLIMBERalias0.NAME , MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ;"
Show the height of the mountain climbed by the climber with the maximum points .,spider,SELECT MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ORDER BY CLIMBERalias0.POINTS DESC LIMIT 1 ;
What is the height of the mountain climbined by the climbing who had the most points ?,spider,SELECT MOUNTAINalias0.HEIGHT FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID ORDER BY CLIMBERalias0.POINTS DESC LIMIT 1 ;
"Show the distinct names of mountains climbed by climbers from country "" var0 "" .",spider,"SELECT DISTINCT MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID WHERE CLIMBERalias0.COUNTRY = ""var0"" ;"
What are the different names of mountains ascended by climbers from the country of var0 ?,spider,"SELECT DISTINCT MOUNTAINalias0.NAME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID WHERE CLIMBERalias0.COUNTRY = ""var0"" ;"
Show the times used by climbers to climb mountains in Country var0 .,spider,"SELECT CLIMBERalias0.TIME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID WHERE MOUNTAINalias0.COUNTRY = ""var0"" ;"
What are the times used by climbers who climbed mountains in the country of var0 ?,spider,"SELECT CLIMBERalias0.TIME FROM CLIMBER AS CLIMBERalias0 JOIN MOUNTAIN AS MOUNTAINalias0 ON MOUNTAINalias0.MOUNTAIN_ID = CLIMBERalias0.MOUNTAIN_ID WHERE MOUNTAINalias0.COUNTRY = ""var0"" ;"
Please show the countries and the number of climbers from each country .,spider,"SELECT CLIMBERalias0.COUNTRY , COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 GROUP BY CLIMBERalias0.COUNTRY ;"
How many climbers are from each country ?,spider,"SELECT CLIMBERalias0.COUNTRY , COUNT( CLIMBERalias0.* ) FROM CLIMBER AS CLIMBERalias0 GROUP BY CLIMBERalias0.COUNTRY ;"
List the countries that have more than one mountain .,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 GROUP BY MOUNTAINalias0.COUNTRY HAVING COUNT( * ) > var0 ;
Which countries have more than one mountain ?,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 GROUP BY MOUNTAINalias0.COUNTRY HAVING COUNT( * ) > var0 ;
List the names of mountains that do not have any climber .,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ID NOT IN ( SELECT CLIMBERalias0.MOUNTAIN_ID FROM CLIMBER AS CLIMBERalias0 ) ;
What are the names of countains that no climber has climbed ?,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ID NOT IN ( SELECT CLIMBERalias0.MOUNTAIN_ID FROM CLIMBER AS CLIMBERalias0 ) ;
Show the countries that have mountains with height more than var0 stories and mountains with height less than var1 .,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 INTERSECT SELECT MOUNTAINalias1.COUNTRY FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.HEIGHT < var1 ;
What are the countries that have both mountains that are higher than var0 and lower than var1 ?,spider,SELECT MOUNTAINalias0.COUNTRY FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 INTERSECT SELECT MOUNTAINalias1.COUNTRY FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.HEIGHT < var1 ;
Show the range that has the most number of mountains .,spider,SELECT MOUNTAINalias0.RANGE FROM MOUNTAIN AS MOUNTAINalias0 GROUP BY RANGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which range contains the most mountains ?,spider,SELECT MOUNTAINalias0.RANGE FROM MOUNTAIN AS MOUNTAINalias0 GROUP BY RANGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the names of mountains with height more than var0 or prominence more than var1 .,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 OR MOUNTAINalias0.PROMINENCE > var1 ;
What are the names of mountains that have a height of over var0 or a prominence of over var1 ?,spider,SELECT MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.HEIGHT > var0 OR MOUNTAINalias0.PROMINENCE > var1 ;
How many body builders are there ?,spider,SELECT COUNT( * ) FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
List the total scores of body builders in ascending order .,spider,SELECT BODY_BUILDERalias0.TOTAL FROM BODY_BUILDER AS BODY_BUILDERalias0 ORDER BY BODY_BUILDERalias0.TOTAL ASC ;
List the snatch score and clean jerk score of body builders in ascending order of snatch score .,spider,"SELECT BODY_BUILDERalias0.CLEAN_JERK , BODY_BUILDERalias0.SNATCH FROM BODY_BUILDER AS BODY_BUILDERalias0 ORDER BY BODY_BUILDERalias0.SNATCH ASC ;"
What is the average snatch score of body builders ?,spider,SELECT AVG( BODY_BUILDERalias0.SNATCH ) FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
What are the clean and jerk score of the body builder with the highest total score ?,spider,SELECT BODY_BUILDERalias0.CLEAN_JERK FROM BODY_BUILDER AS BODY_BUILDERalias0 ORDER BY BODY_BUILDERalias0.TOTAL DESC LIMIT 1 ;
What are the birthdays of people in ascending order of height ?,spider,SELECT PEOPLEalias0.BIRTH_DATE FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC ;
What are the names of body builders ?,spider,SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ;
What are the names of body builders whose total score is higher than var0 ?,spider,SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL > var0 ;
What is the name of the body builder with the greatest body weight ?,spider,SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
What are the birth date and birth place of the body builder with the highest total points ?,spider,"SELECT PEOPLEalias0.BIRTH_DATE , PEOPLEalias0.BIRTH_PLACE FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY BODY_BUILDERalias0.TOTAL DESC LIMIT 1 ;"
What are the heights of body builders with total score smaller than var0 ?,spider,SELECT PEOPLEalias0.HEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.TOTAL < var0 ;
What is the average total score of body builders with height bigger than var0 ?,spider,SELECT AVG( BODY_BUILDERalias0.TOTAL ) FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
What are the names of body builders in descending order of total scores ?,spider,SELECT PEOPLEalias0.NAME FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ORDER BY BODY_BUILDERalias0.TOTAL DESC ;
List each birth place along with the number of people from there .,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.BIRTH_PLACE ;"
What is the most common birth place of people ?,spider,SELECT PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY BIRTH_PLACE ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
What are the birth places that are shared by at least two people ?,spider,SELECT PEOPLEalias0.BIRTH_PLACE FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.BIRTH_PLACE HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
List the height and weight of people in descending order of height .,spider,"SELECT PEOPLEalias0.HEIGHT , PEOPLEalias0.WEIGHT FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT DESC ;"
Show all information about each body builder .,spider,SELECT * FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
List the names and origins of people who are not body builders .,spider,"SELECT PEOPLEalias0.BIRTH_PLACE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 EXCEPT SELECT PEOPLEalias1.BIRTH_PLACE , PEOPLEalias1.NAME FROM PEOPLE AS PEOPLEalias1 JOIN BODY_BUILDER AS BODY_BUILDERalias0 ON PEOPLEalias1.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID ;"
How many distinct birth places are there ?,spider,SELECT COUNT( DISTINCT PEOPLEalias0.BIRTH_PLACE ) FROM PEOPLE AS PEOPLEalias0 ;
How many persons are not body builders ?,spider,SELECT COUNT( PEOPLEalias0.* ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT BODY_BUILDERalias0.PEOPLE_ID FROM BODY_BUILDER AS BODY_BUILDERalias0 ) ;
List the weight of the body builders who have snatch score higher than var0 or have the height greater than var1 .,spider,SELECT PEOPLEalias0.WEIGHT FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE BODY_BUILDERalias0.SNATCH > var0 OR PEOPLEalias0.HEIGHT > var1 ;
"What are the total scores of the body builders whose birthday contains the string "" var0 "" ?",spider,"SELECT BODY_BUILDERalias0.TOTAL FROM BODY_BUILDER AS BODY_BUILDERalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = BODY_BUILDERalias0.PEOPLE_ID WHERE PEOPLEalias0.BIRTH_DATE LIKE ""var0"" ;"
What is the minimum snatch score ?,spider,SELECT MIN( BODY_BUILDERalias0.SNATCH ) FROM BODY_BUILDER AS BODY_BUILDERalias0 ;
How many elections are there ?,spider,SELECT COUNT( * ) FROM ELECTION AS ELECTIONalias0 ;
List the votes of elections in descending order .,spider,SELECT ELECTIONalias0.VOTES FROM ELECTION AS ELECTIONalias0 ORDER BY ELECTIONalias0.VOTES DESC ;
List the dates and vote percents of elections .,spider,"SELECT ELECTIONalias0.DATE , ELECTIONalias0.VOTE_PERCENT FROM ELECTION AS ELECTIONalias0 ;"
What are the minimum and maximum vote percents of elections ?,spider,"SELECT MAX( ELECTIONalias0.VOTE_PERCENT ) , MIN( ELECTIONalias0.VOTE_PERCENT ) FROM ELECTION AS ELECTIONalias0 ;"
What are the names and parties of representatives ?,spider,"SELECT REPRESENTATIVEalias0.NAME , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 ;"
"What are the names of representatives whose party is not "" var0 "" ?",spider,"SELECT REPRESENTATIVEalias0.NAME FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.PARTY != ""var0"" ;"
What are the life spans of representatives from var0 state or var1 state ?,spider,"SELECT REPRESENTATIVEalias0.LIFESPAN FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.STATE = ""var0"" OR REPRESENTATIVEalias0.STATE = ""var1"" ;"
What are the names of representatives and the dates of elections they participated in .,spider,"SELECT ELECTIONalias0.DATE , REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ;"
What are the names of representatives with more than var0 votes in election ?,spider,SELECT REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID WHERE ELECTIONalias0.VOTES > var0 ;
What are the names of representatives in descending order of votes ?,spider,SELECT REPRESENTATIVEalias0.NAME FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ORDER BY ELECTIONalias0.VOTES DESC ;
What is the party of the representative that has the smallest number of votes .,spider,SELECT REPRESENTATIVEalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ORDER BY ELECTIONalias0.VOTES ASC LIMIT 1 ;
What are the lifespans of representatives in descending order of vote percent ?,spider,SELECT REPRESENTATIVEalias0.LIFESPAN FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID ORDER BY ELECTIONalias0.VOTE_PERCENT DESC ;
"What is the average number of votes of representatives from party "" var0 "" ?",spider,"SELECT AVG( ELECTIONalias0.VOTES ) FROM ELECTION AS ELECTIONalias0 JOIN REPRESENTATIVE AS REPRESENTATIVEalias0 ON REPRESENTATIVEalias0.REPRESENTATIVE_ID = ELECTIONalias0.REPRESENTATIVE_ID WHERE REPRESENTATIVEalias0.PARTY = ""var0"" ;"
What are the different parties of representative ? Show the party name and the number of representatives in each party .,spider,"SELECT COUNT( REPRESENTATIVEalias0.* ) , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.PARTY ;"
What is the party that has the largest number of representatives ?,spider,"SELECT COUNT( REPRESENTATIVEalias0.* ) , REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY PARTY ORDER BY COUNT( REPRESENTATIVEalias0.* ) DESC LIMIT 1 ;"
What parties have at least three representatives ?,spider,SELECT REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.PARTY HAVING COUNT( REPRESENTATIVEalias0.* ) >= var0 ;
What states have at least two representatives ?,spider,SELECT REPRESENTATIVEalias0.STATE FROM REPRESENTATIVE AS REPRESENTATIVEalias0 GROUP BY REPRESENTATIVEalias0.STATE HAVING COUNT( REPRESENTATIVEalias0.* ) >= var0 ;
List the names of representatives that have not participated in elections listed here .,spider,SELECT REPRESENTATIVEalias0.NAME FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.REPRESENTATIVE_ID NOT IN ( SELECT ELECTIONalias0.REPRESENTATIVE_ID FROM ELECTION AS ELECTIONalias0 ) ;
Show the parties that have both representatives in var0 state and representatives in var1 state .,spider,"SELECT REPRESENTATIVEalias0.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias0 WHERE REPRESENTATIVEalias0.STATE = ""var0"" INTERSECT SELECT REPRESENTATIVEalias1.PARTY FROM REPRESENTATIVE AS REPRESENTATIVEalias1 WHERE REPRESENTATIVEalias1.STATE = ""var1"" ;"
How many distinct parties are there for representatives ?,spider,SELECT COUNT( DISTINCT REPRESENTATIVEalias0.PARTY ) FROM REPRESENTATIVE AS REPRESENTATIVEalias0 ;
How many apartment bookings are there in total ?,spider,SELECT COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;
Count the total number of apartment bookings .,spider,SELECT COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;
Show the start dates and end dates of all the apartment bookings .,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_END_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;"
What are the start date and end date of each apartment booking ?,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_END_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 ;"
Show all distinct building descriptions .,spider,SELECT DISTINCT APARTMENT_BUILDINGSalias0.BUILDING_DESCRIPTION FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 ;
Give me a list of all the distinct building descriptions .,spider,SELECT DISTINCT APARTMENT_BUILDINGSalias0.BUILDING_DESCRIPTION FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 ;
"Show the short names of the buildings managed by "" var0 "" .",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
"Which buildings does "" var0 "" manage ? Give me the short names of the buildings .",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
"Show the addresses and phones of all the buildings managed by "" var0 "" .",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS , APARTMENT_BUILDINGSalias0.BUILDING_PHONE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
"What are the address and phone number of the buildings managed by "" var0 "" ?",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS , APARTMENT_BUILDINGSalias0.BUILDING_PHONE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
"What are the building full names that contain the word "" var0 "" ?",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME LIKE ""var0"" ;"
"Find all the building full names containing the word "" var0 "" .",spider,"SELECT APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 WHERE APARTMENT_BUILDINGSalias0.BUILDING_FULL_NAME LIKE ""var0"" ;"
What is the minimum and maximum number of bathrooms of all the apartments ?,spider,"SELECT MAX( APARTMENTSalias0.BATHROOM_COUNT ) , MIN( APARTMENTSalias0.BATHROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 ;"
Give me the minimum and maximum bathroom count among all the apartments .,spider,"SELECT MAX( APARTMENTSalias0.BATHROOM_COUNT ) , MIN( APARTMENTSalias0.BATHROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 ;"
What is the average number of bedrooms of all apartments ?,spider,SELECT AVG( APARTMENTSalias0.BEDROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 ;
Find the average number of bedrooms of all the apartments .,spider,SELECT AVG( APARTMENTSalias0.BEDROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 ;
Return the apartment number and the number of rooms for each apartment .,spider,"SELECT APARTMENTSalias0.ROOM_COUNT , APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ;"
What are the apartment number and the room count of each apartment ?,spider,"SELECT APARTMENTSalias0.ROOM_COUNT , APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ;"
"What is the average number of rooms of apartments with type code "" var0 "" ?",spider,"SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = ""var0"" ;"
"Find the average room count of the apartments that have the "" var0 "" type code .",spider,"SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = ""var0"" ;"
"Return the apartment numbers of the apartments with type code "" var0 "" .",spider,"SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = ""var0"" ;"
"Which apartments have type code "" var0 "" ? Give me their apartment numbers .",spider,"SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_TYPE_CODE = ""var0"" ;"
Return the first names and last names of all guests,spider,"SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM GUESTS AS GUESTSalias0 ;"
What are the first names and last names of all the guests ?,spider,"SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM GUESTS AS GUESTSalias0 ;"
"Return the date of birth for all the guests with gender code "" var0 "" .",spider,"SELECT GUESTSalias0.DATE_OF_BIRTH FROM GUESTS AS GUESTSalias0 WHERE GUESTSalias0.GENDER_CODE = ""var0"" ;"
"What are dates of birth of all the guests whose gender is "" var0 "" ?",spider,"SELECT GUESTSalias0.DATE_OF_BIRTH FROM GUESTS AS GUESTSalias0 WHERE GUESTSalias0.GENDER_CODE = ""var0"" ;"
"Show the apartment numbers , start dates , and end dates of all the apartment bookings .",spider,"SELECT APARTMENTSalias0.APT_NUMBER , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID ;"
"What are the apartment number , start date , and end date of each apartment booking ?",spider,"SELECT APARTMENTSalias0.APT_NUMBER , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID ;"
"What are the booking start and end dates of the apartments with type code "" var0 "" ?",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_TYPE_CODE = ""var0"" ;"
"Return the booking start date and end date for the apartments that have type code "" var0 "" .",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_TYPE_CODE = ""var0"" ;"
What are the booking start and end dates of the apartments with more than var0 bedrooms ?,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;"
Find the booking start date and end date for the apartments that have more than two bedrooms .,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;"
"What is the booking status code of the apartment with apartment number "" var0 "" ?",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_NUMBER = ""var0"" ;"
"Tell me the booking status code for the apartment with number "" var0 "" .",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.APT_NUMBER = ""var0"" ;"
"Show the distinct apartment numbers of the apartments that have bookings with status code "" var0 "" .",spider,"SELECT DISTINCT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
"Which apartments have bookings with status code "" var0 "" ? Return their apartment numbers .",spider,"SELECT DISTINCT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
"Show the average room count of the apartments that have booking status code "" var0 "" .",spider,"SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
"What is the average room count of the apartments whose booking status code is "" var0 "" ?",spider,"SELECT AVG( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
"Show the guest first names , start dates , and end dates of all the apartment bookings .",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , GUESTSalias0.GUEST_FIRST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID ;"
"What are the guest first name , start date , and end date of each apartment booking ?",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , GUESTSalias0.GUEST_FIRST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID ;"
"Show the start dates and end dates of all the apartment bookings made by guests with gender code "" var0 "" .",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE GUESTSalias0.GENDER_CODE = ""var0"" ;"
"What are the start date and end date of the apartment bookings made by female guests (gender code "" var0"") ?",spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_START_DATE , APARTMENT_BOOKINGSalias0.BOOKING_START_DATE FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE GUESTSalias0.GENDER_CODE = ""var0"" ;"
"Show the first names and last names of all the guests that have apartment bookings with status code "" var0 "" .",spider,"SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
"Which guests have apartment bookings with status code "" var0 "" ? Return their first names and last names .",spider,"SELECT GUESTSalias0.GUEST_FIRST_NAME , GUESTSalias0.GUEST_LAST_NAME FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN GUESTS AS GUESTSalias0 ON GUESTSalias0.GUEST_ID = APARTMENT_BOOKINGSalias0.GUEST_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" ;"
Show the facility codes of apartments with more than var0 bedrooms .,spider,SELECT APARTMENT_FACILITIESalias0.FACILITY_CODE FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;
What are the facility codes of the apartments with more than four bedrooms ?,spider,SELECT APARTMENT_FACILITIESalias0.FACILITY_CODE FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENTSalias0.BEDROOM_COUNT > var0 ;
"Show the total number of rooms of all apartments with facility code "" var0 "" .",spider,"SELECT SUM( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_FACILITIESalias0.FACILITY_CODE = ""var0"" ;"
"Find the total number of rooms in the apartments that have facility code "" var0 "" .",spider,"SELECT SUM( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_FACILITIESalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_FACILITIESalias0.FACILITY_CODE = ""var0"" ;"
"Show the total number of rooms of the apartments in the building with short name "" var0 "" .",spider,"SELECT SUM( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME = ""var0"" ;"
"How many rooms in total are there in the apartments in the building with short name "" var0 "" ?",spider,"SELECT SUM( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_SHORT_NAME = ""var0"" ;"
Show the addresses of the buildings that have apartments with more than var0 bathrooms .,spider,SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENTSalias0.BATHROOM_COUNT > var0 ;
Which buildings have apartments that have more than two bathrooms ? Give me the addresses of the buildings .,spider,SELECT APARTMENT_BUILDINGSalias0.BUILDING_ADDRESS FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENTSalias0.BATHROOM_COUNT > var0 ;
"Show the apartment type codes and apartment numbers in the buildings managed by "" var0 "" .",spider,"SELECT APARTMENTSalias0.APT_NUMBER , APARTMENTSalias0.APT_TYPE_CODE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
"What apartment type codes and apartment numbers do the buildings managed by "" var0 "" have ?",spider,"SELECT APARTMENTSalias0.APT_NUMBER , APARTMENTSalias0.APT_TYPE_CODE FROM APARTMENT_BUILDINGS AS APARTMENT_BUILDINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BUILDINGSalias0.BUILDING_ID = APARTMENTSalias0.BUILDING_ID WHERE APARTMENT_BUILDINGSalias0.BUILDING_MANAGER = ""var0"" ;"
Show the booking status code and the corresponding number of bookings .,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE , COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 GROUP BY APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE ;"
How many bookings does each booking status have ? List the booking status code and the number of corresponding bookings .,spider,"SELECT APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE , COUNT( * ) FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 GROUP BY APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE ;"
Return all the apartment numbers sorted by the room count in ascending order .,spider,SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.ROOM_COUNT ASC ;
Sort the apartment numbers in ascending order of room count .,spider,SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.ROOM_COUNT ASC ;
Return the apartment number with the largest number of bedrooms .,spider,SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.BEDROOM_COUNT DESC LIMIT 1 ;
What is the apartment number of the apartment with the most beds ?,spider,SELECT APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 ORDER BY APARTMENTSalias0.BEDROOM_COUNT DESC LIMIT 1 ;
Show the apartment type codes and the corresponding number of apartments sorted by the number of apartments in ascending order .,spider,"SELECT APT_TYPE_CODE , COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) ASC ;"
"Return each apartment type code with the number of apartments having that apartment type , in ascending order of the number of apartments .",spider,"SELECT APT_TYPE_CODE , COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) ASC ;"
Show the top var0 apartment type codes sorted by the average number of rooms in descending order .,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY AVG( APARTMENTSalias0.ROOM_COUNT ) DESC LIMIT var0 ;
What are the top three apartment types in terms of the average room count ? Give me the,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY AVG( APARTMENTSalias0.ROOM_COUNT ) DESC LIMIT var0 ;
"Show the apartment type code that has the largest number of total rooms , together with the number of bathrooms and number of bedrooms .",spider,"SELECT APARTMENTSalias0.BATHROOM_COUNT , APARTMENTSalias0.BEDROOM_COUNT , APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY SUM( APARTMENTSalias0.ROOM_COUNT ) DESC LIMIT 1 ;"
"Which apartment type has the largest number of total rooms ? Return the apartment type code , its number of bathrooms and number of bedrooms .",spider,"SELECT APARTMENTSalias0.BATHROOM_COUNT , APARTMENTSalias0.BEDROOM_COUNT , APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY SUM( APARTMENTSalias0.ROOM_COUNT ) DESC LIMIT 1 ;"
Show the most common apartment type code .,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which apartment type code appears the most often ?,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the most common apartment type code among apartments with more than var0 bathroom .,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 WHERE BATHROOM_COUNT > var0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT var1 ;
Which apartment type code is the most common among apartments with more than one bathroom ?,spider,SELECT APT_TYPE_CODE FROM APARTMENTS AS APARTMENTSalias0 WHERE BATHROOM_COUNT > var0 GROUP BY APT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Show each apartment type code , and the maximum and minimum number of rooms for each type .",spider,"SELECT APT_TYPE_CODE , MAX( APARTMENTSalias0.ROOM_COUNT ) , MIN( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ;"
Return each apartment type code along with the maximum and minimum number of rooms among each type .,spider,"SELECT APT_TYPE_CODE , MAX( APARTMENTSalias0.ROOM_COUNT ) , MIN( APARTMENTSalias0.ROOM_COUNT ) FROM APARTMENTS AS APARTMENTSalias0 GROUP BY APT_TYPE_CODE ;"
Show each gender code and the corresponding count of guests sorted by the count in descending order .,spider,"SELECT COUNT( * ) , GUESTSalias0.GENDER_CODE FROM GUESTS AS GUESTSalias0 GROUP BY GENDER_CODE ORDER BY COUNT( * ) DESC ;"
Sort the gender codes in descending order of their corresponding number of guests . Return both the gender codes and counts .,spider,"SELECT COUNT( * ) , GUESTSalias0.GENDER_CODE FROM GUESTS AS GUESTSalias0 GROUP BY GENDER_CODE ORDER BY COUNT( * ) DESC ;"
How many apartments do not have any facility ?,spider,SELECT COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_ID NOT IN ( SELECT APT_ID FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 ) ;
Find the number of apartments that have no facility .,spider,SELECT COUNT( * ) FROM APARTMENTS AS APARTMENTSalias0 WHERE APT_ID NOT IN ( SELECT APT_ID FROM APARTMENT_FACILITIES AS APARTMENT_FACILITIESalias0 ) ;
"Show the apartment numbers of apartments with bookings that have status code both "" var1 "" and "" var0 """,spider,"SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias1 JOIN APARTMENTS AS APARTMENTSalias1 ON APARTMENT_BOOKINGSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE APARTMENT_BOOKINGSalias1.BOOKING_STATUS_CODE = ""var1"" ;"
"Which apartments have bookings with both status codes "" var1 "" and "" var0 "" ? Give me the apartment numbers .",spider,"SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias0 JOIN APARTMENTS AS APARTMENTSalias0 ON APARTMENT_BOOKINGSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE APARTMENT_BOOKINGSalias0.BOOKING_STATUS_CODE = ""var0"" INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENT_BOOKINGS AS APARTMENT_BOOKINGSalias1 JOIN APARTMENTS AS APARTMENTSalias1 ON APARTMENT_BOOKINGSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE APARTMENT_BOOKINGSalias1.BOOKING_STATUS_CODE = ""var1"" ;"
Show the apartment numbers of apartments with unit status availability of both var0 and var1 .,spider,SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias0 ON VIEW_UNIT_STATUSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE VIEW_UNIT_STATUSalias0.AVAILABLE_YN = var0 INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias1 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias1 ON VIEW_UNIT_STATUSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE VIEW_UNIT_STATUSalias1.AVAILABLE_YN = var1 ;
Which apartments have unit status availability of both var0 and var1 ? Return their apartment numbers .,spider,SELECT APARTMENTSalias0.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias0 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias0 ON VIEW_UNIT_STATUSalias0.APT_ID = APARTMENTSalias0.APT_ID WHERE VIEW_UNIT_STATUSalias0.AVAILABLE_YN = var0 INTERSECT SELECT APARTMENTSalias1.APT_NUMBER FROM APARTMENTS AS APARTMENTSalias1 JOIN VIEW_UNIT_STATUS AS VIEW_UNIT_STATUSalias1 ON VIEW_UNIT_STATUSalias1.APT_ID = APARTMENTSalias1.APT_ID WHERE VIEW_UNIT_STATUSalias1.AVAILABLE_YN = var1 ;
How many games are held after season var0 ?,spider,SELECT COUNT( * ) FROM GAME AS GAMEalias0 WHERE GAMEalias0.SEASON > var0 ;
List the dates of games by the home team name in descending order .,spider,SELECT GAMEalias0.DATE FROM GAME AS GAMEalias0 ORDER BY GAMEalias0.HOME_TEAM DESC ;
"List the season , home team , away team of all the games .",spider,"SELECT GAMEalias0.AWAY_TEAM , GAMEalias0.HOME_TEAM , GAMEalias0.SEASON FROM GAME AS GAMEalias0 ;"
"What are the maximum , minimum and average home games each stadium held ?",spider,"SELECT AVG( STADIUMalias0.HOME_GAMES ) , MAX( STADIUMalias0.HOME_GAMES ) , MIN( STADIUMalias0.HOME_GAMES ) FROM STADIUM AS STADIUMalias0 ;"
What is the average attendance of stadiums with capacity percentage higher than var0% ?,spider,SELECT STADIUMalias0.AVERAGE_ATTENDANCE FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY_PERCENTAGE > var0 ;
"What are the player name , number of matches , and information source for players who do not suffer from injury of ' var0 ' ?",spider,"SELECT INJURY_ACCIDENTalias0.NUMBER_OF_MATCHES , INJURY_ACCIDENTalias0.PLAYER , INJURY_ACCIDENTalias0.SOURCE FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 WHERE INJURY_ACCIDENTalias0.INJURY != ""var0"" ;"
What is the season of the game which causes the player ' var0 ' to get injured ?,spider,"SELECT GAMEalias0.SEASON FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE INJURY_ACCIDENTalias0.PLAYER = ""var0"" ;"
"What are the ids , scores , and dates of the games which caused at least two injury accidents ?",spider,"SELECT GAMEalias0.DATE , GAMEalias0.ID , GAMEalias0.SCORE FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY GAMEalias0.ID HAVING COUNT( INJURY_ACCIDENTalias0.* ) >= var0 ;"
What are the id and name of the stadium where the most injury accidents happened ?,spider,"SELECT STADIUMalias0.ID , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN GAME AS GAMEalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY STADIUMalias0.ID ORDER BY COUNT( INJURY_ACCIDENTalias0.* ) DESC LIMIT 1 ;"
Find the id and name of the stadium where the largest number of injury accidents occurred .,spider,"SELECT STADIUMalias0.ID , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN GAME AS GAMEalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID GROUP BY STADIUMalias0.ID ORDER BY COUNT( INJURY_ACCIDENTalias0.* ) DESC LIMIT 1 ;"
In which season and which stadium did any player have an injury of ' var0 ' or ' var1 ' ?,spider,"SELECT GAMEalias0.SEASON , STADIUMalias0.NAME FROM GAME AS GAMEalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE INJURY_ACCIDENTalias0.INJURY = ""var0"" OR INJURY_ACCIDENTalias0.INJURY = ""var1"" ;"
How many different kinds of information sources are there for injury accidents ?,spider,SELECT COUNT( DISTINCT INJURY_ACCIDENTalias0.SOURCE ) FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ;
How many games are free of injury accidents ?,spider,SELECT COUNT( * ) FROM GAME AS GAMEalias0 WHERE GAMEalias0.ID NOT IN ( SELECT INJURY_ACCIDENTalias0.GAME_ID FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ) ;
How many distinct kinds of injuries happened after season var0 ?,spider,SELECT COUNT( DISTINCT INJURY_ACCIDENTalias0.INJURY ) FROM INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 JOIN GAME AS GAMEalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE GAMEalias0.SEASON > var0 ;
List the name of the stadium where both the player ' var0 ' and the player ' var1 ' got injured .,spider,"SELECT STADIUMalias0.NAME FROM GAME AS GAMEalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID WHERE INJURY_ACCIDENTalias0.PLAYER = ""var0"" INTERSECT SELECT STADIUMalias1.NAME FROM GAME AS GAMEalias1 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.ID = GAMEalias1.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias1 ON INJURY_ACCIDENTalias1.GAME_ID = GAMEalias1.ID WHERE INJURY_ACCIDENTalias1.PLAYER = ""var1"" ;"
"Show the name , average attendance , total attendance for stadiums where no accidents happened .",spider,"SELECT STADIUMalias0.AVERAGE_ATTENDANCE , STADIUMalias0.NAME , STADIUMalias0.TOTAL_ATTENDANCE FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.AVERAGE_ATTENDANCE , STADIUMalias1.NAME , STADIUMalias1.TOTAL_ATTENDANCE FROM GAME AS GAMEalias0 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.ID = GAMEalias0.STADIUM_ID JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID ;"
"Which stadium name contains the substring "" var0 "" ?",spider,"SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.NAME LIKE ""var0"" ;"
How many games has each stadium held ?,spider,"SELECT COUNT( * ) , STADIUMalias0.ID FROM STADIUM AS STADIUMalias0 JOIN GAME AS GAMEalias0 ON STADIUMalias0.ID = GAMEalias0.STADIUM_ID GROUP BY STADIUMalias0.ID ;"
"For each injury accident , find the date of the game and the name of the injured player in the game , and sort the results in descending order of game season .",spider,"SELECT GAMEalias0.DATE , INJURY_ACCIDENTalias0.PLAYER FROM GAME AS GAMEalias0 JOIN INJURY_ACCIDENT AS INJURY_ACCIDENTalias0 ON INJURY_ACCIDENTalias0.GAME_ID = GAMEalias0.ID ORDER BY GAMEalias0.SEASON DESC ;"
List all country and league names .,spider,"SELECT COUNTRYalias0.NAME , LEAGUEalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN LEAGUE AS LEAGUEalias0 ON LEAGUEalias0.COUNTRY_ID = COUNTRYalias0.ID ;"
How many leagues are there in var0 ?,spider,"SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 JOIN LEAGUE AS LEAGUEalias0 ON LEAGUEalias0.COUNTRY_ID = COUNTRYalias0.ID WHERE COUNTRYalias0.NAME = ""var0"" ;"
What is the average weight of all players ?,spider,SELECT AVG( PLAYERalias0.WEIGHT ) FROM PLAYER AS PLAYERalias0 ;
What is the maximum and minimum height of all players ?,spider,"SELECT MAX( PLAYERalias0.WEIGHT ) , MIN( PLAYERalias0.WEIGHT ) FROM PLAYER AS PLAYERalias0 ;"
List all player names who have an overall rating higher than the average .,spider,SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING > ( SELECT AVG( PLAYER_ATTRIBUTESalias1.OVERALL_RATING ) FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias1 ) ;
What are the names of players who have the best dribbling ?,spider,SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.DRIBBLING = ( SELECT MAX( PLAYER_ATTRIBUTESalias1.OVERALL_RATING ) FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias1 ) ;
List the names of all players who have a crossing score higher than var0 and prefer their var1 foot .,spider,"SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.CROSSING > var0 AND PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = ""var1"" ;"
List the names of all var0-footed players who have overall rating between var1 and var2 .,spider,"SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING <= var2 AND PLAYER_ATTRIBUTESalias0.OVERALL_RATING >= var1 AND PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = ""var0"" ;"
What is the average rating for right-footed players and left-footed players ?,spider,"SELECT AVG( PLAYER_ATTRIBUTESalias0.OVERALL_RATING ) , PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 GROUP BY PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT ;"
"Of all players with an overall rating greater than var0 , how many are right-footed and left-footed ?",spider,"SELECT COUNT( * ) , PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 WHERE OVERALL_RATING > var0 GROUP BY PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT ;"
List all of the player ids with a height of at least var0cm and an overall rating higher than var1 .,spider,SELECT PLAYERalias0.PLAYER_API_ID FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.HEIGHT >= var0 INTERSECT SELECT PLAYER_ATTRIBUTESalias0.PLAYER_API_ID FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 WHERE PLAYER_ATTRIBUTESalias0.OVERALL_RATING > var1 ;
List all of the ids for var2-footed players with a height between var0cm and var1cm .,spider,"SELECT PLAYERalias0.PLAYER_API_ID FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.HEIGHT <= var1 INTERSECT SELECT PLAYER_ATTRIBUTESalias0.PLAYER_API_ID FROM PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 WHERE PLAYER_ATTRIBUTESalias0.PREFERRED_FOOT = ""var2"" AND PLAYERalias0.HEIGHT >= var0 ;"
Who are the top var0 players in terms of overall rating ?,spider,SELECT DISTINCT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTESalias0.OVERALL_RATING DESC LIMIT var0 ;
List the names and birthdays of the top five players in terms of potential .,spider,"SELECT DISTINCT PLAYERalias0.BIRTHDAY , PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 JOIN PLAYER_ATTRIBUTES AS PLAYER_ATTRIBUTESalias0 ON PLAYERalias0.PLAYER_API_ID = PLAYER_ATTRIBUTESalias0.PLAYER_API_ID ORDER BY PLAYER_ATTRIBUTESalias0.POTENTIAL DESC LIMIT var0 ;"
How many performances are there ?,spider,SELECT COUNT( * ) FROM PERFORMANCE AS PERFORMANCEalias0 ;
List the hosts of performances in ascending order of attendance .,spider,SELECT PERFORMANCEalias0.HOST FROM PERFORMANCE AS PERFORMANCEalias0 ORDER BY PERFORMANCEalias0.ATTENDANCE ASC ;
What are the dates and locations of performances ?,spider,"SELECT PERFORMANCEalias0.DATE , PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 ;"
"Show the attendances of the performances at location "" var0 "" or "" var1 """,spider,"SELECT PERFORMANCEalias0.ATTENDANCE FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.LOCATION = ""var0"" OR PERFORMANCEalias0.LOCATION = ""var1"" ;"
What is the average number of attendees for performances ?,spider,SELECT AVG( PERFORMANCEalias0.ATTENDANCE ) FROM PERFORMANCE AS PERFORMANCEalias0 ;
What is the date of the performance with the highest number of attendees ?,spider,SELECT PERFORMANCEalias0.DATE FROM PERFORMANCE AS PERFORMANCEalias0 ORDER BY PERFORMANCEalias0.ATTENDANCE DESC LIMIT 1 ;
Show different locations and the number of performances at each location .,spider,"SELECT COUNT( * ) , PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 GROUP BY PERFORMANCEalias0.LOCATION ;"
Show the most common location of performances .,spider,SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the locations that have at least two performances .,spider,SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 GROUP BY PERFORMANCEalias0.LOCATION HAVING COUNT( * ) >= var0 ;
Show the locations that have both performances with more than var0 attendees and performances with less than var1 attendees .,spider,SELECT PERFORMANCEalias0.LOCATION FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.ATTENDANCE > var0 INTERSECT SELECT PERFORMANCEalias1.LOCATION FROM PERFORMANCE AS PERFORMANCEalias1 WHERE PERFORMANCEalias1.ATTENDANCE < var1 ;
Show the names of members and the location of the performances they attended .,spider,"SELECT MEMBERalias0.NAME , PERFORMANCEalias0.LOCATION FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ;"
Show the names of members and the location of performances they attended in ascending alphabetical order of their names .,spider,"SELECT MEMBERalias0.NAME , PERFORMANCEalias0.LOCATION FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ORDER BY MEMBERalias0.NAME ASC ;"
"Show the dates of performances with attending members whose roles are "" var0 "" .",spider,"SELECT PERFORMANCEalias0.DATE FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID WHERE MEMBERalias0.ROLE = ""var0"" ;"
Show the names of members and the dates of performances they attended in descending order of attendance of the performances .,spider,"SELECT MEMBERalias0.NAME , PERFORMANCEalias0.DATE FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBER_ATTENDANCEalias0.MEMBER_ID JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.PERFORMANCE_ID = MEMBER_ATTENDANCEalias0.PERFORMANCE_ID ORDER BY PERFORMANCEalias0.ATTENDANCE DESC ;"
List the names of members who did not attend any performance .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT MEMBER_ATTENDANCEalias0.MEMBER_ID FROM MEMBER_ATTENDANCE AS MEMBER_ATTENDANCEalias0 ) ;
Find the buildings which have rooms with capacity more than var0 .,spider,SELECT DISTINCT CLASSROOMalias0.BUILDING FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.CAPACITY > var0 ;
What are the distinct buildings with capacities of greater than var0 ?,spider,SELECT DISTINCT CLASSROOMalias0.BUILDING FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.CAPACITY > var0 ;
Count the number of rooms that are not in the var0 building .,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING != ""var0"" ;"
How many classrooms are not in var0 ?,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING != ""var0"" ;"
What is the name and building of the departments whose budget is more than the average budget ?,spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;"
Give the name and building of the departments with greater than average budget .,spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;"
Find the room number of the rooms which can sit var0 to var1 students and their buildings .,spider,"SELECT CLASSROOMalias0.BUILDING , CLASSROOMalias0.ROOM_NUMBER FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.CAPACITY BETWEEN var0 AND var1 ;"
What are the room numbers and corresponding buildings for classrooms which can seat between var0 to var1 students ?,spider,"SELECT CLASSROOMalias0.BUILDING , CLASSROOMalias0.ROOM_NUMBER FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.CAPACITY BETWEEN var0 AND var1 ;"
Find the name and building of the department with the highest budget .,spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;"
What is the department name and corresponding building for the department with the greatest budget ?,spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;"
What is the name of the student who has the highest total credits in the var0 department .,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE DEPT_NAME = ""var0"" ORDER BY TOT_CRED DESC LIMIT 1 ;"
Give the name of the student in the var0 department with the most credits .,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE DEPT_NAME = ""var0"" ORDER BY TOT_CRED DESC LIMIT 1 ;"
How many rooms does the var0 building have ?,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = ""var0"" ;"
Count the number of classrooms in var0 .,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = ""var0"" ;"
How many students have advisors ?,spider,SELECT COUNT( DISTINCT S_ID ) FROM ADVISOR AS ADVISORalias0 ;
Count the number of students who have advisors .,spider,SELECT COUNT( DISTINCT S_ID ) FROM ADVISOR AS ADVISORalias0 ;
How many departments offer courses ?,spider,SELECT COUNT( DISTINCT DEPT_NAME ) FROM COURSE AS COURSEalias0 ;
Count the number of departments which offer courses .,spider,SELECT COUNT( DISTINCT DEPT_NAME ) FROM COURSE AS COURSEalias0 ;
How many different courses offered by var0 department ?,spider,"SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" ;"
Count the number of courses in the var0 department .,spider,"SELECT COUNT( DISTINCT COURSEalias0.COURSE_ID ) FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" ;"
Find the title of courses that have two prerequisites ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID GROUP BY DERIVED_TABLEalias0.COURSE_ID HAVING COUNT( * ) = var0 ;
What are the titles for courses with two prerequisites ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID GROUP BY DERIVED_TABLEalias0.COURSE_ID HAVING COUNT( * ) = var0 ;
"Find the title , credit , and department name of courses that have more than one prerequisites ?",spider,"SELECT COURSEalias0.CREDITS , COURSEalias0.DEPT_NAME , COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID GROUP BY DERIVED_TABLEalias0.COURSE_ID HAVING COUNT( * ) > var0 ;"
"What is the title , credit value , and department name for courses with more than one prerequisite ?",spider,"SELECT COURSEalias0.CREDITS , COURSEalias0.DEPT_NAME , COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID GROUP BY DERIVED_TABLEalias0.COURSE_ID HAVING COUNT( * ) > var0 ;"
How many courses that do not have prerequisite ?,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
Count the number of courses without prerequisites .,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
Find the name of the courses that do not have any prerequisite ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
What are the titles of courses without prerequisites ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
Find the name of the courses that do not have any prerequisite ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
What are the names of courses without prerequisites ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID NOT IN ( SELECT COURSE_ID FROM PREREQ ) ;
How many different instructors have taught some course ?,spider,SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 ;
Count the number of distinct instructors who have taught a course .,spider,SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 ;
Find the total budgets of the var0 or var1 department .,spider,"SELECT SUM( DEPARTMENTalias0.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" OR DEPT_NAME = ""var1"" ;"
What is the sum of budgets of the var0 and var1 departments ?,spider,"SELECT SUM( DEPARTMENTalias0.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" OR DEPT_NAME = ""var1"" ;"
Find the department name of the instructor whose name contains ' var0 ' .,spider,"SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE ""var0"" ;"
What is the name of the department with an instructure who has a name like ' var0 ' ?,spider,"SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE ""var0"" ;"
How many rooms whose capacity is less than var1 does the var0 building have ?,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = ""var0"" AND CLASSROOMalias0.CAPACITY < var1 ;"
Count the number of rooms in var0 with capacity lower than var1 .,spider,"SELECT COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CLASSROOMalias0.BUILDING = ""var0"" AND CLASSROOMalias0.CAPACITY < var1 ;"
Find the name and budget of departments whose budgets are more than the average budget .,spider,"SELECT DEPARTMENTalias0.BUDGET , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;"
What are the names and budgets of departments with budgets greater than the average ?,spider,"SELECT DEPARTMENTalias0.BUDGET , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUDGET > ( SELECT AVG( DEPARTMENTalias1.BUDGET ) FROM DEPARTMENT AS DEPARTMENTalias1 ) ;"
what is the name of the instructor who is in var0 department and earns the lowest salary ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" ORDER BY INSTRUCTORalias0.SALARY LIMIT 1 ;"
Give the name of the lowest earning instructor in the var0 department .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" ORDER BY INSTRUCTORalias0.SALARY LIMIT 1 ;"
Find the title of course that is provided by both var0 and var1 departments .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" INTERSECT SELECT COURSEalias1.TITLE FROM COURSE AS COURSEalias1 WHERE DEPT_NAME = ""var1"" ;"
What is the title of a course that is listed in both the var0 and var1 departments ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" INTERSECT SELECT COURSEalias1.TITLE FROM COURSE AS COURSEalias1 WHERE DEPT_NAME = ""var1"" ;"
Find the title of course that is provided by var0 but not var1 departments .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" EXCEPT SELECT COURSEalias1.TITLE FROM COURSE AS COURSEalias1 WHERE DEPT_NAME = ""var1"" ;"
What are the titles of courses that are in the var0 department but not the var1 department ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE DEPT_NAME = ""var0"" EXCEPT SELECT COURSEalias1.TITLE FROM COURSE AS COURSEalias1 WHERE DEPT_NAME = ""var1"" ;"
Find the id of instructors who taught a class in var0 var1 but not in var2 var3 .,spider,"SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" AND TEACHESalias0.YEAR = var1 EXCEPT SELECT TEACHESalias1.ID FROM TEACHES AS TEACHESalias1 WHERE TEACHESalias1.SEMESTER = ""var2"" AND TEACHESalias1.YEAR = var3 ;"
What are the ids of instructors who taught in the var0 of var1 but not in the var2 of var3 ?,spider,"SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" AND TEACHESalias0.YEAR = var1 EXCEPT SELECT TEACHESalias1.ID FROM TEACHES AS TEACHESalias1 WHERE TEACHESalias1.SEMESTER = ""var2"" AND TEACHESalias1.YEAR = var3 ;"
Find the name of students who took any class in the years of var0 and var1 .,spider,SELECT DISTINCT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE YEAR = var0 OR YEAR = var1 ;
What are the names of the students who took classes in var0 or var1 ?,spider,SELECT DISTINCT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE YEAR = var0 OR YEAR = var1 ;
Find the names of the top var0 departments that provide the largest amount of courses ?,spider,SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT var0 ;
What are the names of the var0 departments with the most courses ?,spider,SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT var0 ;
Find the name of the department that offers the highest total credits ?,spider,SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY SUM( COURSEalias0.CREDITS ) DESC LIMIT 1 ;
What is the name of the department with the most credits ?,spider,SELECT DEPT_NAME FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ORDER BY SUM( COURSEalias0.CREDITS ) DESC LIMIT 1 ;
List the names of all courses ordered by their titles and credits .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.TITLE , COURSEalias0.CREDITS ;"
"Given the titles of all courses , in order of titles and credits .",spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.TITLE , COURSEalias0.CREDITS ;"
Which department has the lowest budget ?,spider,SELECT DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET LIMIT 1 ;
Give the name of the department with the lowest budget .,spider,SELECT DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET LIMIT 1 ;
List the names and buildings of all departments sorted by the budget from large to small .,spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET DESC ;"
"What are the names and buildings of the deparments , sorted by budget descending ?",spider,"SELECT DEPARTMENTalias0.BUILDING , DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPARTMENTalias0.BUDGET DESC ;"
Who is the instructor with the highest salary ?,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY DESC LIMIT 1 ;
Give the name of the highest paid instructor .,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY DESC LIMIT 1 ;
List the information of all instructors ordered by their salary in ascending order .,spider,SELECT * FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY ;
"Give all information regarding instructors , in order of salary from least to greatest .",spider,SELECT * FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.SALARY ;
Find the name of the students and their department names sorted by their total credits in ascending order .,spider,"SELECT DEPT_NAME , STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 ORDER BY TOT_CRED ;"
"What are the names of students and their respective departments , ordered by number of credits from least to greatest ?",spider,"SELECT DEPT_NAME , STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 ORDER BY TOT_CRED ;"
list in alphabetic order all course names and their instructors ' names in year var0 .,spider,"SELECT COURSEalias0.TITLE , INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID JOIN INSTRUCTOR AS INSTRUCTORalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE YEAR = var0 ORDER BY COURSEalias0.TITLE ;"
"Show all titles and their instructors ' names for courses in var0 , in alphabetical order by title .",spider,"SELECT COURSEalias0.TITLE , INSTRUCTORalias0.NAME FROM COURSE AS COURSEalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID JOIN INSTRUCTOR AS INSTRUCTORalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE YEAR = var0 ORDER BY COURSEalias0.TITLE ;"
Find the name of instructors who are advising more than one student .,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN ADVISOR AS ADVISORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID GROUP BY ADVISORalias0.I_ID HAVING COUNT( * ) > var0 ;
What are the names of instructors who advise more than one student ?,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN ADVISOR AS ADVISORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID GROUP BY ADVISORalias0.I_ID HAVING COUNT( * ) > var0 ;
Find the name of the students who have more than one advisor ?,spider,SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN ADVISOR AS ADVISORalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID GROUP BY ADVISORalias0.S_ID HAVING COUNT( * ) > var0 ;
What are the names of students who have more than one advisor ?,spider,SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN ADVISOR AS ADVISORalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID GROUP BY ADVISORalias0.S_ID HAVING COUNT( * ) > var0 ;
Find the number of rooms with more than var0 capacity for each building .,spider,"SELECT CLASSROOMalias0.BUILDING , COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CAPACITY > var0 GROUP BY CLASSROOMalias0.BUILDING ;"
How many rooms in each building have a capacity of over var0 ?,spider,"SELECT CLASSROOMalias0.BUILDING , COUNT( * ) FROM CLASSROOM AS CLASSROOMalias0 WHERE CAPACITY > var0 GROUP BY CLASSROOMalias0.BUILDING ;"
Find the maximum and average capacity among rooms in each building .,spider,"SELECT AVG( CLASSROOMalias0.CAPACITY ) , CLASSROOMalias0.BUILDING , MAX( CLASSROOMalias0.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias0 GROUP BY CLASSROOMalias0.BUILDING ;"
What are the greatest and average capacity for rooms in each building ?,spider,"SELECT AVG( CLASSROOMalias0.CAPACITY ) , CLASSROOMalias0.BUILDING , MAX( CLASSROOMalias0.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias0 GROUP BY CLASSROOMalias0.BUILDING ;"
Find the title of the course that is offered by more than one department .,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 GROUP BY COURSEalias0.TITLE HAVING COUNT( * ) > var0 ;
What are the titles of courses that are offered in more than one department ?,spider,SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 GROUP BY COURSEalias0.TITLE HAVING COUNT( * ) > var0 ;
Find the total credits of courses provided by different department .,spider,"SELECT DEPT_NAME , SUM( COURSEalias0.CREDITS ) FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ;"
How many total credits are offered by each department ?,spider,"SELECT DEPT_NAME , SUM( COURSEalias0.CREDITS ) FROM COURSE AS COURSEalias0 GROUP BY DEPT_NAME ;"
Find the minimum salary for the departments whose average salary is above the average payment of all instructors .,spider,"SELECT DEPT_NAME , MIN( INSTRUCTORalias0.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;"
What is the lowest salary in departments with average salary greater than the overall average .,spider,"SELECT DEPT_NAME , MIN( INSTRUCTORalias0.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;"
Find the number of courses provided in each semester and year .,spider,"SELECT COUNT( * ) , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SECTIONalias0.SEMESTER , SECTIONalias0.YEAR ;"
How many courses are provided in each semester and year ?,spider,"SELECT COUNT( * ) , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SECTIONalias0.SEMESTER , SECTIONalias0.YEAR ;"
Find the year which offers the largest number of courses .,spider,SELECT SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which year had the greatest number of courses ?,spider,SELECT SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the year and semester when offers the largest number of courses .,spider,"SELECT SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the year and semester with the most courses ?,spider,"SELECT SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM SECTION AS SECTIONalias0 GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the name of department has the highest amount of students ?,spider,SELECT DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the deparment with the highest enrollment ?,spider,SELECT DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the total number of students in each department .,spider,"SELECT COUNT( * ) , DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ;"
How many students are in each department ?,spider,"SELECT COUNT( * ) , DEPT_NAME FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_NAME ;"
Find the semester and year which has the least number of student taking any class .,spider,"SELECT SEMESTER , YEAR FROM TAKES GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) LIMIT 1 ;"
Which semeseter and year had the fewest students ?,spider,"SELECT SEMESTER , YEAR FROM TAKES GROUP BY SEMESTER , YEAR ORDER BY COUNT( * ) LIMIT 1 ;"
What is the id of the instructor who advises of all students from var0 department ?,spider,"SELECT I_ID FROM ADVISOR AS ADVISORalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
Give id of the instructor who advises students in the var0 department .,spider,"SELECT I_ID FROM ADVISOR AS ADVISORalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
Find the name and salary of the instructors who are advisors of any student from var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
What are the names and salaries of instructors who advises students in the var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
Find the name and salary of instructors who are advisors of the students from the var0 department .,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
What are the names and salaries of instructors who advise students in the var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ;"
Find the id of the courses that do not have any prerequisite ?,spider,SELECT COURSEalias0.COURSE_ID FROM COURSE AS COURSEalias0 EXCEPT SELECT COURSE_ID FROM PREREQ ;
What are the ids of courses without prerequisites ?,spider,SELECT COURSEalias0.COURSE_ID FROM COURSE AS COURSEalias0 EXCEPT SELECT COURSE_ID FROM PREREQ ;
What is the title of the prerequisite class of var0 course ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.PREREQ_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
Give the title of the prerequisite to the course var0 .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.PREREQ_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
What is the course title of the prerequisite of course var0 ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.PREREQ_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
What is the title of the course that is a prerequisite for var0 ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.PREREQ_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
Find the title of course whose prerequisite is course var0 .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.COURSE_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.PREREQ_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
What is the title of the course with var0 as a prerequisite ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 WHERE COURSEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias0.COURSE_ID FROM PREREQ AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias1 ON DERIVED_TABLEalias0.PREREQ_ID = COURSEalias1.COURSE_ID WHERE COURSEalias1.TITLE = ""var0"" ) ;"
Find the names of students who have taken any course in the fall semester of year var1 .,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID IN ( SELECT ID FROM TAKES WHERE SEMESTER = ""var0"" AND YEAR = var1 ) ;"
What are the names of students who took a course in the var0 of var1 ?,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID IN ( SELECT ID FROM TAKES WHERE SEMESTER = ""var0"" AND YEAR = var1 ) ;"
What is the title of the course that was offered at building var0 during the fall semester in the year of var2 ?,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE SECTIONalias0.BUILDING = ""var0"" AND SECTIONalias0.SEMESTER = ""var1"" AND SECTIONalias0.YEAR = var2 ;"
Give the title of the course offered in var0 during the var1 of var2 .,spider,"SELECT COURSEalias0.TITLE FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE SECTIONalias0.BUILDING = ""var0"" AND SECTIONalias0.SEMESTER = ""var1"" AND SECTIONalias0.YEAR = var2 ;"
Find the name of the instructors who taught var0 course before .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID JOIN COURSE AS COURSEalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.TITLE = ""var0"" ;"
What are the names of instructors who have taught var0 courses ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID JOIN COURSE AS COURSEalias0 ON TEACHESalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.TITLE = ""var0"" ;"
"Find the name of instructors who are advisors of the students from the var0 department , and sort the results by students ' total credit .",spider,"SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ORDER BY STUDENTalias0.TOT_CRED ;"
What are the names of all instructors who advise students in the math depart sorted by total credits of the student .,spider,"SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID WHERE STUDENTalias0.DEPT_NAME = ""var0"" ORDER BY STUDENTalias0.TOT_CRED ;"
Find the name of instructor who is the advisor of the student who has the highest number of total credits .,spider,SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID ORDER BY STUDENTalias0.TOT_CRED DESC LIMIT 1 ;
What is the name of the instructor who advises the student with the greatest number of total credits ?,spider,SELECT INSTRUCTORalias0.NAME FROM ADVISOR AS ADVISORalias0 JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.ID = ADVISORalias0.I_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = ADVISORalias0.S_ID ORDER BY STUDENTalias0.TOT_CRED DESC LIMIT 1 ;
Find the name of instructors who didn't teach any courses ?,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.ID NOT IN ( SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ) ;
What are the names of instructors who didn't teach ?,spider,SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.ID NOT IN ( SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ) ;
Find the id of instructors who didn't teach any courses ?,spider,SELECT INSTRUCTORalias0.ID FROM INSTRUCTOR AS INSTRUCTORalias0 EXCEPT SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ;
What are the ids of instructors who didnt ' teach ?,spider,SELECT INSTRUCTORalias0.ID FROM INSTRUCTOR AS INSTRUCTORalias0 EXCEPT SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 ;
Find the names of instructors who didn't each any courses in any var0 semester .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.ID NOT IN ( SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" ) ;"
What are the names of instructors who didn't teach courses in the var0 ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.ID NOT IN ( SELECT TEACHESalias0.ID FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" ) ;"
Find the name of the department which has the highest average salary of professors .,spider,SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME ORDER BY AVG( INSTRUCTORalias0.SALARY ) DESC LIMIT 1 ;
Which department has the highest average instructor salary ?,spider,SELECT DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME ORDER BY AVG( INSTRUCTORalias0.SALARY ) DESC LIMIT 1 ;
Find the number and averaged salary of all instructors who are in the department with the highest budget .,spider,"SELECT AVG( INSTRUCTORalias0.SALARY ) , COUNT( * ) FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;"
"How many instructors are in the department with the highest budget , and what is their average salary ?",spider,"SELECT AVG( INSTRUCTORalias0.SALARY ) , COUNT( * ) FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME ORDER BY DEPARTMENTalias0.BUDGET DESC LIMIT 1 ;"
What is the title and credits of the course that is taught in the largest classroom (with the highest capacity) ?,spider,"SELECT COURSEalias0.CREDITS , COURSEalias0.TITLE FROM CLASSROOM AS CLASSROOMalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.BUILDING = CLASSROOMalias0.BUILDING AND SECTIONalias0.ROOM_NUMBER = CLASSROOMalias0.ROOM_NUMBER JOIN COURSE AS COURSEalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE CLASSROOMalias0.CAPACITY = ( SELECT MAX( CLASSROOMalias1.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias1 ) ;"
Give the title and credits for the course that is taught in the classroom with the greatest capacity .,spider,"SELECT COURSEalias0.CREDITS , COURSEalias0.TITLE FROM CLASSROOM AS CLASSROOMalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.BUILDING = CLASSROOMalias0.BUILDING AND SECTIONalias0.ROOM_NUMBER = CLASSROOMalias0.ROOM_NUMBER JOIN COURSE AS COURSEalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE CLASSROOMalias0.CAPACITY = ( SELECT MAX( CLASSROOMalias1.CAPACITY ) FROM CLASSROOM AS CLASSROOMalias1 ) ;"
Find the name of students who didn't take any course from var0 department .,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID NOT IN ( SELECT DERIVED_TABLEalias0.ID FROM TAKES AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ) ;"
What are the names of students who haven't taken any var0 courses ?,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ID NOT IN ( SELECT DERIVED_TABLEalias0.ID FROM TAKES AS DERIVED_TABLEalias0 JOIN COURSE AS COURSEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ) ;"
Find the total number of students and total number of instructors for each department .,spider,"SELECT COUNT( DISTINCT INSTRUCTORalias0.ID ) , COUNT( DISTINCT STUDENTalias0.ID ) , INSTRUCTORalias0.DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME GROUP BY INSTRUCTORalias0.DEPT_NAME ;"
How many students and instructors are in each department ?,spider,"SELECT COUNT( DISTINCT INSTRUCTORalias0.ID ) , COUNT( DISTINCT STUDENTalias0.ID ) , INSTRUCTORalias0.DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME JOIN INSTRUCTOR AS INSTRUCTORalias0 ON INSTRUCTORalias0.DEPT_NAME = DEPARTMENTalias0.DEPT_NAME GROUP BY INSTRUCTORalias0.DEPT_NAME ;"
Find the name of students who have taken the prerequisite course of the course with title var0 .,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias1.PREREQ_ID FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.TITLE = ""var0"" ) ;"
What are the names of students who have taken the prerequisite for the course var0 ?,spider,"SELECT STUDENTalias0.NAME FROM STUDENT AS STUDENTalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.COURSE_ID IN ( SELECT DERIVED_TABLEalias1.PREREQ_ID FROM COURSE AS COURSEalias0 JOIN PREREQ AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.TITLE = ""var0"" ) ;"
Find the name and salary of instructors whose salary is below the average salary of the instructors in the var0 department .,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
What are the names and salaries for instructors who earn less than the average salary of instructors in the var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME , INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT AVG( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
Find the name of students who took some course offered by var0 department .,spider,"SELECT STUDENTalias0.NAME FROM COURSE AS COURSEalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ;"
What are the names of students who have taken var0 courses ?,spider,"SELECT STUDENTalias0.NAME FROM COURSE AS COURSEalias0 JOIN TAKES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.COURSE_ID = COURSEalias0.COURSE_ID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ID = DERIVED_TABLEalias0.ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ;"
"Find the building , room number , semester and year of all courses offered by var0 department sorted by course titles .",spider,"SELECT SECTIONalias0.BUILDING , SECTIONalias0.ROOM_NUMBER , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ORDER BY COURSEalias0.TITLE ;"
"What are the building , room number , semester and year of courses in the var0 department , sorted using course title ?",spider,"SELECT SECTIONalias0.BUILDING , SECTIONalias0.ROOM_NUMBER , SECTIONalias0.SEMESTER , SECTIONalias0.YEAR FROM COURSE AS COURSEalias0 JOIN SECTION AS SECTIONalias0 ON SECTIONalias0.COURSE_ID = COURSEalias0.COURSE_ID WHERE COURSEalias0.DEPT_NAME = ""var0"" ORDER BY COURSEalias0.TITLE ;"
Find the names of all instructors in computer science department,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" ;"
What are the names of all instructors in the Comp . Sci . department ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" ;"
Find the names of all instructors in Comp . Sci . department with salary var1 var2 .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" AND INSTRUCTORalias0.SALARY var1 var2 ;"
What are the names of the instructors in the Comp . Sci . department who earn more than var1 ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE DEPT_NAME = ""var0"" AND INSTRUCTORalias0.SALARY > var1 ;"
Find the names of all instructors who have taught some course and the course_id .,spider,"SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID ;"
"What are the names of all instructors who have taught a course , as well as the corresponding course id ?",spider,"SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID ;"
Find the names of all instructors in the var0 department who have taught some course and the course_id .,spider,"SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE INSTRUCTORalias0.DEPT_NAME = ""var0"" ;"
"What are the names of var0 instructors who have taught a course , and the corresponding course id ?",spider,"SELECT INSTRUCTORalias0.NAME , TEACHESalias0.COURSE_ID FROM INSTRUCTOR AS INSTRUCTORalias0 JOIN TEACHES AS TEACHESalias0 ON TEACHESalias0.ID = INSTRUCTORalias0.ID WHERE INSTRUCTORalias0.DEPT_NAME = ""var0"" ;"
"Find the names of all instructors whose name includes the substring "" var0 "" .",spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE ""var0"" ;"
"What are the names of all instructors with names that include "" var0 "" ?",spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.NAME LIKE ""var0"" ;"
List in alphabetic order the names of all distinct instructors .,spider,SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.NAME ;
"List the distinct names of the instructors , ordered by name .",spider,SELECT DISTINCT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 ORDER BY INSTRUCTORalias0.NAME ;
Find courses that ran in var0 var1 or in var2 var3 .,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 UNION SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
What are the ids for courses in the var0 of var1 or the var2 of var3 ?,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 UNION SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
Find courses that ran in var0 var1 and in var2 var3 .,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 INTERSECT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
What are the ids for courses that were offered in both var0 of var1 and var2 of var3 ?,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 INTERSECT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
Find courses that ran in var0 var1 but not in var2 var3 .,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 EXCEPT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
What are the ids of courses offered in var0 of var1 but not in var2 of var3 ?,spider,"SELECT SECTIONalias0.COURSE_ID FROM SECTION AS SECTIONalias0 WHERE SECTIONalias0.SEMESTER = ""var0"" AND SECTIONalias0.YEAR = var1 EXCEPT SELECT SECTIONalias1.COURSE_ID FROM SECTION AS SECTIONalias1 WHERE SECTIONalias1.SEMESTER = ""var2"" AND SECTIONalias1.YEAR = var3 ;"
Find the salaries of all distinct instructors that are less than the largest salary .,spider,SELECT DISTINCT INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
What are the distinct salaries of all instructors who earned less than the maximum salary ?,spider,SELECT DISTINCT INSTRUCTORalias0.SALARY FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY < ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 ) ;
Find the total number of instructors who teach a course in the var0 var1 semester .,spider,"SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" AND TEACHESalias0.YEAR = var1 ;"
How many instructors teach a course in the var0 of var1 ?,spider,"SELECT COUNT( DISTINCT TEACHESalias0.ID ) FROM TEACHES AS TEACHESalias0 WHERE TEACHESalias0.SEMESTER = ""var0"" AND TEACHESalias0.YEAR = var1 ;"
Find the names and average salaries of all departments whose average salary is greater than var0 .,spider,"SELECT AVG( INSTRUCTORalias0.SALARY ) , DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > var0 ;"
What are the names and average salaries for departments with average salary higher than var0 ?,spider,"SELECT AVG( INSTRUCTORalias0.SALARY ) , DEPT_NAME FROM INSTRUCTOR AS INSTRUCTORalias0 GROUP BY DEPT_NAME HAVING AVG( INSTRUCTORalias0.SALARY ) > var0 ;"
Find names of instructors with salary greater than that of some (at least one) instructor in the var0 department .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MIN( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
What are the names of instructors who earn more than at least one instructor from the var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MIN( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
Find the names of all instructors whose salary is greater than the salary of all instructors in the var0 department .,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
What are the names of all instructors with a higher salary than any of the instructors in the var0 department ?,spider,"SELECT INSTRUCTORalias0.NAME FROM INSTRUCTOR AS INSTRUCTORalias0 WHERE INSTRUCTORalias0.SALARY > ( SELECT MAX( INSTRUCTORalias1.SALARY ) FROM INSTRUCTOR AS INSTRUCTORalias1 WHERE DEPT_NAME = ""var0"" ) ;"
How many debates are there ?,spider,SELECT COUNT( * ) FROM DEBATE AS DEBATEalias0 ;
List the venues of debates in ascending order of the number of audience .,spider,SELECT DEBATEalias0.VENUE FROM DEBATE AS DEBATEalias0 ORDER BY DEBATEalias0.NUM_OF_AUDIENCE ASC ;
What are the date and venue of each debate ?,spider,"SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE FROM DEBATE AS DEBATEalias0 ;"
List the dates of debates with number of audience bigger than var0,spider,SELECT DEBATEalias0.DATE FROM DEBATE AS DEBATEalias0 WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
Show the names of people aged either var0 or var1 .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE = var0 OR PEOPLEalias0.AGE = var1 ;
What is the party of the youngest people ?,spider,SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.AGE ASC LIMIT 1 ;
Show different parties of people along with the number of people in each party .,spider,"SELECT COUNT( * ) , PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.PARTY ;"
Show the party that has the most people .,spider,SELECT PEOPLEalias0.PARTY FROM PEOPLE AS PEOPLEalias0 GROUP BY PARTY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the distinct venues of debates,spider,SELECT DISTINCT DEBATEalias0.VENUE FROM DEBATE AS DEBATEalias0 ;
"Show the names of people , and dates and venues of debates they are on the affirmative side .",spider,"SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE ;"
"Show the names of people , and dates and venues of debates they are on the negative side , ordered in ascending alphabetical order of name .",spider,"SELECT DEBATEalias0.DATE , DEBATEalias0.VENUE , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.NEGATIVE ORDER BY PEOPLEalias0.NAME ASC ;"
Show the names of people that are on affirmative side of debates with number of audience bigger than var0 .,spider,SELECT PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN DEBATE AS DEBATEalias0 ON DEBATEalias0.DEBATE_ID = DEBATE_PEOPLEalias0.DEBATE_ID JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE WHERE DEBATEalias0.NUM_OF_AUDIENCE > var0 ;
Show the names of people and the number of times they have been on the affirmative side of debates .,spider,"SELECT COUNT( DEBATE_PEOPLEalias0.* ) , PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.AFFIRMATIVE GROUP BY PEOPLEalias0.NAME ;"
Show the names of people who have been on the negative side of debates at least twice .,spider,SELECT PEOPLEalias0.NAME FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = DEBATE_PEOPLEalias0.NEGATIVE GROUP BY PEOPLEalias0.NAME HAVING COUNT( DEBATE_PEOPLEalias0.* ) >= var0 ;
List the names of people that have not been on the affirmative side of debates .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT DEBATE_PEOPLEalias0.AFFIRMATIVE FROM DEBATE_PEOPLE AS DEBATE_PEOPLEalias0 ) ;
List the names of all the customers in alphabetical order .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_DETAILS ;
Sort the customer names in alphabetical order .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_DETAILS ;
"Find all the policy type codes associated with the customer "" var0 """,spider,"SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_DETAILS = ""var0"" ;"
"What are the type codes of the policies used by the customer "" var0 "" ?",spider,"SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_DETAILS = ""var0"" ;"
Which type of policy is most frequently used ? Give me the policy type code .,spider,SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the type code of the most frequently used policy .,spider,SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find all the policy types that are used by more than var0 customers .,spider,SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
Which types of policy are chosen by more than var0 customers ? Give me the policy type codes .,spider,SELECT POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICIESalias0.POLICY_TYPE_CODE HAVING COUNT( * ) > var0 ;
Find the total and average amount paid in claim headers .,spider,"SELECT AVG( CLAIM_HEADERSalias0.AMOUNT_PIAD ) , SUM( CLAIM_HEADERSalias0.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 ;"
What are the total amount and average amount paid in claim headers ?,spider,"SELECT AVG( CLAIM_HEADERSalias0.AMOUNT_PIAD ) , SUM( CLAIM_HEADERSalias0.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 ;"
Find the total amount claimed in the most recently created document .,spider,SELECT SUM( CLAIM_HEADERSalias0.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias0 ON CLAIM_HEADERSalias0.CLAIM_HEADER_ID = CLAIMS_DOCUMENTSalias0.CLAIM_ID WHERE CLAIMS_DOCUMENTSalias0.CREATED_DATE = ( SELECT CLAIMS_DOCUMENTSalias1.CREATED_DATE FROM CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias1 ORDER BY CLAIMS_DOCUMENTSalias1.CREATED_DATE LIMIT 1 ) ;
How much amount in total were claimed in the most recently created document ?,spider,SELECT SUM( CLAIM_HEADERSalias0.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias0 ON CLAIM_HEADERSalias0.CLAIM_HEADER_ID = CLAIMS_DOCUMENTSalias0.CLAIM_ID WHERE CLAIMS_DOCUMENTSalias0.CREATED_DATE = ( SELECT CLAIMS_DOCUMENTSalias1.CREATED_DATE FROM CLAIMS_DOCUMENTS AS CLAIMS_DOCUMENTSalias1 ORDER BY CLAIMS_DOCUMENTSalias1.CREATED_DATE LIMIT 1 ) ;
What is the name of the customer who has made the largest amount of claim in a single claim ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_CLAIMED = ( SELECT MAX( CLAIM_HEADERSalias1.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
Which customer made the largest amount of claim in a single claim ? Return the customer details .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_CLAIMED = ( SELECT MAX( CLAIM_HEADERSalias1.AMOUNT_CLAIMED ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
What is the name of the customer who has made the minimum amount of payment in one claim ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_PIAD = ( SELECT MIN( CLAIM_HEADERSalias1.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
Which customer made the smallest amount of claim in one claim ? Return the customer details .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CLAIM_HEADERS AS CLAIM_HEADERSalias0 JOIN POLICIES AS POLICIESalias0 ON POLICIESalias0.POLICY_ID = CLAIM_HEADERSalias0.POLICY_ID JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CLAIM_HEADERSalias0.AMOUNT_PIAD = ( SELECT MIN( CLAIM_HEADERSalias1.AMOUNT_PIAD ) FROM CLAIM_HEADERS AS CLAIM_HEADERSalias1 ) ;
Find the names of customers who have no policies associated .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
What are the names of customers who do not have any policies ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias1 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
How many claim processing stages are there in total ?,spider,SELECT COUNT( * ) FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ;
Find the number of distinct stages in claim processing .,spider,SELECT COUNT( * ) FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ;
What is the name of the claim processing stage that most of the claims are on ?,spider,SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 JOIN CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ON CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID = CLAIMS_PROCESSING_STAGESalias0.CLAIM_STAGE_ID GROUP BY CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID ORDER BY COUNT( CLAIMS_PROCESSINGalias0.* ) DESC LIMIT 1 ;
Which claim processing stage has the most claims ? Show the claim status name .,spider,SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 JOIN CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 ON CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID = CLAIMS_PROCESSING_STAGESalias0.CLAIM_STAGE_ID GROUP BY CLAIMS_PROCESSINGalias0.CLAIM_STAGE_ID ORDER BY COUNT( CLAIMS_PROCESSINGalias0.* ) DESC LIMIT 1 ;
"Find the names of customers whose name contains "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_DETAILS LIKE ""var0"" ;"
"Which customers have the substring "" var0 "" in their names ? Return the customer details .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_DETAILS LIKE ""var0"" ;"
Find the names of the customers who have an deputy policy .,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = ""var0"" ;"
"Which customers have an insurance policy with the type code "" var0 "" ? Give me the customer details .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = ""var0"" ;"
Find the names of customers who either have an deputy policy or uniformed policy .,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = ""var0"" OR POLICIESalias0.POLICY_TYPE_CODE = ""var1"" ;"
"Which customers have an insurance policy with the type code "" var0 "" or "" var1 "" ? Return the customer details .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.POLICY_TYPE_CODE = ""var0"" OR POLICIESalias0.POLICY_TYPE_CODE = ""var1"" ;"
Find the names of all the customers and staff members .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.STAFF_DETAILS FROM STAFF AS STAFFalias0 ;
What are the names of the customers and staff members ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.STAFF_DETAILS FROM STAFF AS STAFFalias0 ;
Find the number of records of each policy type and its type code .,spider,"SELECT COUNT( * ) , POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICIESalias0.POLICY_TYPE_CODE ;"
"For each policy type , return its type code and its count in the record .",spider,"SELECT COUNT( * ) , POLICIESalias0.POLICY_TYPE_CODE FROM POLICIES AS POLICIESalias0 GROUP BY POLICIESalias0.POLICY_TYPE_CODE ;"
Find the name of the customer that has been involved in the most policies .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_DETAILS ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which customer have the most policies ? Give me the customer details .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_DETAILS ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What is the description of the claim status "" var0 "" ?",spider,"SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_DESCRIPTION FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 WHERE CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME = ""var0"" ;"
"Find the description of the claim status "" var0 "" .",spider,"SELECT CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_DESCRIPTION FROM CLAIMS_PROCESSING_STAGES AS CLAIMS_PROCESSING_STAGESalias0 WHERE CLAIMS_PROCESSING_STAGESalias0.CLAIM_STATUS_NAME = ""var0"" ;"
How many distinct claim outcome codes are there ?,spider,SELECT COUNT( DISTINCT CLAIMS_PROCESSINGalias0.CLAIM_OUTCOME_CODE ) FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 ;
Count the number of distinct claim outcome codes .,spider,SELECT COUNT( DISTINCT CLAIMS_PROCESSINGalias0.CLAIM_OUTCOME_CODE ) FROM CLAIMS_PROCESSING AS CLAIMS_PROCESSINGalias0 ;
Which customer is associated with the latest policy ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.START_DATE = ( SELECT MAX( POLICIESalias1.START_DATE ) FROM POLICIES AS POLICIESalias1 ) ;
Find the customer who started a policy most recently .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM POLICIES AS POLICIESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE POLICIESalias0.START_DATE = ( SELECT MAX( POLICIESalias1.START_DATE ) FROM POLICIES AS POLICIESalias1 ) ;
"Show the id , the date of account opened , the account name , and other account detail for all accounts .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.DATE_ACCOUNT_OPENED , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 ;"
"What are the ids , date opened , name , and other details for all accounts ?",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.DATE_ACCOUNT_OPENED , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 ;"
"Show the id , the account name , and other account details for all accounts by the customer with first name ' var0 ' .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.DATE_ACCOUNT_OPENED , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" ;"
"What are the ids , names , dates of opening , and other details for accounts corresponding to the customer with the first name "" var0 "" ?",spider,"SELECT ACCOUNTSalias0.ACCOUNT_ID , ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.DATE_ACCOUNT_OPENED , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" ;"
Show the account name and other account detail for all accounts by the customer with first name var0 and last name var1 .,spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
What are the names and other details for accounts corresponding to the customer named var0 var1 ?,spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , ACCOUNTSalias0.OTHER_ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_FIRST_NAME = ""var0"" AND CUSTOMERSalias0.CUSTOMER_LAST_NAME = ""var1"" ;"
Show the first name and last name for the customer with account name var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
What are the full names of customers with the account name var0 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
"Show the unique first names , last names , and phone numbers for all customers with any account .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
"What are the distinct first names , last names , and phone numbers for customers with accounts ?",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID ;"
Show customer ids who don't have an account .,spider,SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
What are the customer ids for customers who do not have an account ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT ACCOUNTSalias0.CUSTOMER_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;
"What is the customer id , first and last name with most number of accounts .",spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the id and full name of the customer with the most accounts .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Show id , first name and last name for all customers and the number of accounts .",spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
"What are the the full names and ids for all customers , and how many accounts does each have ?",spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , COUNT( * ) , CUSTOMERSalias0.CUSTOMER_FIRST_NAME , CUSTOMERSalias0.CUSTOMER_LAST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID ;"
Show first name and id for all customers with at least var0 accounts .,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
What are the first names and ids for customers who have two or more accounts ?,spider,"SELECT ACCOUNTSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_FIRST_NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = ACCOUNTSalias0.CUSTOMER_ID GROUP BY ACCOUNTSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
Show the number of customers for each gender .,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.GENDER FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.GENDER ;"
How many customers are there of each gender ?,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.GENDER FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.GENDER ;"
How many transactions do we have ?,spider,SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
Count the number of transactions .,spider,SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;
How many transaction does each account have ? Show the number and account id .,spider,"SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
Count the number of financial transactions that correspond to each account id .,spider,"SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
How many transaction does account with name var0 have ?,spider,"SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
Count the number of financial transactions that the account with the name var0 has .,spider,"SELECT COUNT( * ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID WHERE ACCOUNTSalias0.ACCOUNT_NAME = ""var0"" ;"
"What is the average , minimum , maximum , and total transaction amount ?",spider,"SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MAX( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MIN( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
"Return the average , minimum , maximum , and total transaction amounts .",spider,"SELECT AVG( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MAX( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , MIN( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 ;"
Show ids for all transactions whose amounts are greater than the average .,spider,SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 WHERE FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT > ( SELECT AVG( FINANCIAL_TRANSACTIONSalias1.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias1 ) ;
What are the ids for transactions that have an amount greater than the average amount of a transaction ?,spider,SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 WHERE FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT > ( SELECT AVG( FINANCIAL_TRANSACTIONSalias1.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias1 ) ;
Show the transaction types and the total amount of transactions .,spider,"SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;"
What are total transaction amounts for each transaction type ?,spider,"SELECT FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE , SUM( FINANCIAL_TRANSACTIONSalias0.TRANSACTION_AMOUNT ) FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.TRANSACTION_TYPE ;"
"Show the account name , id and the number of transactions for each account .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID ;"
"Return the names and ids of each account , as well as the number of transactions .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID ;"
Show the account id with most number of transactions .,spider,SELECT FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY ACCOUNT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the id of the account with the most transactions ?,spider,SELECT FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY ACCOUNT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the account id and name with at least var0 transactions .,spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID HAVING COUNT( * ) >= var0 ;"
What are the ids and names of accounts with var0 or more transactions ?,spider,"SELECT ACCOUNTSalias0.ACCOUNT_NAME , FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN ACCOUNTS AS ACCOUNTSalias0 ON FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID = ACCOUNTSalias0.ACCOUNT_ID GROUP BY FINANCIAL_TRANSACTIONSalias0.ACCOUNT_ID HAVING COUNT( * ) >= var0 ;"
Show all product sizes .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_SIZE FROM PRODUCTS AS PRODUCTSalias0 ;
What are the different product sizes ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_SIZE FROM PRODUCTS AS PRODUCTSalias0 ;
Show all product colors .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_COLOR FROM PRODUCTS AS PRODUCTSalias0 ;
What are the different product colors ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_COLOR FROM PRODUCTS AS PRODUCTSalias0 ;
Show the invoice number and the number of transactions for each invoice .,spider,"SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ;"
How many transactions correspond to each invoice number ?,spider,"SELECT COUNT( * ) , FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ;"
What is the invoice number and invoice date for the invoice with most number of transactions ?,spider,"SELECT INVOICESalias0.INVOICE_DATE , INVOICESalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.INVOICE_NUMBER = FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the invoice number and invoice date corresponding to the invoice with the greatest number of transactions ?,spider,"SELECT INVOICESalias0.INVOICE_DATE , INVOICESalias0.INVOICE_NUMBER FROM FINANCIAL_TRANSACTIONS AS FINANCIAL_TRANSACTIONSalias0 JOIN INVOICES AS INVOICESalias0 ON INVOICESalias0.INVOICE_NUMBER = FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER GROUP BY FINANCIAL_TRANSACTIONSalias0.INVOICE_NUMBER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many invoices do we have ?,spider,SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 ;
Count the number of invoices .,spider,SELECT COUNT( * ) FROM INVOICES AS INVOICESalias0 ;
Show invoice dates and order id and details for all invoices .,spider,"SELECT INVOICESalias0.INVOICE_DATE , INVOICESalias0.ORDER_ID , ORDERSalias0.ORDER_DETAILS FROM INVOICES AS INVOICESalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.ORDER_ID = INVOICESalias0.ORDER_ID ;"
"What are the invoice dates , order ids , and order details for all invoices ?",spider,"SELECT INVOICESalias0.INVOICE_DATE , INVOICESalias0.ORDER_ID , ORDERSalias0.ORDER_DETAILS FROM INVOICES AS INVOICESalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.ORDER_ID = INVOICESalias0.ORDER_ID ;"
Show the order ids and the number of invoices for each order .,spider,"SELECT COUNT( * ) , INVOICESalias0.ORDER_ID FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.ORDER_ID ;"
How many invoices correspond to each order id ?,spider,"SELECT COUNT( * ) , INVOICESalias0.ORDER_ID FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.ORDER_ID ;"
What is the order id and order details for the order more than two invoices .,spider,"SELECT ORDERSalias0.ORDER_DETAILS , ORDERSalias0.ORDER_ID FROM INVOICES AS INVOICESalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.ORDER_ID = INVOICESalias0.ORDER_ID GROUP BY ORDERSalias0.ORDER_ID HAVING COUNT( * ) > var0 ;"
Return the order ids and details for orderes with two or more invoices .,spider,"SELECT ORDERSalias0.ORDER_DETAILS , ORDERSalias0.ORDER_ID FROM INVOICES AS INVOICESalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.ORDER_ID = INVOICESalias0.ORDER_ID GROUP BY ORDERSalias0.ORDER_ID HAVING COUNT( * ) > var0 ;"
"What is the customer last name , id and phone number with most number of orders ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER , ORDERSalias0.CUSTOMER_ID FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Return the last name , id and phone number of the customer who has made the greatest number of orders .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_LAST_NAME , CUSTOMERSalias0.PHONE_NUMBER , ORDERSalias0.CUSTOMER_ID FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show all product names without an order .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 EXCEPT SELECT PRODUCTSalias1.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON PRODUCTSalias1.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID ;
What are the names of products that have never been ordered ?,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 EXCEPT SELECT PRODUCTSalias1.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON PRODUCTSalias1.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID ;
Show all product names and the total quantity ordered for each product name .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
"What are the different product names , and what is the sum of quantity ordered for each product ?",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
Show the order ids and the number of items in each order .,spider,"SELECT COUNT( * ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
How many order items correspond to each order id ?,spider,"SELECT COUNT( * ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
Show the product ids and the number of unique orders containing each product .,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.ORDER_ID ) , ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ;"
How many distinct order ids correspond to each product ?,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.ORDER_ID ) , ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ;"
Show all product names and the number of customers having an order on each product .,spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID JOIN ORDERS AS ORDERSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
"What are teh names of the different products , as well as the number of customers who have ordered each product .",spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID JOIN ORDERS AS ORDERSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
Show order ids and the number of products in each order .,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
How many different products correspond to each order id ?,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) , ORDER_ITEMSalias0.ORDER_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
Show order ids and the total quantity in each order .,spider,"SELECT ORDER_ITEMSalias0.ORDER_ID , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
"Give the order ids for all orders , as well as the total product quantity in each .",spider,"SELECT ORDER_ITEMSalias0.ORDER_ID , SUM( ORDER_ITEMSalias0.PRODUCT_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.ORDER_ID ;"
How many products were not included in any order ?,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ) ;
Count the number of products that were never ordered .,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ) ;
How many churches opened before var0 are there ?,spider,SELECT COUNT( * ) FROM CHURCH AS CHURCHalias0 WHERE CHURCHalias0.OPEN_DATE < var0 ;
"Show the name , open date , and organizer for all churches .",spider,"SELECT CHURCHalias0.NAME , CHURCHalias0.OPEN_DATE , CHURCHalias0.ORGANIZED_BY FROM CHURCH AS CHURCHalias0 ;"
List all church names in descending order of opening date .,spider,SELECT CHURCHalias0.NAME FROM CHURCH AS CHURCHalias0 ORDER BY CHURCHalias0.OPEN_DATE DESC ;
Show the opening year in whcih at least two churches opened .,spider,SELECT CHURCHalias0.OPEN_DATE FROM CHURCH AS CHURCHalias0 GROUP BY CHURCHalias0.OPEN_DATE HAVING COUNT( * ) >= var0 ;
Show the organizer and name for churches that opened between var0 and var1 .,spider,"SELECT CHURCHalias0.NAME , CHURCHalias0.ORGANIZED_BY FROM CHURCH AS CHURCHalias0 WHERE CHURCHalias0.OPEN_DATE BETWEEN var0 AND var1 ;"
Show all opening years and the number of churches that opened in that year .,spider,"SELECT CHURCHalias0.OPEN_DATE , COUNT( * ) FROM CHURCH AS CHURCHalias0 GROUP BY CHURCHalias0.OPEN_DATE ;"
Show the name and opening year for three churches that opened most recently .,spider,"SELECT CHURCHalias0.NAME , CHURCHalias0.OPEN_DATE FROM CHURCH AS CHURCHalias0 ORDER BY CHURCHalias0.OPEN_DATE DESC LIMIT var0 ;"
How many female people are older than var1 in our record ?,spider,"SELECT COUNT( * ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE > var1 AND PEOPLEalias0.IS_MALE = ""var0"" ;"
Show the country where people older than var1 and younger than var0 are from .,spider,SELECT PEOPLEalias0.COUNTRY FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE < var0 INTERSECT SELECT PEOPLEalias1.COUNTRY FROM PEOPLE AS PEOPLEalias1 WHERE PEOPLEalias1.AGE > var1 ;
"Show the minimum , maximum , and average age for all people .",spider,"SELECT AVG( PEOPLEalias0.AGE ) , MAX( PEOPLEalias0.AGE ) , MIN( PEOPLEalias0.AGE ) FROM PEOPLE AS PEOPLEalias0 ;"
Show the name and country for all people whose age is smaller than the average .,spider,"SELECT PEOPLEalias0.COUNTRY , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE < ( SELECT AVG( PEOPLEalias1.AGE ) FROM PEOPLE AS PEOPLEalias1 ) ;"
Show the pair of male and female names in all weddings after year var0,spider,"SELECT PEOPLEalias0.NAME , PEOPLEalias1.NAME FROM WEDDING AS WEDDINGalias0 JOIN PEOPLE AS PEOPLEalias0 ON WEDDINGalias0.MALE_ID = PEOPLEalias0.PEOPLE_ID JOIN PEOPLE AS PEOPLEalias1 ON WEDDINGalias0.FEMALE_ID = PEOPLEalias1.PEOPLE_ID WHERE WEDDINGalias0.YEAR > var0 ;"
Show the name and age for all male people who don't have a wedding .,spider,"SELECT PEOPLEalias0.AGE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.IS_MALE = ""var0"" AND PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT WEDDINGalias0.MALE_ID FROM WEDDING AS WEDDINGalias0 ) ;"
Show all church names except for those that had a wedding in year var0 .,spider,SELECT CHURCHalias0.NAME FROM CHURCH AS CHURCHalias0 EXCEPT SELECT CHURCHalias1.NAME FROM CHURCH AS CHURCHalias1 JOIN WEDDING AS WEDDINGalias0 ON WEDDINGalias0.CHURCH_ID = CHURCHalias1.CHURCH_ID WHERE WEDDINGalias0.YEAR = var0 ;
Show all church names that have hosted least two weddings .,spider,SELECT CHURCHalias0.NAME FROM CHURCH AS CHURCHalias0 JOIN WEDDING AS WEDDINGalias0 ON WEDDINGalias0.CHURCH_ID = CHURCHalias0.CHURCH_ID GROUP BY CHURCHalias0.CHURCH_ID HAVING COUNT( WEDDINGalias0.* ) >= var0 ;
Show the names for all females from var2 having a wedding in year var0 .,spider,"SELECT PEOPLEalias0.NAME FROM WEDDING AS WEDDINGalias0 JOIN PEOPLE AS PEOPLEalias0 ON WEDDINGalias0.FEMALE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.COUNTRY = ""var2"" AND PEOPLEalias0.IS_MALE = ""var1"" AND WEDDINGalias0.YEAR = var0 ;"
How many weddings are there in year var0 ?,spider,SELECT COUNT( WEDDINGalias0.* ) FROM WEDDING AS WEDDINGalias0 WHERE WEDDINGalias0.YEAR = var0 ;
Show the church names for the weddings of all people older than var0 .,spider,SELECT CHURCHalias0.NAME FROM WEDDING AS WEDDINGalias0 JOIN PEOPLE AS PEOPLEalias0 ON WEDDINGalias0.MALE_ID = PEOPLEalias0.PEOPLE_ID JOIN PEOPLE AS PEOPLEalias1 ON WEDDINGalias0.FEMALE_ID = PEOPLEalias1.PEOPLE_ID JOIN CHURCH AS CHURCHalias0 ON WEDDINGalias0.CHURCH_ID = CHURCHalias0.CHURCH_ID WHERE PEOPLEalias0.AGE > var0 OR PEOPLEalias1.AGE > var1 ;
Show all countries and the number of people from each country .,spider,"SELECT COUNT( * ) , PEOPLEalias0.COUNTRY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.COUNTRY ;"
How many churches have a wedding in year var0 ?,spider,SELECT COUNT( DISTINCT WEDDINGalias0.CHURCH_ID ) FROM WEDDING AS WEDDINGalias0 WHERE WEDDINGalias0.YEAR = var0 ;
How many artists do we have ?,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
Count the number of artists .,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
How many artists are there ?,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
Count the number of artists .,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 ;
"Show all artist name , age , and country ordered by the yeared they joined .",spider,"SELECT ARTISTalias0.AGE , ARTISTalias0.COUNTRY , ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.YEAR_JOIN ;"
"What are the names , ages , and countries of artists , sorted by the year they joined ?",spider,"SELECT ARTISTalias0.AGE , ARTISTalias0.COUNTRY , ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.YEAR_JOIN ;"
What are all distinct country for artists ?,spider,SELECT DISTINCT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 ;
Return the different countries for artists .,spider,SELECT DISTINCT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 ;
Show all artist names and the year joined who are not from var0 .,spider,"SELECT ARTISTalias0.NAME , ARTISTalias0.YEAR_JOIN FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY != ""var0"" ;"
"What are the names and year of joining for artists that do not have the country "" var0 "" ?",spider,"SELECT ARTISTalias0.NAME , ARTISTalias0.YEAR_JOIN FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY != ""var0"" ;"
How many artists are above age var0 and joined after var1 ?,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.AGE > var0 AND ARTISTalias0.YEAR_JOIN > var1 ;
Count the number of artists who are older than var0 and joined after var1 .,spider,SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.AGE > var0 AND ARTISTalias0.YEAR_JOIN > var1 ;
What is the average and minimum age of all artists from var0 .,spider,"SELECT AVG( ARTISTalias0.AGE ) , MIN( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" ;"
Return the average and minimum ages across artists from the var0 .,spider,"SELECT AVG( ARTISTalias0.AGE ) , MIN( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" ;"
What is the name of the artist who joined latest ?,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.YEAR_JOIN DESC LIMIT 1 ;
Return the name of the artist who has the latest join year .,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.YEAR_JOIN DESC LIMIT 1 ;
How many exhibition are there in year var0 or after ?,spider,SELECT COUNT( * ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR >= var0 ;
Count the number of exhibitions that happened in or after var0 .,spider,SELECT COUNT( * ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR >= var0 ;
Show theme and year for all exhibitions with ticket prices lower than var0 .,spider,"SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.TICKET_PRICE < var0 ;"
What are the theme and year for all exhibitions that have a ticket price under var0 ?,spider,"SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.TICKET_PRICE < var0 ;"
Show all artist names and the number of exhibitions for each artist .,spider,"SELECT ARTISTalias0.NAME , COUNT( * ) FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY EXHIBITIONalias0.ARTIST_ID ;"
How many exhibitions has each artist had ?,spider,"SELECT ARTISTalias0.NAME , COUNT( * ) FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY EXHIBITIONalias0.ARTIST_ID ;"
What is the name and country for the artist with most number of exhibitions ?,spider,"SELECT ARTISTalias0.COUNTRY , ARTISTalias0.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY EXHIBITIONalias0.ARTIST_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the name and country corresponding to the artist who has had the most exhibitions .,spider,"SELECT ARTISTalias0.COUNTRY , ARTISTalias0.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY EXHIBITIONalias0.ARTIST_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show names for artists without any exhibition .,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT EXHIBITIONalias0.ARTIST_ID FROM EXHIBITION AS EXHIBITIONalias0 ) ;
What are the names of artists that have not had any exhibitions ?,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT EXHIBITIONalias0.ARTIST_ID FROM EXHIBITION AS EXHIBITIONalias0 ) ;
What is the theme and artist name for the exhibition with a ticket price higher than the average ?,spider,"SELECT ARTISTalias0.NAME , EXHIBITIONalias0.THEME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE EXHIBITIONalias0.TICKET_PRICE > ( SELECT AVG( EXHIBITIONalias1.TICKET_PRICE ) FROM EXHIBITION AS EXHIBITIONalias1 ) ;"
Return the names of artists and the themes of their exhibitions that had a ticket price higher than average .,spider,"SELECT ARTISTalias0.NAME , EXHIBITIONalias0.THEME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE EXHIBITIONalias0.TICKET_PRICE > ( SELECT AVG( EXHIBITIONalias1.TICKET_PRICE ) FROM EXHIBITION AS EXHIBITIONalias1 ) ;"
"Show the average , minimum , and maximum ticket prices for exhibitions for all years before var0 .",spider,"SELECT AVG( EXHIBITIONalias0.TICKET_PRICE ) , MAX( EXHIBITIONalias0.TICKET_PRICE ) , MIN( EXHIBITIONalias0.TICKET_PRICE ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR < var0 ;"
"What are the average , minimum , and maximum ticket prices for exhibitions that happened prior to var0 ?",spider,"SELECT AVG( EXHIBITIONalias0.TICKET_PRICE ) , MAX( EXHIBITIONalias0.TICKET_PRICE ) , MIN( EXHIBITIONalias0.TICKET_PRICE ) FROM EXHIBITION AS EXHIBITIONalias0 WHERE EXHIBITIONalias0.YEAR < var0 ;"
Show theme and year for all exhibitions in an descending order of ticket price .,spider,"SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 ORDER BY EXHIBITIONalias0.TICKET_PRICE DESC ;"
"What are the themes and years for exhibitions , sorted by ticket price descending ?",spider,"SELECT EXHIBITIONalias0.THEME , EXHIBITIONalias0.YEAR FROM EXHIBITION AS EXHIBITIONalias0 ORDER BY EXHIBITIONalias0.TICKET_PRICE DESC ;"
"What is the theme , date , and attendance for the exhibition in year var0 ?",spider,"SELECT EXHIBITION_RECORDalias0.ATTENDANCE , EXHIBITION_RECORDalias0.DATE , EXHIBITIONalias0.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITIONalias0.YEAR = var0 ;"
"Return the themes , dates , and attendance for exhibitions that happened in var0 .",spider,"SELECT EXHIBITION_RECORDalias0.ATTENDANCE , EXHIBITION_RECORDalias0.DATE , EXHIBITIONalias0.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITIONalias0.YEAR = var0 ;"
Show all artist names who didn't have an exhibition in var0 .,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias1 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE EXHIBITIONalias0.YEAR = var0 ;
What are the names of artists who did not have an exhibition in var0 ?,spider,SELECT ARTISTalias0.NAME FROM ARTIST AS ARTISTalias0 EXCEPT SELECT ARTISTalias1.NAME FROM EXHIBITION AS EXHIBITIONalias0 JOIN ARTIST AS ARTISTalias1 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE EXHIBITIONalias0.YEAR = var0 ;
Show the theme for exhibitions with both records of an attendance below var0 and above var1 .,spider,SELECT EXHIBITIONalias0.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITION_RECORDalias0.ATTENDANCE < var0 INTERSECT SELECT EXHIBITIONalias1.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias1 JOIN EXHIBITION AS EXHIBITIONalias1 ON EXHIBITIONalias1.EXHIBITION_ID = EXHIBITION_RECORDalias1.EXHIBITION_ID WHERE EXHIBITION_RECORDalias1.ATTENDANCE > var1 ;
Which themes have had corresponding exhibitions that have had attendance both below var0 and above var1 ?,spider,SELECT EXHIBITIONalias0.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITION_RECORDalias0.ATTENDANCE < var0 INTERSECT SELECT EXHIBITIONalias1.THEME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias1 JOIN EXHIBITION AS EXHIBITIONalias1 ON EXHIBITIONalias1.EXHIBITION_ID = EXHIBITION_RECORDalias1.EXHIBITION_ID WHERE EXHIBITION_RECORDalias1.ATTENDANCE > var1 ;
How many exhibitions have a attendance more than var0 or have a ticket price below var1 ?,spider,SELECT COUNT( EXHIBITION_RECORDalias0.* ) FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITION_RECORDalias0.ATTENDANCE > var0 OR EXHIBITIONalias0.TICKET_PRICE < var1 ;
Count the number of exhibitions that have had an attendnance of over var0 or a ticket prices under var1 .,spider,SELECT COUNT( EXHIBITION_RECORDalias0.* ) FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID WHERE EXHIBITION_RECORDalias0.ATTENDANCE > var0 OR EXHIBITIONalias0.TICKET_PRICE < var1 ;
Show all artist names with an average exhibition attendance over var0 .,spider,SELECT ARTISTalias0.NAME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY ARTISTalias0.ARTIST_ID HAVING AVG( EXHIBITION_RECORDalias0.ATTENDANCE ) > var0 ;
What are the names of artist whose exhibitions draw over var0 attendees on average ?,spider,SELECT ARTISTalias0.NAME FROM EXHIBITION_RECORD AS EXHIBITION_RECORDalias0 JOIN EXHIBITION AS EXHIBITIONalias0 ON EXHIBITIONalias0.EXHIBITION_ID = EXHIBITION_RECORDalias0.EXHIBITION_ID JOIN ARTIST AS ARTISTalias0 ON EXHIBITIONalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID GROUP BY ARTISTalias0.ARTIST_ID HAVING AVG( EXHIBITION_RECORDalias0.ATTENDANCE ) > var0 ;
"Find the id of the item whose title is "" var0 "" .",spider,"SELECT I_ID FROM ITEM AS ITEMalias0 WHERE ITEMalias0.TITLE = ""var0"" ;"
List all information in the item table .,spider,SELECT * FROM ITEM AS ITEMalias0 ;
Find the number of reviews .,spider,SELECT COUNT( * ) FROM REVIEW AS REVIEWalias0 ;
How many users are there ?,spider,SELECT COUNT( * ) FROM USERACCT AS USERACCTalias0 ;
Find the average and maximum rating of all reviews .,spider,"SELECT AVG( REVIEWalias0.RATING ) , MAX( REVIEWalias0.RATING ) FROM REVIEW AS REVIEWalias0 ;"
Find the highest rank of all reviews .,spider,SELECT MIN( REVIEWalias0.RANK ) FROM REVIEW AS REVIEWalias0 ;
How many different users wrote some reviews ?,spider,SELECT COUNT( DISTINCT U_ID ) FROM REVIEW AS REVIEWalias0 ;
How many different items were reviewed by some users ?,spider,SELECT COUNT( DISTINCT I_ID ) FROM REVIEW AS REVIEWalias0 ;
Find the number of items that did not receive any review .,spider,SELECT COUNT( * ) FROM ITEM AS ITEMalias0 WHERE I_ID NOT IN ( SELECT I_ID FROM REVIEW AS REVIEWalias0 ) ;
Find the number of items without any review .,spider,SELECT COUNT( * ) FROM ITEM AS ITEMalias0 WHERE I_ID NOT IN ( SELECT I_ID FROM REVIEW AS REVIEWalias0 ) ;
Find the names of users who did not leave any review .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 WHERE U_ID NOT IN ( SELECT U_ID FROM REVIEW AS REVIEWalias0 ) ;
Find the names of users who did not leave any review .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 WHERE U_ID NOT IN ( SELECT U_ID FROM REVIEW AS REVIEWalias0 ) ;
Find the names of goods that receive a rating of var0 .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING = var0 ;
Find the titles of items whose rating is higher than the average review rating of all items .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING > ( SELECT AVG( REVIEWalias1.RATING ) FROM REVIEW AS REVIEWalias1 ) ;
Find the titles of items that received any rating below var0 .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING < var0 ;
Find the titles of items that received both a rating higher than var0 and a rating below var1 .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RATING > var0 INTERSECT SELECT ITEMalias1.TITLE FROM ITEM AS ITEMalias1 JOIN REVIEW AS REVIEWalias1 ON REVIEWalias1.I_ID = ITEMalias1.I_ID WHERE REVIEWalias1.RATING < var1 ;
Find the names of items whose rank is higher than var0 and whose average rating is above var1 .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID WHERE REVIEWalias0.RANK > var0 INTERSECT SELECT ITEMalias1.TITLE FROM ITEM AS ITEMalias1 JOIN REVIEW AS REVIEWalias1 ON REVIEWalias1.I_ID = ITEMalias1.I_ID GROUP BY REVIEWalias1.I_ID HAVING AVG( REVIEWalias1.RATING ) > var1 ;
Find the name of the item with the lowest average rating .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID GROUP BY REVIEWalias0.I_ID ORDER BY AVG( REVIEWalias0.RATING ) LIMIT 1 ;
List the titles of all items in alphabetic order .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 ORDER BY ITEMalias0.TITLE ;
Find the name of the user who gives the most reviews .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name and id of the item with the highest average rating .,spider,"SELECT ITEMalias0.I_ID , ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID GROUP BY REVIEWalias0.I_ID ORDER BY AVG( REVIEWalias0.RATING ) DESC LIMIT 1 ;"
Find the name and id of the good with the highest average rank .,spider,"SELECT ITEMalias0.I_ID , ITEMalias0.TITLE FROM ITEM AS ITEMalias0 JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.I_ID = ITEMalias0.I_ID GROUP BY REVIEWalias0.I_ID ORDER BY AVG( REVIEWalias0.RANK ) DESC LIMIT 1 ;"
"For each user , return the name and the average rating of reviews given by them .",spider,"SELECT AVG( REVIEWalias0.RATING ) , USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ;"
"For each user , find their name and the number of reviews written by them .",spider,"SELECT COUNT( * ) , USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID GROUP BY REVIEWalias0.U_ID ;"
Find the name of the user who gave the highest rating .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN REVIEW AS REVIEWalias0 ON USERACCTalias0.U_ID = REVIEWalias0.U_ID ORDER BY REVIEWalias0.RATING DESC LIMIT 1 ;
Find the name of the source user with the highest average trust score .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN TRUST AS TRUSTalias0 ON USERACCTalias0.U_ID = TRUSTalias0.SOURCE_U_ID GROUP BY TRUSTalias0.SOURCE_U_ID ORDER BY AVG( TRUSTalias0.TRUST ) DESC LIMIT 1 ;
Find each target user's name and average trust score .,spider,"SELECT AVG( TRUSTalias0.TRUST ) , USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN TRUST AS TRUSTalias0 ON USERACCTalias0.U_ID = TRUSTalias0.TARGET_U_ID GROUP BY TRUSTalias0.TARGET_U_ID ;"
Find the name of the target user with the lowest trust score .,spider,SELECT USERACCTalias0.NAME FROM USERACCT AS USERACCTalias0 JOIN TRUST AS TRUSTalias0 ON USERACCTalias0.U_ID = TRUSTalias0.TARGET_U_ID ORDER BY TRUSTalias0.TRUST LIMIT 1 ;
Find the names of the items that did not receive any review .,spider,SELECT ITEMalias0.TITLE FROM ITEM AS ITEMalias0 WHERE I_ID NOT IN ( SELECT I_ID FROM REVIEW AS REVIEWalias0 ) ;
Find the number of users who did not write any review .,spider,SELECT COUNT( * ) FROM USERACCT AS USERACCTalias0 WHERE U_ID NOT IN ( SELECT U_ID FROM REVIEW AS REVIEWalias0 ) ;
How many players are there ?,spider,SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 ;
List the names of players in ascending order of votes .,spider,SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.VOTES ASC ;
What are the gender and occupation of players ?,spider,"SELECT PLAYERalias0.GENDER , PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 ;"
"List the name and residence for players whose occupation is not "" var0 "" .",spider,"SELECT PLAYERalias0.PLAYER_NAME , PLAYERalias0.RESIDENCE FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.OCCUPATION != ""var0"" ;"
"Show the names of sponsors of players whose residence is either "" var0 "" or "" var1 "" .",spider,"SELECT PLAYERalias0.SPONSOR_NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.RESIDENCE = ""var0"" OR PLAYERalias0.RESIDENCE = ""var1"" ;"
What is the name of the player with the largest number of votes ?,spider,SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.VOTES DESC LIMIT 1 ;
Show different occupations along with the number of players in each occupation .,spider,"SELECT COUNT( * ) , PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.OCCUPATION ;"
Please show the most common occupation of players .,spider,SELECT PLAYERalias0.OCCUPATION FROM PLAYER AS PLAYERalias0 GROUP BY OCCUPATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the residences that have at least two players .,spider,SELECT PLAYERalias0.RESIDENCE FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.RESIDENCE HAVING COUNT( * ) >= var0 ;
Show the names of players and names of their coaches .,spider,"SELECT COACHalias0.COACH_NAME , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID ;"
Show the names of players coached by the rank var0 coach .,spider,SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID WHERE COACHalias0.RANK = var0 ;
Show the names and genders of players with a coach starting after var0 .,spider,"SELECT PLAYERalias0.GENDER , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID WHERE PLAYER_COACHalias0.STARTING_YEAR > var0 ;"
Show the names of players and names of their coaches in descending order of the votes of players .,spider,"SELECT COACHalias0.COACH_NAME , PLAYERalias0.PLAYER_NAME FROM PLAYER_COACH AS PLAYER_COACHalias0 JOIN COACH AS COACHalias0 ON PLAYER_COACHalias0.COACH_ID = COACHalias0.COACH_ID JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COACHalias0.PLAYER_ID ORDER BY PLAYERalias0.VOTES DESC ;"
List the names of players that do not have coaches .,spider,SELECT PLAYERalias0.PLAYER_NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.PLAYER_ID NOT IN ( SELECT PLAYER_COACHalias0.PLAYER_ID FROM PLAYER_COACH AS PLAYER_COACHalias0 ) ;
"Show the residences that have both a player of gender "" var0 "" and a player of gender "" var1 "" .",spider,"SELECT PLAYERalias0.RESIDENCE FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.GENDER = ""var0"" INTERSECT SELECT PLAYERalias1.RESIDENCE FROM PLAYER AS PLAYERalias1 WHERE PLAYERalias1.GENDER = ""var1"" ;"
"How many coaches does each club has ? List the club id , name and the number of coaches .",spider,"SELECT CLUBalias0.CLUB_ID , CLUBalias0.CLUB_NAME , COUNT( * ) FROM CLUB AS CLUBalias0 JOIN COACH AS COACHalias0 ON COACHalias0.CLUB_ID = CLUBalias0.CLUB_ID GROUP BY CLUBalias0.CLUB_ID ;"
How many gold medals has the club with the most coaches won ?,spider,"SELECT MATCH_RESULTalias0.CLUB_ID , MATCH_RESULTalias0.GOLD FROM MATCH_RESULT AS MATCH_RESULTalias0 JOIN COACH AS COACHalias0 ON MATCH_RESULTalias0.CLUB_ID = COACHalias0.CLUB_ID GROUP BY MATCH_RESULTalias0.CLUB_ID ORDER BY COUNT( MATCH_RESULTalias0.* ) DESC LIMIT 1 ;"
How many gymnasts are there ?,spider,SELECT COUNT( * ) FROM GYMNAST AS GYMNASTalias0 ;
Count the number of gymnasts .,spider,SELECT COUNT( * ) FROM GYMNAST AS GYMNASTalias0 ;
List the total points of gymnasts in descending order .,spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.TOTAL_POINTS DESC ;
"What are the total points for all gymnasts , ordered by total points descending ?",spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.TOTAL_POINTS DESC ;
List the total points of gymnasts in descending order of floor exercise points .,spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.FLOOR_EXERCISE_POINTS DESC ;
"What are the total points of gymnasts , ordered by their floor exercise points descending ?",spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 ORDER BY GYMNASTalias0.FLOOR_EXERCISE_POINTS DESC ;
What is the average horizontal bar points for all gymnasts ?,spider,SELECT AVG( GYMNASTalias0.HORIZONTAL_BAR_POINTS ) FROM GYMNAST AS GYMNASTalias0 ;
Return the average horizontal bar points across all gymnasts .,spider,SELECT AVG( GYMNASTalias0.HORIZONTAL_BAR_POINTS ) FROM GYMNAST AS GYMNASTalias0 ;
What are the names of people in ascending alphabetical order ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;
"Return the names of people , ordered alphabetically .",spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;
What are the names of gymnasts ?,spider,SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
Return the names of the gymnasts .,spider,SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
"What are the names of gymnasts whose hometown is not "" var0 "" ?",spider,"SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE PEOPLEalias0.HOMETOWN != ""var0"" ;"
Return the names of gymnasts who did not grow up in var0 .,spider,"SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE PEOPLEalias0.HOMETOWN != ""var0"" ;"
What is the age of the tallest person ?,spider,SELECT PEOPLEalias0.AGE FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
Return the age of the person with the greatest height .,spider,SELECT PEOPLEalias0.AGE FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
List the names of the top var0 oldest people .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.AGE DESC LIMIT var0 ;
What are the names of the five oldest people ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.AGE DESC LIMIT var0 ;
What is the total point count of the youngest gymnast ?,spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.AGE ASC LIMIT 1 ;
Return the total points of the gymnast with the lowest age .,spider,SELECT GYMNASTalias0.TOTAL_POINTS FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.AGE ASC LIMIT 1 ;
What is the average age of all gymnasts ?,spider,SELECT AVG( PEOPLEalias0.AGE ) FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
Return the average age across all gymnasts .,spider,SELECT AVG( PEOPLEalias0.AGE ) FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
What are the distinct hometowns of gymnasts with total points more than var0 ?,spider,SELECT DISTINCT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE GYMNASTalias0.TOTAL_POINTS > var0 ;
Give the different hometowns of gymnasts that have a total point score of above var0 .,spider,SELECT DISTINCT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID WHERE GYMNASTalias0.TOTAL_POINTS > var0 ;
What are the hometowns of gymnasts and the corresponding number of gymnasts ?,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ;"
How many gymnasts are from each hometown ?,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ;"
What is the most common hometown of gymnasts ?,spider,SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
Return the hometown that is most common among gymnasts .,spider,SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
What are the hometowns that are shared by at least two gymnasts ?,spider,SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
Give the hometowns from which two or more gymnasts are from .,spider,SELECT PEOPLEalias0.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID GROUP BY PEOPLEalias0.HOMETOWN HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
List the names of gymnasts in ascending order by their heights .,spider,SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.HEIGHT ASC ;
"What are the names of gymnasts , ordered by their heights ascending ?",spider,SELECT PEOPLEalias0.NAME FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY PEOPLEalias0.HEIGHT ASC ;
List the distinct hometowns that are not associated with any gymnast .,spider,SELECT DISTINCT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 EXCEPT SELECT DISTINCT PEOPLEalias1.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias1 ON PEOPLEalias1.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
From which hometowns did no gymnasts come from ?,spider,SELECT DISTINCT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 EXCEPT SELECT DISTINCT PEOPLEalias1.HOMETOWN FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias1 ON PEOPLEalias1.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ;
Show the hometowns shared by people older than var0 and younger than var1 .,spider,SELECT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE > var0 INTERSECT SELECT PEOPLEalias1.HOMETOWN FROM PEOPLE AS PEOPLEalias1 WHERE PEOPLEalias1.AGE < var1 ;
From which hometowns did both people older than var0 and younger than var1 come from ?,spider,SELECT PEOPLEalias0.HOMETOWN FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.AGE > var0 INTERSECT SELECT PEOPLEalias1.HOMETOWN FROM PEOPLE AS PEOPLEalias1 WHERE PEOPLEalias1.AGE < var1 ;
How many distinct hometowns did these people have ?,spider,SELECT COUNT( DISTINCT PEOPLEalias0.HOMETOWN ) FROM PEOPLE AS PEOPLEalias0 ;
Count the number of different hometowns of these people .,spider,SELECT COUNT( DISTINCT PEOPLEalias0.HOMETOWN ) FROM PEOPLE AS PEOPLEalias0 ;
Show the ages of gymnasts in descending order of total points .,spider,SELECT PEOPLEalias0.AGE FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY GYMNASTalias0.TOTAL_POINTS DESC ;
"What are the ages of the gymnasts , ordered descending by their total points ?",spider,SELECT PEOPLEalias0.AGE FROM GYMNAST AS GYMNASTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = GYMNASTalias0.GYMNAST_ID ORDER BY GYMNASTalias0.TOTAL_POINTS DESC ;
Find the total savings balance of all accounts except the account with name ' var0 ' .,spider,"SELECT SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME != ""var0"" ;"
What is the total balance of savings accounts not belonging to someone with the name var0 ?,spider,"SELECT SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME != ""var0"" ;"
What is the total checking balance in all accounts ?,spider,SELECT SUM( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
Find the total balance across checking accounts .,spider,SELECT SUM( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
Find the average checking balance .,spider,SELECT AVG( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
What is the average balance in checking accounts ?,spider,SELECT AVG( CHECKINGalias0.BALANCE ) FROM CHECKING AS CHECKINGalias0 ;
How many accounts have a savings balance above the average savings balance ?,spider,SELECT COUNT( * ) FROM SAVINGS AS SAVINGSalias0 WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
Find the number of accounts with a savings balance that is higher than the average savings balance .,spider,SELECT COUNT( * ) FROM SAVINGS AS SAVINGSalias0 WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
Find the name and id of accounts whose checking balance is below the maximum checking balance .,spider,"SELECT ACCOUNTSalias0.CUSTID , ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE < ( SELECT MAX( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) ;"
What are the customer id and name corresponding to accounts with a checking balance less than the largest checking balance ?,spider,"SELECT ACCOUNTSalias0.CUSTID , ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE < ( SELECT MAX( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) ;"
What is the checking balance of the account whose owner 's name contains the substring ' var0 ' ?,spider,"SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME LIKE ""var0"" ;"
Find the balance of the checking account belonging to an owner whose name contains ' var0 ' .,spider,"SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME LIKE ""var0"" ;"
Find the checking balance and saving balance in the var0 's account .,spider,"SELECT CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME = ""var0"" ;"
What are the checking and savings balances in accounts belonging to var0 ?,spider,"SELECT CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME = ""var0"" ;"
"Find the names of accounts whose checking balance is above the average checking balance , but savings balance is below the average savings balance .",spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > ( SELECT AVG( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) INTERSECT SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE < ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
What are the names of accounts with checking balances greater than the average checking balance and savings balances below the average savings balance ?,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > ( SELECT AVG( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) INTERSECT SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE < ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;
Find the checking balance of the accounts whose savings balance is higher than the average savings balance .,spider,SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME IN ( SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ) ;
What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance ?,spider,SELECT CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE ACCOUNTSalias0.NAME IN ( SELECT ACCOUNTSalias1.NAME FROM ACCOUNTS AS ACCOUNTSalias1 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias1.CUSTID WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ) ;
List all customers ' names in the alphabetical order .,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 ORDER BY ACCOUNTSalias0.NAME ;
What are the names of all the customers in alphabetical order ?,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 ORDER BY ACCOUNTSalias0.NAME ;
Find the name of account that has the lowest total checking and saving balance .,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE LIMIT 1 ;
What is the name corresponding to the accoung with the lowest sum of checking and savings balances ?,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE LIMIT 1 ;
Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance .,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;"
What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance ?,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE SAVINGSalias0.BALANCE > ( SELECT AVG( SAVINGSalias1.BALANCE ) FROM SAVINGS AS SAVINGSalias1 ) ;"
Find the name and checking balance of the account with the lowest savings balance .,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE LIMIT 1 ;"
What are the names and balances of checking accounts belonging to the customer with the lowest savings balance ?,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE LIMIT 1 ;"
Find the name and checking balance of the account with the lowest saving balance .,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE LIMIT 1 ;"
What is the name and checking balance of the account which has the lowest savings balance ?,spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE LIMIT 1 ;"
Find the number of checking accounts for each account name .,spider,"SELECT ACCOUNTSalias0.NAME , COUNT( CHECKINGalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;"
"What are the names of customers with accounts , and how many checking accounts do each of them have ?",spider,"SELECT ACCOUNTSalias0.NAME , COUNT( CHECKINGalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;"
Find the total saving balance for each account name .,spider,"SELECT ACCOUNTSalias0.NAME , SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;"
"What are the names of customers with accounts , and what are the total savings balances for each ?",spider,"SELECT ACCOUNTSalias0.NAME , SUM( SAVINGSalias0.BALANCE ) FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID GROUP BY ACCOUNTSalias0.NAME ;"
Find the name of accounts whose checking balance is below the average checking balance .,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE < ( SELECT AVG( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) ;
What are the names of customers with checking balances lower than the average checking balance ?,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE < ( SELECT AVG( CHECKINGalias1.BALANCE ) FROM CHECKING AS CHECKINGalias1 ) ;
Find the saving balance of the account with the highest checking balance .,spider,SELECT SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE DESC LIMIT 1 ;
What is the savings balance of the account belonging to the customer with the highest checking balance ?,spider,SELECT SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE DESC LIMIT 1 ;
Find the total checking and saving balance of all accounts sorted by the total balance in ascending order .,spider,SELECT CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE FROM CHECKING AS CHECKINGalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = CHECKINGalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE ;
"What is the sum of checking and savings balances for all customers , ordered by the total balance ?",spider,SELECT CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE FROM CHECKING AS CHECKINGalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = CHECKINGalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE ;
"Find the name , checking balance and saving balance of all accounts in the bank .",spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ;"
"What are the names , checking balances , and savings balances for all customers ?",spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ;"
"Find the name , checking balance and savings balance of all accounts in the bank sorted by their total checking and savings balance in descending order .",spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE DESC ;"
"What are the names , checking balances , and savings balances of customers , ordered by the total of checking and savings balances descending ?",spider,"SELECT ACCOUNTSalias0.NAME , CHECKINGalias0.BALANCE , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY CHECKINGalias0.BALANCE + SAVINGSalias0.BALANCE DESC ;"
Find the name of accounts whose checking balance is higher than corresponding saving balance .,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > SAVINGSalias0.BALANCE ;
What are the names of customers with a higher checking balance than savings balance ?,spider,SELECT ACCOUNTSalias0.NAME FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE CHECKINGalias0.BALANCE > SAVINGSalias0.BALANCE ;
Find the name and total checking and savings balance of the accounts whose savings balance is lower than corresponding checking balance .,spider,"SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE + CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE SAVINGSalias0.BALANCE < CHECKINGalias0.BALANCE ;"
"What are the names of customers who have a savings balance lower than their checking balance , and what is the total of their checking and savings balances ?",spider,"SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE + CHECKINGalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN CHECKING AS CHECKINGalias0 ON CHECKINGalias0.CUSTID = ACCOUNTSalias0.CUSTID JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID WHERE SAVINGSalias0.BALANCE < CHECKINGalias0.BALANCE ;"
Find the name and savings balance of the top var0 accounts with the highest saving balance sorted by savings balance in descending order .,spider,"SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE DESC LIMIT var0 ;"
What are names and savings balances of the three accounts with the highest savings balances ?,spider,"SELECT ACCOUNTSalias0.NAME , SAVINGSalias0.BALANCE FROM ACCOUNTS AS ACCOUNTSalias0 JOIN SAVINGS AS SAVINGSalias0 ON SAVINGSalias0.CUSTID = ACCOUNTSalias0.CUSTID ORDER BY SAVINGSalias0.BALANCE DESC LIMIT var0 ;"
How many main stream browsers whose market share is at least var0 exist ?,spider,SELECT COUNT( * ) FROM BROWSER AS BROWSERalias0 WHERE BROWSERalias0.MARKET_SHARE >= var0 ;
List the name of browsers in descending order by market share .,spider,SELECT BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 ORDER BY BROWSERalias0.MARKET_SHARE DESC ;
"List the ids , names and market shares of all browsers .",spider,"SELECT BROWSERalias0.ID , BROWSERalias0.MARKET_SHARE , BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 ;"
"What is the maximum , minimum and average market share of the listed browsers ?",spider,"SELECT AVG( BROWSERalias0.MARKET_SHARE ) , MAX( BROWSERalias0.MARKET_SHARE ) , MIN( BROWSERalias0.MARKET_SHARE ) FROM BROWSER AS BROWSERalias0 ;"
What is the id and market share of the browser var0 ?,spider,"SELECT BROWSERalias0.ID , BROWSERalias0.MARKET_SHARE FROM BROWSER AS BROWSERalias0 WHERE BROWSERalias0.NAME = ""var0"" ;"
What are the name and os of web client accelerators that do not work with only a ' var0 ' type connection ?,spider,"SELECT WEB_CLIENT_ACCELERATORalias0.NAME , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.CONNECTION != ""var0"" ;"
What is the name of the browser that became compatible with the accelerator ' var0 ' after year var1 ?,spider,"SELECT BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID JOIN WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID WHERE ACCELERATOR_COMPATIBLE_BROWSERalias0.COMPATIBLE_SINCE_YEAR > var1 AND WEB_CLIENT_ACCELERATORalias0.NAME = ""var0"" ;"
What are the ids and names of the web accelerators that are compatible with two or more browsers ?,spider,"SELECT WEB_CLIENT_ACCELERATORalias0.ID , WEB_CLIENT_ACCELERATORalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID GROUP BY WEB_CLIENT_ACCELERATORalias0.ID HAVING COUNT( ACCELERATOR_COMPATIBLE_BROWSERalias0.* ) >= var0 ;"
What is the id and name of the browser that is compatible with the most web accelerators ?,spider,"SELECT BROWSERalias0.ID , BROWSERalias0.NAME FROM BROWSER AS BROWSERalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID GROUP BY BROWSERalias0.ID ORDER BY COUNT( ACCELERATOR_COMPATIBLE_BROWSERalias0.* ) DESC LIMIT 1 ;"
When did the web accelerator ' var0 ' and browser ' var1 ' become compatible ?,spider,"SELECT ACCELERATOR_COMPATIBLE_BROWSERalias0.COMPATIBLE_SINCE_YEAR FROM ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID JOIN WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID WHERE BROWSERalias0.NAME = ""var1"" AND WEB_CLIENT_ACCELERATORalias0.NAME = ""var0"" ;"
How many different kinds of clients are supported by the web clients accelerators ?,spider,SELECT COUNT( DISTINCT WEB_CLIENT_ACCELERATORalias0.CLIENT ) FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ;
How many accelerators are not compatible with the browsers listed ?,spider,SELECT COUNT( * ) FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.ID NOT IN ( SELECT ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID FROM ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ) ;
What distinct accelerator names are compatible with the browswers that have market share higher than var0 ?,spider,SELECT DISTINCT WEB_CLIENT_ACCELERATORalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE BROWSERalias0.MARKET_SHARE > var0 ;
List the names of the browser that are compatible with both ' var0 ' and ' var1 ' .,spider,"SELECT BROWSERalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE WEB_CLIENT_ACCELERATORalias0.NAME = ""var0"" INTERSECT SELECT BROWSERalias1.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias1 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias1 ON WEB_CLIENT_ACCELERATORalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias1.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias1 ON BROWSERalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias1.BROWSER_ID WHERE WEB_CLIENT_ACCELERATORalias1.NAME = ""var1"" ;"
Show the accelerator names and supporting operating systems that are not compatible with the browser named ' var0 ' .,spider,"SELECT WEB_CLIENT_ACCELERATORalias0.NAME , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 EXCEPT SELECT WEB_CLIENT_ACCELERATORalias1.NAME , WEB_CLIENT_ACCELERATORalias1.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias1 JOIN ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 ON WEB_CLIENT_ACCELERATORalias1.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID WHERE BROWSERalias0.NAME = ""var0"" ;"
"Which accelerator name contains substring "" var0 "" ?",spider,"SELECT WEB_CLIENT_ACCELERATORalias0.NAME FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 WHERE WEB_CLIENT_ACCELERATORalias0.NAME LIKE ""var0"" ;"
Find the number of web accelerators used for each Operating system .,spider,"SELECT COUNT( * ) , WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM FROM WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 GROUP BY WEB_CLIENT_ACCELERATORalias0.OPERATING_SYSTEM ;"
give me names of all compatible browsers and accelerators in the descending order of compatible year,spider,"SELECT BROWSERalias0.NAME , WEB_CLIENT_ACCELERATORalias0.NAME FROM ACCELERATOR_COMPATIBLE_BROWSER AS ACCELERATOR_COMPATIBLE_BROWSERalias0 JOIN BROWSER AS BROWSERalias0 ON BROWSERalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.BROWSER_ID JOIN WEB_CLIENT_ACCELERATOR AS WEB_CLIENT_ACCELERATORalias0 ON WEB_CLIENT_ACCELERATORalias0.ID = ACCELERATOR_COMPATIBLE_BROWSERalias0.ACCELERATOR_ID ORDER BY ACCELERATOR_COMPATIBLE_BROWSERalias0.COMPATIBLE_SINCE_YEAR DESC ;"
How many wrestlers are there ?,spider,SELECT COUNT( * ) FROM WRESTLER AS WRESTLERalias0 ;
Count the number of wrestlers .,spider,SELECT COUNT( * ) FROM WRESTLER AS WRESTLERalias0 ;
List the names of wrestlers in descending order of days held .,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD DESC ;
"What are the names of the wrestlers , ordered descending by days held ?",spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD DESC ;
What is the name of the wrestler with the fewest days held ?,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD ASC LIMIT 1 ;
Return the name of the wrestler who had the lowest number of days held .,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ORDER BY WRESTLERalias0.DAYS_HELD ASC LIMIT 1 ;
"What are the distinct reigns of wrestlers whose location is not "" Tokyo,Japan "" ?",spider,"SELECT DISTINCT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.LOCATION != ""var0"" ;"
Give the different reigns of wrestlers who are not located in var0 .,spider,"SELECT DISTINCT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.LOCATION != ""var0"" ;"
What are the names and location of the wrestlers ?,spider,"SELECT WRESTLERalias0.LOCATION , WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ;"
Give the names and locations of all wrestlers .,spider,"SELECT WRESTLERalias0.LOCATION , WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 ;"
"What are the elimination moves of wrestlers whose team is "" var0 "" ?",spider,"SELECT ELIMINATIONalias0.ELIMINATION_MOVE FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.TEAM = ""var0"" ;"
Return the elimination movies of wrestlers on var0 .,spider,"SELECT ELIMINATIONalias0.ELIMINATION_MOVE FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.TEAM = ""var0"" ;"
What are the names of wrestlers and the elimination moves ?,spider,"SELECT ELIMINATIONalias0.ELIMINATION_MOVE , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ;"
Give the names of wrestlers and their elimination moves .,spider,"SELECT ELIMINATIONalias0.ELIMINATION_MOVE , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ;"
List the names of wrestlers and the teams in elimination in descending order of days held .,spider,"SELECT ELIMINATIONalias0.TEAM , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC ;"
"What are the names of wrestlers and their teams in elimination , ordered descending by days held ?",spider,"SELECT ELIMINATIONalias0.TEAM , WRESTLERalias0.NAME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC ;"
List the time of elimination of the wrestlers with largest days held .,spider,SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC LIMIT 1 ;
What is the time of elimination for the wrestler with the most days held ?,spider,SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID ORDER BY WRESTLERalias0.DAYS_HELD DESC LIMIT 1 ;
Show times of elimination of wrestlers with days held more than var0 .,spider,SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID WHERE WRESTLERalias0.DAYS_HELD > var0 ;
What are the times of elimination for wrestlers with over var0 days held ?,spider,SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 JOIN WRESTLER AS WRESTLERalias0 ON WRESTLERalias0.WRESTLER_ID = ELIMINATIONalias0.WRESTLER_ID WHERE WRESTLERalias0.DAYS_HELD > var0 ;
Show different teams in eliminations and the number of eliminations from each team .,spider,"SELECT COUNT( ELIMINATIONalias0.* ) , ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 GROUP BY ELIMINATIONalias0.TEAM ;"
How many eliminations did each team have ?,spider,"SELECT COUNT( ELIMINATIONalias0.* ) , ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 GROUP BY ELIMINATIONalias0.TEAM ;"
Show teams that have suffered more than three eliminations .,spider,SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 GROUP BY ELIMINATIONalias0.TEAM HAVING COUNT( ELIMINATIONalias0.* ) > var0 ;
Which teams had more than var0 eliminations ?,spider,SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 GROUP BY ELIMINATIONalias0.TEAM HAVING COUNT( ELIMINATIONalias0.* ) > var0 ;
Show the reign and days held of wrestlers .,spider,"SELECT WRESTLERalias0.DAYS_HELD , WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 ;"
What are the reigns and days held of all wrestlers ?,spider,"SELECT WRESTLERalias0.DAYS_HELD , WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 ;"
What are the names of wrestlers days held less than var0 ?,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.DAYS_HELD < var0 ;
Return the names of wrestlers with fewer than var0 days held .,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.DAYS_HELD < var0 ;
Please show the most common reigns of wrestlers .,spider,SELECT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 GROUP BY REIGN ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which reign is the most common among wrestlers ?,spider,SELECT WRESTLERalias0.REIGN FROM WRESTLER AS WRESTLERalias0 GROUP BY REIGN ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the locations that are shared by more than two wrestlers .,spider,SELECT WRESTLERalias0.LOCATION FROM WRESTLER AS WRESTLERalias0 GROUP BY WRESTLERalias0.LOCATION HAVING COUNT( * ) > var0 ;
Which locations are shared by more than two wrestlers ?,spider,SELECT WRESTLERalias0.LOCATION FROM WRESTLER AS WRESTLERalias0 GROUP BY WRESTLERalias0.LOCATION HAVING COUNT( * ) > var0 ;
List the names of wrestlers that have not been eliminated .,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.WRESTLER_ID NOT IN ( SELECT ELIMINATIONalias0.WRESTLER_ID FROM ELIMINATION AS ELIMINATIONalias0 ) ;
What are the names of wrestlers who have never been eliminated ?,spider,SELECT WRESTLERalias0.NAME FROM WRESTLER AS WRESTLERalias0 WHERE WRESTLERalias0.WRESTLER_ID NOT IN ( SELECT ELIMINATIONalias0.WRESTLER_ID FROM ELIMINATION AS ELIMINATIONalias0 ) ;
"Show the teams that have both wrestlers eliminated by "" var0 "" and wrestlers eliminated by "" var1 "" .",spider,"SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = ""var0"" INTERSECT SELECT ELIMINATIONalias1.TEAM FROM ELIMINATION AS ELIMINATIONalias1 WHERE ELIMINATIONalias1.ELIMINATED_BY = ""var1"" ;"
What are the teams that have both wrestlers eliminated by var0 and wrestlers eliminated by var1 ?,spider,"SELECT ELIMINATIONalias0.TEAM FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = ""var0"" INTERSECT SELECT ELIMINATIONalias1.TEAM FROM ELIMINATION AS ELIMINATIONalias1 WHERE ELIMINATIONalias1.ELIMINATED_BY = ""var1"" ;"
What is the number of distinct teams that suffer elimination ?,spider,SELECT COUNT( DISTINCT ELIMINATIONalias0.TEAM ) FROM ELIMINATION AS ELIMINATIONalias0 ;
How many different teams have had eliminated wrestlers ?,spider,SELECT COUNT( DISTINCT ELIMINATIONalias0.TEAM ) FROM ELIMINATION AS ELIMINATIONalias0 ;
"Show the times of elimination by "" var0 "" or "" var1 "" .",spider,"SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = ""var0"" OR ELIMINATIONalias0.ELIMINATED_BY = ""var1"" ;"
What are the times of elimination for any instances in which the elimination was done by var0 or var1 ?,spider,"SELECT ELIMINATIONalias0.TIME FROM ELIMINATION AS ELIMINATIONalias0 WHERE ELIMINATIONalias0.ELIMINATED_BY = ""var0"" OR ELIMINATIONalias0.ELIMINATED_BY = ""var1"" ;"
How many schools are there ?,spider,SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
Count the number of schools .,spider,SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
How many schools are there ?,spider,SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
Count the number of schools .,spider,SELECT COUNT( * ) FROM SCHOOL AS SCHOOLalias0 ;
Show all school names in alphabetical order .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.SCHOOL_NAME ;
"List the name , location , mascot for all schools .",spider,"SELECT SCHOOLalias0.LOCATION , SCHOOLalias0.MASCOT , SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ;"
What are the total and average enrollment of all schools ?,spider,"SELECT AVG( SCHOOLalias0.ENROLLMENT ) , SUM( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;"
What are the mascots for schools with enrollments above the average ?,spider,SELECT SCHOOLalias0.MASCOT FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.ENROLLMENT > ( SELECT AVG( SCHOOLalias1.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias1 ) ;
List the name of the school with the smallest enrollment .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT LIMIT 1 ;
"Show the average , maximum , minimum enrollment of all schools .",spider,"SELECT AVG( SCHOOLalias0.ENROLLMENT ) , MAX( SCHOOLalias0.ENROLLMENT ) , MIN( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;"
Show each county along with the number of schools and total enrollment in each county .,spider,"SELECT COUNT( * ) , SCHOOLalias0.COUNTY , SUM( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.COUNTY ;"
"How many donors have endowment for school named "" var0 "" ?",spider,"SELECT COUNT( DISTINCT ENDOWMENTalias0.DONATOR_NAME ) FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = ""var0"" ;"
List each donator name and the amount of endowment in descending order of the amount of endowment .,spider,"SELECT ENDOWMENTalias0.DONATOR_NAME , SUM( ENDOWMENTalias0.AMOUNT ) FROM ENDOWMENT AS ENDOWMENTalias0 GROUP BY DONATOR_NAME ORDER BY SUM( ENDOWMENTalias0.AMOUNT ) DESC ;"
List the names of the schools without any endowment .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT ENDOWMENTalias0.SCHOOL_ID FROM ENDOWMENT AS ENDOWMENTalias0 ) ;
List all the names of schools with an endowment amount smaller than or equal to var0 .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING SUM( ENDOWMENTalias0.AMOUNT ) <= var0 ;
"Show the names of donors who donated to both school "" var0 "" and "" var1 . """,spider,"SELECT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = ""var0"" INTERSECT SELECT ENDOWMENTalias1.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias1 JOIN SCHOOL AS SCHOOLalias1 ON SCHOOLalias1.SCHOOL_ID = ENDOWMENTalias1.SCHOOL_ID WHERE SCHOOLalias1.SCHOOL_NAME = ""var1"" ;"
Show the names of all the donors except those whose donation amount less than var0 .,spider,SELECT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 EXCEPT SELECT ENDOWMENTalias1.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias1 WHERE ENDOWMENTalias1.AMOUNT < var0 ;
List the amount and donor name for the largest amount of donation .,spider,"SELECT ENDOWMENTalias0.AMOUNT , ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 ORDER BY ENDOWMENTalias0.AMOUNT DESC LIMIT 1 ;"
How many budgets are above var0 in year var1 or before ?,spider,SELECT COUNT( * ) FROM BUDGET AS BUDGETalias0 WHERE BUDGETalias0.BUDGETED > var0 AND BUDGETalias0.YEAR <= var1 ;
Count the number of budgets in year var1 or before whose budgeted amount is greater than var0,spider,SELECT COUNT( * ) FROM BUDGET AS BUDGETalias0 WHERE BUDGETalias0.BUDGETED > var0 AND BUDGETalias0.YEAR <= var1 ;
"Show each school name , its budgeted amount , and invested amount in year var0 or after .",spider,"SELECT BUDGETalias0.BUDGETED , BUDGETalias0.INVESTED , SCHOOLalias0.SCHOOL_NAME FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE BUDGETalias0.YEAR >= var0 ;"
Show all donor names .,spider,SELECT DISTINCT ENDOWMENTalias0.DONATOR_NAME FROM ENDOWMENT AS ENDOWMENTalias0 ;
How many budget record has a budget amount smaller than the invested amount ?,spider,SELECT COUNT( * ) FROM BUDGET AS BUDGETalias0 WHERE BUDGETalias0.BUDGETED < BUDGETalias0.INVESTED ;
"What is the total budget amount for school "" var0 "" in all years ?",spider,"SELECT SUM( BUDGETalias0.BUDGETED ) FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE SCHOOLalias0.SCHOOL_NAME = ""var0"" ;"
Show the names of schools with a total budget amount greater than var0 or a total endowment greater than var1 .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM BUDGET AS BUDGETalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID JOIN ENDOWMENT AS ENDOWMENTalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID GROUP BY SCHOOLalias0.SCHOOL_NAME HAVING SUM( BUDGETalias0.BUDGETED ) > var0 OR SUM( ENDOWMENTalias0.AMOUNT ) > var1 ;
Find the names of schools that have more than one donator with donation amount above var0 .,spider,SELECT SCHOOLalias0.SCHOOL_NAME FROM ENDOWMENT AS ENDOWMENTalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = ENDOWMENTalias0.SCHOOL_ID WHERE ENDOWMENTalias0.AMOUNT > var0 GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING COUNT( ENDOWMENTalias0.* ) > var1 ;
Find the number of schools that have more than one donator whose donation amount is less than var0 .,spider,SELECT COUNT( * ) FROM ( SELECT ENDOWMENTalias0.* FROM ENDOWMENT AS ENDOWMENTalias0 WHERE AMOUNT > var0 GROUP BY ENDOWMENTalias0.SCHOOL_ID HAVING COUNT( ENDOWMENTalias0.* ) > var1 ) ;
"List the name , IHSAA Football Class , and Mascot of the schools that have more than var0 of budgeted amount or were founded before var1 , in the order of percent of total invested budget and total budgeted budget .",spider,"SELECT SCHOOLalias0.IHSAA_FOOTBALL_CLASS , SCHOOLalias0.MASCOT , SCHOOLalias0.SCHOOL_NAME FROM SCHOOL AS SCHOOLalias0 JOIN BUDGET AS BUDGETalias0 ON SCHOOLalias0.SCHOOL_ID = BUDGETalias0.SCHOOL_ID WHERE BUDGETED > var0 OR YEAR < var1 ORDER BY BUDGETalias0.TOTAL_BUDGET_PERCENT_INVESTED , BUDGETalias0.TOTAL_BUDGET_PERCENT_BUDGETED ;"
How many buildings are there ?,spider,SELECT COUNT( * ) FROM BUILDING AS BUILDINGalias0 ;
"Show the name , street address , and number of floors for all buildings ordered by the number of floors .",spider,"SELECT BUILDINGalias0.FLOORS , BUILDINGalias0.NAME , BUILDINGalias0.STREET_ADDRESS FROM BUILDING AS BUILDINGalias0 ORDER BY BUILDINGalias0.FLOORS ;"
What is the name of the tallest building ?,spider,SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 ORDER BY BUILDINGalias0.HEIGHT_FEET DESC LIMIT 1 ;
"What are the average , maximum , and minimum number of floors for all buildings ?",spider,"SELECT AVG( BUILDINGalias0.FLOORS ) , MAX( BUILDINGalias0.FLOORS ) , MIN( BUILDINGalias0.FLOORS ) FROM BUILDING AS BUILDINGalias0 ;"
Show the number of buildings with a height above the average or a number of floors above the average .,spider,SELECT COUNT( * ) FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.FLOORS > ( SELECT AVG( BUILDINGalias2.FLOORS ) FROM BUILDING AS BUILDINGalias2 ) OR BUILDINGalias0.HEIGHT_FEET > ( SELECT AVG( BUILDINGalias1.HEIGHT_FEET ) FROM BUILDING AS BUILDINGalias1 ) ;
List the names of buildings with at least var0 feet of height and with at least var1 floors .,spider,SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.FLOORS >= var1 AND BUILDINGalias0.HEIGHT_FEET >= var0 ;
"Show the names and locations of institutions that are founded after var0 and have the type "" var1 "" .",spider,"SELECT INSTITUTIONalias0.INSTITUTION , INSTITUTIONalias0.LOCATION FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.FOUNDED > var0 AND INSTITUTIONalias0.TYPE = ""var1"" ;"
"Show institution types , along with the number of institutions and total enrollment for each type .",spider,"SELECT COUNT( * ) , INSTITUTIONalias0.TYPE , SUM( INSTITUTIONalias0.ENROLLMENT ) FROM INSTITUTION AS INSTITUTIONalias0 GROUP BY INSTITUTIONalias0.TYPE ;"
Show the institution type with the largest number of institutions .,spider,SELECT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the institution type with an institution founded after var0 and an institution with at least var1 enrollment .,spider,SELECT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.ENROLLMENT >= var1 AND INSTITUTIONalias0.FOUNDED > var0 ;
Show the name of buildings that do not have any institution .,spider,SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 WHERE BUILDINGalias0.BUILDING_ID NOT IN ( SELECT INSTITUTIONalias0.BUILDING_ID FROM INSTITUTION AS INSTITUTIONalias0 ) ;
Show the names of buildings except for those having an institution founded in var0 .,spider,SELECT BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 EXCEPT SELECT BUILDINGalias1.NAME FROM BUILDING AS BUILDINGalias1 JOIN INSTITUTION AS INSTITUTIONalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias1.BUILDING_ID WHERE INSTITUTIONalias0.FOUNDED = var0 ;
"For each building , show the name of the building and the number of institutions in it .",spider,"SELECT BUILDINGalias0.NAME , COUNT( * ) FROM BUILDING AS BUILDINGalias0 JOIN INSTITUTION AS INSTITUTIONalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID GROUP BY BUILDINGalias0.BUILDING_ID ;"
Show the names and heights of buildings with at least two institutions founded after var0 .,spider,"SELECT BUILDINGalias0.HEIGHT_FEET , BUILDINGalias0.NAME FROM BUILDING AS BUILDINGalias0 JOIN INSTITUTION AS INSTITUTIONalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID WHERE INSTITUTIONalias0.FOUNDED > var0 GROUP BY BUILDINGalias0.BUILDING_ID HAVING COUNT( * ) >= var1 ;"
Show all the distinct institution types .,spider,SELECT DISTINCT INSTITUTIONalias0.TYPE FROM INSTITUTION AS INSTITUTIONalias0 ;
Show institution names along with the number of proteins for each institution .,spider,"SELECT COUNT( PROTEINalias0.* ) , INSTITUTIONalias0.INSTITUTION FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID GROUP BY INSTITUTIONalias0.INSTITUTION_ID ;"
"How many proteins are associated with an institution founded after var0 or an institution with type "" var1 "" ?",spider,"SELECT COUNT( PROTEINalias0.* ) FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID WHERE INSTITUTIONalias0.FOUNDED > var0 OR INSTITUTIONalias0.TYPE = ""var1"" ;"
Show the protein name and the institution name .,spider,"SELECT INSTITUTIONalias0.INSTITUTION , PROTEINalias0.PROTEIN_NAME FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID ;"
How many proteins are associated with an institution in a building with at least var0 floors ?,spider,SELECT COUNT( PROTEINalias0.* ) FROM INSTITUTION AS INSTITUTIONalias0 JOIN PROTEIN AS PROTEINalias0 ON PROTEINalias0.INSTITUTION_ID = INSTITUTIONalias0.INSTITUTION_ID JOIN BUILDING AS BUILDINGalias0 ON INSTITUTIONalias0.BUILDING_ID = BUILDINGalias0.BUILDING_ID WHERE BUILDINGalias0.FLOORS >= var0 ;
How many institutions do not have an associated protein in our record ?,spider,SELECT COUNT( * ) FROM INSTITUTION AS INSTITUTIONalias0 WHERE INSTITUTIONalias0.INSTITUTION_ID NOT IN ( SELECT PROTEINalias0.INSTITUTION_ID FROM PROTEIN AS PROTEINalias0 ) ;
Show all the locations where no cinema has capacity over var0 .,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 EXCEPT SELECT CINEMAalias1.LOCATION FROM CINEMA AS CINEMAalias1 WHERE CINEMAalias1.CAPACITY > var0 ;
Show all the locations where some cinemas were opened in both year var0 and year var1 .,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CINEMAalias0.OPENNING_YEAR = var0 INTERSECT SELECT CINEMAalias1.LOCATION FROM CINEMA AS CINEMAalias1 WHERE CINEMAalias1.OPENNING_YEAR = var1 ;
How many cinema do we have ?,spider,SELECT COUNT( * ) FROM CINEMA AS CINEMAalias0 ;
Count the number of cinemas .,spider,SELECT COUNT( * ) FROM CINEMA AS CINEMAalias0 ;
"Show name , opening year , and capacity for each cinema .",spider,"SELECT CINEMAalias0.CAPACITY , CINEMAalias0.NAME , CINEMAalias0.OPENNING_YEAR FROM CINEMA AS CINEMAalias0 ;"
Show the cinema name and location for cinemas with capacity above average .,spider,"SELECT CINEMAalias0.LOCATION , CINEMAalias0.NAME FROM CINEMA AS CINEMAalias0 WHERE CINEMAalias0.CAPACITY > ( SELECT AVG( CINEMAalias1.CAPACITY ) FROM CINEMA AS CINEMAalias1 ) ;"
What are all the locations with a cinema ?,spider,SELECT DISTINCT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 ;
Find the distinct locations that has a cinema .,spider,SELECT DISTINCT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 ;
Show all the cinema names and opening years in descending order of opening year .,spider,"SELECT CINEMAalias0.NAME , CINEMAalias0.OPENNING_YEAR FROM CINEMA AS CINEMAalias0 ORDER BY CINEMAalias0.OPENNING_YEAR DESC ;"
What are the name and location of the cinema with the largest capacity ?,spider,"SELECT CINEMAalias0.LOCATION , CINEMAalias0.NAME FROM CINEMA AS CINEMAalias0 ORDER BY CINEMAalias0.CAPACITY DESC LIMIT 1 ;"
"Show the average , minimum , and maximum capacity for all the cinemas opened in year var0 or later .",spider,"SELECT AVG( CINEMAalias0.CAPACITY ) , MAX( CINEMAalias0.CAPACITY ) , MIN( CINEMAalias0.CAPACITY ) FROM CINEMA AS CINEMAalias0 WHERE CINEMAalias0.OPENNING_YEAR >= var0 ;"
Show each location and the number of cinemas there .,spider,"SELECT CINEMAalias0.LOCATION , COUNT( * ) FROM CINEMA AS CINEMAalias0 GROUP BY CINEMAalias0.LOCATION ;"
What is the location with the most cinemas opened in year var0 or later ?,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE OPENNING_YEAR >= var0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all the locations with at least two cinemas with capacity above var0 .,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) >= var1 ;
Which locations have var1 or more cinemas with capacity over var0 ?,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) >= var1 ;
Show the title and director for all films .,spider,"SELECT FILMalias0.DIRECTED_BY , FILMalias0.TITLE FROM FILM AS FILMalias0 ;"
What are the title and director of each film ?,spider,"SELECT FILMalias0.DIRECTED_BY , FILMalias0.TITLE FROM FILM AS FILMalias0 ;"
Show all directors .,spider,SELECT DISTINCT FILMalias0.DIRECTED_BY FROM FILM AS FILMalias0 ;
Who are all the directors ?,spider,SELECT DISTINCT FILMalias0.DIRECTED_BY FROM FILM AS FILMalias0 ;
List all directors along with the number of films directed by each director .,spider,"SELECT COUNT( * ) , FILMalias0.DIRECTED_BY FROM FILM AS FILMalias0 GROUP BY FILMalias0.DIRECTED_BY ;"
What is total number of show times per dat for each cinema ?,spider,"SELECT CINEMAalias0.NAME , SUM( SCHEDULEalias0.SHOW_TIMES_PER_DAY ) FROM SCHEDULE AS SCHEDULEalias0 JOIN CINEMA AS CINEMAalias0 ON SCHEDULEalias0.CINEMA_ID = CINEMAalias0.CINEMA_ID GROUP BY SCHEDULEalias0.CINEMA_ID ;"
What are the title and maximum price of each film ?,spider,"SELECT FILMalias0.TITLE , MAX( SCHEDULEalias0.PRICE ) FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY SCHEDULEalias0.FILM_ID ;"
Give me the title and highest price for each film .,spider,"SELECT FILMalias0.TITLE , MAX( SCHEDULEalias0.PRICE ) FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY SCHEDULEalias0.FILM_ID ;"
"Show cinema name , film title , date , and price for each record in schedule .",spider,"SELECT CINEMAalias0.NAME , FILMalias0.TITLE , SCHEDULEalias0.DATE , SCHEDULEalias0.PRICE FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID JOIN CINEMA AS CINEMAalias0 ON SCHEDULEalias0.CINEMA_ID = CINEMAalias0.CINEMA_ID ;"
What are the title and director of the films without any schedule ?,spider,"SELECT FILMalias0.DIRECTED_BY , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT SCHEDULEalias0.FILM_ID FROM SCHEDULE AS SCHEDULEalias0 ) ;"
Show director with the largest number of show times in total .,spider,SELECT FILMalias0.DIRECTED_BY FROM SCHEDULE AS SCHEDULEalias0 JOIN FILM AS FILMalias0 ON SCHEDULEalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY FILMalias0.DIRECTED_BY ORDER BY SUM( SCHEDULEalias0.SHOW_TIMES_PER_DAY ) DESC LIMIT 1 ;
Find the locations that have more than one movie theater with capacity above var0 .,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) > var1 ;
In which locations are there more than one movie theater with capacity above var0 ?,spider,SELECT CINEMAalias0.LOCATION FROM CINEMA AS CINEMAalias0 WHERE CAPACITY > var0 GROUP BY CINEMAalias0.LOCATION HAVING COUNT( * ) > var1 ;
How many films have the word ' var0 ' in their titles ?,spider,"SELECT COUNT( * ) FROM FILM AS FILMalias0 WHERE FILMalias0.TITLE LIKE ""var0"" ;"
Count the number of films whose title contains the word ' var0 ' .,spider,"SELECT COUNT( * ) FROM FILM AS FILMalias0 WHERE FILMalias0.TITLE LIKE ""var0"" ;"
Are the customers holding coupons with amount var0 bad or good ?,spider,SELECT CUSTOMERSalias0.GOOD_OR_BAD_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN DISCOUNT_COUPONS AS DISCOUNT_COUPONSalias0 ON DISCOUNT_COUPONSalias0.COUPON_ID = CUSTOMERSalias0.COUPON_ID WHERE DISCOUNT_COUPONSalias0.COUPON_AMOUNT = var0 ;
"How many bookings did each customer make ? List the customer id , first name , and the count .",spider,"SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.FIRST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN BOOKINGS AS BOOKINGSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = BOOKINGSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ;"
What is the maximum total amount paid by a customer ? List the customer id and amount .,spider,"SELECT PAYMENTSalias0.CUSTOMER_ID , SUM( PAYMENTSalias0.AMOUNT_PAID ) FROM PAYMENTS AS PAYMENTSalias0 GROUP BY CUSTOMER_ID ORDER BY SUM( PAYMENTSalias0.AMOUNT_PAID ) DESC LIMIT 1 ;"
What are the id and the amount of refund of the booking that incurred the most times of payments ?,spider,"SELECT BOOKINGSalias0.AMOUNT_OF_REFUND , BOOKINGSalias0.BOOKING_ID FROM BOOKINGS AS BOOKINGSalias0 JOIN PAYMENTS AS PAYMENTSalias0 ON PAYMENTSalias0.BOOKING_ID = BOOKINGSalias0.BOOKING_ID GROUP BY BOOKINGSalias0.BOOKING_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the id of the product that is booked for var0 times ?,spider,SELECT PRODUCTS_BOOKEDalias0.PRODUCT_ID FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 GROUP BY PRODUCTS_BOOKEDalias0.PRODUCT_ID HAVING COUNT( * ) = var0 ;
What is the product description of the product booked with an amount of var0 ?,spider,SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_DESCRIPTION FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 JOIN PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ON PRODUCTS_FOR_HIREalias0.PRODUCT_ID = PRODUCTS_BOOKEDalias0.PRODUCT_ID WHERE PRODUCTS_BOOKEDalias0.BOOKED_AMOUNT = var0 ;
What are the start date and end date of the booking that has booked the product named ' var0 ' ?,spider,"SELECT BOOKINGSalias0.BOOKING_END_DATE , BOOKINGSalias0.BOOKING_START_DATE FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 JOIN PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 ON PRODUCTS_FOR_HIREalias0.PRODUCT_ID = PRODUCTS_BOOKEDalias0.PRODUCT_ID JOIN BOOKINGS AS BOOKINGSalias0 ON PRODUCTS_BOOKEDalias0.BOOKING_ID = BOOKINGSalias0.BOOKING_ID WHERE PRODUCTS_FOR_HIREalias0.PRODUCT_NAME = ""var0"" ;"
What are the names of products whose availability equals to var0 ?,spider,SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_NAME FROM VIEW_PRODUCT_AVAILABILITY AS VIEW_PRODUCT_AVAILABILITYalias0 JOIN PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ON VIEW_PRODUCT_AVAILABILITYalias0.PRODUCT_ID = PRODUCTS_FOR_HIREalias0.PRODUCT_ID WHERE VIEW_PRODUCT_AVAILABILITYalias0.AVAILABLE_YN = var0 ;
How many different product types are there ?,spider,SELECT COUNT( DISTINCT PRODUCTS_FOR_HIREalias0.PRODUCT_TYPE_CODE ) FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 ;
"What are the first name , last name , and gender of all the var0 customers ? Order by their last name .",spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME , GENDER_MF FROM CUSTOMERS AS CUSTOMERSalias0 WHERE GOOD_OR_BAD_CUSTOMER = ""var0"" ORDER BY CUSTOMERSalias0.LAST_NAME ;"
What is the average amount due for all the payments ?,spider,SELECT AVG( PAYMENTSalias0.AMOUNT_DUE ) FROM PAYMENTS AS PAYMENTSalias0 ;
"What are the maximum , minimum , and average booked count for the products booked ?",spider,"SELECT AVG( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) , MAX( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) , MIN( PRODUCTS_BOOKEDalias0.BOOKED_COUNT ) FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 ;"
What are all the distinct payment types ?,spider,SELECT DISTINCT PAYMENTSalias0.PAYMENT_TYPE_CODE FROM PAYMENTS AS PAYMENTSalias0 ;
What are the daily hire costs for the products with substring ' var0 ' in its name ?,spider,"SELECT PRODUCTS_FOR_HIREalias0.DAILY_HIRE_COST FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 WHERE PRODUCTS_FOR_HIREalias0.PRODUCT_NAME LIKE ""var0"" ;"
How many products are never booked with amount higher than var0 ?,spider,SELECT COUNT( * ) FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 WHERE PRODUCTS_FOR_HIREalias0.PRODUCT_ID NOT IN ( SELECT PRODUCTS_BOOKEDalias0.PRODUCT_ID FROM PRODUCTS_BOOKED AS PRODUCTS_BOOKEDalias0 WHERE PRODUCTS_BOOKEDalias0.BOOKED_AMOUNT > var0 ) ;
What are the coupon amount of the coupons owned by both var0 and var1 customers ?,spider,"SELECT DISCOUNT_COUPONSalias0.COUPON_AMOUNT FROM DISCOUNT_COUPONS AS DISCOUNT_COUPONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON DISCOUNT_COUPONSalias0.COUPON_ID = CUSTOMERSalias0.COUPON_ID WHERE CUSTOMERSalias0.GOOD_OR_BAD_CUSTOMER = ""var0"" INTERSECT SELECT DISCOUNT_COUPONSalias1.COUPON_AMOUNT FROM DISCOUNT_COUPONS AS DISCOUNT_COUPONSalias1 JOIN CUSTOMERS AS CUSTOMERSalias1 ON DISCOUNT_COUPONSalias1.COUPON_ID = CUSTOMERSalias1.COUPON_ID WHERE CUSTOMERSalias1.GOOD_OR_BAD_CUSTOMER = ""var1"" ;"
What are the payment date of the payment with amount paid higher than var0 or with payment type is ' var1 ',spider,"SELECT PAYMENTSalias0.PAYMENT_DATE FROM PAYMENTS AS PAYMENTSalias0 WHERE PAYMENTSalias0.AMOUNT_PAID > var0 OR PAYMENTSalias0.PAYMENT_TYPE_CODE = ""var1"" ;"
What are the names and descriptions of the products that are of ' var0 ' type and have daily hire cost lower than var1 ?,spider,"SELECT PRODUCTS_FOR_HIREalias0.PRODUCT_DESCRIPTION , PRODUCTS_FOR_HIREalias0.PRODUCT_NAME FROM PRODUCTS_FOR_HIRE AS PRODUCTS_FOR_HIREalias0 WHERE PRODUCTS_FOR_HIREalias0.DAILY_HIRE_COST < var1 AND PRODUCTS_FOR_HIREalias0.PRODUCT_TYPE_CODE = ""var0"" ;"
How many phones are there ?,spider,SELECT COUNT( * ) FROM PHONE AS PHONEalias0 ;
List the names of phones in ascending order of price .,spider,SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 ORDER BY PHONEalias0.PRICE ASC ;
What are the memories and carriers of phones ?,spider,"SELECT PHONEalias0.CARRIER , PHONEalias0.MEMORY_IN_G FROM PHONE AS PHONEalias0 ;"
List the distinct carriers of phones with memories bigger than var0 .,spider,SELECT DISTINCT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 WHERE PHONEalias0.MEMORY_IN_G > var0 ;
"Show the names of phones with carrier either "" var0 "" or "" var1 "" .",spider,"SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.CARRIER = ""var0"" OR PHONEalias0.CARRIER = ""var1"" ;"
What is the carrier of the most expensive phone ?,spider,SELECT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 ORDER BY PHONEalias0.PRICE DESC LIMIT 1 ;
Show different carriers of phones together with the number of phones with each carrier .,spider,"SELECT COUNT( * ) , PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 GROUP BY PHONEalias0.CARRIER ;"
Show the most frequently used carrier of the phones .,spider,SELECT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 GROUP BY CARRIER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the carriers that have both phones with memory smaller than var0 and phones with memory bigger than var1 .,spider,SELECT PHONEalias0.CARRIER FROM PHONE AS PHONEalias0 WHERE PHONEalias0.MEMORY_IN_G < var0 INTERSECT SELECT PHONEalias1.CARRIER FROM PHONE AS PHONEalias1 WHERE PHONEalias1.MEMORY_IN_G > var1 ;
Show the names of phones and the districts of markets they are on .,spider,"SELECT MARKETalias0.DISTRICT , PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID ;"
"Show the names of phones and the districts of markets they are on , in ascending order of the ranking of the market .",spider,"SELECT MARKETalias0.DISTRICT , PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID ORDER BY MARKETalias0.RANKING ;"
Show the names of phones that are on market with number of shops greater than var0 .,spider,SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN MARKET AS MARKETalias0 ON PHONE_MARKETalias0.MARKET_ID = MARKETalias0.MARKET_ID JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID WHERE MARKETalias0.NUM_OF_SHOPS > var0 ;
"For each phone , show its names and total number of stocks .",spider,"SELECT PHONEalias0.NAME , SUM( PHONE_MARKETalias0.NUM_OF_STOCK ) FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID GROUP BY PHONEalias0.NAME ;"
"Show the names of phones that have total number of stocks bigger than var0 , in descending order of the total number of stocks .",spider,SELECT PHONEalias0.NAME FROM PHONE_MARKET AS PHONE_MARKETalias0 JOIN PHONE AS PHONEalias0 ON PHONEalias0.PHONE_ID = PHONE_MARKETalias0.PHONE_ID GROUP BY PHONEalias0.NAME HAVING SUM( PHONE_MARKETalias0.NUM_OF_STOCK ) >= var0 ORDER BY SUM( PHONE_MARKETalias0.NUM_OF_STOCK ) DESC ;
List the names of phones that are not on any market .,spider,SELECT PHONEalias0.NAME FROM PHONE AS PHONEalias0 WHERE PHONEalias0.PHONE_ID NOT IN ( SELECT PHONE_MARKETalias0.PHONE_ID FROM PHONE_MARKET AS PHONE_MARKETalias0 ) ;
How many gas companies are there ?,spider,SELECT COUNT( * ) FROM COMPANY AS COMPANYalias0 ;
What is the total number of companies ?,spider,SELECT COUNT( * ) FROM COMPANY AS COMPANYalias0 ;
List the company name and rank for all companies in the decreasing order of their sales .,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_BILLION DESC ;"
What is the name and rank of every company ordered by descending number of sales ?,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_BILLION DESC ;"
Show the company name and the main industry for all companies whose headquarters are not from var0 .,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.HEADQUARTERS != ""var0"" ;"
What are the companies and main industries of all companies that are not headquartered in the United States ?,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.HEADQUARTERS != ""var0"" ;"
Show all company names and headquarters in the descending order of market value .,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.MARKET_VALUE DESC ;"
What are the names and headquarters of all companies ordered by descending market value ?,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.MARKET_VALUE DESC ;"
"Show minimum , maximum , and average market value for all companies .",spider,"SELECT AVG( COMPANYalias0.MARKET_VALUE ) , MAX( COMPANYalias0.MARKET_VALUE ) , MIN( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 ;"
"What is the minimum , maximum , and average market value for every company ?",spider,"SELECT AVG( COMPANYalias0.MARKET_VALUE ) , MAX( COMPANYalias0.MARKET_VALUE ) , MIN( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 ;"
Show all main industry for all companies .,spider,SELECT DISTINCT COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 ;
What are the different main industries for all companies ?,spider,SELECT DISTINCT COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 ;
List all headquarters and the number of companies in each headquarter .,spider,"SELECT COMPANYalias0.HEADQUARTERS , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS ;"
"For each headquarter , what are the headquarter and how many companies are centered there ?",spider,"SELECT COMPANYalias0.HEADQUARTERS , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS ;"
Show the different headquarters and number of companies at each headquarter .,spider,"SELECT COMPANYalias0.HEADQUARTERS , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS ;"
Show all main industry and total market value in each industry .,spider,"SELECT COMPANYalias0.MAIN_INDUSTRY , SUM( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.MAIN_INDUSTRY ;"
What are the main indstries and total market value for each industry ?,spider,"SELECT COMPANYalias0.MAIN_INDUSTRY , SUM( COMPANYalias0.MARKET_VALUE ) FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.MAIN_INDUSTRY ;"
List the main industry with highest total market value and its number of companies .,spider,"SELECT COMPANYalias0.MAIN_INDUSTRY , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY MAIN_INDUSTRY ORDER BY SUM( COMPANYalias0.MARKET_VALUE ) DESC LIMIT 1 ;"
"For each main industry , what is the total number of companies for the industry with the highest total market value ?",spider,"SELECT COMPANYalias0.MAIN_INDUSTRY , COUNT( * ) FROM COMPANY AS COMPANYalias0 GROUP BY MAIN_INDUSTRY ORDER BY SUM( COMPANYalias0.MARKET_VALUE ) DESC LIMIT 1 ;"
Show headquarters with at least two companies in the banking industry .,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = ""var0"" GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var1 ;"
What are the headquarters with at least two companies in the banking industry ?,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = ""var0"" GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var1 ;"
"Show gas station id , location , and manager_name for all gas stations ordered by open year .",spider,"SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.MANAGER_NAME , GAS_STATIONalias0.STATION_ID FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;"
"What are the gas station ids , locations , and manager names for the gas stations ordered by opening year ?",spider,"SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.MANAGER_NAME , GAS_STATIONalias0.STATION_ID FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;"
How many gas station are opened between var0 and var1 ?,spider,SELECT COUNT( * ) FROM GAS_STATION AS GAS_STATIONalias0 WHERE GAS_STATIONalias0.OPEN_YEAR BETWEEN var0 AND var1 ;
What is the total number of gas stations that opened between var0 and var1 ?,spider,SELECT COUNT( * ) FROM GAS_STATION AS GAS_STATIONalias0 WHERE GAS_STATIONalias0.OPEN_YEAR BETWEEN var0 AND var1 ;
Show all locations and the number of gas stations in each location ordered by the count .,spider,"SELECT COUNT( * ) , GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 GROUP BY LOCATION ORDER BY COUNT( * ) ;"
"For each location , how many gas stations are there in order ?",spider,"SELECT COUNT( * ) , GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 GROUP BY LOCATION ORDER BY COUNT( * ) ;"
Show all headquarters with both a company in banking industry and a company in var1 .,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.MAIN_INDUSTRY = ""var0"" INTERSECT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = ""var1"" ;"
What are the headquarters that have both a company in the banking and ' oil and gas ' industries ?,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.MAIN_INDUSTRY = ""var0"" INTERSECT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = ""var1"" ;"
Show all headquarters without a company in banking industry .,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 EXCEPT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = ""var0"" ;"
What are the headquarters without companies that are in the banking industry ?,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 EXCEPT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.MAIN_INDUSTRY = ""var0"" ;"
Show the company name with the number of gas station .,spider,"SELECT COMPANYalias0.COMPANY , COUNT( STATION_COMPANYalias0.* ) FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID GROUP BY STATION_COMPANYalias0.COMPANY_ID ;"
"For each company id , what are the companies and how many gas stations does each one operate ?",spider,"SELECT COMPANYalias0.COMPANY , COUNT( STATION_COMPANYalias0.* ) FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID GROUP BY STATION_COMPANYalias0.COMPANY_ID ;"
Show company name and main industry without a gas station .,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.COMPANY_ID NOT IN ( SELECT STATION_COMPANYalias0.COMPANY_ID FROM STATION_COMPANY AS STATION_COMPANYalias0 ) ;"
What are the main industries of the companies without gas stations and what are the companies ?,spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MAIN_INDUSTRY FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.COMPANY_ID NOT IN ( SELECT STATION_COMPANYalias0.COMPANY_ID FROM STATION_COMPANY AS STATION_COMPANYalias0 ) ;"
Show the manager name for gas stations belonging to the var0 company .,spider,"SELECT GAS_STATIONalias0.MANAGER_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID WHERE COMPANYalias0.COMPANY = ""var0"" ;"
What are the names of the managers for gas stations that are operated by the var0 company ?,spider,"SELECT GAS_STATIONalias0.MANAGER_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID WHERE COMPANYalias0.COMPANY = ""var0"" ;"
Show all locations where a gas station for company with market value greater than var0 is located .,spider,SELECT GAS_STATIONalias0.LOCATION FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID WHERE COMPANYalias0.MARKET_VALUE > var0 ;
What are the locations that have gas stations owned by a company with a market value greater than var0 ?,spider,SELECT GAS_STATIONalias0.LOCATION FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID WHERE COMPANYalias0.MARKET_VALUE > var0 ;
Show the manager name with most number of gas stations opened after var0 .,spider,SELECT GAS_STATIONalias0.MANAGER_NAME FROM GAS_STATION AS GAS_STATIONalias0 WHERE OPEN_YEAR > var0 GROUP BY MANAGER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the manager with the most gas stations that opened after var0 ?,spider,SELECT GAS_STATIONalias0.MANAGER_NAME FROM GAS_STATION AS GAS_STATIONalias0 WHERE OPEN_YEAR > var0 GROUP BY MANAGER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
order all gas station locations by the opening year .,spider,SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
What are the locations of all the gas stations ordered by opening year ?,spider,SELECT GAS_STATIONalias0.LOCATION FROM GAS_STATION AS GAS_STATIONalias0 ORDER BY GAS_STATIONalias0.OPEN_YEAR ;
"find the rank , company names , market values of the companies in the banking industry order by their sales and profits in billion .",spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MARKET_VALUE , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = ""var0"" ORDER BY COMPANYalias0.SALES_BILLION , COMPANYalias0.PROFITS_BILLION ;"
"What is the rank , company , and market value of every comapny in the banking industry ordered by sales and profits ?",spider,"SELECT COMPANYalias0.COMPANY , COMPANYalias0.MARKET_VALUE , COMPANYalias0.RANK FROM COMPANY AS COMPANYalias0 WHERE MAIN_INDUSTRY = ""var0"" ORDER BY COMPANYalias0.SALES_BILLION , COMPANYalias0.PROFITS_BILLION ;"
find the location and Representative name of the gas stations owned by the companies with top var0 Asset amounts .,spider,"SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.REPRESENTATIVE_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID ORDER BY COMPANYalias0.ASSETS_BILLION DESC LIMIT var0 ;"
What are the locations and representatives ' names of the gas stations owned by the companies with the var0 largest amounts of assets ?,spider,"SELECT GAS_STATIONalias0.LOCATION , GAS_STATIONalias0.REPRESENTATIVE_NAME FROM STATION_COMPANY AS STATION_COMPANYalias0 JOIN COMPANY AS COMPANYalias0 ON STATION_COMPANYalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID JOIN GAS_STATION AS GAS_STATIONalias0 ON STATION_COMPANYalias0.STATION_ID = GAS_STATIONalias0.STATION_ID ORDER BY COMPANYalias0.ASSETS_BILLION DESC LIMIT var0 ;"
How many regions do we have ?,spider,SELECT COUNT( * ) FROM REGION AS REGIONalias0 ;
Count the number of regions .,spider,SELECT COUNT( * ) FROM REGION AS REGIONalias0 ;
How many regions do we have ?,spider,SELECT COUNT( * ) FROM REGION AS REGIONalias0 ;
Count the number of regions .,spider,SELECT COUNT( * ) FROM REGION AS REGIONalias0 ;
Show all distinct region names ordered by their labels .,spider,SELECT DISTINCT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.LABEL ;
"What are the different region names , ordered by labels ?",spider,SELECT DISTINCT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.LABEL ;
How many parties do we have ?,spider,SELECT COUNT( DISTINCT PARTYalias0.PARTY_NAME ) FROM PARTY AS PARTYalias0 ;
Count the number of different parties .,spider,SELECT COUNT( DISTINCT PARTYalias0.PARTY_NAME ) FROM PARTY AS PARTYalias0 ;
"Show the ministers and the time they took and left office , listed by the time they left office .",spider,"SELECT PARTYalias0.LEFT_OFFICE , PARTYalias0.MINISTER , PARTYalias0.TOOK_OFFICE FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE ;"
"Who are the ministers , when did they take office , and when did they leave office , ordered by when they left office ?",spider,"SELECT PARTYalias0.LEFT_OFFICE , PARTYalias0.MINISTER , PARTYalias0.TOOK_OFFICE FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE ;"
Show the minister who took office after var0 or before var1 .,spider,SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.TOOK_OFFICE < var1 OR PARTYalias0.TOOK_OFFICE > var0 ;
Who are the ministers who took office after var0 or before var1 ?,spider,SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.TOOK_OFFICE < var1 OR PARTYalias0.TOOK_OFFICE > var0 ;
Show all ministers who do not belong to var0 .,spider,"SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_NAME != ""var0"" ;"
Which ministers are not a part of the var0 ?,spider,"SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_NAME != ""var0"" ;"
Show all ministers and parties they belong to in descending order of the time they took office .,spider,"SELECT PARTYalias0.MINISTER , PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.TOOK_OFFICE DESC ;"
"Who are the ministers and what parties do they belong to , listed descending by the times they took office ?",spider,"SELECT PARTYalias0.MINISTER , PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.TOOK_OFFICE DESC ;"
Return the minister who left office at the latest time .,spider,SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE DESC LIMIT 1 ;
Which minister left office the latest ?,spider,SELECT PARTYalias0.MINISTER FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.LEFT_OFFICE DESC LIMIT 1 ;
List member names and their party names .,spider,"SELECT MEMBERalias0.MEMBER_NAME , PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID ;"
What are the names of members and their corresponding parties ?,spider,"SELECT MEMBERalias0.MEMBER_NAME , PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID ;"
Show all party names and the number of members in each party .,spider,"SELECT COUNT( * ) , PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID GROUP BY MEMBERalias0.PARTY_ID ;"
How many members are in each party ?,spider,"SELECT COUNT( * ) , PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID GROUP BY MEMBERalias0.PARTY_ID ;"
What is the name of party with most number of members ?,spider,SELECT PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID GROUP BY MEMBERalias0.PARTY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the name of the party with the most members .,spider,SELECT PARTYalias0.PARTY_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID GROUP BY MEMBERalias0.PARTY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all party names and their region names .,spider,"SELECT PARTYalias0.PARTY_NAME , REGIONalias0.REGION_NAME FROM PARTY AS PARTYalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = PARTYalias0.REGION_ID ;"
What are the names of parties and their respective regions ?,spider,"SELECT PARTYalias0.PARTY_NAME , REGIONalias0.REGION_NAME FROM PARTY AS PARTYalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = PARTYalias0.REGION_ID ;"
Show names of parties that does not have any members .,spider,SELECT PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT MEMBERalias0.PARTY_ID FROM MEMBER AS MEMBERalias0 ) ;
What are the names of parties that have no members ?,spider,SELECT PARTYalias0.PARTY_NAME FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT MEMBERalias0.PARTY_ID FROM MEMBER AS MEMBERalias0 ) ;
Show the member names which are in both the party with id var0 and the party with id var1 .,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.PARTY_ID = var0 INTERSECT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.PARTY_ID = var1 ;
Which member names are shared among members in the party with the id var0 and the party with the id var1 ?,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.PARTY_ID = var0 INTERSECT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 WHERE MEMBERalias1.PARTY_ID = var1 ;
Show member names that are not in the var0 .,spider,"SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID WHERE PARTYalias0.PARTY_NAME != ""var0"" ;"
Which member names corresponding to members who are not in the var0 ?,spider,"SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = MEMBERalias0.PARTY_ID WHERE PARTYalias0.PARTY_NAME != ""var0"" ;"
How many party events do we have ?,spider,SELECT COUNT( PARTY_EVENTSalias0.* ) FROM PARTY_EVENTS AS PARTY_EVENTSalias0 ;
Count the number of party events .,spider,SELECT COUNT( PARTY_EVENTSalias0.* ) FROM PARTY_EVENTS AS PARTY_EVENTSalias0 ;
Show party names and the number of events for each party .,spider,"SELECT COUNT( PARTY_EVENTSalias0.* ) , PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID ;"
How many events are there for each party ?,spider,"SELECT COUNT( PARTY_EVENTSalias0.* ) , PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID ;"
Show all member names who are not in charge of any event .,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 EXCEPT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias1.MEMBER_ID ;
What are the names of members who are not in charge of any events ?,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 EXCEPT SELECT MEMBERalias1.MEMBER_NAME FROM MEMBER AS MEMBERalias1 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias1.MEMBER_ID ;
What are the names of parties with at least var0 events ?,spider,SELECT PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID HAVING COUNT( PARTY_EVENTSalias0.* ) >= var0 ;
Return the names of parties that have two or more events .,spider,SELECT PARTYalias0.PARTY_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID GROUP BY PARTY_EVENTSalias0.PARTY_ID HAVING COUNT( PARTY_EVENTSalias0.* ) >= var0 ;
What is the name of member in charge of greatest number of events ?,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias0.MEMBER_ID GROUP BY PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID ORDER BY COUNT( PARTY_EVENTSalias0.* ) DESC LIMIT 1 ;
Return the name of the member who is in charge of the most events .,spider,SELECT MEMBERalias0.MEMBER_NAME FROM MEMBER AS MEMBERalias0 JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID = MEMBERalias0.MEMBER_ID GROUP BY PARTY_EVENTSalias0.MEMBER_IN_CHARGE_ID ORDER BY COUNT( PARTY_EVENTSalias0.* ) DESC LIMIT 1 ;
find the event names that have more than var0 records .,spider,SELECT PARTY_EVENTSalias0.EVENT_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 GROUP BY PARTY_EVENTSalias0.EVENT_NAME HAVING COUNT( PARTY_EVENTSalias0.* ) > var0 ;
Which event names were used more than twice for party events ?,spider,SELECT PARTY_EVENTSalias0.EVENT_NAME FROM PARTY_EVENTS AS PARTY_EVENTSalias0 GROUP BY PARTY_EVENTSalias0.EVENT_NAME HAVING COUNT( PARTY_EVENTSalias0.* ) > var0 ;
How many Annual Meeting events happened in the var0 region ?,spider,"SELECT COUNT( PARTY_EVENTSalias0.* ) FROM REGION AS REGIONalias0 JOIN PARTY AS PARTYalias0 ON REGIONalias0.REGION_ID = PARTYalias0.REGION_ID JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID WHERE PARTY_EVENTSalias0.EVENT_NAME = ""var1"" AND REGIONalias0.REGION_NAME = ""var0"" ;"
Count the number of Annual Meeting events that took place in the region of the var0 .,spider,"SELECT COUNT( PARTY_EVENTSalias0.* ) FROM REGION AS REGIONalias0 JOIN PARTY AS PARTYalias0 ON REGIONalias0.REGION_ID = PARTYalias0.REGION_ID JOIN PARTY_EVENTS AS PARTY_EVENTSalias0 ON PARTYalias0.PARTY_ID = PARTY_EVENTSalias0.PARTY_ID WHERE PARTY_EVENTSalias0.EVENT_NAME = ""var1"" AND REGIONalias0.REGION_NAME = ""var0"" ;"
How many pilots are there ?,spider,SELECT COUNT( * ) FROM PILOT AS PILOTalias0 ;
List the names of pilots in ascending order of rank .,spider,SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.RANK ASC ;
What are the positions and teams of pilots ?,spider,"SELECT PILOTalias0.POSITION , PILOTalias0.TEAM FROM PILOT AS PILOTalias0 ;"
List the distinct positions of pilots older than var0 .,spider,SELECT DISTINCT PILOTalias0.POSITION FROM PILOT AS PILOTalias0 WHERE PILOTalias0.AGE > var0 ;
"Show the names of pilots from team "" var0 "" or "" var1 "" .",spider,"SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.TEAM = ""var0"" OR PILOTalias0.TEAM = ""var1"" ;"
What is the joined year of the pilot of the highest rank ?,spider,SELECT PILOTalias0.JOIN_YEAR FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.RANK ASC LIMIT 1 ;
What are the different nationalities of pilots ? Show each nationality and the number of pilots of each nationality .,spider,"SELECT COUNT( * ) , PILOTalias0.NATIONALITY FROM PILOT AS PILOTalias0 GROUP BY PILOTalias0.NATIONALITY ;"
Show the most common nationality of pilots .,spider,SELECT PILOTalias0.NATIONALITY FROM PILOT AS PILOTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the pilot positions that have both pilots joining after year var1 and pilots joining before var0 .,spider,SELECT PILOTalias0.POSITION FROM PILOT AS PILOTalias0 WHERE PILOTalias0.JOIN_YEAR < var0 INTERSECT SELECT PILOTalias1.POSITION FROM PILOT AS PILOTalias1 WHERE PILOTalias1.JOIN_YEAR > var1 ;
Show the names of pilots and models of aircrafts they have flied with .,spider,"SELECT AIRCRAFTalias0.MODEL , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID ;"
Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot .,spider,"SELECT AIRCRAFTalias0.FLEET_SERIES , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID ORDER BY PILOTalias0.RANK ;"
Show the fleet series of the aircrafts flied by pilots younger than var0,spider,SELECT AIRCRAFTalias0.FLEET_SERIES FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN AIRCRAFT AS AIRCRAFTalias0 ON PILOT_RECORDalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID WHERE PILOTalias0.AGE < var0 ;
Show the names of pilots and the number of records they have .,spider,"SELECT COUNT( PILOT_RECORDalias0.* ) , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID GROUP BY PILOTalias0.PILOT_NAME ;"
Show names of pilots that have more than one record .,spider,"SELECT COUNT( PILOT_RECORDalias0.* ) , PILOTalias0.PILOT_NAME FROM PILOT_RECORD AS PILOT_RECORDalias0 JOIN PILOT AS PILOTalias0 ON PILOTalias0.PILOT_ID = PILOT_RECORDalias0.PILOT_ID GROUP BY PILOTalias0.PILOT_NAME HAVING COUNT( PILOT_RECORDalias0.* ) > var0 ;"
List the names of pilots that do not have any record .,spider,SELECT PILOTalias0.PILOT_NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT PILOT_RECORDalias0.PILOT_ID FROM PILOT_RECORD AS PILOT_RECORDalias0 ) ;
What document status codes do we have ?,spider,SELECT DOCUMENT_STATUS_CODE FROM REF_DOCUMENT_STATUS ;
What is the description of document status code ' var0 ' ?,spider,"SELECT DOCUMENT_STATUS_DESCRIPTION FROM REF_DOCUMENT_STATUS WHERE DOCUMENT_STATUS_CODE = ""var0"" ;"
What document type codes do we have ?,spider,SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES ;
What is the description of document type ' var0 ' ?,spider,"SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = ""var0"" ;"
What are the shipping agent names ?,spider,SELECT SHIPPING_AGENT_NAME FROM REF_SHIPPING_AGENTS ;
What is the shipping agent code of shipping agent var0 ?,spider,"SELECT SHIPPING_AGENT_CODE FROM REF_SHIPPING_AGENTS WHERE SHIPPING_AGENT_NAME = ""var0"" ;"
What are all role codes ?,spider,SELECT ROLESalias0.ROLE_CODE FROM ROLES AS ROLESalias0 ;
What is the description of role code var0 ?,spider,"SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ""var0"" ;"
How many employees do we have ?,spider,SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 ;
How many employees do we have ?,spider,SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 ;
Find the number of employees we have .,spider,SELECT COUNT( * ) FROM EMPLOYEES AS EMPLOYEESalias0 ;
What is the role of the employee named var0 ?,spider,"SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
List all document ids and receipt dates of documents .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 ;"
"How many employees does each role have ? List role description , id and number of employees .",spider,"SELECT COUNT( * ) , EMPLOYEESalias0.ROLE_CODE , ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE GROUP BY EMPLOYEESalias0.ROLE_CODE ;"
List roles that have more than one employee . List the role description and number of employees .,spider,"SELECT COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) , ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE GROUP BY EMPLOYEESalias0.ROLE_CODE HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) > var0 ;"
What is the document status description of the document with id var0 ?,spider,SELECT REF_DOCUMENT_STATUS.DOCUMENT_STATUS_DESCRIPTION FROM REF_DOCUMENT_STATUS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_DOCUMENT_STATUS.DOCUMENT_STATUS_CODE = DOCUMENTSalias0.DOCUMENT_STATUS_CODE WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
How many documents have the status code var0 ?,spider,"SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = ""var0"" ;"
List the document type code for the document with the id var0 .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
List the document ids for any documents with the status code var0 and the type code paper .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = ""var0"" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var1"" ;"
What is the name of the shipping agent of the document with id var0 ?,spider,SELECT REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
How many documents were shipped by var0 ?,spider,"SELECT COUNT( * ) FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = ""var0"" ;"
Which shipping agent shipped the most documents ? List the shipping agent name and the number of documents .,spider,"SELECT COUNT( DOCUMENTSalias0.DOCUMENT_ID ) , REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME FROM REF_SHIPPING_AGENTS JOIN DOCUMENTS AS DOCUMENTSalias0 ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias0.SHIPPING_AGENT_CODE GROUP BY REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE ORDER BY COUNT( DOCUMENTSalias0.DOCUMENT_ID ) DESC LIMIT 1 ;"
What is the receipt date of the document with id var0 ?,spider,SELECT DOCUMENTSalias0.RECEIPT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID = var0 ;
What address was the document with id var0 mailed to ?,spider,SELECT ADDRESSESalias0.ADDRESS_DETAILS FROM ADDRESSES AS ADDRESSESalias0 JOIN DOCUMENTS_MAILED AS DOCUMENTS_MAILEDalias0 ON DOCUMENTS_MAILEDalias0.MAILED_TO_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE DOCUMENTS_MAILEDalias0.DOCUMENT_ID = var0 ;
What is the mail date of the document with id var0 ?,spider,SELECT DOCUMENTS_MAILEDalias0.MAILING_DATE FROM DOCUMENTS_MAILED AS DOCUMENTS_MAILEDalias0 WHERE DOCUMENTS_MAILEDalias0.DOCUMENT_ID = var0 ;
"List the document ids of documents with the status var0 and type var1 , which not shipped by the shipping agent named var2 .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = ""var0"" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var1"" EXCEPT SELECT DOCUMENTSalias1.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias1 JOIN REF_SHIPPING_AGENTS ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias1.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = ""var2"" ;"
List document id of documents status is var0 and document type is var1 and the document is shipped by shipping agent named var2 .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_STATUS_CODE = ""var0"" AND DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var1"" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias1 JOIN REF_SHIPPING_AGENTS ON REF_SHIPPING_AGENTS.SHIPPING_AGENT_CODE = DOCUMENTSalias1.SHIPPING_AGENT_CODE WHERE REF_SHIPPING_AGENTS.SHIPPING_AGENT_NAME = ""var2"" ;"
What is draft detail of the document with id var0 ?,spider,SELECT DOCUMENT_DRAFTSalias0.DRAFT_DETAILS FROM DOCUMENT_DRAFTS AS DOCUMENT_DRAFTSalias0 WHERE DOCUMENT_DRAFTSalias0.DOCUMENT_ID = var0 ;
How many draft copies does the document with id var0 have ?,spider,SELECT COUNT( * ) FROM DRAFT_COPIES AS DRAFT_COPIESalias0 WHERE DRAFT_COPIESalias0.DOCUMENT_ID = var0 ;
Which document has the most draft copies ? List its document id and number of draft copies .,spider,"SELECT COUNT( DRAFT_COPIESalias0.COPY_NUMBER ) , DRAFT_COPIESalias0.DOCUMENT_ID FROM DRAFT_COPIES AS DRAFT_COPIESalias0 GROUP BY DOCUMENT_ID ORDER BY COUNT( DRAFT_COPIESalias0.COPY_NUMBER ) DESC LIMIT 1 ;"
Which documents have more than var0 draft copies ? List document id and number of draft copies .,spider,"SELECT COUNT( * ) , DRAFT_COPIESalias0.DOCUMENT_ID FROM DRAFT_COPIES AS DRAFT_COPIESalias0 GROUP BY DRAFT_COPIESalias0.DOCUMENT_ID HAVING COUNT( * ) > var0 ;"
List all employees in the circulation history of the document with id var0 . List the employee's name .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID WHERE CIRCULATION_HISTORYalias0.DOCUMENT_ID = var0 ;
List the employees who have not showed up in any circulation history of documents . List the employee's name .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT EMPLOYEESalias1.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias1 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias1.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID ;
Which employee has showed up in most circulation history documents . List the employee's name and the number of drafts and copies .,spider,"SELECT COUNT( * ) , EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = CIRCULATION_HISTORYalias0.EMPLOYEE_ID GROUP BY CIRCULATION_HISTORYalias0.DOCUMENT_ID , CIRCULATION_HISTORYalias0.DRAFT_NUMBER , CIRCULATION_HISTORYalias0.COPY_NUMBER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"For each document , list the number of employees who have showed up in the circulation history of that document . List the document ids and number of employees .",spider,"SELECT CIRCULATION_HISTORYalias0.DOCUMENT_ID , COUNT( DISTINCT CIRCULATION_HISTORYalias0.EMPLOYEE_ID ) FROM CIRCULATION_HISTORY AS CIRCULATION_HISTORYalias0 GROUP BY CIRCULATION_HISTORYalias0.DOCUMENT_ID ;"
List all department names ordered by their starting date .,spider,SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY MGR_START_DATE ;
find all dependent names who have a spouse relation with some employee .,spider,"SELECT DEPENDENTalias0.DEPENDENT_NAME FROM DEPENDENT AS DEPENDENTalias0 WHERE DEPENDENTalias0.RELATIONSHIP = ""var0"" ;"
how many female dependents are there ?,spider,"SELECT COUNT( * ) FROM DEPENDENT AS DEPENDENTalias0 WHERE DEPENDENTalias0.SEX = ""var0"" ;"
Find the names of departments that are located in var0 .,spider,"SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN DEPT_LOCATIONS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DNUMBER = DEPARTMENTalias0.DNUMBER WHERE DERIVED_TABLEalias0.DLOCATION = ""var0"" ;"
Return the first names and last names of employees who earn more than var0 in salary .,spider,"SELECT FNAME , LNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.SALARY > var0 ;"
Find the number of employees of each gender whose salary is lower than var0 .,spider,"SELECT COUNT( * ) , EMPLOYEEalias0.SEX FROM EMPLOYEE AS EMPLOYEEalias0 WHERE SALARY < var0 GROUP BY EMPLOYEEalias0.SEX ;"
"list the first and last names , and the addresses of all employees in the ascending order of their birth date .",spider,"SELECT EMPLOYEEalias0.ADDRESS , FNAME , LNAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY BDATE ;"
what are the event details of the services that have the type code ' var0 ' ?,spider,"SELECT EVENTSalias0.EVENT_DETAILS FROM EVENTS AS EVENTSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID WHERE SERVICESalias0.SERVICE_TYPE_CODE = ""var0"" ;"
What are the ids and details of events that have more than one participants ?,spider,"SELECT EVENTSalias0.EVENT_DETAILS , EVENTSalias0.EVENT_ID FROM EVENTS AS EVENTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTS_IN_EVENTSalias0.EVENT_ID = EVENTSalias0.EVENT_ID GROUP BY EVENTSalias0.EVENT_ID HAVING COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) > var0 ;"
"How many events have each participants attended ? List the participant id , type and the number .",spider,"SELECT COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) , PARTICIPANTSalias0.PARTICIPANT_ID , PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID GROUP BY PARTICIPANTSalias0.PARTICIPANT_ID ;"
"What are all the the participant ids , type code and details ?",spider,"SELECT PARTICIPANTSalias0.PARTICIPANT_DETAILS , PARTICIPANTSalias0.PARTICIPANT_ID , PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 ;"
How many participants belong to the type ' var0 ' ?,spider,"SELECT COUNT( * ) FROM PARTICIPANTS AS PARTICIPANTSalias0 WHERE PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE = ""var0"" ;"
List the type of the services in alphabetical order .,spider,SELECT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 ORDER BY SERVICESalias0.SERVICE_TYPE_CODE ;
List the service id and details for the events .,spider,"SELECT EVENTSalias0.EVENT_DETAILS , EVENTSalias0.SERVICE_ID FROM EVENTS AS EVENTSalias0 ;"
How many events had participants whose details had the substring ' Dr . ',spider,"SELECT COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID WHERE PARTICIPANTSalias0.PARTICIPANT_DETAILS LIKE ""var0"" ;"
What is the most common participant type ?,spider,SELECT PARTICIPANTSalias0.PARTICIPANT_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 GROUP BY PARTICIPANT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which service id and type has the least number of participants ?,spider,"SELECT EVENTSalias0.SERVICE_ID , SERVICESalias0.SERVICE_TYPE_CODE FROM PARTICIPANTS AS PARTICIPANTSalias0 JOIN PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID JOIN EVENTS AS EVENTSalias0 ON PARTICIPANTS_IN_EVENTSalias0.EVENT_ID = EVENTSalias0.EVENT_ID JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID GROUP BY EVENTSalias0.SERVICE_ID ORDER BY COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) ASC LIMIT 1 ;"
What is the id of the event with the most participants ?,spider,SELECT PARTICIPANTS_IN_EVENTSalias0.EVENT_ID FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 GROUP BY EVENT_ID ORDER BY COUNT( PARTICIPANTS_IN_EVENTSalias0.* ) DESC LIMIT 1 ;
Which events id does not have any participant with detail ' var0 ' ?,spider,"SELECT EVENTSalias0.EVENT_ID FROM EVENTS AS EVENTSalias0 EXCEPT SELECT PARTICIPANTS_IN_EVENTSalias0.EVENT_ID FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 JOIN PARTICIPANTS AS PARTICIPANTSalias0 ON PARTICIPANTSalias0.PARTICIPANT_ID = PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID WHERE PARTICIPANTSalias0.PARTICIPANT_DETAILS = ""var0"" ;"
Which services type had both successful and failure event details ?,spider,"SELECT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 JOIN EVENTS AS EVENTSalias0 ON SERVICESalias0.SERVICE_ID = EVENTSalias0.SERVICE_ID WHERE EVENTSalias0.EVENT_DETAILS = ""var0"" INTERSECT SELECT SERVICESalias1.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias1 JOIN EVENTS AS EVENTSalias1 ON SERVICESalias1.SERVICE_ID = EVENTSalias1.SERVICE_ID WHERE EVENTSalias1.EVENT_DETAILS = ""var1"" ;"
How many events did not have any participants ?,spider,SELECT COUNT( * ) FROM EVENTS AS EVENTSalias0 WHERE EVENTSalias0.EVENT_ID NOT IN ( SELECT PARTICIPANTS_IN_EVENTSalias0.EVENT_ID FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ) ;
What are all the distinct participant ids who attended any events ?,spider,SELECT COUNT( DISTINCT PARTICIPANTS_IN_EVENTSalias0.PARTICIPANT_ID ) FROM PARTICIPANTS_IN_EVENTS AS PARTICIPANTS_IN_EVENTSalias0 ;
What is the name of the race held most recently ?,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;
What is the name of the race that occurred most recently ?,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;
What is the name and date of the most recent race ?,spider,"SELECT RACESalias0.DATE , RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;"
What is the name and date of the race that occurred most recently ?,spider,"SELECT RACESalias0.DATE , RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.DATE DESC LIMIT 1 ;"
Find the names of all races held in var0 .,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR = var0 ;
What are the names of all the races that occurred in the year var0 ?,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR = var0 ;
Find the distinct names of all races held between var0 and var1 ?,spider,SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
What are the unique names of all race held between var0 and var1 ?,spider,SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
List the forename and surname of all distinct drivers who once had laptime less than var0 milliseconds ?,spider,"SELECT DISTINCT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS < var0 ;"
What are the forenames and surnames of all unique drivers who had a lap time of less than var0 milliseconds ?,spider,"SELECT DISTINCT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS < var0 ;"
Find all the distinct id and nationality of drivers who have had laptime more than var0 milliseconds ?,spider,"SELECT DISTINCT DRIVERSalias0.DRIVERID , DRIVERSalias0.NATIONALITY FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS > var0 ;"
What are the different driver ids and nationalities of all drivers who had a laptime of more than var0 milliseconds ?,spider,"SELECT DISTINCT DRIVERSalias0.DRIVERID , DRIVERSalias0.NATIONALITY FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE LAPTIMESalias0.MILLISECONDS > var0 ;"
What are the forename and surname of the driver who has the smallest laptime ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS LIMIT 1 ;"
What is the forename and surname of the driver with the shortest laptime ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS LIMIT 1 ;"
What is the id and family name of the driver who has the longest laptime ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS DESC LIMIT 1 ;"
What is the id and last name of the driver with the longest laptime ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID ORDER BY LAPTIMESalias0.MILLISECONDS DESC LIMIT 1 ;"
"What is the id , forname and surname of the driver who had the first position in terms of laptime at least twice ?",spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE POSITION = ""var0"" GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( LAPTIMESalias0.* ) >= var1 ;"
"What is the id , first name , and last name of the driver who was in the first position for laptime at least twice ?",spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN LAPTIMES AS LAPTIMESalias0 ON LAPTIMESalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE POSITION = ""var0"" GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( LAPTIMESalias0.* ) >= var1 ;"
How many drivers participated in the race var0 held in var1 ?,spider,"SELECT COUNT( * ) FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var0"" AND RACESalias0.YEAR = var1 ;"
How many drivers were in the var0 held in var1 ?,spider,"SELECT COUNT( * ) FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var0"" AND RACESalias0.YEAR = var1 ;"
How many drivers did not participate in the races held in var0 ?,spider,SELECT COUNT( DISTINCT DRIVERID ) FROM RESULTS AS RESULTSalias0 WHERE RACEID NOT IN ( SELECT RACEID FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR != var0 ) ;
How many drivers did not race in var0 ?,spider,SELECT COUNT( DISTINCT DRIVERID ) FROM RESULTS AS RESULTSalias0 WHERE RACEID NOT IN ( SELECT RACEID FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR != var0 ) ;
Give me a list of names and years of races that had any driver whose forename is var0 ?,spider,"SELECT RACESalias0.NAME , RACESalias0.YEAR FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE DRIVERSalias0.FORENAME = ""var0"" ;"
What are the names and years of all races that had a driver with the last name var0 ?,spider,"SELECT RACESalias0.NAME , RACESalias0.YEAR FROM RESULTS AS RESULTSalias0 JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE DRIVERSalias0.FORENAME = ""var0"" ;"
Find the forename and surname of drivers whose nationality is var0 ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 WHERE DRIVERSalias0.NATIONALITY = ""var0"" ;"
What is the first and last name of all the var0 drivers ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 WHERE DRIVERSalias0.NATIONALITY = ""var0"" ;"
Find the id and forenames of drivers who participated both the races with name var0 and the races with name var1 ?,spider,"SELECT DRIVERSalias0.FORENAME , RESULTSalias0.DRIVERID FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = ""var0"" INTERSECT SELECT DRIVERSalias1.FORENAME , RESULTSalias1.DRIVERID FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = ""var1"" ;"
What is the id and first name of all the drivers who participated in the var0 and the var1 ?,spider,"SELECT DRIVERSalias0.FORENAME , RESULTSalias0.DRIVERID FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = ""var0"" INTERSECT SELECT DRIVERSalias1.FORENAME , RESULTSalias1.DRIVERID FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = ""var1"" ;"
What are the forenames and surnames of drivers who participated in the races named var0 but not the races named var1 ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = ""var0"" EXCEPT SELECT DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = ""var1"" ;"
What are the first and last names of all drivers who participated in the var0 but not the var1 ?,spider,"SELECT DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID JOIN DRIVERS AS DRIVERSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID WHERE RACESalias0.NAME = ""var0"" EXCEPT SELECT DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM RACES AS RACESalias1 JOIN RESULTS AS RESULTSalias1 ON RESULTSalias1.RACEID = RACESalias1.RACEID JOIN DRIVERS AS DRIVERSalias1 ON RESULTSalias1.DRIVERID = DRIVERSalias1.DRIVERID WHERE RACESalias1.NAME = ""var1"" ;"
Find all the forenames of distinct drivers who was in position var0 as standing and won ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
What are all the different first names of the drivers who are in position as standing and won ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
Find all the forenames of distinct drivers who won in position var0 as driver standing and had more than var2 points ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POINTS > var2 AND DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
What are the first names of the different drivers who won in position var0 as driver standing and had more than var2 points ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN DRIVERSTANDINGS AS DERIVED_TABLEalias0 ON DRIVERSalias0.DRIVERID = DERIVED_TABLEalias0.DRIVERID WHERE DERIVED_TABLEalias0.POINTS > var2 AND DERIVED_TABLEalias0.POSITION = var0 AND DERIVED_TABLEalias0.WINS = var1 ;
What are the numbers of constructors for different nationalities ?,spider,"SELECT CONSTRUCTORSalias0.NATIONALITY , COUNT( * ) FROM CONSTRUCTORS AS CONSTRUCTORSalias0 GROUP BY CONSTRUCTORSalias0.NATIONALITY ;"
"For each nationality , how many different constructors are there ?",spider,"SELECT CONSTRUCTORSalias0.NATIONALITY , COUNT( * ) FROM CONSTRUCTORS AS CONSTRUCTORSalias0 GROUP BY CONSTRUCTORSalias0.NATIONALITY ;"
What are the numbers of races for each constructor id ?,spider,"SELECT CONSTRUCTORID , COUNT( * ) FROM CONSTRUCTORSTANDINGS GROUP BY CONSTRUCTORID ;"
"For each constructor id , how many races are there ?",spider,"SELECT CONSTRUCTORID , COUNT( * ) FROM CONSTRUCTORSTANDINGS GROUP BY CONSTRUCTORID ;"
What are the names of races that were held after var1 and the circuits were in the country of var0 ?,spider,"SELECT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = ""var0"" AND RACESalias0.YEAR > var1 ;"
What are the names of the races held after var1 in var0 ?,spider,"SELECT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = ""var0"" AND RACESalias0.YEAR > var1 ;"
What are the unique names of races that held after var1 and the circuits were in var0 ?,spider,"SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = ""var0"" AND RACESalias0.YEAR > var1 ;"
What are the names of all races held after var1 in var0 ?,spider,"SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 JOIN CIRCUITS AS CIRCUITSalias0 ON RACESalias0.CIRCUITID = CIRCUITSalias0.CIRCUITID WHERE CIRCUITSalias0.COUNTRY = ""var0"" AND RACESalias0.YEAR > var1 ;"
Find the distinct driver id and the stop number of all drivers that have a shorter pit stop duration than some drivers in the race with id var0 .,spider,"SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION < ( SELECT MAX( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;"
What is the id and stop number for each driver that has a shorter pit stop than the driver in the race with id var0 ?,spider,"SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION < ( SELECT MAX( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;"
Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is var0 ?,spider,"SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION > ( SELECT MIN( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;"
What are the different ids and stop durations of all the drivers whose stop lasted longer than the driver in the race with the id var0 ?,spider,"SELECT DISTINCT DRIVERID , PITSTOPSalias0.STOP FROM PITSTOPS AS PITSTOPSalias0 WHERE PITSTOPSalias0.DURATION > ( SELECT MIN( PITSTOPSalias1.DURATION ) FROM PITSTOPS AS PITSTOPSalias1 WHERE RACEID = var0 ) ;"
List the forenames of all distinct drivers in alphabetical order ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 ORDER BY DRIVERSalias0.FORENAME ASC ;
What are the first names of all the different drivers in alphabetical order ?,spider,SELECT DISTINCT DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 ORDER BY DRIVERSalias0.FORENAME ASC ;
List the names of all distinct races in reversed lexicographic order ?,spider,SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.NAME DESC ;
What are the different names of all the races in reverse alphabetical order ?,spider,SELECT DISTINCT RACESalias0.NAME FROM RACES AS RACESalias0 ORDER BY RACESalias0.NAME DESC ;
What are the names of races held between var0 and var1 ?,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
What are the names of all races held between var0 and var1 ?,spider,SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.YEAR BETWEEN var0 AND var1 ;
What are the names of races held after var0 or before var1 ?,spider,"SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.TIME < ""var1"" OR RACESalias0.TIME > ""var0"" ;"
What are the names of all races that occurred after var0 or before var1 ?,spider,"SELECT RACESalias0.NAME FROM RACES AS RACESalias0 WHERE RACESalias0.TIME < ""var1"" OR RACESalias0.TIME > ""var0"" ;"
"What are the drivers ' first , last names and id who had more than var0 pit stops or participated in more than var1 race results ?",spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) > var0 UNION SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;"
"What are the drivers ' first names,last names , and ids for all those that had more than var0 stops or participated in more than var1 races ?",spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) > var0 UNION SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.FORENAME , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;"
What are the drivers ' last names and id who had var0 pit stops and participated in more than var1 race results ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) = var0 INTERSECT SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;"
What are the last names and ids of all drivers who had var0 pit stops and participated in more than var1 races ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN PITSTOPS AS PITSTOPSalias0 ON PITSTOPSalias0.DRIVERID = DRIVERSalias0.DRIVERID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) = var0 INTERSECT SELECT DRIVERSalias1.DRIVERID , DRIVERSalias1.SURNAME FROM DRIVERS AS DRIVERSalias1 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias1.DRIVERID GROUP BY DRIVERSalias1.DRIVERID HAVING COUNT( * ) > var1 ;"
What is the id and last name of the driver who participated in the most races after var0 ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the id and last name of the driver who participated in the most races after var0 ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the names of circuits that belong to var0 or var1 ?,spider,"SELECT CIRCUITSalias0.NAME FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = ""var0"" OR CIRCUITSalias0.COUNTRY = ""var1"" ;"
What are the names of all the circuits that are in the var0 or var1 ?,spider,"SELECT CIRCUITSalias0.NAME FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = ""var0"" OR CIRCUITSalias0.COUNTRY = ""var1"" ;"
Find the id and location of circuits that belong to var0 or var1 ?,spider,"SELECT CIRCUITID , CIRCUITSalias0.LOCATION FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = ""var0"" OR CIRCUITSalias0.COUNTRY = ""var1"" ;"
What are the ids and locations of all circuits in var0 or var1 ?,spider,"SELECT CIRCUITID , CIRCUITSalias0.LOCATION FROM CIRCUITS AS CIRCUITSalias0 WHERE CIRCUITSalias0.COUNTRY = ""var0"" OR CIRCUITSalias0.COUNTRY = ""var1"" ;"
Find the names of var0 constructors that have once earned more than var1 points ?,spider,"SELECT CONSTRUCTORSalias0.NAME FROM CONSTRUCTORS AS CONSTRUCTORSalias0 JOIN CONSTRUCTORSTANDINGS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.CONSTRUCTORID = CONSTRUCTORSalias0.CONSTRUCTORID WHERE CONSTRUCTORSalias0.NATIONALITY = ""var0"" AND DERIVED_TABLEalias0.POINTS > var1 ;"
What are the names of all the var0 constructors that have earned more than var1 points ?,spider,"SELECT CONSTRUCTORSalias0.NAME FROM CONSTRUCTORS AS CONSTRUCTORSalias0 JOIN CONSTRUCTORSTANDINGS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.CONSTRUCTORID = CONSTRUCTORSalias0.CONSTRUCTORID WHERE CONSTRUCTORSalias0.NATIONALITY = ""var0"" AND DERIVED_TABLEalias0.POINTS > var1 ;"
What is the average fastest lap speed in race named ' var1 ' in var0 ?,spider,"SELECT AVG( RESULTSalias0.FASTESTLAPSPEED ) FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var1"" AND RACESalias0.YEAR = var0 ;"
What is the average fastest lap speed for the var1 in var0 ?,spider,"SELECT AVG( RESULTSalias0.FASTESTLAPSPEED ) FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var1"" AND RACESalias0.YEAR = var0 ;"
What is the maximum fastest lap speed in race named ' var1 ' in var0 ?,spider,"SELECT MAX( RESULTSalias0.FASTESTLAPSPEED ) FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var1"" AND RACESalias0.YEAR = var0 ;"
What is the maximum fastest lap speed in the var1 in var0 ?,spider,"SELECT MAX( RESULTSalias0.FASTESTLAPSPEED ) FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.NAME = ""var1"" AND RACESalias0.YEAR = var0 ;"
What are the maximum fastest lap speed in races held after 2004 grouped by race name and ordered by year ?,spider,"SELECT MAX( RESULTSalias0.FASTESTLAPSPEED ) , RACESalias0.NAME , RACESalias0.YEAR FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY RACESalias0.NAME ORDER BY RACESalias0.YEAR ;"
"For each race name , What is the maximum fastest lap speed for races after 2004 ordered by year ?",spider,"SELECT MAX( RESULTSalias0.FASTESTLAPSPEED ) , RACESalias0.NAME , RACESalias0.YEAR FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY RACESalias0.NAME ORDER BY RACESalias0.YEAR ;"
What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year ?,spider,"SELECT AVG( RESULTSalias0.FASTESTLAPSPEED ) , RACESalias0.NAME , RACESalias0.YEAR FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY RACESalias0.NAME ORDER BY RACESalias0.YEAR ;"
"What is the average fastest lap speed for races held after 2004 , for each race , ordered by year ?",spider,"SELECT AVG( RESULTSalias0.FASTESTLAPSPEED ) , RACESalias0.NAME , RACESalias0.YEAR FROM RACES AS RACESalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID WHERE RACESalias0.YEAR > var0 GROUP BY RACESalias0.NAME ORDER BY RACESalias0.YEAR ;"
"Find the id , forename and number of races of all drivers who have at least participated in two races ?",spider,"SELECT COUNT( * ) , DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) >= var0 ;"
"What is the id , forename , and number of races for all drivers that have participated in at least var0 races ?",spider,"SELECT COUNT( * ) , DRIVERSalias0.DRIVERID , DRIVERSalias0.FORENAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) >= var0 ;"
Find the driver id and number of races of all drivers who have at most participated in var0 races ?,spider,"SELECT COUNT( * ) , DRIVERSalias0.DRIVERID FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) <= var0 ;"
"For each id of a driver who participated in at most var0 races , how many races did they participate in ?",spider,"SELECT COUNT( * ) , DRIVERSalias0.DRIVERID FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID HAVING COUNT( * ) <= var0 ;"
Find the id and surname of the driver who participated the most number of races ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the ids and last names of all drivers who participated in the most races ?,spider,"SELECT DRIVERSalias0.DRIVERID , DRIVERSalias0.SURNAME FROM DRIVERS AS DRIVERSalias0 JOIN RESULTS AS RESULTSalias0 ON RESULTSalias0.DRIVERID = DRIVERSalias0.DRIVERID JOIN RACES AS RACESalias0 ON RESULTSalias0.RACEID = RACESalias0.RACEID GROUP BY DRIVERSalias0.DRIVERID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many technicians are there ?,spider,SELECT COUNT( * ) FROM TECHNICIAN AS TECHNICIANalias0 ;
What is the number of technicians ?,spider,SELECT COUNT( * ) FROM TECHNICIAN AS TECHNICIANalias0 ;
List the names of technicians in ascending order of age .,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE ASC ;
What are the names of the technicians by ascending order of age ?,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE ASC ;
What are the team and starting year of technicians ?,spider,"SELECT TECHNICIANalias0.STARTING_YEAR , TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 ;"
What is the team and starting year for each technician ?,spider,"SELECT TECHNICIANalias0.STARTING_YEAR , TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 ;"
"List the name of technicians whose team is not "" var0 "" .",spider,"SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM != ""var0"" ;"
What is the name of the technician whose team is not ' var0 ' ?,spider,"SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM != ""var0"" ;"
Show the name of technicians aged either var0 or var1,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.AGE = var0 OR TECHNICIANalias0.AGE = var1 ;
What are the names of the technicians aged either var0 or var1 ?,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.AGE = var0 OR TECHNICIANalias0.AGE = var1 ;
What is the starting year of the oldest technicians ?,spider,SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE DESC LIMIT 1 ;
What is the starting year for the oldest technician ?,spider,SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 ORDER BY TECHNICIANalias0.AGE DESC LIMIT 1 ;
Show different teams of technicians and the number of technicians in each team .,spider,"SELECT COUNT( * ) , TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TECHNICIANalias0.TEAM ;"
"For each team , how many technicians are there ?",spider,"SELECT COUNT( * ) , TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TECHNICIANalias0.TEAM ;"
Please show the team that has the most number of technicians .,spider,SELECT TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TEAM ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the teams with the most technicians ?,spider,SELECT TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TEAM ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the team that have at least two technicians .,spider,SELECT TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TECHNICIANalias0.TEAM HAVING COUNT( * ) >= var0 ;
What is the team with at least var0 technicians ?,spider,SELECT TECHNICIANalias0.TEAM FROM TECHNICIAN AS TECHNICIANalias0 GROUP BY TECHNICIANalias0.TEAM HAVING COUNT( * ) >= var0 ;
Show names of technicians and series of machines they are assigned to repair .,spider,"SELECT MACHINEalias0.MACHINE_SERIES , TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID ;"
What are the names of technicians and the machine series that they repair ?,spider,"SELECT MACHINEalias0.MACHINE_SERIES , TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID ;"
Show names of technicians in ascending order of quality rank of the machine they are assigned .,spider,SELECT TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID ORDER BY MACHINEalias0.QUALITY_RANK ;
What are the names of the technicians by ascending order of quality rank for the machine they are assigned ?,spider,SELECT TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID ORDER BY MACHINEalias0.QUALITY_RANK ;
Show names of technicians who are assigned to repair machines with value point more than var0 .,spider,SELECT TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID WHERE MACHINEalias0.VALUE_POINTS > var0 ;
What are the names of the technicians that are assigned to repair machines with more point values than var0 ?,spider,SELECT TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN MACHINE AS MACHINEalias0 ON REPAIR_ASSIGNMENTalias0.MACHINE_ID = MACHINEalias0.MACHINE_ID JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID WHERE MACHINEalias0.VALUE_POINTS > var0 ;
Show names of technicians and the number of machines they are assigned to repair .,spider,"SELECT COUNT( REPAIR_ASSIGNMENTalias0.* ) , TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID GROUP BY TECHNICIANalias0.NAME ;"
What are the names of the technicians and how many machines are they assigned to repair ?,spider,"SELECT COUNT( REPAIR_ASSIGNMENTalias0.* ) , TECHNICIANalias0.NAME FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 JOIN TECHNICIAN AS TECHNICIANalias0 ON TECHNICIANalias0.TECHNICIAN_ID = REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID GROUP BY TECHNICIANalias0.NAME ;"
List the names of technicians who have not been assigned to repair machines .,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TECHNICIAN_ID NOT IN ( SELECT REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 ) ;
What are the names of the technicians that have not been assigned to repair machines ?,spider,SELECT TECHNICIANalias0.NAME FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TECHNICIAN_ID NOT IN ( SELECT REPAIR_ASSIGNMENTalias0.TECHNICIAN_ID FROM REPAIR_ASSIGNMENT AS REPAIR_ASSIGNMENTalias0 ) ;
"Show the starting years shared by technicians from team "" var0 "" and "" var1 "" .",spider,"SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM = ""var0"" INTERSECT SELECT TECHNICIANalias1.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias1 WHERE TECHNICIANalias1.TEAM = ""var1"" ;"
"What are the starting years shared by the technicians from the team "" var0 "" or "" var1 "" ?",spider,"SELECT TECHNICIANalias0.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias0 WHERE TECHNICIANalias0.TEAM = ""var0"" INTERSECT SELECT TECHNICIANalias1.STARTING_YEAR FROM TECHNICIAN AS TECHNICIANalias1 WHERE TECHNICIANalias1.TEAM = ""var1"" ;"
How many entrepreneurs are there ?,spider,SELECT COUNT( * ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
Count the number of entrepreneurs .,spider,SELECT COUNT( * ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
List the companies of entrepreneurs in descending order of money requested .,spider,SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
"What are the companies of entrepreneurs , ordered descending by amount of money requested ?",spider,SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
List the companies and the investors of entrepreneurs .,spider,"SELECT ENTREPRENEURalias0.COMPANY , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;"
What are the companies and investors that correspond to each entrepreneur ?,spider,"SELECT ENTREPRENEURalias0.COMPANY , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;"
What is the average money requested by all entrepreneurs ?,spider,SELECT AVG( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
Return the average money requested across all entrepreneurs .,spider,SELECT AVG( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
What are the names of people in ascending order of weight ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.WEIGHT ASC ;
"Return the names of people , ordered by weight ascending .",spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.WEIGHT ASC ;
What are the names of entrepreneurs ?,spider,SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ;
Return the names of entrepreneurs .,spider,SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ;
"What are the names of entrepreneurs whose investor is not "" var0 "" ?",spider,"SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR != ""var0"" ;"
Return the names of entrepreneurs do no not have the investor var0 .,spider,"SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR != ""var0"" ;"
What is the weight of the shortest person ?,spider,SELECT PEOPLEalias0.WEIGHT FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC LIMIT 1 ;
Return the weight of the shortest person .,spider,SELECT PEOPLEalias0.WEIGHT FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC LIMIT 1 ;
What is the name of the entrepreneur with the greatest weight ?,spider,SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
Return the name of the heaviest entrepreneur .,spider,SELECT PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
What is the total money requested by entrepreneurs with height more than var0 ?,spider,SELECT SUM( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
Give the total money requested by entrepreneurs who are taller than var0 .,spider,SELECT SUM( ENTREPRENEURalias0.MONEY_REQUESTED ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
"What are the dates of birth of entrepreneurs with investor "" var0 "" or "" var1 "" ?",spider,"SELECT PEOPLEalias0.DATE_OF_BIRTH FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR = ""var0"" OR ENTREPRENEURalias0.INVESTOR = ""var1"" ;"
Return the dates of birth for entrepreneurs who have either the investor var0 or var1 .,spider,"SELECT PEOPLEalias0.DATE_OF_BIRTH FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID WHERE ENTREPRENEURalias0.INVESTOR = ""var0"" OR ENTREPRENEURalias0.INVESTOR = ""var1"" ;"
What are the weights of entrepreneurs in descending order of money requested ?,spider,SELECT PEOPLEalias0.WEIGHT FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
"Return the weights of entrepreneurs , ordered descending by amount of money requested .",spider,SELECT PEOPLEalias0.WEIGHT FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED DESC ;
What are the investors of entrepreneurs and the corresponding number of entrepreneurs invested by each investor ?,spider,"SELECT COUNT( * ) , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR ;"
How many entrepreneurs correspond to each investor ?,spider,"SELECT COUNT( * ) , ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR ;"
What is the investor that has invested in the most number of entrepreneurs ?,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY INVESTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the investor who have invested in the greatest number of entrepreneurs .,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY INVESTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the investors that have invested in at least two entrepreneurs ?,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR HAVING COUNT( * ) >= var0 ;
Return the investors who have invested in two or more entrepreneurs .,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 GROUP BY ENTREPRENEURalias0.INVESTOR HAVING COUNT( * ) >= var0 ;
List the names of entrepreneurs and their companies in descending order of money requested ?,spider,"SELECT ENTREPRENEURalias0.COMPANY , PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED ;"
"What are the names of entrepreneurs and their corresponding investors , ordered descending by the amount of money requested ?",spider,"SELECT ENTREPRENEURalias0.COMPANY , PEOPLEalias0.NAME FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY ENTREPRENEURalias0.MONEY_REQUESTED ;"
List the names of people that are not entrepreneurs .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT ENTREPRENEURalias0.PEOPLE_ID FROM ENTREPRENEUR AS ENTREPRENEURalias0 ) ;
What are the names of people who are not entrepreneurs ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT ENTREPRENEURalias0.PEOPLE_ID FROM ENTREPRENEUR AS ENTREPRENEURalias0 ) ;
Show the investors shared by entrepreneurs that requested more than var0 and entrepreneurs that requested less than var1 .,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 WHERE ENTREPRENEURalias0.MONEY_REQUESTED > var0 INTERSECT SELECT ENTREPRENEURalias1.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias1 WHERE ENTREPRENEURalias1.MONEY_REQUESTED < var1 ;
What are the investors who have invested in both entrepreneurs who requested more than var0 and entrepreneurs who requested less than var1 ?,spider,SELECT ENTREPRENEURalias0.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias0 WHERE ENTREPRENEURalias0.MONEY_REQUESTED > var0 INTERSECT SELECT ENTREPRENEURalias1.INVESTOR FROM ENTREPRENEUR AS ENTREPRENEURalias1 WHERE ENTREPRENEURalias1.MONEY_REQUESTED < var1 ;
How many distinct companies are there ?,spider,SELECT COUNT( DISTINCT ENTREPRENEURalias0.COMPANY ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
Count the number of different companies .,spider,SELECT COUNT( DISTINCT ENTREPRENEURalias0.COMPANY ) FROM ENTREPRENEUR AS ENTREPRENEURalias0 ;
Show the company of the tallest entrepreneur .,spider,SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
Which company was started by the entrepreneur with the greatest height ?,spider,SELECT ENTREPRENEURalias0.COMPANY FROM ENTREPRENEUR AS ENTREPRENEURalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = ENTREPRENEURalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
How many perpetrators are there ?,spider,SELECT COUNT( * ) FROM PERPETRATOR AS PERPETRATORalias0 ;
List the date of perpetrators in descending order of the number of people killed .,spider,SELECT PERPETRATORalias0.DATE FROM PERPETRATOR AS PERPETRATORalias0 ORDER BY PERPETRATORalias0.KILLED DESC ;
List the number of people injured by perpetrators in ascending order .,spider,SELECT PERPETRATORalias0.INJURED FROM PERPETRATOR AS PERPETRATORalias0 ORDER BY PERPETRATORalias0.INJURED ASC ;
What is the average number of people injured by all perpetrators ?,spider,SELECT AVG( PERPETRATORalias0.INJURED ) FROM PERPETRATOR AS PERPETRATORalias0 ;
What is the location of the perpetrator with the largest kills .,spider,SELECT PERPETRATORalias0.LOCATION FROM PERPETRATOR AS PERPETRATORalias0 ORDER BY PERPETRATORalias0.KILLED DESC LIMIT 1 ;
What are the names of people in ascending order of height ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.HEIGHT ASC ;
What are the names of perpetrators ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ;
"What are the names of perpetrators whose country is not "" var0 "" ?",spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PERPETRATORalias0.COUNTRY != ""var0"" ;"
What is the name of the perpetrator with the biggest weight .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.WEIGHT DESC LIMIT 1 ;
What is the total kills of the perpetrators with height more than var0 .,spider,SELECT SUM( PERPETRATORalias0.KILLED ) FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
"What are the names of perpetrators in country "" var0 "" or "" var1 "" ?",spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PERPETRATORalias0.COUNTRY = ""var0"" OR PERPETRATORalias0.COUNTRY = ""var1"" ;"
What are the heights of perpetrators in descending order of the number of people they injured ?,spider,SELECT PEOPLEalias0.HEIGHT FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PERPETRATORalias0.INJURED DESC ;
What are the countries of perpetrators ? Show each country and the corresponding number of perpetrators there .,spider,"SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY PERPETRATORalias0.COUNTRY ;"
What is the country that has the most perpetrators ?,spider,"SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the countries that have at least two perpetrators ?,spider,"SELECT COUNT( * ) , PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 GROUP BY PERPETRATORalias0.COUNTRY HAVING COUNT( * ) >= var0 ;"
List the names of perpetrators in descending order of the year .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PERPETRATORalias0.YEAR DESC ;
List the names of people that are not perpetrators .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT PERPETRATORalias0.PEOPLE_ID FROM PERPETRATOR AS PERPETRATORalias0 ) ;
Show the countries that have both perpetrators with injures more than var0 and perpetrators with injures smaller than var1 .,spider,SELECT PERPETRATORalias0.COUNTRY FROM PERPETRATOR AS PERPETRATORalias0 WHERE PERPETRATORalias0.INJURED > var0 INTERSECT SELECT PERPETRATORalias1.COUNTRY FROM PERPETRATOR AS PERPETRATORalias1 WHERE PERPETRATORalias1.INJURED < var1 ;
How many distinct locations of perpetrators are there ?,spider,SELECT COUNT( DISTINCT PERPETRATORalias0.LOCATION ) FROM PERPETRATOR AS PERPETRATORalias0 ;
Show the date of the tallest perpetrator .,spider,SELECT PERPETRATORalias0.DATE FROM PEOPLE AS PEOPLEalias0 JOIN PERPETRATOR AS PERPETRATORalias0 ON PERPETRATORalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
In which year did the most recent crime happen ?,spider,SELECT MAX( PERPETRATORalias0.YEAR ) FROM PERPETRATOR AS PERPETRATORalias0 ;
Report the name of all campuses in var0 county .,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
What campuses are located in the county of var0 ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
List the campuses in var0 county .,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
What campuses are in var0 county ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
What are the names of all campuses located at var0 ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.LOCATION = ""var0"" ;"
What campuses are located in var0 ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.LOCATION = ""var0"" ;"
Find all the campuses opened in var0 .,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR = var0 ;
What are the campuses that opened in var0 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR = var0 ;
Find the name of the campuses opened before var0 .,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR < var0 ;
What campuses opened before var0 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR < var0 ;
Which campus was opened between var0 and var1 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR <= var1 AND CAMPUSESalias0.YEAR >= var0 ;
What campuses opened between var0 and var1 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.YEAR <= var1 AND CAMPUSESalias0.YEAR >= var0 ;
"Find the name of the campuses that is in var0 , var1 or in var2 , var2 .",spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var1"" UNION SELECT CAMPUSESalias1.CAMPUS FROM CAMPUSES AS CAMPUSESalias1 WHERE CAMPUSESalias1.LOCATION = ""var2"" AND CAMPUSESalias0.LOCATION = ""var0"" AND CAMPUSESalias1.COUNTY = ""var3"" ;"
"What campuses are located in var0 , var1 or in var2 , var2 ?",spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var1"" UNION SELECT CAMPUSESalias1.CAMPUS FROM CAMPUSES AS CAMPUSESalias1 WHERE CAMPUSESalias1.LOCATION = ""var2"" AND CAMPUSESalias0.LOCATION = ""var0"" AND CAMPUSESalias1.COUNTY = ""var3"" ;"
"What is the campus fee of "" var0 "" in year var1 ?",spider,"SELECT CAMPUSFEE FROM CAMPUSES AS CAMPUSESalias0 JOIN CSU_FEES AS CSU_FEESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
What is the campus fee for var0 in var1 ?,spider,"SELECT CAMPUSFEE FROM CAMPUSES AS CAMPUSESalias0 JOIN CSU_FEES AS CSU_FEESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
"What is the campus fee of "" var0 "" in year var1 ?",spider,"SELECT CAMPUSFEE FROM CAMPUSES AS CAMPUSESalias0 JOIN CSU_FEES AS CSU_FEESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
What is the campus fee for var0 in var1 ?,spider,"SELECT CAMPUSFEE FROM CAMPUSES AS CAMPUSESalias0 JOIN CSU_FEES AS CSU_FEESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
Find the count of universities whose campus fee is greater than the average campus fee .,spider,SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
How many universities have a campus fee higher than average ?,spider,SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
Find the count of universities whose campus fee is greater than the average campus fee .,spider,SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
How many universities have a campus fee greater than the average ?,spider,SELECT COUNT( * ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CAMPUSFEE > ( SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias1 ) ;
Which university is in var0 county and opened after var1 ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" AND CAMPUSESalias0.YEAR > var1 ;"
What campuses are located in var0 county and opened after var1 ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" AND CAMPUSESalias0.YEAR > var1 ;"
Which year has the most degrees conferred ?,spider,SELECT DEGREESalias0.YEAR FROM DEGREES AS DEGREESalias0 GROUP BY YEAR ORDER BY SUM( DEGREESalias0.DEGREES ) DESC LIMIT 1 ;
In what year was the most degrees conferred ?,spider,SELECT DEGREESalias0.YEAR FROM DEGREES AS DEGREESalias0 GROUP BY YEAR ORDER BY SUM( DEGREESalias0.DEGREES ) DESC LIMIT 1 ;
Which campus has the most degrees conferred in all times ?,spider,SELECT DEGREESalias0.CAMPUS FROM DEGREES AS DEGREESalias0 GROUP BY CAMPUS ORDER BY SUM( DEGREESalias0.DEGREES ) DESC LIMIT 1 ;
What campus has the most degrees conferrred over its entire existence ?,spider,SELECT DEGREESalias0.CAMPUS FROM DEGREES AS DEGREESalias0 GROUP BY CAMPUS ORDER BY SUM( DEGREESalias0.DEGREES ) DESC LIMIT 1 ;
Which campus has the most faculties in year var0 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE FACULTYalias0.YEAR = var0 ORDER BY FACULTYalias0.FACULTY DESC LIMIT 1 ;
What campus has the most faculties in var0 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE FACULTYalias0.YEAR = var0 ORDER BY FACULTYalias0.FACULTY DESC LIMIT 1 ;
Find the average fee on a CSU campus in var0,spider,SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
What is the average fee for a CSU campus in the year of var0 ?,spider,SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
What is the average fee on a CSU campus in var0 ?,spider,SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
What is the average fee for a CSU campus in the year of var0 ?,spider,SELECT AVG( CAMPUSFEE ) FROM CSU_FEES AS CSU_FEESalias0 WHERE CSU_FEESalias0.YEAR = var0 ;
report the total number of degrees granted between var0 and var1 .,spider,"SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE DEGREESalias0.YEAR <= var1 AND DEGREESalias0.YEAR >= var0 GROUP BY CAMPUSESalias0.CAMPUS ;"
how many degrees were conferred between var0 and var1 ?,spider,"SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE DEGREESalias0.YEAR <= var1 AND DEGREESalias0.YEAR >= var0 GROUP BY CAMPUSESalias0.CAMPUS ;"
"For each var0 county campus , report the number of degrees granted after var1 .",spider,"SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.COUNTY = ""var0"" AND DEGREESalias0.YEAR >= var1 GROUP BY CAMPUSESalias0.CAMPUS ;"
What is the total number of degrees granted after var1 for each var0 county campus ?,spider,"SELECT CAMPUSESalias0.CAMPUS , SUM( DEGREESalias0.DEGREES ) FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.COUNTY = ""var0"" AND DEGREESalias0.YEAR >= var1 GROUP BY CAMPUSESalias0.CAMPUS ;"
Find the names of the campus which has more faculties in var0 than every campus in var2 county .,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE FACULTYalias0.FACULTY > ( SELECT MAX( FACULTYalias1.FACULTY ) FROM CAMPUSES AS CAMPUSESalias1 JOIN FACULTY AS FACULTYalias1 ON FACULTYalias1.CAMPUS = CAMPUSESalias1.ID WHERE CAMPUSESalias1.COUNTY = ""var2"" AND FACULTYalias1.YEAR = var1 ) AND FACULTYalias0.YEAR = var0 ;"
What are the names of the campus that have more faculties in var0 than the maximum number in var2 county ?,spider,"SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE FACULTYalias0.FACULTY > ( SELECT MAX( FACULTYalias1.FACULTY ) FROM CAMPUSES AS CAMPUSESalias1 JOIN FACULTY AS FACULTYalias1 ON FACULTYalias1.CAMPUS = CAMPUSESalias1.ID WHERE CAMPUSESalias1.COUNTY = ""var2"" AND FACULTYalias1.YEAR = var1 ) AND FACULTYalias0.YEAR = var0 ;"
What campus had more than var1 total enrollment but more than var2 full time enrollment in year var0 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN ENROLLMENTS AS ENROLLMENTSalias0 ON ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE ENROLLMENTSalias0.FTE_AY > var2 AND ENROLLMENTSalias0.TOTALENROLLMENT_AY > var1 AND ENROLLMENTSalias0.YEAR = var0 ;
"What campus started in year var0 , has more than var2 full time students , and more than var1 students enrolled ?",spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN ENROLLMENTS AS ENROLLMENTSalias0 ON ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE ENROLLMENTSalias0.FTE_AY > var2 AND ENROLLMENTSalias0.TOTALENROLLMENT_AY > var1 AND ENROLLMENTSalias0.YEAR = var0 ;
How many campuses are there in var0 county ?,spider,"SELECT COUNT( * ) FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
How many campuses exist are in the county of LA ?,spider,"SELECT COUNT( * ) FROM CAMPUSES AS CAMPUSESalias0 WHERE CAMPUSESalias0.COUNTY = ""var0"" ;"
"How many degrees were conferred in "" var0 "" in var1 ?",spider,"SELECT DEGREESalias0.DEGREES FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND DEGREESalias0.YEAR = var1 ;"
How many degrees were conferred at var0 in var1 ?,spider,"SELECT DEGREESalias0.DEGREES FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND DEGREESalias0.YEAR = var1 ;"
"What are the degrees conferred in "" var0 "" in var1 .",spider,"SELECT DEGREESalias0.DEGREES FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND DEGREESalias0.YEAR = var1 ;"
What degrees were conferred in var0 in the year var1 ?,spider,"SELECT DEGREESalias0.DEGREES FROM CAMPUSES AS CAMPUSESalias0 JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND DEGREESalias0.YEAR = var1 ;"
How many faculty is there in total in the year of var0 ?,spider,SELECT SUM( FACULTYalias0.FACULTY ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.YEAR = var0 ;
"How many faculty , in total , are there in the year var0 ?",spider,SELECT SUM( FACULTYalias0.FACULTY ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.YEAR = var0 ;
"What is the number of faculty lines in campus "" var1 "" in var0 ?",spider,"SELECT FACULTYalias0.FACULTY FROM FACULTY AS FACULTYalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND FACULTYalias0.YEAR = var0 ;"
What is the number of faculty at var1 in var0 ?,spider,"SELECT FACULTYalias0.FACULTY FROM FACULTY AS FACULTYalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND FACULTYalias0.YEAR = var0 ;"
"How many faculty lines are there in "" var1 "" in year var0 ?",spider,"SELECT FACULTYalias0.FACULTY FROM FACULTY AS FACULTYalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND FACULTYalias0.YEAR = var0 ;"
How many faculty lines are there at var1 in var0 ?,spider,"SELECT FACULTYalias0.FACULTY FROM FACULTY AS FACULTYalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND FACULTYalias0.YEAR = var0 ;"
List the campus that have between var0 and var1 faculty lines in year var2 .,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.YEAR = var2 AND FACULTYalias0.FACULTY <= var1 AND FACULTYalias0.FACULTY >= var0 ;
What are the campuses that had between var0 and var1 faculty members in var2 ?,spider,SELECT CAMPUSESalias0.CAMPUS FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.YEAR = var2 AND FACULTYalias0.FACULTY <= var1 AND FACULTYalias0.FACULTY >= var0 ;
How many faculty lines are there in the university that conferred the most number of degrees in year var0 ?,spider,SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES DESC LIMIT 1 ;
How many faculty members did the university that conferred the most degrees in var0 have ?,spider,SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES DESC LIMIT 1 ;
How many faculty lines are there in the university that conferred the least number of degrees in year var0 ?,spider,SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES LIMIT 1 ;
How many faculty members are at the university that gave the least number of degrees in var0 ?,spider,SELECT FACULTYalias0.FACULTY FROM CAMPUSES AS CAMPUSESalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.CAMPUS = CAMPUSESalias0.ID JOIN DEGREES AS DEGREESalias0 ON DEGREESalias0.CAMPUS = CAMPUSESalias0.ID AND FACULTYalias0.YEAR = DEGREESalias0.YEAR WHERE FACULTYalias0.YEAR = var0 ORDER BY DEGREESalias0.DEGREES LIMIT 1 ;
"How many undergraduates are there in "" var1 "" in year var0 ?",spider,"SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.UNDERGRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;"
How many undergraduates are there at San Jose State,spider,"SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.UNDERGRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;"
"What is the number of graduates in "" var1 "" in year var0 ?",spider,"SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.GRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;"
How many people graduated from var1 in var0 ?,spider,"SELECT SUM( DISCIPLINE_ENROLLMENTSalias0.GRADUATE ) FROM DISCIPLINE_ENROLLMENTS AS DISCIPLINE_ENROLLMENTSalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON DISCIPLINE_ENROLLMENTSalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var1"" AND DISCIPLINE_ENROLLMENTSalias0.YEAR = var0 ;"
"What is the campus fee of "" var0 "" in year var1 ?",spider,"SELECT CSU_FEESalias0.CAMPUSFEE FROM CSU_FEES AS CSU_FEESalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
"In the year var1 , what is the campus fee for var0 ?",spider,"SELECT CSU_FEESalias0.CAMPUSFEE FROM CSU_FEES AS CSU_FEESalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
"Find the campus fee of "" var0 "" in year var1 .",spider,"SELECT CSU_FEESalias0.CAMPUSFEE FROM CSU_FEES AS CSU_FEESalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
What is the campus fee in the year var1 for var0 ?,spider,"SELECT CSU_FEESalias0.CAMPUSFEE FROM CSU_FEES AS CSU_FEESalias0 JOIN CAMPUSES AS CAMPUSESalias0 ON CSU_FEESalias0.CAMPUS = CAMPUSESalias0.ID WHERE CAMPUSESalias0.CAMPUS = ""var0"" AND CSU_FEESalias0.YEAR = var1 ;"
How many CSU campuses are there ?,spider,SELECT COUNT( * ) FROM CAMPUSES AS CAMPUSESalias0 ;
What is the total number of campuses ?,spider,SELECT COUNT( * ) FROM CAMPUSES AS CAMPUSESalias0 ;
How many candidates are there ?,spider,SELECT COUNT( * ) FROM CANDIDATE AS CANDIDATEalias0 ;
Count the number of candidates .,spider,SELECT COUNT( * ) FROM CANDIDATE AS CANDIDATEalias0 ;
Which poll resource provided the most number of candidate information ?,spider,SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 GROUP BY POLL_SOURCE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the poll resource associated with the most candidates .,spider,SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 GROUP BY POLL_SOURCE ORDER BY COUNT( * ) DESC LIMIT 1 ;
what are the top var0 highest support rates ?,spider,SELECT CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT var0 ;
Return the top var0 greatest support rates .,spider,SELECT CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT var0 ;
Find the id of the candidate who got the lowest oppose rate .,spider,SELECT CANDIDATEalias0.CANDIDATE_ID FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE LIMIT 1 ;
What is the id of the candidate with the lowest oppose rate ?,spider,SELECT CANDIDATEalias0.CANDIDATE_ID FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE LIMIT 1 ;
"Please list support , consider , and oppose rates for each candidate in ascending order by unsure rate .",spider,"SELECT CANDIDATEalias0.CONSIDER_RATE , CANDIDATEalias0.OPPOSE_RATE , CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.UNSURE_RATE ;"
"What are the support , consider , and oppose rates of each candidate , ordered ascending by their unsure rate ?",spider,"SELECT CANDIDATEalias0.CONSIDER_RATE , CANDIDATEalias0.OPPOSE_RATE , CANDIDATEalias0.SUPPORT_RATE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.UNSURE_RATE ;"
which poll source does the highest oppose rate come from ?,spider,SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE DESC LIMIT 1 ;
Return the poll source corresponding to the candidate who has the oppose rate .,spider,SELECT CANDIDATEalias0.POLL_SOURCE FROM CANDIDATE AS CANDIDATEalias0 ORDER BY CANDIDATEalias0.OPPOSE_RATE DESC LIMIT 1 ;
List all people names in the order of their date of birth from old to young .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.DATE_OF_BIRTH ;
"What are the names of all people , ordered by their date of birth ?",spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.DATE_OF_BIRTH ;
Find the average height and weight for all males (sex is var0) .,spider,"SELECT AVG( PEOPLEalias0.HEIGHT ) , AVG( PEOPLEalias0.WEIGHT ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.SEX = ""var0"" ;"
What are the average height and weight across males (sex is var0) ?,spider,"SELECT AVG( PEOPLEalias0.HEIGHT ) , AVG( PEOPLEalias0.WEIGHT ) FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.SEX = ""var0"" ;"
find the names of people who are taller than var0 or lower than var1 .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.HEIGHT < var1 OR PEOPLEalias0.HEIGHT > var0 ;
What are the names of people who have a height greater than var0 or less than var1 ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.HEIGHT < var1 OR PEOPLEalias0.HEIGHT > var0 ;
Find the average and minimum weight for each gender .,spider,"SELECT AVG( PEOPLEalias0.WEIGHT ) , MIN( PEOPLEalias0.WEIGHT ) , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.SEX ;"
What are the average and minimum weights for people of each sex ?,spider,"SELECT AVG( PEOPLEalias0.WEIGHT ) , MIN( PEOPLEalias0.WEIGHT ) , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.SEX ;"
Find the name and gender of the candidate who got the highest support rate .,spider,"SELECT PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT 1 ;"
What is the name and sex of the candidate with the highest support rate ?,spider,"SELECT PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID ORDER BY CANDIDATEalias0.SUPPORT_RATE DESC LIMIT 1 ;"
Find the name of the candidates whose oppose percentage is the lowest for each sex .,spider,"SELECT MIN( CANDIDATEalias0.OPPOSE_RATE ) , PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ;"
"For each sex , what is the name and sex of the candidate with the oppose rate for their sex ?",spider,"SELECT MIN( CANDIDATEalias0.OPPOSE_RATE ) , PEOPLEalias0.NAME , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ;"
which gender got the highest average uncertain ratio .,spider,SELECT PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ORDER BY AVG( CANDIDATEalias0.UNSURE_RATE ) DESC LIMIT 1 ;
What is the sex of the candidate who had the highest unsure rate ?,spider,SELECT PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID GROUP BY PEOPLEalias0.SEX ORDER BY AVG( CANDIDATEalias0.UNSURE_RATE ) DESC LIMIT 1 ;
what are the names of people who did not participate in the candidate election .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT CANDIDATEalias0.PEOPLE_ID FROM CANDIDATE AS CANDIDATEalias0 ) ;
Give the names of people who did not participate in the candidate election .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT CANDIDATEalias0.PEOPLE_ID FROM CANDIDATE AS CANDIDATEalias0 ) ;
Find the names of the candidates whose support percentage is lower than their oppose rate .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE CANDIDATEalias0.SUPPORT_RATE < CANDIDATEalias0.OPPOSE_RATE ;
What are the names of candidates who have a lower support rate than oppose rate ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE CANDIDATEalias0.SUPPORT_RATE < CANDIDATEalias0.OPPOSE_RATE ;
how many people are there whose weight is higher than var0 for each gender ?,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 WHERE WEIGHT > var0 GROUP BY PEOPLEalias0.SEX ;"
Count the number of people of each sex who have a weight higher than var0 .,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.SEX FROM PEOPLE AS PEOPLEalias0 WHERE WEIGHT > var0 GROUP BY PEOPLEalias0.SEX ;"
"find the highest support percentage , lowest consider rate and oppose rate of all candidates .",spider,"SELECT MAX( CANDIDATEalias0.SUPPORT_RATE ) , MIN( CANDIDATEalias0.CONSIDER_RATE ) , MIN( CANDIDATEalias0.OPPOSE_RATE ) FROM CANDIDATE AS CANDIDATEalias0 ;"
"Return the maximum support rate , minimum consider rate , and minimum oppose rate across all candidates ?",spider,"SELECT MAX( CANDIDATEalias0.SUPPORT_RATE ) , MIN( CANDIDATEalias0.CONSIDER_RATE ) , MIN( CANDIDATEalias0.OPPOSE_RATE ) FROM CANDIDATE AS CANDIDATEalias0 ;"
list all female (sex is var0) candidate names in the alphabetical order .,spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE PEOPLEalias0.SEX = ""var0"" ORDER BY PEOPLEalias0.NAME ;"
What are the names of all female candidates in alphabetical order (sex is var0) ?,spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN CANDIDATE AS CANDIDATEalias0 ON PEOPLEalias0.PEOPLE_ID = CANDIDATEalias0.PEOPLE_ID WHERE PEOPLEalias0.SEX = ""var0"" ORDER BY PEOPLEalias0.NAME ;"
find the name of people whose height is lower than the average .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.HEIGHT < ( SELECT AVG( PEOPLEalias1.HEIGHT ) FROM PEOPLE AS PEOPLEalias1 ) ;
What are the names of people who are shorter than average ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.HEIGHT < ( SELECT AVG( PEOPLEalias1.HEIGHT ) FROM PEOPLE AS PEOPLEalias1 ) ;
List all info about all people .,spider,SELECT PEOPLEalias0.* FROM PEOPLE AS PEOPLEalias0 ;
What is all the information about all people ?,spider,SELECT PEOPLEalias0.* FROM PEOPLE AS PEOPLEalias0 ;
Find the titles of all movies directed by steven spielberg .,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" ;"
What are the names of all movies directed by var0 ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" ;"
What is the name of the movie produced after var1 and directed by var0 ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" AND MOVIEalias0.YEAR > var1 ;"
What are the titles of all movies that var0 directed after var1 ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" AND MOVIEalias0.YEAR > var1 ;"
How many movies were made before var0 ?,spider,SELECT COUNT( * ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;
How many movies were made before var0 ?,spider,SELECT COUNT( * ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;
Who is the director of movie var0 ?,spider,"SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = ""var0"" ;"
Who directed var0 ?,spider,"SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = ""var0"" ;"
How many reviewers listed ?,spider,SELECT COUNT( * ) FROM REVIEWER AS REVIEWERalias0 ;
How many reviewers are there ?,spider,SELECT COUNT( * ) FROM REVIEWER AS REVIEWERalias0 ;
"What is the id of the reviewer whose name has substring "" var0 "" ?",spider,"SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME LIKE ""var0"" ;"
"What is the id of the reviewer whose name includes the word "" var0 "" ?",spider,"SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME LIKE ""var0"" ;"
What is the reviewer id of var0 ?,spider,"SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME = ""var0"" ;"
What is the id of the reviewer named var0 ?,spider,"SELECT RID FROM REVIEWER AS REVIEWERalias0 WHERE REVIEWERalias0.NAME = ""var0"" ;"
What is the total number of ratings that has more than var1 var0 ?,spider,SELECT COUNT( RATINGalias0.* ) FROM RATING AS RATINGalias0 WHERE var0 > var1 ;
How many movie ratings have more than var1 var0 ?,spider,SELECT COUNT( RATINGalias0.* ) FROM RATING AS RATINGalias0 WHERE var0 > var1 ;
What is the lowest and highest rating star ?,spider,"SELECT MAX( STARS ) , MIN( STARS ) FROM RATING AS RATINGalias0 ;"
What is the maximum and mininum number of var0 a rating can receive ?,spider,"SELECT MAX( var0 ) , MIN( var1 ) FROM RATING AS RATINGalias0 ;"
"Find all years that have a movie that received a rating of var0 or 5 , and sort them in increasing order of year .",spider,SELECT DISTINCT MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS >= var0 ORDER BY MOVIEalias0.YEAR ;
"In what years did a movie receive a var0 or 5 star rating , and list the years from oldest to most recently ?",spider,SELECT DISTINCT MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS >= var0 ORDER BY MOVIEalias0.YEAR ;
What are the names of directors who directed movies with var0 star rating ? Also return the title of these movies .,spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 ;"
"What are the names of the directors who created a movie with a var0 star rating , and what was the name of those movies ?",spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 ;"
What is the average rating star for each reviewer ?,spider,"SELECT AVG( RATINGalias0.STARS ) , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY REVIEWERalias0.NAME ;"
What is the average number of stars that each reviewer awards for a movie ?,spider,"SELECT AVG( RATINGalias0.STARS ) , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY REVIEWERalias0.NAME ;"
Find the titles of all movies that have no ratings .,spider,SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MID NOT IN ( SELECT MID FROM RATING AS RATINGalias0 ) ;
What are the titles of all movies that have not been rated ?,spider,SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MID NOT IN ( SELECT MID FROM RATING AS RATINGalias0 ) ;
Find the names of all reviewers who have ratings with a NULL value for the date .,spider,"SELECT DISTINCT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 JOIN RATING AS RATINGalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGDATE = ""var0"" ;"
What are the different names of all reviewers whose ratings do not have a date field ?,spider,"SELECT DISTINCT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 JOIN RATING AS RATINGalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGDATE = ""var0"" ;"
What is the average rating stars and title for the oldest movie ?,spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MIN( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;"
"For the oldest movie listed , what is its average rating and title ?",spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MIN( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;"
What is the name of the most recent movie ?,spider,SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;
What is the title of the newest movie ?,spider,SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;
What is the maximum stars and year for the most recent movie ?,spider,"SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;"
What is highest rating for the most recent movie and when was it released ?,spider,"SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE MOVIEalias0.YEAR = ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 ) ;"
What is the names of movies whose created year is after all movies directed by var0 ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR > ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.DIRECTOR = ""var0"" ) ;"
What are the names of all movies that were created after the most recent var0 film ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR > ( SELECT MAX( MOVIEalias1.YEAR ) FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.DIRECTOR = ""var0"" ) ;"
What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by var0 ?,spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS > ( SELECT AVG( RATINGalias1.STARS ) FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE MOVIEalias1.DIRECTOR = ""var0"" ) ;"
What are the titles and directors of all movies that have a rating higher than the average var0 film rating ?,spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS > ( SELECT AVG( RATINGalias1.STARS ) FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE MOVIEalias1.DIRECTOR = ""var0"" ) ;"
"Return reviewer name , movie title , stars , and ratingDate . And sort the data first by reviewer name , then by movie title , and lastly by number of stars .",spider,"SELECT MOVIEalias0.TITLE , RATINGalias0.RATINGDATE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID ORDER BY REVIEWERalias0.NAME , MOVIEalias0.TITLE , RATINGalias0.STARS ;"
"What is the reviewer name , film title , movie rating , and rating date for every movie ordered by reviewer name , movie title , then finally rating ?",spider,"SELECT MOVIEalias0.TITLE , RATINGalias0.RATINGDATE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID ORDER BY REVIEWERalias0.NAME , MOVIEalias0.TITLE , RATINGalias0.STARS ;"
Find the names of all reviewers who have contributed three or more ratings .,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY RATINGalias0.RID HAVING COUNT( RATINGalias0.* ) >= var0 ;
What are the names of all reviewers that have rated var0 or more movies ?,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID GROUP BY RATINGalias0.RID HAVING COUNT( RATINGalias0.* ) >= var0 ;
Find the names of all reviewers who rated var0 .,spider,"SELECT DISTINCT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.TITLE = ""var0"" ;"
What are the names of all the different reviewers who rates var0 ?,spider,"SELECT DISTINCT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.TITLE = ""var0"" ;"
Find the names of all directors whose movies are rated by var0 .,spider,"SELECT DISTINCT MOVIEalias0.DIRECTOR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
What are the names of all directors whose movies have been reviewed by var0 ?,spider,"SELECT DISTINCT MOVIEalias0.DIRECTOR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
"For any rating where the name of reviewer is the same as the director of the movie , return the reviewer name , movie title , and number of stars .",spider,"SELECT DISTINCT MOVIEalias0.TITLE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = MOVIEalias0.DIRECTOR ;"
"What are the different reviewer names , movie titles , and stars for every rating where the reviewer had the same name as the director ?",spider,"SELECT DISTINCT MOVIEalias0.TITLE , RATINGalias0.STARS , REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = MOVIEalias0.DIRECTOR ;"
Return all reviewer names and movie names together in a single list .,spider,SELECT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 UNION SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 ;
What are the names of all the reviewers and movie names ?,spider,SELECT REVIEWERalias0.NAME FROM REVIEWER AS REVIEWERalias0 UNION SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 ;
Find the titles of all movies not reviewed by var0 .,spider,"SELECT DISTINCT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 EXCEPT SELECT MOVIEalias1.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias1 ON RATINGalias0.MID = MOVIEalias1.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
What are the titles of all movies that were not reviewed by var0 ?,spider,"SELECT DISTINCT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 EXCEPT SELECT MOVIEalias1.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias1 ON RATINGalias0.MID = MOVIEalias1.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
"For all directors who directed more than one movie , return the titles of all movies directed by them , along with the director name . Sort by director name , then movie title .",spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ORDER BY MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE ;"
"For all directors who have directed more than one movie , what movies have they directed and what are their names ?",spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ORDER BY MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE ;"
"For directors who had more than one movie , return the titles and produced years of all movies directed by them .",spider,"SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ;"
"For each director who directed more than one movie , what are the titles and dates of release for all those movies ?",spider,"SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.DIRECTOR = MOVIEalias0.DIRECTOR WHERE MOVIEalias1.TITLE != MOVIEalias0.TITLE ;"
What are the names of the directors who made exactly one movie ?,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 GROUP BY MOVIEalias0.DIRECTOR HAVING COUNT( * ) = var0 ;
What are the names of all directors who made one movie ?,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 GROUP BY MOVIEalias0.DIRECTOR HAVING COUNT( * ) = var0 ;
What are the names of the directors who made exactly one movie excluding director NULL ?,spider,"SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE DIRECTOR != ""var0"" GROUP BY MOVIEalias0.DIRECTOR HAVING COUNT( * ) = var1 ;"
What are the names of all directors who have made one movie except for the director named NULL ?,spider,"SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE DIRECTOR != ""var0"" GROUP BY MOVIEalias0.DIRECTOR HAVING COUNT( * ) = var1 ;"
How many movie reviews does each director get ?,spider,"SELECT COUNT( RATINGalias0.* ) , MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;"
"For each director , how many reviews have they received ?",spider,"SELECT COUNT( RATINGalias0.* ) , MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 JOIN RATING AS RATINGalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;"
Find the movies with the highest average rating . Return the movie titles and average rating .,spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY AVG( RATINGalias0.STARS ) DESC LIMIT 1 ;"
What are the movie titles with the highest average rating and what are those ratings ?,spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY AVG( RATINGalias0.STARS ) DESC LIMIT 1 ;"
What are the movie titles and average rating of the movies with the lowest average rating ?,spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY AVG( RATINGalias0.STARS ) LIMIT 1 ;"
What are the titles and average ratings for all movies that have the lowest average rating ?,spider,"SELECT AVG( RATINGalias0.STARS ) , MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY AVG( RATINGalias0.STARS ) LIMIT 1 ;"
What are the names and years of the movies that has the top var0 highest rating star ?,spider,"SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID ORDER BY RATINGalias0.STARS DESC LIMIT var0 ;"
What are the names and years released for the movies with the top var0 highest ratings ?,spider,"SELECT MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID ORDER BY RATINGalias0.STARS DESC LIMIT var0 ;"
"For each director , return the director's name together with the title of the movie they directed that received the highest rating among all of their movies , and the value of that rating . Ignore movies whose director is NULL .",spider,"SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE DIRECTOR != ""var0"" GROUP BY MOVIEalias0.DIRECTOR ;"
"For each director , what are the titles and ratings for all the movies they reviewed ?",spider,"SELECT MAX( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE DIRECTOR != ""var0"" GROUP BY MOVIEalias0.DIRECTOR ;"
Find the title and star rating of the movie that got the least rating star for each reviewer .,spider,"SELECT MIN( RATINGalias0.STARS ) , MOVIEalias0.TITLE , RATINGalias0.RID , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.RID ;"
"For each reviewer id , what is the title and rating for the movie with the smallest rating ?",spider,"SELECT MIN( RATINGalias0.STARS ) , MOVIEalias0.TITLE , RATINGalias0.RID , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.RID ;"
Find the title and score of the movie with the lowest rating among all movies directed by each director .,spider,"SELECT MIN( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;"
"For each director , what is the title and score of their most poorly rated movie ?",spider,"SELECT MIN( RATINGalias0.STARS ) , MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , RATINGalias0.STARS FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY MOVIEalias0.DIRECTOR ;"
What is the name of the movie that is rated by most of times ?,spider,"SELECT MOVIEalias0.TITLE , RATINGalias0.MID FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY COUNT( RATINGalias0.* ) DESC LIMIT 1 ;"
What is the name of the movie that has been reviewed the most ?,spider,"SELECT MOVIEalias0.TITLE , RATINGalias0.MID FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID GROUP BY RATINGalias0.MID ORDER BY COUNT( RATINGalias0.* ) DESC LIMIT 1 ;"
What are the titles of all movies that have rating star is between var0 and var1 ?,spider,SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS BETWEEN var0 AND var1 ;
What are the titles of all movies that have between var0 and var1 stars ?,spider,SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS BETWEEN var0 AND var1 ;
Find the names of reviewers who had given higher than var0 star ratings .,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS > var0 ;
What are the names of the reviewers who have rated a movie more than var0 stars before ?,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS > var0 ;
Find the average rating star for each movie that are not reviewed by var0 .,spider,"SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 WHERE MID NOT IN ( SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = ""var0"" ) GROUP BY MID ;"
What is the average rating for each movie that has never been reviewed by var0 ?,spider,"SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 WHERE MID NOT IN ( SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = ""var0"" ) GROUP BY MID ;"
What are the ids of the movies that are not reviewed by var0 .,spider,"SELECT MID FROM RATING AS RATINGalias0 EXCEPT SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
What are the ids of all moviest hat have not been reviewed by Britanny Harris ?,spider,"SELECT MID FROM RATING AS RATINGalias0 EXCEPT SELECT RATINGalias1.MID FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias1.RID WHERE REVIEWERalias0.NAME = ""var0"" ;"
Find the average rating star for each movie that received at least var0 ratings .,spider,"SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 GROUP BY MID HAVING COUNT( RATINGalias0.* ) >= var0 ;"
"For each movie that received more than 3 reviews , what is the average rating ?",spider,"SELECT AVG( STARS ) , MID FROM RATING AS RATINGalias0 GROUP BY MID HAVING COUNT( RATINGalias0.* ) >= var0 ;"
find the ids of reviewers who did not give var0 star .,spider,SELECT RID FROM RATING AS RATINGalias0 EXCEPT SELECT RID FROM RATING AS RATINGalias1 WHERE STARS = var0 ;
What are the ids of all reviewers who did not give var1 var0 ?,spider,SELECT RID FROM RATING AS RATINGalias0 EXCEPT SELECT RID FROM RATING AS RATINGalias1 WHERE var0 = var1 ;
Find the ids of reviewers who didn't only give var0 star .,spider,SELECT RID FROM RATING AS RATINGalias0 WHERE STARS != var0 ;
What are the ids of all reviewers who have not given var1 var0 at least once ?,spider,SELECT RID FROM RATING AS RATINGalias0 WHERE var0 != var1 ;
What are names of the movies that are either made after var1 or reviewed by var0 ?,spider,"SELECT DISTINCT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.YEAR > var1 OR REVIEWERalias0.NAME = ""var0"" ;"
What are the names of all movies that were made after var1 or reviewed by var0 ?,spider,"SELECT DISTINCT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE MOVIEalias0.YEAR > var1 OR REVIEWERalias0.NAME = ""var0"" ;"
What are names of the movies that are either made before var1 or directed by var0 ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" OR MOVIEalias0.YEAR < var1 ;"
What are the names of all movies made before var1 or had var0 as the director ?,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.DIRECTOR = ""var0"" OR MOVIEalias0.YEAR < var1 ;"
What are the names of reviewers who had rated var0 star and var1 star ?,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT REVIEWERalias1.NAME FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias1 ON REVIEWERalias1.RID = RATINGalias1.RID WHERE RATINGalias1.STARS = var1 ;
What are the names of all reviewers that have given var0 or var1 stars for reviews ?,spider,SELECT REVIEWERalias0.NAME FROM RATING AS RATINGalias0 JOIN REVIEWER AS REVIEWERalias0 ON REVIEWERalias0.RID = RATINGalias0.RID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT REVIEWERalias1.NAME FROM RATING AS RATINGalias1 JOIN REVIEWER AS REVIEWERalias1 ON REVIEWERalias1.RID = RATINGalias1.RID WHERE RATINGalias1.STARS = var1 ;
What are the names of movies that get var0 star and var1 star ?,spider,SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT MOVIEalias1.TITLE FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE RATINGalias1.STARS = var1 ;
What are the names of all movies that received var0 or var1 stars ?,spider,SELECT MOVIEalias0.TITLE FROM RATING AS RATINGalias0 JOIN MOVIE AS MOVIEalias0 ON RATINGalias0.MID = MOVIEalias0.MID WHERE RATINGalias0.STARS = var0 INTERSECT SELECT MOVIEalias1.TITLE FROM RATING AS RATINGalias1 JOIN MOVIE AS MOVIEalias1 ON RATINGalias1.MID = MOVIEalias1.MID WHERE RATINGalias1.STARS = var1 ;
How many counties are there ?,spider,SELECT COUNT( * ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;
Count the number of countries .,spider,SELECT COUNT( * ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;
List the names of counties in descending order of population .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC ;
"What are the names of the counties of public safety , ordered by population descending ?",spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC ;
List the distinct police forces of counties whose location is not on east side .,spider,"SELECT DISTINCT COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.LOCATION != ""var0"" ;"
What are the different police forces of counties that are not located in the var0 ?,spider,"SELECT DISTINCT COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.LOCATION != ""var0"" ;"
What are the minimum and maximum crime rate of counties ?,spider,"SELECT MAX( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) , MIN( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;"
Return the minimum and maximum crime rates across all counties .,spider,"SELECT MAX( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) , MIN( COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE ) FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ;"
Show the crime rates of counties in ascending order of number of police officers .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS ASC ;
What are the crime rates of counties sorted by number of offices ascending ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS ASC ;
What are the names of cities in ascending alphabetical order ?,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.NAME ASC ;
"Return the names of cities , ordered alphabetically .",spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.NAME ASC ;
What are the percentage of hispanics in cities with the black percentage higher than var0 ?,spider,SELECT CITYalias0.HISPANIC FROM CITY AS CITYalias0 WHERE CITYalias0.BLACK > var0 ;
Return the hispanic percentage for cities in which the black percentage is greater than var0 .,spider,SELECT CITYalias0.HISPANIC FROM CITY AS CITYalias0 WHERE CITYalias0.BLACK > var0 ;
List the name of the county with the largest population .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC LIMIT 1 ;
What is the name of the county with the greatest population ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC LIMIT 1 ;
List the names of the city with the top var0 white percentages .,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.WHITE DESC LIMIT var0 ;
What are the names of the five cities with the greatest proportion of white people ?,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 ORDER BY CITYalias0.WHITE DESC LIMIT var0 ;
Show names of cities and names of counties they are in .,spider,"SELECT CITYalias0.NAME , COUNTY_PUBLIC_SAFETYalias0.NAME FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;"
"What are the names of cities , as well as the names of the counties they correspond to ?",spider,"SELECT CITYalias0.NAME , COUNTY_PUBLIC_SAFETYalias0.NAME FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;"
Show white percentages of cities and the crime rates of counties they are in .,spider,"SELECT CITYalias0.WHITE , COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;"
"What are the white percentages of cities , and the corresponding crime rates of the counties they correspond to ?",spider,"SELECT CITYalias0.WHITE , COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID ;"
Show the name of cities in the county that has the largest number of police officers .,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID = ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS DESC LIMIT 1 ) ;
What are the names of cities that are in the county with the most police officers ?,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID = ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POLICE_OFFICERS DESC LIMIT 1 ) ;
Show the number of cities in counties that have a population more than var0 .,spider,SELECT COUNT( CITYalias0.* ) FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.POPULATION > var0 ) ;
How many cities are in counties that have populations of over var0 ?,spider,SELECT COUNT( CITYalias0.* ) FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.POPULATION > var0 ) ;
Show the crime rate of counties with a city having white percentage more than var0 .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID WHERE CITYalias0.WHITE > var0 ;
What are the crime rates of counties that contain cities that have white percentages of over var0 ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE FROM CITY AS CITYalias0 JOIN COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ON COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID = CITYalias0.COUNTY_ID WHERE CITYalias0.WHITE > var0 ;
Please show the police forces and the number of counties with each police force .,spider,"SELECT COUNT( * ) , COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE ;"
How many counties correspond to each police force ?,spider,"SELECT COUNT( * ) , COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE ;"
What is the location shared by most counties ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.LOCATION FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which location has the most corresponding counties ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.LOCATION FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of counties that do not have any cities .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID NOT IN ( SELECT CITYalias0.COUNTY_ID FROM CITY AS CITYalias0 ) ;
What are the names of counties that do not contain any cities ?,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.NAME FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID NOT IN ( SELECT CITYalias0.COUNTY_ID FROM CITY AS CITYalias0 ) ;
Show the police force shared by counties with location on the east and west .,spider,"SELECT COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.LOCATION = ""var0"" INTERSECT SELECT COUNTY_PUBLIC_SAFETYalias1.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias1 WHERE COUNTY_PUBLIC_SAFETYalias1.LOCATION = ""var1"" ;"
Which police forces operate in both counties that are located in the var0 and in the var1 ?,spider,"SELECT COUNTY_PUBLIC_SAFETYalias0.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.LOCATION = ""var0"" INTERSECT SELECT COUNTY_PUBLIC_SAFETYalias1.POLICE_FORCE FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias1 WHERE COUNTY_PUBLIC_SAFETYalias1.LOCATION = ""var1"" ;"
Show the names of cities in counties that have a crime rate less than var0 .,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE < var0 ) ;
What are the names of cities that are in counties that have a crime rate below var0 ?,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.COUNTY_ID IN ( SELECT COUNTY_PUBLIC_SAFETYalias0.COUNTY_ID FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 WHERE COUNTY_PUBLIC_SAFETYalias0.CRIME_RATE < var0 ) ;
Show the case burden of counties in descending order of population .,spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CASE_BURDEN FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC ;
"What are the case burdens of counties , ordered descending by population ?",spider,SELECT COUNTY_PUBLIC_SAFETYalias0.CASE_BURDEN FROM COUNTY_PUBLIC_SAFETY AS COUNTY_PUBLIC_SAFETYalias0 ORDER BY COUNTY_PUBLIC_SAFETYalias0.POPULATION DESC ;
Find the names of all var2 rooms with a base price below $var0 and two beds .,spider,"SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE < var0 AND ROOMSalias0.BEDS = var1 AND ROOMSalias0.DECOR = ""var2"" ;"
What are the names of var2 rooms that have a base price lower than $var0 and two beds .,spider,"SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE < var0 AND ROOMSalias0.BEDS = var1 AND ROOMSalias0.DECOR = ""var2"" ;"
Find all the rooms that have a price higher than var0 and can accommodate more than var1 people . Report room names and ids .,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 AND MAXOCCUPANCY > var1 ;"
What are the room names and ids of all the rooms that cost more than var0 and can accommodate more than two people .,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 AND MAXOCCUPANCY > var1 ;"
Find the most popular room in the hotel . The most popular room is the room that had seen the largest number of reservations .,spider,SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY COUNT( RESERVATIONSalias0.* ) DESC LIMIT 1 ;
Which room has the largest number of reservations ?,spider,SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY COUNT( RESERVATIONSalias0.* ) DESC LIMIT 1 ;
How many kids stay in the rooms reserved by var0 var1 ?,spider,"SELECT RESERVATIONSalias0.KIDS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
Find the number of kids staying in the rooms reserved by a person called var0 SWEAZ .,spider,"SELECT RESERVATIONSalias0.KIDS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
How many times does var0 var1 has reserved a room .,spider,"SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
Find the number of times var0 var1 has reserved a room .,spider,"SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 WHERE FIRSTNAME = ""var0"" AND LASTNAME = ""var1"" ;"
"Which room has the highest rate ? List the room's full name , rate , check in and check out date .",spider,"SELECT RESERVATIONSalias0.CHECKIN , RESERVATIONSalias0.CHECKOUT , RESERVATIONSalias0.RATE , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY RESERVATIONSalias0.RATE DESC LIMIT 1 ;"
"Return the name , rate , check in and check out date for the room with the highest rate .",spider,"SELECT RESERVATIONSalias0.CHECKIN , RESERVATIONSalias0.CHECKOUT , RESERVATIONSalias0.RATE , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ORDER BY RESERVATIONSalias0.RATE DESC LIMIT 1 ;"
"How many adults stay in the room var1 var2 checked in on Oct 23 , 2010 ?",spider,"SELECT RESERVATIONSalias0.ADULTS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = ""var0"" AND FIRSTNAME = ""var1"" AND LASTNAME = ""var2"" ;"
"Find the number of adults for the room reserved and checked in by var1 var2 on Oct 23 , 2010 .",spider,"SELECT RESERVATIONSalias0.ADULTS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = ""var0"" AND FIRSTNAME = ""var1"" AND LASTNAME = ""var2"" ;"
"How many kids stay in the room var1 var2 checked in on Sep 21 , 2010 ?",spider,"SELECT RESERVATIONSalias0.KIDS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = ""var0"" AND FIRSTNAME = ""var1"" AND LASTNAME = ""var2"" ;"
"Return the number of kids for the room reserved and checked in by var1 var2 on Sep 21 , 2010 .",spider,"SELECT RESERVATIONSalias0.KIDS FROM RESERVATIONS AS RESERVATIONSalias0 WHERE CHECKIN = ""var0"" AND FIRSTNAME = ""var1"" AND LASTNAME = ""var2"" ;"
How many king beds are there ?,spider,"SELECT SUM( ROOMSalias0.BEDS ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ;"
Find the total number of king beds available .,spider,"SELECT SUM( ROOMSalias0.BEDS ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ;"
List the names and decor of rooms that have a king bed . Sort the list by their price .,spider,"SELECT ROOMNAME , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ORDER BY BASEPRICE ;"
What are the names and decor of rooms with a king bed ? Sort them by their price,spider,"SELECT ROOMNAME , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ORDER BY BASEPRICE ;"
Which room has cheapest base price ? List the room's name and the base price .,spider,"SELECT BASEPRICE , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ASC LIMIT 1 ;"
What are the room name and base price of the room with the lowest base price ?,spider,"SELECT BASEPRICE , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ASC LIMIT 1 ;"
What is the decor of room var0 ?,spider,"SELECT ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE ROOMNAME = ""var0"" ;"
"Return the decor of the room named "" var0 "" .",spider,"SELECT ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE ROOMNAME = ""var0"" ;"
What is the average base price of different bed type ? List bed type and average base price .,spider,"SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
"For each bed type , find the average base price of different bed type .",spider,"SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
"For each bed type , find the average room price .",spider,"SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
"What is the average base price of rooms , for each bed type ?",spider,"SELECT AVG( BASEPRICE ) , BEDTYPE FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
What is the total number of people who could stay in the var0 rooms in this inn ?,spider,"SELECT SUM( MAXOCCUPANCY ) FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = ""var0"" ;"
How many people in total can stay in the var0 rooms of this inn ?,spider,"SELECT SUM( MAXOCCUPANCY ) FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = ""var0"" ;"
What kind of decor has the least number of reservations ?,spider,SELECT ROOMSalias0.DECOR FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY ROOMSalias0.DECOR ORDER BY COUNT( ROOMSalias0.DECOR ) ASC LIMIT 1 ;
What is the least popular kind of decor ?,spider,SELECT ROOMSalias0.DECOR FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY ROOMSalias0.DECOR ORDER BY COUNT( ROOMSalias0.DECOR ) ASC LIMIT 1 ;
List how many times the number of people in the room reached the maximum occupancy of the room . The number of people include adults and kids .,spider,SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE ROOMSalias0.MAXOCCUPANCY = RESERVATIONSalias0.ADULTS + RESERVATIONSalias0.KIDS ;
How many times the number of adults and kids staying in a room reached the maximum capacity of the room ?,spider,SELECT COUNT( RESERVATIONSalias0.* ) FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE ROOMSalias0.MAXOCCUPANCY = RESERVATIONSalias0.ADULTS + RESERVATIONSalias0.KIDS ;
Find the first and last names of people who payed more than the rooms ' base prices .,spider,"SELECT RESERVATIONSalias0.FIRSTNAME , RESERVATIONSalias0.LASTNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE RESERVATIONSalias0.RATE - ROOMSalias0.BASEPRICE > var0 ;"
What are the first and last names of people who payed more than the rooms ' base prices ?,spider,"SELECT RESERVATIONSalias0.FIRSTNAME , RESERVATIONSalias0.LASTNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE RESERVATIONSalias0.RATE - ROOMSalias0.BASEPRICE > var0 ;"
How many rooms are there ?,spider,SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 ;
What is the total number of rooms available in this inn ?,spider,SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 ;
Find the number of rooms with a king bed .,spider,"SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ;"
How many rooms have a king bed ?,spider,"SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" ;"
Find the number of rooms for each bed type .,spider,"SELECT BEDTYPE , COUNT( * ) FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
What are the number of rooms for each bed type ?,spider,"SELECT BEDTYPE , COUNT( * ) FROM ROOMS AS ROOMSalias0 GROUP BY BEDTYPE ;"
Find the name of the room with the maximum occupancy .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY MAXOCCUPANCY DESC LIMIT 1 ;
What is the name of the room that can accommodate the most people ?,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY MAXOCCUPANCY DESC LIMIT 1 ;
Find the id and name of the most expensive base price room .,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT 1 ;"
Which room has the highest base price ?,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT 1 ;"
List the type of bed and name of all var0 rooms .,spider,"SELECT BEDTYPE , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = ""var0"" ;"
What are the bed type and name of all the rooms with var0 decor ?,spider,"SELECT BEDTYPE , ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE ROOMSalias0.DECOR = ""var0"" ;"
Find the number of rooms with king bed for each decor type .,spider,"SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" GROUP BY ROOMSalias0.DECOR ;"
How many rooms have king beds ? Report the number for each decor type .,spider,"SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" GROUP BY ROOMSalias0.DECOR ;"
Find the average and minimum price of the rooms in different decor .,spider,"SELECT AVG( BASEPRICE ) , MIN( BASEPRICE ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 GROUP BY ROOMSalias0.DECOR ;"
What is the average minimum and price of the rooms for each different decor .,spider,"SELECT AVG( BASEPRICE ) , MIN( BASEPRICE ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 GROUP BY ROOMSalias0.DECOR ;"
List the name of all rooms sorted by their prices .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ;
Sort all the rooms according to the price . Just report the room names .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE ;
Find the number of rooms with price higher than var0 for different decor .,spider,"SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 GROUP BY ROOMSalias0.DECOR ;"
"How many rooms cost more than var0 , for each different decor ?",spider,"SELECT COUNT( * ) , ROOMSalias0.DECOR FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > var0 GROUP BY ROOMSalias0.DECOR ;"
List the name of rooms with king or queen bed .,spider,"SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" OR BEDTYPE = ""var1"" ;"
What are the names of rooms that have either king or queen bed ?,spider,"SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BEDTYPE = ""var0"" OR BEDTYPE = ""var1"" ;"
How many different types of beds are there ?,spider,SELECT COUNT( DISTINCT BEDTYPE ) FROM ROOMS AS ROOMSalias0 ;
Find the number of distinct bed types available in this inn .,spider,SELECT COUNT( DISTINCT BEDTYPE ) FROM ROOMS AS ROOMSalias0 ;
Find the name and id of the top var0 expensive rooms .,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT var0 ;"
What are the name and id of the three highest priced rooms ?,spider,"SELECT ROOMID , ROOMNAME FROM ROOMS AS ROOMSalias0 ORDER BY BASEPRICE DESC LIMIT var0 ;"
Find the name of rooms whose price is higher than the average price .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > ( SELECT AVG( BASEPRICE ) FROM ROOMS AS ROOMSalias1 ) ;
What are the name of rooms that cost more than the average .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE > ( SELECT AVG( BASEPRICE ) FROM ROOMS AS ROOMSalias1 ) ;
Find the number of rooms that do not have any reservation .,spider,SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 WHERE ROOMID NOT IN ( SELECT DISTINCT RESERVATIONSalias0.ROOM FROM RESERVATIONS AS RESERVATIONSalias0 ) ;
How many rooms have not had any reservation yet ?,spider,SELECT COUNT( * ) FROM ROOMS AS ROOMSalias0 WHERE ROOMID NOT IN ( SELECT DISTINCT RESERVATIONSalias0.ROOM FROM RESERVATIONS AS RESERVATIONSalias0 ) ;
Return the name and number of reservations made for each of the rooms .,spider,"SELECT COUNT( RESERVATIONSalias0.* ) , RESERVATIONSalias0.ROOM , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ;"
"For each room , find its name and the number of times reservations were made for it .",spider,"SELECT COUNT( RESERVATIONSalias0.* ) , RESERVATIONSalias0.ROOM , ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM ;"
Find the names of rooms that have been reserved for more than var0 times .,spider,SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM HAVING COUNT( RESERVATIONSalias0.* ) > var0 ;
What are the names of rooms whose reservation frequency exceeds var0 times ?,spider,SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM GROUP BY RESERVATIONSalias0.ROOM HAVING COUNT( RESERVATIONSalias0.* ) > var0 ;
Find the name of rooms whose base price is between var0 and var1 .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE BETWEEN var0 AND var1 ;
Which rooms cost between var0 and var1 ? Give me the room names .,spider,SELECT ROOMNAME FROM ROOMS AS ROOMSalias0 WHERE BASEPRICE BETWEEN var0 AND var1 ;
Find the name of rooms booked by some customers whose first name contains var0 .,spider,"SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE FIRSTNAME LIKE ""var0"" ;"
"What are the name of rooms booked by customers whose first name has "" var0 "" in part ?",spider,"SELECT ROOMSalias0.ROOMNAME FROM RESERVATIONS AS RESERVATIONSalias0 JOIN ROOMS AS ROOMSalias0 ON ROOMSalias0.ROOMID = RESERVATIONSalias0.ROOM WHERE FIRSTNAME LIKE ""var0"" ;"
what are the details of the cmi masters that have the cross reference code ' var0 ' ?,spider,"SELECT CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS FROM CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON CUSTOMER_MASTER_INDEXalias0.MASTER_CUSTOMER_ID = CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID WHERE CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE = ""var0"" ;"
What is the cmi cross reference id that is related to at least one council tax entry ? List the cross reference id and source system code .,spider,"SELECT CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN COUNCIL_TAX AS COUNCIL_TAXalias0 ON COUNCIL_TAXalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID GROUP BY CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID HAVING COUNT( * ) >= var0 ;"
"How many business rates are related to each cmi cross reference ? List cross reference id , master customer id and the n",spider,"SELECT CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID , CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID , COUNT( * ) FROM BUSINESS_RATES AS BUSINESS_RATESalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BUSINESS_RATESalias0.CMI_CROSS_REF_ID GROUP BY CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID ;"
"What is the tax source system code related to the benefits and overpayments ? List the code and the benifit id , order by benifit id .",spider,"SELECT BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN BENEFITS_OVERPAYMENTS AS BENEFITS_OVERPAYMENTSalias0 ON CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID = BENEFITS_OVERPAYMENTSalias0.CMI_CROSS_REF_ID ORDER BY BENEFITS_OVERPAYMENTSalias0.COUNCIL_TAX_ID ;"
Wat is the tax source system code and master customer id of the taxes related to each parking fine id ?,spider,"SELECT CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID , CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE , PARKING_FINESalias0.COUNCIL_TAX_ID FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 JOIN PARKING_FINES AS PARKING_FINESalias0 ON PARKING_FINESalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID ;"
What are the renting arrears tax ids related to the customer master index whose detail is not ' var0 ' ?,spider,"SELECT RENT_ARREARSalias0.COUNCIL_TAX_ID FROM RENT_ARREARS AS RENT_ARREARSalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON RENT_ARREARSalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID JOIN CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 ON CUSTOMER_MASTER_INDEXalias0.MASTER_CUSTOMER_ID = CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID WHERE CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS != ""var0"" ;"
What are the register ids of electoral registries that have the cross reference source system code ' var0 ' or ' var1 ' ?,spider,"SELECT ELECTORAL_REGISTERalias0.ELECTORAL_REGISTER_ID FROM ELECTORAL_REGISTER AS ELECTORAL_REGISTERalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON ELECTORAL_REGISTERalias0.CMI_CROSS_REF_ID = CMI_CROSS_REFERENCESalias0.CMI_CROSS_REF_ID WHERE CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE = ""var0"" OR CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE = ""var1"" ;"
How many different source system code for the cmi cross references are there ?,spider,SELECT COUNT( DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE ) FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ;
"List all information about customer master index , and sort them by details in descending order .",spider,SELECT * FROM CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 ORDER BY CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS DESC ;
List the council tax ids and their related cmi cross references of all the parking fines .,spider,"SELECT CMI_CROSS_REF_ID , PARKING_FINESalias0.COUNCIL_TAX_ID FROM PARKING_FINES AS PARKING_FINESalias0 ;"
How many council taxes are collected for renting arrears ?,spider,SELECT COUNT( * ) FROM RENT_ARREARS AS RENT_ARREARSalias0 ;
What are the distinct cross reference source system codes which are related to the master customer details ' var0 ' ?,spider,"SELECT DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CUSTOMER_MASTER_INDEX AS CUSTOMER_MASTER_INDEXalias0 JOIN CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 ON CUSTOMER_MASTER_INDEXalias0.MASTER_CUSTOMER_ID = CMI_CROSS_REFERENCESalias0.MASTER_CUSTOMER_ID WHERE CUSTOMER_MASTER_INDEXalias0.CMI_DETAILS = ""var0"" ;"
Which cmi cross reference id is not related to any parking taxes ?,spider,SELECT CMI_CROSS_REF_ID FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 EXCEPT SELECT CMI_CROSS_REF_ID FROM PARKING_FINES AS PARKING_FINESalias0 ;
Which distinct source system code includes the substring ' var0 ' ?,spider,"SELECT DISTINCT CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE FROM CMI_CROSS_REFERENCES AS CMI_CROSS_REFERENCESalias0 WHERE CMI_CROSS_REFERENCESalias0.SOURCE_SYSTEM_CODE LIKE ""var0"" ;"
How many parties are there ?,spider,SELECT COUNT( * ) FROM PARTY AS PARTYalias0 ;
Count the number of parties .,spider,SELECT COUNT( * ) FROM PARTY AS PARTYalias0 ;
List the themes of parties in ascending order of number of hosts .,spider,SELECT PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.NUMBER_OF_HOSTS ASC ;
What are the themes of parties ordered by the number of hosts in ascending manner ?,spider,SELECT PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.NUMBER_OF_HOSTS ASC ;
What are the themes and locations of parties ?,spider,"SELECT PARTYalias0.LOCATION , PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ;"
Give me the theme and location of each party .,spider,"SELECT PARTYalias0.LOCATION , PARTYalias0.PARTY_THEME FROM PARTY AS PARTYalias0 ;"
"Show the first year and last year of parties with theme "" var0 "" or "" var1 "" .",spider,"SELECT PARTYalias0.FIRST_YEAR , PARTYalias0.LAST_YEAR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_THEME = ""var0"" OR PARTYalias0.PARTY_THEME = ""var1"" ;"
"What are the first year and last year of the parties whose theme is "" var0 "" or "" var1 "" ?",spider,"SELECT PARTYalias0.FIRST_YEAR , PARTYalias0.LAST_YEAR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_THEME = ""var0"" OR PARTYalias0.PARTY_THEME = ""var1"" ;"
What is the average number of hosts for parties ?,spider,SELECT AVG( PARTYalias0.NUMBER_OF_HOSTS ) FROM PARTY AS PARTYalias0 ;
Compute the average number of hosts for parties .,spider,SELECT AVG( PARTYalias0.NUMBER_OF_HOSTS ) FROM PARTY AS PARTYalias0 ;
What is the location of the party with the most hosts ?,spider,SELECT PARTYalias0.LOCATION FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.NUMBER_OF_HOSTS DESC LIMIT 1 ;
Which party had the most hosts ? Give me the party location .,spider,SELECT PARTYalias0.LOCATION FROM PARTY AS PARTYalias0 ORDER BY PARTYalias0.NUMBER_OF_HOSTS DESC LIMIT 1 ;
Show different nationalities along with the number of hosts of each nationality .,spider,"SELECT COUNT( * ) , HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 GROUP BY HOSTalias0.NATIONALITY ;"
How many hosts does each nationality have ? List the nationality and the count .,spider,"SELECT COUNT( * ) , HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 GROUP BY HOSTalias0.NATIONALITY ;"
Show the most common nationality of hosts .,spider,SELECT HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which nationality has the most hosts ?,spider,SELECT HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the nations that have both hosts older than var0 and hosts younger than var1 .,spider,SELECT HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 WHERE HOSTalias0.AGE > var0 INTERSECT SELECT HOSTalias1.NATIONALITY FROM HOST AS HOSTalias1 WHERE HOSTalias1.AGE < var1 ;
Which nations have both hosts of age above var0 and hosts of age below var1 ?,spider,SELECT HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 WHERE HOSTalias0.AGE > var0 INTERSECT SELECT HOSTalias1.NATIONALITY FROM HOST AS HOSTalias1 WHERE HOSTalias1.AGE < var1 ;
Show the themes of parties and the names of the party hosts .,spider,"SELECT HOSTalias0.NAME , PARTYalias0.PARTY_THEME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID ;"
"For each party , return its theme and the name of its host .",spider,"SELECT HOSTalias0.NAME , PARTYalias0.PARTY_THEME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID ;"
Show the locations of parties and the names of the party hosts in ascending order of the age of the host .,spider,"SELECT HOSTalias0.NAME , PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID ORDER BY HOSTalias0.AGE ;"
"For each party , find its location and the name of its host . Sort the result in ascending order of the age of the host .",spider,"SELECT HOSTalias0.NAME , PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID ORDER BY HOSTalias0.AGE ;"
Show the locations of parties with hosts older than var0 .,spider,SELECT PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE HOSTalias0.AGE > var0 ;
Which parties have hosts of age above var0 ? Give me the party locations .,spider,SELECT PARTYalias0.LOCATION FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE HOSTalias0.AGE > var0 ;
Show the host names for parties with number of hosts greater than var0 .,spider,SELECT HOSTalias0.NAME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE PARTYalias0.NUMBER_OF_HOSTS > var0 ;
Which parties have more than var0 hosts ? Give me the host names for these parties .,spider,SELECT HOSTalias0.NAME FROM PARTY_HOST AS PARTY_HOSTalias0 JOIN HOST AS HOSTalias0 ON PARTY_HOSTalias0.HOST_ID = HOSTalias0.HOST_ID JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = PARTY_HOSTalias0.PARTY_ID WHERE PARTYalias0.NUMBER_OF_HOSTS > var0 ;
Show the name and the nationality of the oldest host .,spider,"SELECT HOSTalias0.NAME , HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 ORDER BY HOSTalias0.AGE DESC LIMIT 1 ;"
What are the name and the nationality of the host of the highest age ?,spider,"SELECT HOSTalias0.NAME , HOSTalias0.NATIONALITY FROM HOST AS HOSTalias0 ORDER BY HOSTalias0.AGE DESC LIMIT 1 ;"
List the names of hosts who did not serve as a host of any party in our record .,spider,SELECT HOSTalias0.NAME FROM HOST AS HOSTalias0 WHERE HOSTalias0.HOST_ID NOT IN ( SELECT PARTY_HOSTalias0.HOST_ID FROM PARTY_HOST AS PARTY_HOSTalias0 ) ;
What are the names of hosts who did not host any party in our record ?,spider,SELECT HOSTalias0.NAME FROM HOST AS HOSTalias0 WHERE HOSTalias0.HOST_ID NOT IN ( SELECT PARTY_HOSTalias0.HOST_ID FROM PARTY_HOST AS PARTY_HOSTalias0 ) ;
Show all region code and region name sorted by the codes .,spider,"SELECT REGIONalias0.REGION_CODE , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_CODE ;"
"What are the codes and names for all regions , sorted by codes ?",spider,"SELECT REGIONalias0.REGION_CODE , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_CODE ;"
List all region names in alphabetical order .,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_NAME ;
What are the names of the regions in alphabetical order ?,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 ORDER BY REGIONalias0.REGION_NAME ;
Show names for all regions except for var0 .,spider,"SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 WHERE REGIONalias0.REGION_NAME != ""var0"" ;"
Return the names of all regions other than var0 .,spider,"SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 WHERE REGIONalias0.REGION_NAME != ""var0"" ;"
How many storms had death records ?,spider,SELECT COUNT( * ) FROM STORM AS STORMalias0 WHERE STORMalias0.NUMBER_DEATHS > var0 ;
Count the number of storms in which at least 1 person died .,spider,SELECT COUNT( * ) FROM STORM AS STORMalias0 WHERE STORMalias0.NUMBER_DEATHS > var0 ;
"List name , dates active , and number of deaths for all storms with at least var0 death .",spider,"SELECT STORMalias0.DATES_ACTIVE , STORMalias0.NAME , STORMalias0.NUMBER_DEATHS FROM STORM AS STORMalias0 WHERE STORMalias0.NUMBER_DEATHS >= var0 ;"
"What are the names , dates active , and number of deaths for storms that had var0 or more death ?",spider,"SELECT STORMalias0.DATES_ACTIVE , STORMalias0.NAME , STORMalias0.NUMBER_DEATHS FROM STORM AS STORMalias0 WHERE STORMalias0.NUMBER_DEATHS >= var0 ;"
Show the average and maximum damage for all storms with max speed higher than var0 .,spider,"SELECT AVG( STORMalias0.DAMAGE_MILLIONS_USD ) , MAX( STORMalias0.DAMAGE_MILLIONS_USD ) FROM STORM AS STORMalias0 WHERE STORMalias0.MAX_SPEED > var0 ;"
What is the average and maximum damage in millions for storms that had a max speed over var0 ?,spider,"SELECT AVG( STORMalias0.DAMAGE_MILLIONS_USD ) , MAX( STORMalias0.DAMAGE_MILLIONS_USD ) FROM STORM AS STORMalias0 WHERE STORMalias0.MAX_SPEED > var0 ;"
What is the total number of deaths and damage for all storms with a max speed greater than the average ?,spider,"SELECT SUM( STORMalias0.DAMAGE_MILLIONS_USD ) , SUM( STORMalias0.NUMBER_DEATHS ) FROM STORM AS STORMalias0 WHERE STORMalias0.MAX_SPEED > ( SELECT AVG( STORMalias1.MAX_SPEED ) FROM STORM AS STORMalias1 ) ;"
Return the total number of deaths and total damange in millions for storms that had a max speed greater than the average .,spider,"SELECT SUM( STORMalias0.DAMAGE_MILLIONS_USD ) , SUM( STORMalias0.NUMBER_DEATHS ) FROM STORM AS STORMalias0 WHERE STORMalias0.MAX_SPEED > ( SELECT AVG( STORMalias1.MAX_SPEED ) FROM STORM AS STORMalias1 ) ;"
List name and damage for all storms in a descending order of max speed .,spider,"SELECT STORMalias0.DAMAGE_MILLIONS_USD , STORMalias0.NAME FROM STORM AS STORMalias0 ORDER BY STORMalias0.MAX_SPEED DESC ;"
"What are the names and damage in millions for storms , ordered by their max speeds descending ?",spider,"SELECT STORMalias0.DAMAGE_MILLIONS_USD , STORMalias0.NAME FROM STORM AS STORMalias0 ORDER BY STORMalias0.MAX_SPEED DESC ;"
How many regions are affected ?,spider,SELECT COUNT( DISTINCT AFFECTED_REGIONalias0.REGION_ID ) FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ;
Count the number of different affected regions .,spider,SELECT COUNT( DISTINCT AFFECTED_REGIONalias0.REGION_ID ) FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ;
Show the name for regions not affected .,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 WHERE REGIONalias0.REGION_ID NOT IN ( SELECT AFFECTED_REGIONalias0.REGION_ID FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ) ;
What are the names of regions that were not affected ?,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 WHERE REGIONalias0.REGION_ID NOT IN ( SELECT AFFECTED_REGIONalias0.REGION_ID FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ) ;
Show the name for regions and the number of storms for each region .,spider,"SELECT COUNT( AFFECTED_REGIONalias0.* ) , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID ;"
How many storms occured in each region ?,spider,"SELECT COUNT( AFFECTED_REGIONalias0.* ) , REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID ;"
List the name for storms and the number of affected regions for each storm .,spider,"SELECT COUNT( AFFECTED_REGIONalias0.* ) , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ;"
How many regions were affected by each storm ?,spider,"SELECT COUNT( AFFECTED_REGIONalias0.* ) , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ;"
What is the storm name and max speed which affected the greatest number of regions ?,spider,"SELECT STORMalias0.MAX_SPEED , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ORDER BY COUNT( AFFECTED_REGIONalias0.* ) DESC LIMIT 1 ;"
Return the name and max speed of the storm that affected the most regions .,spider,"SELECT STORMalias0.MAX_SPEED , STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID ORDER BY COUNT( AFFECTED_REGIONalias0.* ) DESC LIMIT 1 ;"
Show the name of storms which don't have affected region in record .,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 WHERE STORMalias0.STORM_ID NOT IN ( SELECT AFFECTED_REGIONalias0.STORM_ID FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ) ;
What are the names of storms that did not affect any regions ?,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 WHERE STORMalias0.STORM_ID NOT IN ( SELECT AFFECTED_REGIONalias0.STORM_ID FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 ) ;
Show storm name with at least two regions and var1 cities affected .,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 INTERSECT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING SUM( AFFECTED_REGIONalias1.NUMBER_CITY_AFFECTED ) >= var1 ;
What are the names of storms that both affected two or more regions and affected a total of var1 or more cities ?,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias0.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 INTERSECT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING SUM( AFFECTED_REGIONalias1.NUMBER_CITY_AFFECTED ) >= var1 ;
Show all storm names except for those with at least two affected regions .,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 EXCEPT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
What are the names of storms that did not affect two or more regions ?,spider,SELECT STORMalias0.NAME FROM STORM AS STORMalias0 EXCEPT SELECT STORMalias1.NAME FROM STORM AS STORMalias1 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias0.STORM_ID GROUP BY STORMalias1.STORM_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
What are the region names affected by the storm with a number of deaths of least var0 ?,spider,SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE STORMalias0.NUMBER_DEATHS >= var0 ;
Return the names of the regions affected by storms that had a death count of at least var0 .,spider,SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE STORMalias0.NUMBER_DEATHS >= var0 ;
"Show all storm names affecting region "" var0 "" .",spider,"SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = ""var0"" ;"
What are the names of the storms that affected var0 ?,spider,"SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = ""var0"" ;"
Show the region name with at least two storms .,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
What are the names of regions with two or more storms ?,spider,SELECT REGIONalias0.REGION_NAME FROM REGION AS REGIONalias0 JOIN AFFECTED_REGION AS AFFECTED_REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID GROUP BY REGIONalias0.REGION_ID HAVING COUNT( AFFECTED_REGIONalias0.* ) >= var0 ;
Find the names of the regions which were affected by the storm that killed the greatest number of people .,spider,SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID ORDER BY STORMalias0.NUMBER_DEATHS DESC LIMIT 1 ;
What are the names of regions that were affected by the storm in which the most people died ?,spider,SELECT REGIONalias0.REGION_NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID ORDER BY STORMalias0.NUMBER_DEATHS DESC LIMIT 1 ;
Find the name of the storm that affected both var0 and var1 regions .,spider,"SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = ""var0"" INTERSECT SELECT STORMalias1.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias1 JOIN REGION AS REGIONalias1 ON REGIONalias1.REGION_ID = AFFECTED_REGIONalias1.REGION_ID JOIN STORM AS STORMalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID WHERE REGIONalias1.REGION_NAME = ""var1"" ;"
What are the names of the storms that affected both the regions of var0 and var1 ?,spider,"SELECT STORMalias0.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias0 JOIN REGION AS REGIONalias0 ON REGIONalias0.REGION_ID = AFFECTED_REGIONalias0.REGION_ID JOIN STORM AS STORMalias0 ON STORMalias0.STORM_ID = AFFECTED_REGIONalias0.STORM_ID WHERE REGIONalias0.REGION_NAME = ""var0"" INTERSECT SELECT STORMalias1.NAME FROM AFFECTED_REGION AS AFFECTED_REGIONalias1 JOIN REGION AS REGIONalias1 ON REGIONalias1.REGION_ID = AFFECTED_REGIONalias1.REGION_ID JOIN STORM AS STORMalias1 ON STORMalias1.STORM_ID = AFFECTED_REGIONalias1.STORM_ID WHERE REGIONalias1.REGION_NAME = ""var1"" ;"
How many counties are there in total ?,spider,SELECT COUNT( * ) FROM COUNTY AS COUNTYalias0 ;
Count the total number of counties .,spider,SELECT COUNT( * ) FROM COUNTY AS COUNTYalias0 ;
Show the county name and population of all counties .,spider,"SELECT COUNTYalias0.COUNTY_NAME , COUNTYalias0.POPULATION FROM COUNTY AS COUNTYalias0 ;"
What are the name and population of each county ?,spider,"SELECT COUNTYalias0.COUNTY_NAME , COUNTYalias0.POPULATION FROM COUNTY AS COUNTYalias0 ;"
Show the average population of all counties .,spider,SELECT AVG( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;
On average how large is the population of the counties ?,spider,SELECT AVG( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;
Return the maximum and minimum population among all counties .,spider,"SELECT MAX( COUNTYalias0.POPULATION ) , MIN( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;"
What are the maximum and minimum population of the counties ?,spider,"SELECT MAX( COUNTYalias0.POPULATION ) , MIN( COUNTYalias0.POPULATION ) FROM COUNTY AS COUNTYalias0 ;"
Show all the distinct districts for elections .,spider,SELECT DISTINCT ELECTIONalias0.DISTRICT FROM ELECTION AS ELECTIONalias0 ;
What are the distinct districts for elections ?,spider,SELECT DISTINCT ELECTIONalias0.DISTRICT FROM ELECTION AS ELECTIONalias0 ;
"Show the zip code of the county with name "" var0 "" .",spider,"SELECT COUNTYalias0.ZIP_CODE FROM COUNTY AS COUNTYalias0 WHERE COUNTYalias0.COUNTY_NAME = ""var0"" ;"
"What is the zip code the county named "" var0 "" is located in ?",spider,"SELECT COUNTYalias0.ZIP_CODE FROM COUNTY AS COUNTYalias0 WHERE COUNTYalias0.COUNTY_NAME = ""var0"" ;"
Show the delegate from district var0 in election .,spider,SELECT ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 WHERE ELECTIONalias0.DISTRICT = var0 ;
Who is the delegate of district var0 in the elections ?,spider,SELECT ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 WHERE ELECTIONalias0.DISTRICT = var0 ;
Show the delegate and committee information of elections .,spider,"SELECT ELECTIONalias0.COMMITTEE , ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 ;"
What are the delegate and committee information for each election record ?,spider,"SELECT ELECTIONalias0.COMMITTEE , ELECTIONalias0.DELEGATE FROM ELECTION AS ELECTIONalias0 ;"
How many distinct governors are there ?,spider,SELECT COUNT( DISTINCT PARTYalias0.GOVERNOR ) FROM PARTY AS PARTYalias0 ;
Count the number of distinct governors .,spider,SELECT COUNT( DISTINCT PARTYalias0.GOVERNOR ) FROM PARTY AS PARTYalias0 ;
Show the lieutenant governor and comptroller from the democratic party .,spider,"SELECT PARTYalias0.COMPTROLLER , PARTYalias0.LIEUTENANT_GOVERNOR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY = ""var0"" ;"
Who are the lieutenant governor and comptroller from the democratic party ?,spider,"SELECT PARTYalias0.COMPTROLLER , PARTYalias0.LIEUTENANT_GOVERNOR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY = ""var0"" ;"
"In which distinct years was the governor "" var0 "" ?",spider,"SELECT DISTINCT PARTYalias0.YEAR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.GOVERNOR = ""var0"" ;"
"Find the distinct years when the governor was named "" var0 "" .",spider,"SELECT DISTINCT PARTYalias0.YEAR FROM PARTY AS PARTYalias0 WHERE PARTYalias0.GOVERNOR = ""var0"" ;"
Show all the information about election .,spider,SELECT ELECTIONalias0.* FROM ELECTION AS ELECTIONalias0 ;
Return all the information for each election record .,spider,SELECT ELECTIONalias0.* FROM ELECTION AS ELECTIONalias0 ;
Show the delegates and the names of county they belong to .,spider,"SELECT COUNTYalias0.COUNTY_NAME , ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID ;"
"What are the delegate and name of the county they belong to , for each county ?",spider,"SELECT COUNTYalias0.COUNTY_NAME , ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID ;"
Which delegates are from counties with population smaller than var0 ?,spider,SELECT ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION < var0 ;
Find the delegates who are from counties with population below var0 .,spider,SELECT ELECTIONalias0.DELEGATE FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION < var0 ;
How many distinct delegates are from counties with population larger than var0 ?,spider,SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
Count the number of distinct delegates who are from counties with population above var0 .,spider,SELECT COUNT( DISTINCT ELECTIONalias0.DELEGATE ) FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE COUNTYalias0.POPULATION > var0 ;
"What are the names of the county that the delegates on "" var0 "" committee belong to ?",spider,"SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE ELECTIONalias0.COMMITTEE = ""var0"" ;"
"Which county do the delegates on "" var0 "" committee belong to ? Give me the county names .",spider,"SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID WHERE ELECTIONalias0.COMMITTEE = ""var0"" ;"
Show the delegates and the names of the party they belong to .,spider,"SELECT ELECTIONalias0.DELEGATE , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY ;"
"For each delegate , find the names of the party they are part of .",spider,"SELECT ELECTIONalias0.DELEGATE , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY ;"
Who were the governors of the parties associated with delegates from district var0 ?,spider,SELECT PARTYalias0.GOVERNOR FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 ;
Find the parties associated with the delegates from district var0 . Who served as governors of the parties ?,spider,SELECT PARTYalias0.GOVERNOR FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 ;
Who were the comptrollers of the parties associated with the delegates from district var0 or district var1 ?,spider,SELECT PARTYalias0.COMPTROLLER FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 OR ELECTIONalias0.DISTRICT = var1 ;
Find the parties associated with the delegates from district var0 or var1 . Who served as comptrollers of the parties ?,spider,SELECT PARTYalias0.COMPTROLLER FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.DISTRICT = var0 OR ELECTIONalias0.DISTRICT = var1 ;
Return all the committees that have delegates from var0 party .,spider,"SELECT ELECTIONalias0.COMMITTEE FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE PARTYalias0.PARTY = ""var0"" ;"
Which committees have delegates from the var0 party ?,spider,"SELECT ELECTIONalias0.COMMITTEE FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE PARTYalias0.PARTY = ""var0"" ;"
Show the name of each county along with the corresponding number of delegates from that county .,spider,"SELECT COUNT( ELECTIONalias0.* ) , COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID GROUP BY COUNTYalias0.COUNTY_ID ;"
"For each county , find the name of the county and the number of delegates from that county .",spider,"SELECT COUNT( ELECTIONalias0.* ) , COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID GROUP BY COUNTYalias0.COUNTY_ID ;"
Show the name of each party and the corresponding number of delegates from that party .,spider,"SELECT COUNT( ELECTIONalias0.* ) , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ;"
"For each party , return the name of the party and the number of delegates from that party .",spider,"SELECT COUNT( ELECTIONalias0.* ) , PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ;"
Return the names of all counties sorted by population in ascending order .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC ;
Sort the names of all counties in ascending order of population .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC ;
Return the names of all counties sorted by county name in descending alphabetical order .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.COUNTY_NAME DESC ;
Sort the names of all counties in descending alphabetical order .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.COUNTY_NAME DESC ;
Show the name of the county with the biggest population .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION DESC LIMIT 1 ;
Which county has the largest population ? Give me the name of the county .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION DESC LIMIT 1 ;
Show the var0 counties with the smallest population .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC LIMIT var0 ;
What are the var0 counties that have the smallest population ? Give me the county names .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 ORDER BY COUNTYalias0.POPULATION ASC LIMIT var0 ;
Show the names of counties that have at least two delegates .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID GROUP BY COUNTYalias0.COUNTY_ID HAVING COUNT( ELECTIONalias0.* ) >= var0 ;
Which counties have two or more delegates ? Give me the county names .,spider,SELECT COUNTYalias0.COUNTY_NAME FROM COUNTY AS COUNTYalias0 JOIN ELECTION AS ELECTIONalias0 ON ELECTIONalias0.DISTRICT = COUNTYalias0.COUNTY_ID GROUP BY COUNTYalias0.COUNTY_ID HAVING COUNT( ELECTIONalias0.* ) >= var0 ;
Show the name of the party that has at least two records .,spider,SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 GROUP BY PARTYalias0.PARTY HAVING COUNT( * ) >= var0 ;
Which party has two or more records ?,spider,SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 GROUP BY PARTYalias0.PARTY HAVING COUNT( * ) >= var0 ;
Show the name of the party that has the most delegates .,spider,SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ORDER BY COUNT( ELECTIONalias0.* ) DESC LIMIT 1 ;
Which party has the largest number of delegates ?,spider,SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY GROUP BY ELECTIONalias0.PARTY ORDER BY COUNT( ELECTIONalias0.* ) DESC LIMIT 1 ;
Show the people that have been governor the most times .,spider,SELECT PARTYalias0.GOVERNOR FROM PARTY AS PARTYalias0 GROUP BY GOVERNOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which people severed as governor most frequently ?,spider,SELECT PARTYalias0.GOVERNOR FROM PARTY AS PARTYalias0 GROUP BY GOVERNOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the people that have been comptroller the most times and the corresponding number of times .,spider,"SELECT COUNT( * ) , PARTYalias0.COMPTROLLER FROM PARTY AS PARTYalias0 GROUP BY COMPTROLLER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which people severed as comptroller most frequently ? Give me the name of the person and the frequency count .,spider,"SELECT COUNT( * ) , PARTYalias0.COMPTROLLER FROM PARTY AS PARTYalias0 GROUP BY COMPTROLLER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the names of parties that do not have delegates in election ?,spider,SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT ELECTIONalias0.PARTY FROM ELECTION AS ELECTIONalias0 ) ;
Which parties did not have any delegates in elections ?,spider,SELECT PARTYalias0.PARTY FROM PARTY AS PARTYalias0 WHERE PARTYalias0.PARTY_ID NOT IN ( SELECT ELECTIONalias0.PARTY FROM ELECTION AS ELECTIONalias0 ) ;
"What are the names of parties that have both delegates on "" var0 "" committee and",spider,"SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.COMMITTEE = ""var0"" INTERSECT SELECT PARTYalias1.PARTY FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE ELECTIONalias1.COMMITTEE = ""var1"" ;"
"Which parties have delegates in both the "" var0 "" committee and the "" var1 "" committee ?",spider,"SELECT PARTYalias0.PARTY FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE ELECTIONalias0.COMMITTEE = ""var0"" INTERSECT SELECT PARTYalias1.PARTY FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE ELECTIONalias1.COMMITTEE = ""var1"" ;"
Which committees have delegates from both democratic party and liberal party ?,spider,"SELECT ELECTIONalias0.COMMITTEE FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE PARTYalias0.PARTY = ""var0"" INTERSECT SELECT ELECTIONalias1.COMMITTEE FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE PARTYalias1.PARTY = ""var1"" ;"
Find the committees that have delegates both from from the democratic party and the liberal party .,spider,"SELECT ELECTIONalias0.COMMITTEE FROM ELECTION AS ELECTIONalias0 JOIN PARTY AS PARTYalias0 ON PARTYalias0.PARTY_ID = ELECTIONalias0.PARTY WHERE PARTYalias0.PARTY = ""var0"" INTERSECT SELECT ELECTIONalias1.COMMITTEE FROM ELECTION AS ELECTIONalias1 JOIN PARTY AS PARTYalias1 ON PARTYalias1.PARTY_ID = ELECTIONalias1.PARTY WHERE PARTYalias1.PARTY = ""var1"" ;"
How many journalists are there ?,spider,SELECT COUNT( * ) FROM JOURNALIST AS JOURNALISTalias0 ;
List the names of journalists in ascending order of years working .,spider,SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 ORDER BY JOURNALISTalias0.YEARS_WORKING ASC ;
What are the nationalities and ages of journalists ?,spider,"SELECT JOURNALISTalias0.AGE , JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 ;"
"Show the names of journalists from "" var0 "" or "" var1 "" .",spider,"SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.NATIONALITY = ""var0"" OR JOURNALISTalias0.NATIONALITY = ""var1"" ;"
What is the average number of years spent working as a journalist ?,spider,SELECT AVG( JOURNALISTalias0.YEARS_WORKING ) FROM JOURNALIST AS JOURNALISTalias0 ;
What is the nationality of the journalist with the largest number of years working ?,spider,SELECT JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 ORDER BY JOURNALISTalias0.YEARS_WORKING DESC LIMIT 1 ;
Show the different nationalities and the number of journalists of each nationality .,spider,"SELECT COUNT( * ) , JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 GROUP BY JOURNALISTalias0.NATIONALITY ;"
Show the most common nationality for journalists .,spider,SELECT JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 GROUP BY NATIONALITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the nations that have both journalists with more than var0 years of working and journalists with less than var1 years of working .,spider,SELECT JOURNALISTalias0.NATIONALITY FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.YEARS_WORKING > var0 INTERSECT SELECT JOURNALISTalias1.NATIONALITY FROM JOURNALIST AS JOURNALISTalias1 WHERE JOURNALISTalias1.YEARS_WORKING < var1 ;
"Show the dates , places , and names of events in descending order of the attendance .",spider,"SELECT EVENTalias0.DATE , EVENTalias0.NAME , EVENTalias0.VENUE FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.EVENT_ATTENDANCE DESC ;"
Show the names of journalists and the dates of the events they reported .,spider,"SELECT EVENTalias0.DATE , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID ;"
Show the names of journalists and the names of the events they reported in ascending order,spider,"SELECT EVENTalias0.NAME , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID ORDER BY EVENTalias0.EVENT_ATTENDANCE ASC ;"
Show the names of journalists and the number of events they reported .,spider,"SELECT COUNT( NEWS_REPORTalias0.* ) , JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY JOURNALISTalias0.NAME ;"
Show the names of journalists that have reported more than one event .,spider,SELECT JOURNALISTalias0.NAME FROM NEWS_REPORT AS NEWS_REPORTalias0 JOIN EVENT AS EVENTalias0 ON NEWS_REPORTalias0.EVENT_ID = EVENTalias0.EVENT_ID JOIN JOURNALIST AS JOURNALISTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY JOURNALISTalias0.NAME HAVING COUNT( NEWS_REPORTalias0.* ) > var0 ;
List the names of journalists who have not reported any event .,spider,SELECT JOURNALISTalias0.NAME FROM JOURNALIST AS JOURNALISTalias0 WHERE JOURNALISTalias0.JOURNALIST_ID NOT IN ( SELECT NEWS_REPORTalias0.JOURNALIST_ID FROM NEWS_REPORT AS NEWS_REPORTalias0 ) ;
what are the average and maximum attendances of all events ?,spider,"SELECT AVG( EVENTalias0.EVENT_ATTENDANCE ) , MAX( EVENTalias0.EVENT_ATTENDANCE ) FROM EVENT AS EVENTalias0 ;"
Find the average age and experience working length of journalists working on different role type .,spider,"SELECT AVG( JOURNALISTalias0.AGE ) , AVG( JOURNALISTalias0.YEARS_WORKING ) , NEWS_REPORTalias0.WORK_TYPE FROM JOURNALIST AS JOURNALISTalias0 JOIN NEWS_REPORT AS NEWS_REPORTalias0 ON NEWS_REPORTalias0.JOURNALIST_ID = JOURNALISTalias0.JOURNALIST_ID GROUP BY NEWS_REPORTalias0.WORK_TYPE ;"
List the event venues and names that have the top var0 most number of people attended .,spider,"SELECT EVENTalias0.NAME , EVENTalias0.VENUE FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.EVENT_ATTENDANCE DESC LIMIT var0 ;"
Show me all the restaurants .,spider,SELECT RESNAME FROM RESTAURANT AS RESTAURANTalias0 ;
What is the address of the restaurant var0 ?,spider,"SELECT RESTAURANTalias0.ADDRESS FROM RESTAURANT AS RESTAURANTalias0 WHERE RESNAME = ""var0"" ;"
What is the rating of the restaurant var0 ?,spider,"SELECT RESTAURANTalias0.RATING FROM RESTAURANT AS RESTAURANTalias0 WHERE RESNAME = ""var0"" ;"
List all restaurant types .,spider,SELECT RESTYPENAME FROM RESTAURANT_TYPE AS RESTAURANT_TYPEalias0 ;
What is the description of the restaurant type var0 ?,spider,"SELECT RESTYPEDESCRIPTION FROM RESTAURANT_TYPE AS RESTAURANT_TYPEalias0 WHERE RESTYPENAME = ""var0"" ;"
Which restaurants have highest rating ? List the restaurant name and its rating .,spider,"SELECT RESNAME , RESTAURANTalias0.RATING FROM RESTAURANT AS RESTAURANTalias0 ORDER BY RESTAURANTalias0.RATING DESC LIMIT 1 ;"
What is the age of student var0 var1 ?,spider,"SELECT STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE FNAME = ""var0"" AND LNAME = ""var1"" ;"
What is the gender of the student var0 var1 ?,spider,"SELECT STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE FNAME = ""var0"" AND LNAME = ""var1"" ;"
List all students ' first names and last names who majored in var0 .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;"
Which city does student var0 var1 live in ?,spider,"SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE FNAME = ""var0"" AND LNAME = ""var1"" ;"
Advisor var0 has how many students ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ADVISOR = var0 ;
Which Advisor has most of students ? List advisor and the number of students .,spider,"SELECT COUNT( * ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY ADVISOR ORDER BY COUNT( STUDENTalias0.ADVISOR ) DESC LIMIT 1 ;"
Which major has least number of students ? List the major and the number of students .,spider,"SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( STUDENTalias0.MAJOR ) ASC LIMIT 1 ;"
Which major has between var0 and var1 number of students ? List major and the number of students .,spider,"SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR HAVING COUNT( STUDENTalias0.MAJOR ) BETWEEN var0 AND var1 ;"
Which student's age is older than var0 and is majoring in var1 ? List each student's first and last name .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 AND STUDENTalias0.MAJOR = var1 ;"
List all female students age is older than var0 who is not majoring in var1 . List students ' first name and last name .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 AND STUDENTalias0.MAJOR != var1 AND STUDENTalias0.SEX = ""var2"" ;"
How many restaurant is the var0 type restaurant ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN TYPE_OF_RESTAURANT AS TYPE_OF_RESTAURANTalias0 ON TYPE_OF_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID JOIN RESTAURANT_TYPE AS RESTAURANT_TYPEalias0 ON TYPE_OF_RESTAURANTalias0.RESTYPEID = RESTAURANT_TYPEalias0.RESTYPEID GROUP BY TYPE_OF_RESTAURANTalias0.RESTYPEID HAVING RESTAURANT_TYPEalias0.RESTYPENAME = ""var0"" ;"
How long does student var0 var1 spend on the restaurant in total ?,spider,"SELECT SUM( VISITS_RESTAURANTalias0.SPENT ) FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
How many times has the student var0 var1 visited var2 ?,spider,"SELECT COUNT( VISITS_RESTAURANTalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID WHERE RESTAURANTalias0.RESNAME = ""var2"" AND STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
When did var0 var1 visit var2 ?,spider,"SELECT VISITS_RESTAURANTalias0.TIME FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID WHERE RESTAURANTalias0.RESNAME = ""var2"" AND STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
At which restaurant did the students spend the least amount of time ? List restaurant and the time students spent on in total .,spider,"SELECT RESTAURANTalias0.RESNAME , SUM( VISITS_RESTAURANTalias0.SPENT ) FROM VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON VISITS_RESTAURANTalias0.RESID = RESTAURANTalias0.RESID GROUP BY RESTAURANTalias0.RESID ORDER BY SUM( VISITS_RESTAURANTalias0.SPENT ) ASC LIMIT 1 ;"
Which student visited restaurant most often ? List student's first name and last name .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VISITS_RESTAURANT AS VISITS_RESTAURANTalias0 ON VISITS_RESTAURANTalias0.STUID = STUDENTalias0.STUID GROUP BY STUDENTalias0.STUID ORDER BY COUNT( VISITS_RESTAURANTalias0.* ) DESC LIMIT 1 ;"
Find the ids of orders whose status is ' var0 ' .,spider,"SELECT ACTUAL_ORDERSalias0.ACTUAL_ORDER_ID FROM ACTUAL_ORDERS AS ACTUAL_ORDERSalias0 WHERE ACTUAL_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" ;"
Find the name and price of the product that has been ordered the greatest number of times .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 JOIN REGULAR_ORDER_PRODUCTS AS REGULAR_ORDER_PRODUCTSalias0 ON REGULAR_ORDER_PRODUCTSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID GROUP BY REGULAR_ORDER_PRODUCTSalias0.PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many different payment methods are there ?,spider,SELECT COUNT( DISTINCT CUSTOMERSalias0.PAYMENT_METHOD ) FROM CUSTOMERS AS CUSTOMERSalias0 ;
Show the details of all trucks in the order of their license number .,spider,SELECT TRUCKSalias0.TRUCK_DETAILS FROM TRUCKS AS TRUCKSalias0 ORDER BY TRUCKSalias0.TRUCK_LICENCE_NUMBER ;
Find the name of the most expensive product .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
What is the name of the product with the highest price ?,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
What is the name of the most expensive product ?,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
Tell me the name of the most pricy product .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;
Find the names of customers who are not living in the state of var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
List the names and emails of customers who payed by var0 card .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ""var0"" ;"
Find the names and phone numbers of customers living in var0 state .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
Find the states which do not have any employee in their record .,spider,SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ADDRESS_ID NOT IN ( SELECT EMPLOYEESalias0.EMPLOYEE_ADDRESS_ID FROM EMPLOYEES AS EMPLOYEESalias0 ) ;
"List the names , phone numbers , and emails of all customers sorted by their dates of becoming customers .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.DATE_BECAME_CUSTOMER ;"
Find the name of the first var0 customers .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.DATE_BECAME_CUSTOMER LIMIT var0 ;
Find the payment method that is used most frequently .,spider,SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which payment method is used by most customers ?,spider,SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the payment method that is used most frequently .,spider,SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of all routes in alphabetic order .,spider,SELECT DELIVERY_ROUTESalias0.ROUTE_NAME FROM DELIVERY_ROUTES AS DELIVERY_ROUTESalias0 ORDER BY DELIVERY_ROUTESalias0.ROUTE_NAME ;
Find the name of route that has the highest number of deliveries .,spider,SELECT DELIVERY_ROUTESalias0.ROUTE_NAME FROM DELIVERY_ROUTES AS DELIVERY_ROUTESalias0 JOIN DELIVERY_ROUTE_LOCATIONS AS DELIVERY_ROUTE_LOCATIONSalias0 ON DELIVERY_ROUTE_LOCATIONSalias0.ROUTE_ID = DELIVERY_ROUTESalias0.ROUTE_ID GROUP BY DELIVERY_ROUTESalias0.ROUTE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the state names and the number of customers living in each state .,spider,"SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY , COUNT( * ) FROM CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY ;"
How many authors are there ?,spider,SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 ;
Count the number of authors .,spider,SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 ;
How many institutions are there ?,spider,SELECT COUNT( * ) FROM INST ;
Count the number of institutions .,spider,SELECT COUNT( * ) FROM INST ;
How many papers are published in total ?,spider,SELECT COUNT( * ) FROM PAPERS AS PAPERSalias0 ;
Count the number of total papers .,spider,SELECT COUNT( * ) FROM PAPERS AS PAPERSalias0 ;
"What are the titles of papers published by "" var0 var1 "" ?",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Find the titles of all the papers written by "" var0 var1 """,spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Find all the papers published by "" var0 var1 "" .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Find the titles of all the papers written by "" var0 var1 "" .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Find the papers which have "" var0 var1 "" as an author .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Which papers did the author "" var0 var1 "" write ? Give me the paper titles .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Which papers have "" var0 var1 "" as an author ?",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Find the titles of the papers the author "" var0 var1 "" wrote .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"How many papers have "" var0 var1 "" published ?",spider,"SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"How many papers are "" var0 var1 "" the author of ?",spider,"SELECT COUNT( * ) FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"What is the name of the institution that "" var0 var1 "" belongs to ?",spider,"SELECT DISTINCT DERIVED_TABLEalias1.NAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Which institution is the author "" var0 var1 "" belong to ? Give me the name of the institution .",spider,"SELECT DISTINCT DERIVED_TABLEalias1.NAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Which institution does "" var0 var1 "" belong to ?",spider,"SELECT DISTINCT DERIVED_TABLEalias1.NAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"What is the name of the institution the author "" var0 var1 "" belongs to ?",spider,"SELECT DISTINCT DERIVED_TABLEalias1.NAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.FNAME = ""var0"" AND AUTHORSalias0.LNAME = ""var1"" ;"
"Who belong to the institution "" var0 "" ? Show the first names and last names .",spider,"SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Find the first names and last names of the authors whose institution affiliation is "" var0 "" .",spider,"SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Which authors belong to the institution "" var0 "" ? Show the first names and last names .",spider,"SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Find the first names and last names of the authors whose institution affiliation is "" var0 "" .",spider,"SELECT DISTINCT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"What are the last names of the author of the paper titled "" var0 "" ?",spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = ""var0"" ;"
"Who is the author of the paper titled "" var0 "" ? Give me the last name .",spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = ""var0"" ;"
"Find the first and last name of the author(s) who wrote the paper "" var0 "" .",spider,"SELECT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = ""var0"" ;"
"What are the first and last name of the author who published the paper titled "" var0 "" ?",spider,"SELECT AUTHORSalias0.FNAME , AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE = ""var0"" ;"
"What are the papers published under the institution "" var0 "" ?",spider,"SELECT DISTINCT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"List the titles of the papers whose authors are from the institution "" var0 "" .",spider,"SELECT DISTINCT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Find all the papers published by the institution "" var0 "" .",spider,"SELECT DISTINCT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Which papers were written by authors from the institution "" var0 "" ?",spider,"SELECT DISTINCT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"How many papers are published by the institution "" var0 "" ?",spider,"SELECT COUNT( DISTINCT PAPERSalias0.TITLE ) FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Find the number of papers published by authors from the institution "" var0 "" .",spider,"SELECT COUNT( DISTINCT PAPERSalias0.TITLE ) FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Find the number of papers published by the institution "" var0 "" .",spider,"SELECT COUNT( DISTINCT PAPERSalias0.TITLE ) FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"How many papers are written by authors from the institution "" var0 "" ?",spider,"SELECT COUNT( DISTINCT PAPERSalias0.TITLE ) FROM PAPERS AS PAPERSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE DERIVED_TABLEalias1.NAME = ""var0"" ;"
"Which paper is published in an institution in "" var0 "" and have "" var2 "" as its second author ?",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.LNAME = ""var2"" AND DERIVED_TABLEalias0.AUTHORDER = var1 AND DERIVED_TABLEalias1.COUNTRY = ""var0"" ;"
"Find papers whose second author has last name "" var2 "" and is affiliated with an institution in the country "" var0 "" .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.LNAME = ""var2"" AND DERIVED_TABLEalias0.AUTHORDER = var1 AND DERIVED_TABLEalias1.COUNTRY = ""var0"" ;"
"Find the titles of papers whose first author is affiliated with an institution in the country "" var0 "" and has last name "" var2 "" ?",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.LNAME = ""var2"" AND DERIVED_TABLEalias0.AUTHORDER = var1 AND DERIVED_TABLEalias1.COUNTRY = ""var0"" ;"
"Which papers ' first author is affiliated with an institution in the country "" var0 "" and has last name "" var2 "" ? Give me the titles of the papers .",spider,"SELECT PAPERSalias0.TITLE FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN INST AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID WHERE AUTHORSalias0.LNAME = ""var2"" AND DERIVED_TABLEalias0.AUTHORDER = var1 AND DERIVED_TABLEalias1.COUNTRY = ""var0"" ;"
What is the last name of the author that has published the most papers ?,spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID GROUP BY AUTHORSalias0.FNAME , AUTHORSalias0.LNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which author has written the most papers ? Find his or her last name .,spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID GROUP BY AUTHORSalias0.FNAME , AUTHORSalias0.LNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Retrieve the country that has published the most papers .,spider,SELECT DERIVED_TABLEalias0.COUNTRY FROM INST AS DERIVED_TABLEalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias1.PAPERID GROUP BY DERIVED_TABLEalias0.COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the country that the most papers are affiliated with .,spider,SELECT DERIVED_TABLEalias0.COUNTRY FROM INST AS DERIVED_TABLEalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias1.PAPERID GROUP BY DERIVED_TABLEalias0.COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the organization that has published the largest number of papers .,spider,SELECT DERIVED_TABLEalias0.NAME FROM INST AS DERIVED_TABLEalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias1.PAPERID GROUP BY DERIVED_TABLEalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which institution has the most papers ? Find the name of the institution .,spider,SELECT DERIVED_TABLEalias0.NAME FROM INST AS DERIVED_TABLEalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.INSTID = DERIVED_TABLEalias0.INSTID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias1.PAPERID GROUP BY DERIVED_TABLEalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Find the titles of the papers that contain the word "" var0 "" .",spider,"SELECT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Which papers have the substring "" var0 "" in their titles ? Return the titles of the papers .",spider,"SELECT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Which paper's title contains the word "" var0 "" ?",spider,"SELECT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Which papers have the substring "" var0 "" in their titles ? Show the titles of the papers .",spider,"SELECT PAPERSalias0.TITLE FROM PAPERS AS PAPERSalias0 WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Find the first names of all the authors who have written a paper with title containing the word "" var0 "" .",spider,"SELECT AUTHORSalias0.FNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Who has written a paper that has the word "" var0 "" in its title ? Return the first names of the authors .",spider,"SELECT AUTHORSalias0.FNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Find the last names of all the authors that have written a paper with title containing the word "" var0 "" .",spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
"Which authors have written a paper with title containing the word "" var0 "" ? Return their last names .",spider,"SELECT AUTHORSalias0.LNAME FROM AUTHORS AS AUTHORSalias0 JOIN AUTHORSHIP AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.AUTHID = AUTHORSalias0.AUTHID JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE PAPERSalias0.TITLE LIKE ""var0"" ;"
Retrieve the title of the paper that has the largest number of authors .,spider,SELECT PAPERSalias0.TITLE FROM AUTHORSHIP AS DERIVED_TABLEalias0 JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias0.AUTHORDER = ( SELECT MAX( AUTHORDER ) FROM AUTHORSHIP ) ;
Which paper has the most authors ? Give me the paper title .,spider,SELECT PAPERSalias0.TITLE FROM AUTHORSHIP AS DERIVED_TABLEalias0 JOIN PAPERS AS PAPERSalias0 ON PAPERSalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias0.AUTHORDER = ( SELECT MAX( AUTHORDER ) FROM AUTHORSHIP ) ;
"What is the first name of the author with last name "" var0 "" ?",spider,"SELECT FNAME FROM AUTHORS AS AUTHORSalias0 WHERE LNAME = ""var0"" ;"
"Which authors have last name "" var0 "" ? List their first names .",spider,"SELECT FNAME FROM AUTHORS AS AUTHORSalias0 WHERE LNAME = ""var0"" ;"
"Find the last name of the author with first name "" var0 "" .",spider,"SELECT LNAME FROM AUTHORS AS AUTHORSalias0 WHERE FNAME = ""var0"" ;"
"Which authors have first name "" var0 "" ? List their last names .",spider,"SELECT LNAME FROM AUTHORS AS AUTHORSalias0 WHERE FNAME = ""var0"" ;"
Find the first names of all the authors ordered in alphabetical order .,spider,SELECT FNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY FNAME ;
Sort the first names of all the authors in alphabetical order .,spider,SELECT FNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY FNAME ;
Retrieve all the last names of authors in alphabetical order .,spider,SELECT LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;
Give me a list of all the last names of authors sorted in alphabetical order,spider,SELECT LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;
Retrieve all the first and last names of authors in the alphabetical order of last names .,spider,"SELECT FNAME , LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;"
Sort the list of all the first and last names of authors in alphabetical order of the last names .,spider,"SELECT FNAME , LNAME FROM AUTHORS AS AUTHORSalias0 ORDER BY LNAME ;"
How many different last names do the actors and actresses have ?,spider,SELECT COUNT( DISTINCT ACTORalias0.LAST_NAME ) FROM ACTOR AS ACTORalias0 ;
Count the number of different last names actors have .,spider,SELECT COUNT( DISTINCT ACTORalias0.LAST_NAME ) FROM ACTOR AS ACTORalias0 ;
What is the most popular first name of the actors ?,spider,SELECT ACTORalias0.FIRST_NAME FROM ACTOR AS ACTORalias0 GROUP BY FIRST_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the most common first name among all actors .,spider,SELECT ACTORalias0.FIRST_NAME FROM ACTOR AS ACTORalias0 GROUP BY FIRST_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most popular full name of the actors ?,spider,"SELECT ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM ACTOR AS ACTORalias0 GROUP BY FIRST_NAME , LAST_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the most common full name among all actors .,spider,"SELECT ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM ACTOR AS ACTORalias0 GROUP BY FIRST_NAME , LAST_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which districts have at least two addresses ?,spider,SELECT ADDRESSalias0.DISTRICT FROM ADDRESS AS ADDRESSalias0 GROUP BY ADDRESSalias0.DISTRICT HAVING COUNT( * ) >= var0 ;
Give the districts which have two or more addresses .,spider,SELECT ADDRESSalias0.DISTRICT FROM ADDRESS AS ADDRESSalias0 GROUP BY ADDRESSalias0.DISTRICT HAVING COUNT( * ) >= var0 ;
What is the phone number and postal code of the address var0 ?,spider,"SELECT ADDRESSalias0.PHONE , ADDRESSalias0.POSTAL_CODE FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.ADDRESS = ""var0"" ;"
Give the phone and postal code corresponding to the address ' var0 ' .,spider,"SELECT ADDRESSalias0.PHONE , ADDRESSalias0.POSTAL_CODE FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.ADDRESS = ""var0"" ;"
"Which city has the most addresses ? List the city name , number of addresses , and city id .",spider,"SELECT ADDRESSalias0.CITY_ID , CITYalias0.CITY , COUNT( * ) FROM ADDRESS AS ADDRESSalias0 JOIN CITY AS CITYalias0 ON CITYalias0.CITY_ID = ADDRESSalias0.CITY_ID GROUP BY ADDRESSalias0.CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What are the city name , id , and number of addresses corresponding to the city with the most addressed ?",spider,"SELECT ADDRESSalias0.CITY_ID , CITYalias0.CITY , COUNT( * ) FROM ADDRESS AS ADDRESSalias0 JOIN CITY AS CITYalias0 ON CITYalias0.CITY_ID = ADDRESSalias0.CITY_ID GROUP BY ADDRESSalias0.CITY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many addresses are in the district of var0 ?,spider,"SELECT COUNT( * ) FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.DISTRICT = ""var0"" ;"
Count the number of addressed in the var0 district .,spider,"SELECT COUNT( * ) FROM ADDRESS AS ADDRESSalias0 WHERE ADDRESSalias0.DISTRICT = ""var0"" ;"
Which film is rented at a fee of var0 and has less than var1 in the inventory ? List the film title and id .,spider,"SELECT FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.RENTAL_RATE = var0 INTERSECT SELECT FILMalias1.FILM_ID , FILMalias1.TITLE FROM FILM AS FILMalias1 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias1.FILM_ID GROUP BY FILMalias1.FILM_ID HAVING COUNT( * ) < var1 ;"
What are the title and id of the film which has a rental rate of var0 and an inventory of below var1 ?,spider,"SELECT FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.RENTAL_RATE = var0 INTERSECT SELECT FILMalias1.FILM_ID , FILMalias1.TITLE FROM FILM AS FILMalias1 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias1.FILM_ID GROUP BY FILMalias1.FILM_ID HAVING COUNT( * ) < var1 ;"
How many cities are in var0 ?,spider,"SELECT COUNT( * ) FROM CITY AS CITYalias0 JOIN COUNTRY AS COUNTRYalias0 ON COUNTRYalias0.COUNTRY_ID = CITYalias0.COUNTRY_ID WHERE COUNTRYalias0.COUNTRY = ""var0"" ;"
Count the number of cities in var0 .,spider,"SELECT COUNT( * ) FROM CITY AS CITYalias0 JOIN COUNTRY AS COUNTRYalias0 ON COUNTRYalias0.COUNTRY_ID = CITYalias0.COUNTRY_ID WHERE COUNTRYalias0.COUNTRY = ""var0"" ;"
Which countries have at least var0 cities ?,spider,SELECT COUNTRYalias0.COUNTRY FROM CITY AS CITYalias0 JOIN COUNTRY AS COUNTRYalias0 ON COUNTRYalias0.COUNTRY_ID = CITYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_ID HAVING COUNT( * ) >= var0 ;
What are the countries that contain var0 or more cities ?,spider,SELECT COUNTRYalias0.COUNTRY FROM CITY AS CITYalias0 JOIN COUNTRY AS COUNTRYalias0 ON COUNTRYalias0.COUNTRY_ID = CITYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.COUNTRY_ID HAVING COUNT( * ) >= var0 ;
Find all the payment dates for the payments with an amount larger than var0 and the payments handled by a staff person with the first name var1 .,spider,"SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 WHERE PAYMENTalias0.AMOUNT > var0 UNION SELECT PAYMENTalias1.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias1 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias1.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var1"" ;"
What are the payment dates for any payments that have an amount greater than var0 or were handled by a staff member with the first name var1 ?,spider,"SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 WHERE PAYMENTalias0.AMOUNT > var0 UNION SELECT PAYMENTalias1.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias1 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias1.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var1"" ;"
How many customers have an active value of var0 ?,spider,"SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.ACTIVE = ""var0"" ;"
Count the number of customers who are active .,spider,"SELECT COUNT( * ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.ACTIVE = ""var0"" ;"
Which film has the highest rental rate ? And what is the rate ?,spider,"SELECT FILMalias0.RENTAL_RATE , FILMalias0.TITLE FROM FILM AS FILMalias0 ORDER BY FILMalias0.RENTAL_RATE DESC LIMIT 1 ;"
What are the title and rental rate of the film with the highest rental rate ?,spider,"SELECT FILMalias0.RENTAL_RATE , FILMalias0.TITLE FROM FILM AS FILMalias0 ORDER BY FILMalias0.RENTAL_RATE DESC LIMIT 1 ;"
"Which film has the most number of actors or actresses ? List the film name , film id and description .",spider,"SELECT FILMalias0.DESCRIPTION , FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN FILM AS FILMalias0 ON FILMalias0.FILM_ID = FILM_ACTORalias0.FILM_ID GROUP BY FILMalias0.FILM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What are the title , id , and description of the movie with the greatest number of actors ?",spider,"SELECT FILMalias0.DESCRIPTION , FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN FILM AS FILMalias0 ON FILMalias0.FILM_ID = FILM_ACTORalias0.FILM_ID GROUP BY FILMalias0.FILM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Which film actor (actress) starred the most films ? List his or her first name , last name and actor id .",spider,"SELECT ACTORalias0.ACTOR_ID , ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the full name and id of the actor or actress who starred in the greatest number of films .,spider,"SELECT ACTORalias0.ACTOR_ID , ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which film actors (actresses) played a role in more than var0 films ? List his or her first name and last name .,spider,"SELECT ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID HAVING COUNT( * ) > var0 ;"
What are the full names of actors who had roles in more than var0 films ?,spider,"SELECT ACTORalias0.FIRST_NAME , ACTORalias0.LAST_NAME FROM FILM_ACTOR AS FILM_ACTORalias0 JOIN ACTOR AS ACTORalias0 ON FILM_ACTORalias0.ACTOR_ID = ACTORalias0.ACTOR_ID GROUP BY ACTORalias0.ACTOR_ID HAVING COUNT( * ) > var0 ;"
Which store owns most items ?,spider,SELECT INVENTORYalias0.STORE_ID FROM INVENTORY AS INVENTORYalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the id of the store that has the most items in inventory ?,spider,SELECT INVENTORYalias0.STORE_ID FROM INVENTORY AS INVENTORYalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the total amount of all payments ?,spider,SELECT SUM( PAYMENTalias0.AMOUNT ) FROM PAYMENT AS PAYMENTalias0 ;
Return the sum of all payment amounts .,spider,SELECT SUM( PAYMENTalias0.AMOUNT ) FROM PAYMENT AS PAYMENTalias0 ;
"Which customer , who has made at least one payment , has spent the least money ? List his or her first name , last name , and the id .",spider,"SELECT CUSTOMERalias0.CUSTOMER_ID , CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN PAYMENT AS PAYMENTalias0 ON PAYMENTalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID GROUP BY CUSTOMERalias0.CUSTOMER_ID ORDER BY SUM( PAYMENTalias0.AMOUNT ) ASC LIMIT 1 ;"
What is the full name and id of the customer who has the lowest total amount of payment ?,spider,"SELECT CUSTOMERalias0.CUSTOMER_ID , CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN PAYMENT AS PAYMENTalias0 ON PAYMENTalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID GROUP BY CUSTOMERalias0.CUSTOMER_ID ORDER BY SUM( PAYMENTalias0.AMOUNT ) ASC LIMIT 1 ;"
What is the genre name of the film var0 ?,spider,"SELECT CATEGORYalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN FILM_CATEGORY AS FILM_CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID JOIN FILM AS FILMalias0 ON FILMalias0.FILM_ID = FILM_CATEGORYalias0.FILM_ID WHERE FILMalias0.TITLE = ""var0"" ;"
Return the name of the category to which the film ' var0 ' belongs .,spider,"SELECT CATEGORYalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN FILM_CATEGORY AS FILM_CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID JOIN FILM AS FILMalias0 ON FILMalias0.FILM_ID = FILM_CATEGORYalias0.FILM_ID WHERE FILMalias0.TITLE = ""var0"" ;"
"How many films are there in each category ? List the genre name , genre id and the count .",spider,"SELECT CATEGORYalias0.NAME , COUNT( * ) , FILM_CATEGORYalias0.CATEGORY_ID FROM FILM_CATEGORY AS FILM_CATEGORYalias0 JOIN CATEGORY AS CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID GROUP BY FILM_CATEGORYalias0.CATEGORY_ID ;"
"What are the names and ids of the different categories , and how many films are in each ?",spider,"SELECT CATEGORYalias0.NAME , COUNT( * ) , FILM_CATEGORYalias0.CATEGORY_ID FROM FILM_CATEGORY AS FILM_CATEGORYalias0 JOIN CATEGORY AS CATEGORYalias0 ON FILM_CATEGORYalias0.CATEGORY_ID = CATEGORYalias0.CATEGORY_ID GROUP BY FILM_CATEGORYalias0.CATEGORY_ID ;"
Which film has the most copies in the inventory ? List both title and id .,spider,"SELECT FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY FILMalias0.FILM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the title and id of the film that has the greatest number of copies in inventory ?,spider,"SELECT FILMalias0.FILM_ID , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID GROUP BY FILMalias0.FILM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the film title and inventory id of the item in the inventory which was rented most frequently ?,spider,"SELECT FILMalias0.TITLE , INVENTORYalias0.INVENTORY_ID FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID JOIN RENTAL AS RENTALalias0 ON RENTALalias0.INVENTORY_ID = INVENTORYalias0.INVENTORY_ID GROUP BY INVENTORYalias0.INVENTORY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the title and inventory id of the film that is rented most often .,spider,"SELECT FILMalias0.TITLE , INVENTORYalias0.INVENTORY_ID FROM FILM AS FILMalias0 JOIN INVENTORY AS INVENTORYalias0 ON INVENTORYalias0.FILM_ID = FILMalias0.FILM_ID JOIN RENTAL AS RENTALalias0 ON RENTALalias0.INVENTORY_ID = INVENTORYalias0.INVENTORY_ID GROUP BY INVENTORYalias0.INVENTORY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many languages are in these films ?,spider,SELECT COUNT( DISTINCT FILMalias0.LANGUAGE_ID ) FROM FILM AS FILMalias0 ;
Count the number of different languages in these films .,spider,SELECT COUNT( DISTINCT FILMalias0.LANGUAGE_ID ) FROM FILM AS FILMalias0 ;
What are all the movies rated as var0 ? List the titles .,spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.RATING = ""var0"" ;"
var0eturn the titles of any movies with an var0 rating .,spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.RATING = ""var0"" ;"
Where is store var0 located ?,spider,SELECT ADDRESSalias0.ADDRESS FROM STORE AS STOREalias0 JOIN ADDRESS AS ADDRESSalias0 ON STOREalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STOREalias0.STORE_ID = var0 ;
Return the address of store var0 .,spider,SELECT ADDRESSalias0.ADDRESS FROM STORE AS STOREalias0 JOIN ADDRESS AS ADDRESSalias0 ON STOREalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STOREalias0.STORE_ID = var0 ;
Which staff handled least number of payments ? List the full name and the id .,spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN PAYMENT AS PAYMENTalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias0.STAFF_ID GROUP BY STAFFalias0.STAFF_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Give the full name and staff id of the staff who has handled the fewest payments .,spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN PAYMENT AS PAYMENTalias0 ON STAFFalias0.STAFF_ID = PAYMENTalias0.STAFF_ID GROUP BY STAFFalias0.STAFF_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Which language does the film var0 use ? List the language name .,spider,"SELECT LANGUAGEalias0.NAME FROM FILM AS FILMalias0 JOIN LANGUAGE AS LANGUAGEalias0 ON LANGUAGEalias0.LANGUAGE_ID = FILMalias0.LANGUAGE_ID WHERE FILMalias0.TITLE = ""var0"" ;"
What is the name of the language that the film ' var0 ' is in ?,spider,"SELECT LANGUAGEalias0.NAME FROM FILM AS FILMalias0 JOIN LANGUAGE AS LANGUAGEalias0 ON LANGUAGEalias0.LANGUAGE_ID = FILMalias0.LANGUAGE_ID WHERE FILMalias0.TITLE = ""var0"" ;"
How many stores are there ?,spider,SELECT COUNT( STOREalias0.* ) FROM STORE AS STOREalias0 ;
Count the number of stores .,spider,SELECT COUNT( STOREalias0.* ) FROM STORE AS STOREalias0 ;
How many kinds of different ratings are listed ?,spider,SELECT COUNT( DISTINCT FILMalias0.RATING ) FROM FILM AS FILMalias0 ;
Count the number of different film ratings .,spider,SELECT COUNT( DISTINCT FILMalias0.RATING ) FROM FILM AS FILMalias0 ;
Which movies have ' var0 ' as a substring in the special feature ?,spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.SPECIAL_FEATURES LIKE ""var0"" ;"
Return the titles of films that include ' var0 ' in their special feature section .,spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.SPECIAL_FEATURES LIKE ""var0"" ;"
How many items in inventory does store var0 have ?,spider,SELECT COUNT( * ) FROM INVENTORY AS INVENTORYalias0 WHERE INVENTORYalias0.STORE_ID = var0 ;
Count the number of items store var0 has in stock .,spider,SELECT COUNT( * ) FROM INVENTORY AS INVENTORYalias0 WHERE INVENTORYalias0.STORE_ID = var0 ;
When did the first payment happen ?,spider,SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.PAYMENT_DATE ASC LIMIT 1 ;
What was the date of the earliest payment ?,spider,SELECT PAYMENTalias0.PAYMENT_DATE FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.PAYMENT_DATE ASC LIMIT 1 ;
Where does the customer with the first name Linda live ? And what is her email ?,spider,"SELECT ADDRESSalias0.ADDRESS , CUSTOMERalias0.EMAIL FROM CUSTOMER AS CUSTOMERalias0 JOIN ADDRESS AS ADDRESSalias0 ON CUSTOMERalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE CUSTOMERalias0.FIRST_NAME = ""var0"" ;"
Return the address and email of the customer with the first name Linda .,spider,"SELECT ADDRESSalias0.ADDRESS , CUSTOMERalias0.EMAIL FROM CUSTOMER AS CUSTOMERalias0 JOIN ADDRESS AS ADDRESSalias0 ON CUSTOMERalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE CUSTOMERalias0.FIRST_NAME = ""var0"" ;"
"Find all the films longer than var0 minutes , or rated var1 , except those who cost more than var2 for replacement . List the titles .",spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.LENGTH > var0 OR FILMalias0.RATING = ""var1"" EXCEPT SELECT FILMalias1.TITLE FROM FILM AS FILMalias1 WHERE FILMalias1.REPLACEMENT_COST > var2 ;"
What are the titles of films that are either longer than var0 minutes or rated var1 other than those that cost more than var2 to replace ?,spider,"SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.LENGTH > var0 OR FILMalias0.RATING = ""var1"" EXCEPT SELECT FILMalias1.TITLE FROM FILM AS FILMalias1 WHERE FILMalias1.REPLACEMENT_COST > var2 ;"
What is the first name and the last name of the customer who made the earliest rental ?,spider,"SELECT CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN RENTAL AS RENTALalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID ORDER BY RENTALalias0.RENTAL_DATE ASC LIMIT 1 ;"
Return the full name of the customer who made the first rental .,spider,"SELECT CUSTOMERalias0.FIRST_NAME , CUSTOMERalias0.LAST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN RENTAL AS RENTALalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID ORDER BY RENTALalias0.RENTAL_DATE ASC LIMIT 1 ;"
What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns ?,spider,"SELECT DISTINCT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN RENTAL AS RENTALalias0 ON STAFFalias0.STAFF_ID = RENTALalias0.STAFF_ID JOIN CUSTOMER AS CUSTOMERalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID WHERE CUSTOMERalias0.FIRST_NAME = ""var0"" AND CUSTOMERalias0.LAST_NAME = ""var1"" ;"
Return the full name of the staff who provided a customer with the first name April and the last name Burns with a film rental .,spider,"SELECT DISTINCT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN RENTAL AS RENTALalias0 ON STAFFalias0.STAFF_ID = RENTALalias0.STAFF_ID JOIN CUSTOMER AS CUSTOMERalias0 ON RENTALalias0.CUSTOMER_ID = CUSTOMERalias0.CUSTOMER_ID WHERE CUSTOMERalias0.FIRST_NAME = ""var0"" AND CUSTOMERalias0.LAST_NAME = ""var1"" ;"
Which store has most the customers ?,spider,SELECT CUSTOMERalias0.STORE_ID FROM CUSTOMER AS CUSTOMERalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the id of the store with the most customers .,spider,SELECT CUSTOMERalias0.STORE_ID FROM CUSTOMER AS CUSTOMERalias0 GROUP BY STORE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the largest payment amount ?,spider,SELECT PAYMENTalias0.AMOUNT FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.AMOUNT DESC LIMIT 1 ;
Return the amount of the largest payment .,spider,SELECT PAYMENTalias0.AMOUNT FROM PAYMENT AS PAYMENTalias0 ORDER BY PAYMENTalias0.AMOUNT DESC LIMIT 1 ;
Where does the staff member with the first name var0 live ?,spider,"SELECT ADDRESSalias0.ADDRESS FROM STAFF AS STAFFalias0 JOIN ADDRESS AS ADDRESSalias0 ON STAFFalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" ;"
Give the address of the staff member who has the first name var0 .,spider,"SELECT ADDRESSalias0.ADDRESS FROM STAFF AS STAFFalias0 JOIN ADDRESS AS ADDRESSalias0 ON STAFFalias0.ADDRESS_ID = ADDRESSalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" ;"
What are the first names of customers who have not rented any films after ' var0 ' ?,spider,"SELECT CUSTOMERalias0.FIRST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CUSTOMER_ID NOT IN ( SELECT RENTALalias0.CUSTOMER_ID FROM RENTAL AS RENTALalias0 WHERE RENTALalias0.RENTAL_DATE > ""var0"" ) ;"
Return the first names of customers who did not rented a film after the date ' var0 ' .,spider,"SELECT CUSTOMERalias0.FIRST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CUSTOMER_ID NOT IN ( SELECT RENTALalias0.CUSTOMER_ID FROM RENTAL AS RENTALalias0 WHERE RENTALalias0.RENTAL_DATE > ""var0"" ) ;"
How many bank branches are there ?,spider,SELECT COUNT( * ) FROM BANK AS BANKalias0 ;
Count the number of bank branches .,spider,SELECT COUNT( * ) FROM BANK AS BANKalias0 ;
How many customers are there ?,spider,SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
What is the total number of customers across banks ?,spider,SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
Find the number of customers in the banks at var0 .,spider,"SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.CITY = ""var0"" ;"
What is the total number of customers who use banks in var0 ?,spider,"SELECT SUM( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.CITY = ""var0"" ;"
Find the average number of customers in all banks of var0 state .,spider,"SELECT AVG( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.STATE = ""var0"" ;"
What is the average number of customers across banks in the state of var0 ?,spider,"SELECT AVG( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 WHERE BANKalias0.STATE = ""var0"" ;"
Find the average number of customers cross all banks .,spider,SELECT AVG( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
What is the average number of bank customers ?,spider,SELECT AVG( BANKalias0.NO_OF_CUSTOMERS ) FROM BANK AS BANKalias0 ;
Find the city and state of the bank branch named var0 .,spider,"SELECT BANKalias0.CITY , BANKalias0.STATE FROM BANK AS BANKalias0 WHERE BANKalias0.BNAME = ""var0"" ;"
What city and state is the bank with the name var0 in ?,spider,"SELECT BANKalias0.CITY , BANKalias0.STATE FROM BANK AS BANKalias0 WHERE BANKalias0.BNAME = ""var0"" ;"
Find the branch names of banks in the var0 state .,spider,"SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 WHERE BANKalias0.STATE = ""var0"" ;"
What are the names of banks in the state of var0 ?,spider,"SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 WHERE BANKalias0.STATE = ""var0"" ;"
List the name of all customers sorted by their account balance in ascending order .,spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY ACC_BAL ;
"What are the names of all customers , ordered by account balance ?",spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY ACC_BAL ;
List the name of all different customers who have some loan sorted by their total loan amount .,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) ;
"What are the names of the different customers who have taken out a loan , ordered by the total amount that they have taken ?",spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) ;
"Find the state , account type , and credit score of the customer whose number of loan is var0 .",spider,"SELECT ACC_TYPE , CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.STATE FROM CUSTOMER AS CUSTOMERalias0 WHERE NO_OF_LOANS = var0 ;"
"What are the states , account types , and credit scores for customers who have var0 loans ?",spider,"SELECT ACC_TYPE , CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.STATE FROM CUSTOMER AS CUSTOMERalias0 WHERE NO_OF_LOANS = var0 ;"
Find the number of different cities which banks are located at .,spider,SELECT COUNT( DISTINCT BANKalias0.CITY ) FROM BANK AS BANKalias0 ;
In how many different cities are banks located ?,spider,SELECT COUNT( DISTINCT BANKalias0.CITY ) FROM BANK AS BANKalias0 ;
Find the number of different states which banks are located at .,spider,SELECT COUNT( DISTINCT BANKalias0.STATE ) FROM BANK AS BANKalias0 ;
In how many different states are banks located ?,spider,SELECT COUNT( DISTINCT BANKalias0.STATE ) FROM BANK AS BANKalias0 ;
How many distinct types of accounts are there ?,spider,SELECT COUNT( DISTINCT ACC_TYPE ) FROM CUSTOMER AS CUSTOMERalias0 ;
Count the number of different account types .,spider,SELECT COUNT( DISTINCT ACC_TYPE ) FROM CUSTOMER AS CUSTOMERalias0 ;
Find the nvar0me var0nd var0ccount bvar0lvar0nce of the customer whose nvar0me includes the letter ' var0 ' .,spider,"SELECT ACC_BAL , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_NAME LIKE ""var0"" ;"
Whvar0t var0re the nvar0mes var0nd var0ccount bvar0lvar0nces of customers with the letter var0 in their nvar0mes ?,spider,"SELECT ACC_BAL , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_NAME LIKE ""var0"" ;"
Find the total account balance of each customer from var0 or var1 .,spider,"SELECT SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = ""var0"" OR CUSTOMERalias0.STATE = ""var1"" ;"
What are the total account balances for each customer from var0 or var1 ?,spider,"SELECT SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.STATE = ""var0"" OR CUSTOMERalias0.STATE = ""var1"" ;"
Find the name of customers who have both var0 and var1 account types .,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE ACC_TYPE = ""var0"" INTERSECT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = ""var1"" ;"
What are the names of customers who have both var0s and var1 accounts ?,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE ACC_TYPE = ""var0"" INTERSECT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = ""var1"" ;"
Find the name of customers who do not have an var0 account .,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = ""var0"" ;"
What are the names of customers who do not have var0 accounts ?,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 WHERE ACC_TYPE = ""var0"" ;"
Find the name of customers who do not have a loan with a type of var0 .,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" ;"
What are the names of customers who have not taken a Mortage loan ?,spider,"SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 EXCEPT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" ;"
Find the name of customers who have loans of both var0 and var1 .,spider,"SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" INTERSECT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias1 ON LOANalias1.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias1.LOAN_TYPE = ""var1"" ;"
What are the names of customers who have taken both Mortgage and var1 loans ?,spider,"SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" INTERSECT SELECT CUSTOMERalias1.CUST_NAME FROM CUSTOMER AS CUSTOMERalias1 JOIN LOAN AS LOANalias1 ON LOANalias1.CUST_ID = CUSTOMERalias1.CUST_ID WHERE LOANalias1.LOAN_TYPE = ""var1"" ;"
Find the name of customers whose credit score is below the average credit scores of all customers .,spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CREDIT_SCORE < ( SELECT AVG( CUSTOMERalias1.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias1 ) ;
What are the names of customers with credit score less than the average credit score across customers ?,spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 WHERE CUSTOMERalias0.CREDIT_SCORE < ( SELECT AVG( CUSTOMERalias1.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias1 ) ;
Find the branch name of the bank that has the most number of customers .,spider,SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 ORDER BY BANKalias0.NO_OF_CUSTOMERS DESC LIMIT 1 ;
What is the name of the bank branch with the greatest number of customers ?,spider,SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 ORDER BY BANKalias0.NO_OF_CUSTOMERS DESC LIMIT 1 ;
Find the name of customer who has the lowest credit score .,spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE LIMIT 1 ;
What is the name of the customer with the worst credit score ?,spider,SELECT CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE LIMIT 1 ;
"Find the name , account type , and account balance of the customer who has the highest credit score .",spider,"SELECT ACC_BAL , ACC_TYPE , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE DESC LIMIT 1 ;"
"What is the name , account type , and account balance corresponding to the customer with the highest credit score ?",spider,"SELECT ACC_BAL , ACC_TYPE , CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 ORDER BY CUSTOMERalias0.CREDIT_SCORE DESC LIMIT 1 ;"
Find the name of customer who has the highest amount of loans .,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
What is the name of the customer who has greatest total loan amount ?,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
Find the state which has the most number of customers .,spider,SELECT BANKalias0.STATE FROM BANK AS BANKalias0 GROUP BY STATE ORDER BY SUM( BANKalias0.NO_OF_CUSTOMERS ) DESC LIMIT 1 ;
Which state has the greatest total number of bank customers ?,spider,SELECT BANKalias0.STATE FROM BANK AS BANKalias0 GROUP BY STATE ORDER BY SUM( BANKalias0.NO_OF_CUSTOMERS ) DESC LIMIT 1 ;
"For each account type , find the average account balance of customers with credit score lower than var0 .",spider,"SELECT ACC_TYPE , AVG( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE < var0 GROUP BY ACC_TYPE ;"
What is the average account balance of customers with credit score below var0 for the different account types ?,spider,"SELECT ACC_TYPE , AVG( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE < var0 GROUP BY ACC_TYPE ;"
"For each state , find the total account balance of customers whose credit score is above var0 .",spider,"SELECT CUSTOMERalias0.STATE , SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE > var0 GROUP BY CUSTOMERalias0.STATE ;"
What is the total account balance for customers with a credit score of above var0 for the different states ?,spider,"SELECT CUSTOMERalias0.STATE , SUM( ACC_BAL ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CREDIT_SCORE > var0 GROUP BY CUSTOMERalias0.STATE ;"
Find the total amount of loans offered by each bank branch .,spider,"SELECT BANKalias0.BNAME , SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ;"
"What are the names of the different bank branches , and what are their total loan amounts ?",spider,"SELECT BANKalias0.BNAME , SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ;"
Find the name of customers who have more than one loan .,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING COUNT( LOANalias0.* ) > var0 ;
What are the names of customers who have taken out more than one loan ?,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING COUNT( LOANalias0.* ) > var0 ;
Find the name and account balance of the customers who have loans with a total amount of more than var0 .,spider,"SELECT CUSTOMERalias0.ACC_TYPE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING SUM( LOANalias0.AMOUNT ) > var0 ;"
What are the names and account balances for customers who have taken a total amount of more than var0 in loans ?,spider,"SELECT CUSTOMERalias0.ACC_TYPE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID GROUP BY CUSTOMERalias0.CUST_NAME HAVING SUM( LOANalias0.AMOUNT ) > var0 ;"
Find the name of bank branch that provided the greatest total amount of loans .,spider,SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
What is the name of the bank branch that has lent the greatest amount ?,spider,SELECT BANKalias0.BNAME FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
Find the name of bank branch that provided the greatest total amount of loans to customers with credit score is less than var0 .,spider,SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
"What is the name of the bank branch that has lended the largest total amount in loans , specifically to customers with credit scores below var0 ?",spider,SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 GROUP BY BANKalias0.BNAME ORDER BY SUM( LOANalias0.AMOUNT ) DESC LIMIT 1 ;
Find the name of bank branches that provided some loans .,spider,SELECT DISTINCT BANKalias0.BNAME FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID ;
What are the names of the different banks that have provided loans ?,spider,SELECT DISTINCT BANKalias0.BNAME FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID ;
Find the name and credit score of the customers who have some loans .,spider,"SELECT DISTINCT CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID ;"
What are the different names and credit scores of customers who have taken a loan ?,spider,"SELECT DISTINCT CUSTOMERalias0.CREDIT_SCORE , CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID ;"
Find the the name of the customers who have a loan with amount more than var0 .,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.AMOUNT > var0 ;
What are the names of customers who have a loan of more than var0 in amount ?,spider,SELECT CUSTOMERalias0.CUST_NAME FROM CUSTOMER AS CUSTOMERalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE LOANalias0.AMOUNT > var0 ;
Find the city and name of bank branches that provide business loans .,spider,"SELECT BANKalias0.BNAME , BANKalias0.CITY FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" ;"
What are the names and cities of bank branches that offer loans for business ?,spider,"SELECT BANKalias0.BNAME , BANKalias0.CITY FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE LOANalias0.LOAN_TYPE = ""var0"" ;"
Find the names of bank branches that have provided a loan to any customer whose credit score is below var0 .,spider,SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 ;
What are the names of banks that have loaned money to customers with credit scores below var0 ?,spider,SELECT BANKalias0.BNAME FROM LOAN AS LOANalias0 JOIN BANK AS BANKalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID JOIN CUSTOMER AS CUSTOMERalias0 ON LOANalias0.CUST_ID = CUSTOMERalias0.CUST_ID WHERE CUSTOMERalias0.CREDIT_SCORE < var0 ;
Find the total amount of loans provided by bank branches in the state of var0 .,spider,"SELECT SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE BANKalias0.STATE = ""var0"" ;"
What is the total amount of money loaned by banks in var0 state ?,spider,"SELECT SUM( LOANalias0.AMOUNT ) FROM BANK AS BANKalias0 JOIN LOAN AS LOANalias0 ON LOANalias0.BRANCH_ID = BANKalias0.BRANCH_ID WHERE BANKalias0.STATE = ""var0"" ;"
Find the average credit score of the customers who have some loan .,spider,SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
What is the average credit score for customers who have taken a loan ?,spider,SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
Find the average credit score of the customers who do not have any loan .,spider,SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
What is the average credit score for customers who have never taken a loan ?,spider,SELECT AVG( CUSTOMERalias0.CREDIT_SCORE ) FROM CUSTOMER AS CUSTOMERalias0 WHERE CUST_ID NOT IN ( SELECT CUST_ID FROM LOAN AS LOANalias0 ) ;
How many assessment notes are there in total ?,spider,SELECT COUNT( * ) FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 ;
What are the dates of the assessment notes ?,spider,SELECT ASSESSMENT_NOTESalias0.DATE_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 ;
How many addresses have zip code var0 ?,spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE = ""var0"" ;"
How many distinct incident type codes are there ?,spider,SELECT COUNT( DISTINCT BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE ) FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 ;
Return all distinct detention type codes .,spider,SELECT DISTINCT DETENTIONalias0.DETENTION_TYPE_CODE FROM DETENTION AS DETENTIONalias0 ;
"What are the start and end dates for incidents with incident type code "" var0 "" ?",spider,"SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 WHERE BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE = ""var0"" ;"
Return all detention summaries .,spider,SELECT DETENTIONalias0.DETENTION_SUMMARY FROM DETENTION AS DETENTIONalias0 ;
Return the cell phone number and email address for all students .,spider,"SELECT STUDENTSalias0.CELL_MOBILE_NUMBER , STUDENTSalias0.EMAIL_ADDRESS FROM STUDENTS AS STUDENTSalias0 ;"
"What is the email of the student with first name "" var0 "" and last name "" var1 "" ?",spider,"SELECT STUDENTSalias0.EMAIL_ADDRESS FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FIRST_NAME = ""var0"" AND STUDENTSalias0.LAST_NAME = ""var1"" ;"
How many distinct students have been in detention ?,spider,SELECT COUNT( DISTINCT STUDENTS_IN_DETENTIONalias0.STUDENT_ID ) FROM STUDENTS_IN_DETENTION AS STUDENTS_IN_DETENTIONalias0 ;
"What is the gender of the teacher with last name "" var0 "" ?",spider,"SELECT TEACHERSalias0.GENDER FROM TEACHERS AS TEACHERSalias0 WHERE TEACHERSalias0.LAST_NAME = ""var0"" ;"
"What is the incident type description for the incident type with code "" var0 "" ?",spider,"SELECT INCIDENT_TYPE_DESCRIPTION FROM REF_INCIDENT_TYPE WHERE INCIDENT_TYPE_CODE = ""var0"" ;"
Find the maximum and minimum monthly rental for all student addresses .,spider,"SELECT MAX( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) , MIN( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ;"
"Find the first names of teachers whose email address contains the word "" var0 "" .",spider,"SELECT TEACHERSalias0.FIRST_NAME FROM TEACHERS AS TEACHERSalias0 WHERE TEACHERSalias0.EMAIL_ADDRESS LIKE ""var0"" ;"
List all information about the assessment notes sorted by date in ascending order .,spider,SELECT * FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 ORDER BY ASSESSMENT_NOTESalias0.DATE_OF_NOTES ASC ;
List all cities of addresses in alphabetical order .,spider,SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ORDER BY ADDRESSESalias0.CITY ;
Find the first names and last names of teachers in alphabetical order of last name .,spider,"SELECT TEACHERSalias0.FIRST_NAME , TEACHERSalias0.LAST_NAME FROM TEACHERS AS TEACHERSalias0 ORDER BY TEACHERSalias0.LAST_NAME ;"
"Find all information about student addresses , and sort by monthly rental in descending order .",spider,SELECT * FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ORDER BY STUDENT_ADDRESSESalias0.MONTHLY_RENTAL DESC ;
Find the id and first name of the student that has the most number of assessment notes ?,spider,"SELECT ASSESSMENT_NOTESalias0.STUDENT_ID , STUDENTSalias0.FIRST_NAME FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = ASSESSMENT_NOTESalias0.STUDENT_ID GROUP BY ASSESSMENT_NOTESalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the ids and first names of the var0 teachers that have the most number of assessment notes ?,spider,"SELECT ASSESSMENT_NOTESalias0.TEACHER_ID , TEACHERSalias0.FIRST_NAME FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = ASSESSMENT_NOTESalias0.TEACHER_ID GROUP BY ASSESSMENT_NOTESalias0.TEACHER_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
Find the id and last name of the student that has the most behavior incidents ?,spider,"SELECT BEHAVIOR_INCIDENTalias0.STUDENT_ID , STUDENTSalias0.LAST_NAME FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID GROUP BY BEHAVIOR_INCIDENTalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Find the id and last name of the teacher that has the most detentions with detention type code "" var0 "" ?",spider,"SELECT DETENTIONalias0.TEACHER_ID , TEACHERSalias0.LAST_NAME FROM DETENTION AS DETENTIONalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = DETENTIONalias0.TEACHER_ID WHERE DETENTIONalias0.DETENTION_TYPE_CODE = ""var0"" GROUP BY DETENTIONalias0.TEACHER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the id and first name of the student whose addresses have the highest average monthly rental ?,spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENT_ADDRESSESalias0.STUDENT_ID FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_ADDRESSESalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_ADDRESSESalias0.STUDENT_ID ORDER BY AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) DESC LIMIT 1 ;"
Find the id and city of the student address with the highest average monthly rental .,spider,"SELECT ADDRESSESalias0.CITY , STUDENT_ADDRESSESalias0.ADDRESS_ID FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY STUDENT_ADDRESSESalias0.ADDRESS_ID ORDER BY AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) DESC LIMIT 1 ;"
What are the code and description of the most frequent behavior incident type ?,spider,"SELECT BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE , DERIVED_TABLEalias0.INCIDENT_TYPE_DESCRIPTION FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN REF_INCIDENT_TYPE AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.INCIDENT_TYPE_CODE = BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE GROUP BY BEHAVIOR_INCIDENTalias0.INCIDENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the code and description of the least frequent detention type ?,spider,"SELECT DERIVED_TABLEalias0.DETENTION_TYPE_DESCRIPTION , DETENTIONalias0.DETENTION_TYPE_CODE FROM DETENTION AS DETENTIONalias0 JOIN REF_DETENTION_TYPE AS DERIVED_TABLEalias0 ON DETENTIONalias0.DETENTION_TYPE_CODE = DERIVED_TABLEalias0.DETENTION_TYPE_CODE GROUP BY DETENTIONalias0.DETENTION_TYPE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;"
"Find the dates of assessment notes for students with first name "" var0 "" .",spider,"SELECT ASSESSMENT_NOTESalias0.DATE_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = ASSESSMENT_NOTESalias0.STUDENT_ID WHERE STUDENTSalias0.FIRST_NAME = ""var0"" ;"
"Find the texts of assessment notes for teachers with last name "" var0 "" .",spider,"SELECT ASSESSMENT_NOTESalias0.TEXT_OF_NOTES FROM ASSESSMENT_NOTES AS ASSESSMENT_NOTESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = ASSESSMENT_NOTESalias0.TEACHER_ID WHERE TEACHERSalias0.LAST_NAME = ""var0"" ;"
"Find the start and end dates of behavior incidents of students with last name "" var0 "" .",spider,"SELECT BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_END , BEHAVIOR_INCIDENTalias0.DATE_INCIDENT_START FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.STUDENT_ID = BEHAVIOR_INCIDENTalias0.STUDENT_ID WHERE STUDENTSalias0.LAST_NAME = ""var0"" ;"
"Find the start and end dates of detentions of teachers with last name "" var0 "" .",spider,"SELECT DETENTIONalias0.DATETIME_DETENTION_END , DETENTIONalias0.DATETIME_DETENTION_START FROM DETENTION AS DETENTIONalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.TEACHER_ID = DETENTIONalias0.TEACHER_ID WHERE TEACHERSalias0.LAST_NAME = ""var0"" ;"
What are the id and zip code of the address with the highest monthly rental ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE , STUDENT_ADDRESSESalias0.ADDRESS_ID FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ORDER BY STUDENT_ADDRESSESalias0.MONTHLY_RENTAL DESC LIMIT 1 ;"
What is the cell phone number of the student whose address has the lowest monthly rental ?,spider,SELECT STUDENTSalias0.CELL_MOBILE_NUMBER FROM STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_ADDRESSESalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID ORDER BY STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ASC LIMIT 1 ;
What are the monthly rentals of student addresses in var0 state ?,spider,"SELECT STUDENT_ADDRESSESalias0.MONTHLY_RENTAL FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
What are the first names and last names of students with address in var0 state ?,spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
What are the line 1 and average monthly rentals of all student addresses ?,spider,"SELECT ADDRESSESalias0.LINE_1 , AVG( STUDENT_ADDRESSESalias0.MONTHLY_RENTAL ) FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENT_ADDRESSES AS STUDENT_ADDRESSESalias0 ON STUDENT_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY STUDENT_ADDRESSESalias0.ADDRESS_ID ;"
"What is the zip code of the address where the teacher with first name "" var0 "" lives ?",spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE TEACHERSalias0.FIRST_NAME = ""var0"" ;"
"What are the email addresses of teachers whose address has zip code "" var0 "" ?",spider,"SELECT TEACHERSalias0.EMAIL_ADDRESS FROM ADDRESSES AS ADDRESSESalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.ZIP_POSTCODE = ""var0"" ;"
How many students are not involved in any behavior incident ?,spider,SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT BEHAVIOR_INCIDENTalias0.STUDENT_ID FROM BEHAVIOR_INCIDENT AS BEHAVIOR_INCIDENTalias0 ) ;
Find the last names of teachers who are not involved in any detention .,spider,SELECT TEACHERSalias0.LAST_NAME FROM TEACHERS AS TEACHERSalias0 EXCEPT SELECT TEACHERSalias1.LAST_NAME FROM TEACHERS AS TEACHERSalias1 JOIN DETENTION AS DETENTIONalias0 ON TEACHERSalias1.TEACHER_ID = DETENTIONalias0.TEACHER_ID ;
What are the line 1 of addresses shared by some students and some teachers ?,spider,SELECT ADDRESSESalias0.LINE_1 FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID INTERSECT SELECT ADDRESSESalias1.LINE_1 FROM ADDRESSES AS ADDRESSESalias1 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
Which assets have var0 parts and have less than var0 fault logs ? List the asset id and detail .,spider,"SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_ID FROM ASSETS AS ASSETSalias0 JOIN ASSET_PARTS AS ASSET_PARTSalias0 ON ASSET_PARTSalias0.ASSET_ID = ASSETSalias0.ASSET_ID GROUP BY ASSETSalias0.ASSET_ID HAVING COUNT( * ) = var0 INTERSECT SELECT ASSETSalias1.ASSET_DETAILS , ASSETSalias1.ASSET_ID FROM ASSETS AS ASSETSalias1 JOIN FAULT_LOG AS FAULT_LOGalias0 ON FAULT_LOGalias0.ASSET_ID = ASSETSalias1.ASSET_ID GROUP BY ASSETSalias1.ASSET_ID HAVING COUNT( * ) < var1 ;"
How many assets does each maintenance contract contain ? List the number and the contract id .,spider,"SELECT COUNT( * ) , MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID FROM MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 JOIN ASSETS AS ASSETSalias0 ON MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID = ASSETSalias0.MAINTENANCE_CONTRACT_ID GROUP BY MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_ID ;"
How many assets does each third party company supply ? List the count and the company id .,spider,"SELECT COUNT( * ) , THIRD_PARTY_COMPANIESalias0.COMPANY_ID FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN ASSETS AS ASSETSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = ASSETSalias0.SUPPLIER_COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias0.COMPANY_ID ;"
Which third party companies have at least var0 maintenance engineers or have at least var0 maintenance contracts ? List the company id and name .,spider,"SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_ID , THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_ENGINEERSalias0.COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias0.COMPANY_ID HAVING COUNT( * ) >= var0 UNION SELECT THIRD_PARTY_COMPANIESalias1.COMPANY_ID , THIRD_PARTY_COMPANIESalias1.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias1 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias1.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID GROUP BY THIRD_PARTY_COMPANIESalias1.COMPANY_ID HAVING COUNT( * ) >= var1 ;"
What is the name and id of the staff who recorded the fault log but has not contacted any visiting engineers ?,spider,"SELECT STAFFalias0.STAFF_ID , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN FAULT_LOG AS FAULT_LOGalias0 ON STAFFalias0.STAFF_ID = FAULT_LOGalias0.RECORDED_BY_STAFF_ID EXCEPT SELECT STAFFalias1.STAFF_ID , STAFFalias1.STAFF_NAME FROM STAFF AS STAFFalias1 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON STAFFalias1.STAFF_ID = ENGINEER_VISITSalias0.CONTACT_STAFF_ID ;"
"Which engineer has visited the most times ? Show the engineer id , first name and last name .",spider,"SELECT MAINTENANCE_ENGINEERSalias0.ENGINEER_ID , MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 GROUP BY MAINTENANCE_ENGINEERSalias0.ENGINEER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which parts have more than var0 faults ? Show the part name and id .,spider,"SELECT PARTSalias0.PART_ID , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_ID HAVING COUNT( * ) > var0 ;"
"List all every engineer's first name , last name , details and coresponding skill description .",spider,"SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME , MAINTENANCE_ENGINEERSalias0.OTHER_DETAILS , SKILLSalias0.SKILL_DESCRIPTION FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 JOIN ENGINEER_SKILLS AS ENGINEER_SKILLSalias0 ON MAINTENANCE_ENGINEERSalias0.ENGINEER_ID = ENGINEER_SKILLSalias0.ENGINEER_ID JOIN SKILLS AS SKILLSalias0 ON SKILLSalias0.SKILL_ID = ENGINEER_SKILLSalias0.SKILL_ID ;"
"For all the faults of different parts , what are all the decriptions of the skills required to fix them ? List the name of the faults and the skill description .",spider,"SELECT PART_FAULTSalias0.FAULT_SHORT_NAME , SKILLSalias0.SKILL_DESCRIPTION FROM PART_FAULTS AS PART_FAULTSalias0 JOIN SKILLS_REQUIRED_TO_FIX AS SKILLS_REQUIRED_TO_FIXalias0 ON SKILLS_REQUIRED_TO_FIXalias0.PART_FAULT_ID = PART_FAULTSalias0.PART_FAULT_ID JOIN SKILLS AS SKILLSalias0 ON SKILLSalias0.SKILL_ID = SKILLS_REQUIRED_TO_FIXalias0.SKILL_ID ;"
How many assets can each parts be used in ? List the part name and the number .,spider,"SELECT COUNT( * ) , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN ASSET_PARTS AS ASSET_PARTSalias0 ON PARTSalias0.PART_ID = ASSET_PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_NAME ;"
What are all the fault descriptions and the fault status of all the faults recoreded in the logs ?,spider,"SELECT FAULT_LOG_PARTSalias0.FAULT_STATUS , FAULT_LOGalias0.FAULT_DESCRIPTION FROM FAULT_LOG AS FAULT_LOGalias0 JOIN FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = FAULT_LOG_PARTSalias0.FAULT_LOG_ENTRY_ID ;"
How many engineer visits are required at most for a single fault log ? List the number and the log entry id .,spider,"SELECT COUNT( * ) , FAULT_LOGalias0.FAULT_LOG_ENTRY_ID FROM FAULT_LOG AS FAULT_LOGalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = ENGINEER_VISITSalias0.FAULT_LOG_ENTRY_ID GROUP BY FAULT_LOGalias0.FAULT_LOG_ENTRY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are all the distinct last names of all the engineers ?,spider,SELECT DISTINCT MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ;
How many fault status codes are recorded in the fault log parts table ?,spider,SELECT DISTINCT FAULT_LOG_PARTSalias0.FAULT_STATUS FROM FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ;
Which engineers have never visited to maintain the assets ? List the engineer first name and last name .,spider,"SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 WHERE MAINTENANCE_ENGINEERSalias0.ENGINEER_ID NOT IN ( SELECT ENGINEER_VISITSalias0.ENGINEER_ID FROM ENGINEER_VISITS AS ENGINEER_VISITSalias0 ) ;"
"List the asset id , details , make and model for every asset .",spider,"SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_ID , ASSETSalias0.ASSET_MAKE , ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ;"
When was the first asset acquired ?,spider,SELECT ASSETSalias0.ASSET_ACQUIRED_DATE FROM ASSETS AS ASSETSalias0 ORDER BY ASSETSalias0.ASSET_ACQUIRED_DATE ASC LIMIT 1 ;
Which part fault requires the most number of skills to fix ? List part id and name .,spider,"SELECT PARTSalias0.PART_ID , PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID JOIN SKILLS_REQUIRED_TO_FIX AS SKILLS_REQUIRED_TO_FIXalias0 ON SKILLS_REQUIRED_TO_FIXalias0.PART_FAULT_ID = PART_FAULTSalias0.PART_FAULT_ID GROUP BY PARTSalias0.PART_ID ORDER BY COUNT( SKILLS_REQUIRED_TO_FIXalias0.* ) DESC LIMIT 1 ;"
Which kind of part has the least number of faults ? List the part name .,spider,SELECT PARTSalias0.PART_NAME FROM PARTS AS PARTSalias0 JOIN PART_FAULTS AS PART_FAULTSalias0 ON PART_FAULTSalias0.PART_ID = PARTSalias0.PART_ID GROUP BY PARTSalias0.PART_NAME ORDER BY COUNT( * ) ASC LIMIT 1 ;
"Among those engineers who have visited , which engineer makes the least number of visits ? List the engineer id , first name and last name .",spider,"SELECT MAINTENANCE_ENGINEERSalias0.ENGINEER_ID , MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME FROM MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON MAINTENANCE_ENGINEERSalias0.ENGINEER_ID = ENGINEER_VISITSalias0.ENGINEER_ID GROUP BY MAINTENANCE_ENGINEERSalias0.ENGINEER_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;"
Which staff have contacted which engineers ? List the staff name and the engineer first name and last name .,spider,"SELECT MAINTENANCE_ENGINEERSalias0.FIRST_NAME , MAINTENANCE_ENGINEERSalias0.LAST_NAME , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON STAFFalias0.STAFF_ID = ENGINEER_VISITSalias0.CONTACT_STAFF_ID JOIN MAINTENANCE_ENGINEERS AS MAINTENANCE_ENGINEERSalias0 ON MAINTENANCE_ENGINEERSalias0.ENGINEER_ID = ENGINEER_VISITSalias0.ENGINEER_ID ;"
"Which fault log included the most number of faulty parts ? List the fault log id , description and record time .",spider,"SELECT FAULT_LOGalias0.FAULT_DESCRIPTION , FAULT_LOGalias0.FAULT_LOG_ENTRY_DATETIME , FAULT_LOGalias0.FAULT_LOG_ENTRY_ID FROM FAULT_LOG AS FAULT_LOGalias0 JOIN FAULT_LOG_PARTS AS FAULT_LOG_PARTSalias0 ON FAULT_LOGalias0.FAULT_LOG_ENTRY_ID = FAULT_LOG_PARTSalias0.FAULT_LOG_ENTRY_ID GROUP BY FAULT_LOGalias0.FAULT_LOG_ENTRY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which skill is used in fixing the most number of faults ? List the skill id and description .,spider,"SELECT SKILLSalias0.SKILL_DESCRIPTION , SKILLSalias0.SKILL_ID FROM SKILLS AS SKILLSalias0 JOIN SKILLS_REQUIRED_TO_FIX AS SKILLS_REQUIRED_TO_FIXalias0 ON SKILLSalias0.SKILL_ID = SKILLS_REQUIRED_TO_FIXalias0.SKILL_ID GROUP BY SKILLSalias0.SKILL_ID ORDER BY COUNT( SKILLS_REQUIRED_TO_FIXalias0.* ) DESC LIMIT 1 ;"
What are all the distinct asset models ?,spider,SELECT DISTINCT ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ;
"List the all the assets make , model , details by the disposed date ascendingly .",spider,"SELECT ASSETSalias0.ASSET_DETAILS , ASSETSalias0.ASSET_MAKE , ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 ORDER BY ASSETSalias0.ASSET_DISPOSED_DATE ASC ;"
Which part has the least chargeable amount ? List the part id and amount .,spider,"SELECT PARTSalias0.CHARGEABLE_AMOUNT , PARTSalias0.PART_ID FROM PARTS AS PARTSalias0 ORDER BY PARTSalias0.CHARGEABLE_AMOUNT ASC LIMIT 1 ;"
Which company started the earliest the maintenance contract ? Show the company name .,spider,SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID ORDER BY MAINTENANCE_CONTRACTSalias0.CONTRACT_START_DATE ASC LIMIT 1 ;
What is the description of the type of the company who concluded its contracts most recently ?,spider,SELECT THIRD_PARTY_COMPANIESalias0.COMPANY_NAME FROM THIRD_PARTY_COMPANIES AS THIRD_PARTY_COMPANIESalias0 JOIN MAINTENANCE_CONTRACTS AS MAINTENANCE_CONTRACTSalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_ID = MAINTENANCE_CONTRACTSalias0.MAINTENANCE_CONTRACT_COMPANY_ID JOIN REF_COMPANY_TYPES AS DERIVED_TABLEalias0 ON THIRD_PARTY_COMPANIESalias0.COMPANY_TYPE_CODE = DERIVED_TABLEalias0.COMPANY_TYPE_CODE ORDER BY MAINTENANCE_CONTRACTSalias0.CONTRACT_END_DATE DESC LIMIT 1 ;
Which gender makes up the majority of the staff ?,spider,SELECT STAFFalias0.GENDER FROM STAFF AS STAFFalias0 GROUP BY GENDER ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many engineers did each staff contact ? List both the contact staff name and number of engineers contacted .,spider,"SELECT COUNT( * ) , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN ENGINEER_VISITS AS ENGINEER_VISITSalias0 ON STAFFalias0.STAFF_ID = ENGINEER_VISITSalias0.CONTACT_STAFF_ID GROUP BY STAFFalias0.STAFF_NAME ;"
Which assets did not incur any fault log ? List the asset model .,spider,SELECT ASSETSalias0.ASSET_MODEL FROM ASSETS AS ASSETSalias0 WHERE ASSETSalias0.ASSET_ID NOT IN ( SELECT FAULT_LOGalias0.ASSET_ID FROM FAULT_LOG AS FAULT_LOGalias0 ) ;
list the local authorities and services provided by all stations .,spider,"SELECT STATIONalias0.LOCAL_AUTHORITY , STATIONalias0.SERVICES FROM STATION AS STATIONalias0 ;"
show all train numbers and names ordered by their time from early to late .,spider,"SELECT TRAINalias0.NAME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 ORDER BY TRAINalias0.TIME ;"
"Give me the times and numbers of all trains that go to var0 , ordered by time .",spider,"SELECT TRAINalias0.TIME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 WHERE DESTINATION = ""var0"" ORDER BY TRAINalias0.TIME ;"
How many trains have ' var0 ' in their names ?,spider,"SELECT COUNT( * ) FROM TRAIN AS TRAINalias0 WHERE TRAINalias0.NAME LIKE ""var0"" ;"
Find the number and time of the train that goes from var0 to var1 .,spider,"SELECT TRAINalias0.TIME , TRAINalias0.TRAIN_NUMBER FROM TRAIN AS TRAINalias0 WHERE TRAINalias0.DESTINATION = ""var1"" AND TRAINalias0.ORIGIN = ""var0"" ;"
Find the number of trains starting from each origin .,spider,"SELECT COUNT( * ) , TRAINalias0.ORIGIN FROM TRAIN AS TRAINalias0 GROUP BY TRAINalias0.ORIGIN ;"
Find the name of the train whose route runs through greatest number of stations .,spider,SELECT TRAINalias0.NAME FROM TRAIN AS TRAINalias0 JOIN ROUTE AS ROUTEalias0 ON TRAINalias0.ID = ROUTEalias0.TRAIN_ID GROUP BY ROUTEalias0.TRAIN_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Find the number of trains for each station , as well as the station network name and services .",spider,"SELECT COUNT( * ) , STATIONalias0.NETWORK_NAME , STATIONalias0.SERVICES FROM STATION AS STATIONalias0 JOIN ROUTE AS ROUTEalias0 ON STATIONalias0.ID = ROUTEalias0.STATION_ID GROUP BY ROUTEalias0.STATION_ID ;"
What is the average high temperature for each day of week ?,spider,"SELECT AVG( WEEKLY_WEATHERalias0.HIGH_TEMPERATURE ) , WEEKLY_WEATHERalias0.DAY_OF_WEEK FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 GROUP BY WEEKLY_WEATHERalias0.DAY_OF_WEEK ;"
Give me the maximum low temperature and average precipitation at the var0 station .,spider,"SELECT AVG( WEEKLY_WEATHERalias0.PRECIPITATION ) , MAX( WEEKLY_WEATHERalias0.LOW_TEMPERATURE ) FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 JOIN STATION AS STATIONalias0 ON WEEKLY_WEATHERalias0.STATION_ID = STATIONalias0.ID WHERE STATIONalias0.NETWORK_NAME = ""var0"" ;"
Find names and times of trains that run through stations for the local authority var0 .,spider,"SELECT TRAINalias0.NAME , TRAINalias0.TIME FROM STATION AS STATIONalias0 JOIN ROUTE AS ROUTEalias0 ON STATIONalias0.ID = ROUTEalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.ID = ROUTEalias0.TRAIN_ID WHERE STATIONalias0.LOCAL_AUTHORITY = ""var0"" ;"
How many different services are provided by all stations ?,spider,SELECT COUNT( DISTINCT STATIONalias0.SERVICES ) FROM STATION AS STATIONalias0 ;
Find the id and local authority of the station with has the highest average high temperature .,spider,"SELECT STATIONalias0.ID , STATIONalias0.LOCAL_AUTHORITY FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 JOIN STATION AS STATIONalias0 ON WEEKLY_WEATHERalias0.STATION_ID = STATIONalias0.ID GROUP BY WEEKLY_WEATHERalias0.STATION_ID ORDER BY AVG( WEEKLY_WEATHERalias0.HIGH_TEMPERATURE ) DESC LIMIT 1 ;"
Find the id and local authority of the station whose maximum precipitation is higher than var0 .,spider,"SELECT STATIONalias0.ID , STATIONalias0.LOCAL_AUTHORITY FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 JOIN STATION AS STATIONalias0 ON WEEKLY_WEATHERalias0.STATION_ID = STATIONalias0.ID GROUP BY WEEKLY_WEATHERalias0.STATION_ID HAVING MAX( WEEKLY_WEATHERalias0.PRECIPITATION ) > var0 ;"
show the lowest low temperature and highest wind speed in miles per hour .,spider,"SELECT MAX( WEEKLY_WEATHERalias0.WIND_SPEED_MPH ) , MIN( WEEKLY_WEATHERalias0.LOW_TEMPERATURE ) FROM WEEKLY_WEATHER AS WEEKLY_WEATHERalias0 ;"
Find the origins from which more than var0 train starts .,spider,SELECT TRAINalias0.ORIGIN FROM TRAIN AS TRAINalias0 GROUP BY TRAINalias0.ORIGIN HAVING COUNT( * ) > var0 ;
Find the number of professors in accounting department .,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPT_NAME = ""var0"" ;"
How many professors are in the accounting dept ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPT_NAME = ""var0"" ;"
How many professors are teaching class with code var0 ?,spider,"SELECT COUNT( DISTINCT PROF_NUM ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = ""var0"" ;"
How many professors teach a class with the code var0 ?,spider,"SELECT COUNT( DISTINCT PROF_NUM ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = ""var0"" ;"
What is the first and last name of the professor in biology department ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , EMPLOYEEalias0.EMP_LNAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE DEPT_NAME = ""var0"" ;"
What are the first and last name of all biology professors ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , EMPLOYEEalias0.EMP_LNAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE DEPT_NAME = ""var0"" ;"
What are the first names and date of birth of professors teaching course var0 ?,spider,"SELECT DISTINCT EMPLOYEEalias0.EMP_DOB , EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE CRS_CODE = ""var0"" ;"
What are the first names and birthdates of the professors in charge of var0 ?,spider,"SELECT DISTINCT EMPLOYEEalias0.EMP_DOB , EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE CRS_CODE = ""var0"" ;"
How many classes are professor whose last name is var0 has ?,spider,"SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE EMPLOYEEalias0.EMP_LNAME = ""var0"" ;"
How many classes does the professor whose last name is var0 teach ?,spider,"SELECT COUNT( * ) FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE EMPLOYEEalias0.EMP_LNAME = ""var0"" ;"
What is the code of the school where the accounting department belongs to ?,spider,"SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" ;"
What is the school code of the accounting department ?,spider,"SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" ;"
"How many credits does course var0 have , and what its description ?",spider,"SELECT CRS_CREDIT , CRS_DESCRIPTION FROM COURSE AS COURSEalias0 WHERE CRS_CODE = ""var0"" ;"
What is the description for the var0 and how many credits does it have ?,spider,"SELECT CRS_CREDIT , CRS_DESCRIPTION FROM COURSE AS COURSEalias0 WHERE CRS_CODE = ""var0"" ;"
Find the description and credit for the course var0 ?,spider,"SELECT CRS_CREDIT , CRS_DESCRIPTION FROM COURSE AS COURSEalias0 WHERE CRS_CODE = ""var0"" ;"
What is the course description and number of credits for var0 ?,spider,"SELECT CRS_CREDIT , CRS_DESCRIPTION FROM COURSE AS COURSEalias0 WHERE CRS_CODE = ""var0"" ;"
what is the address of history department ?,spider,"SELECT DEPT_ADDRESS FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" ;"
Where is the history department ?,spider,"SELECT DEPT_ADDRESS FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPT_NAME = ""var0"" ;"
How many different locations does the school with code var0 has ?,spider,"SELECT COUNT( DISTINCT DEPT_ADDRESS ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.SCHOOL_CODE = ""var0"" ;"
What are the different locations of the school with the code var0 ?,spider,"SELECT COUNT( DISTINCT DEPT_ADDRESS ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.SCHOOL_CODE = ""var0"" ;"
How many different locations does each school have ?,spider,"SELECT COUNT( DISTINCT DEPT_ADDRESS ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
Count different addresses of each school .,spider,"SELECT COUNT( DISTINCT DEPT_ADDRESS ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
Find the number of departments in each school .,spider,"SELECT COUNT( DISTINCT DEPT_NAME ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
How many departments are in each school ?,spider,"SELECT COUNT( DISTINCT DEPT_NAME ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
Find the number of different departments in each school whose number of different departments is less than var0 .,spider,"SELECT COUNT( DISTINCT DEPT_NAME ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE HAVING COUNT( DISTINCT DEPT_NAME ) < var0 ;"
How many different departments are there in each school that has less than var0 apartments ?,spider,"SELECT COUNT( DISTINCT DEPT_NAME ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTalias0.SCHOOL_CODE HAVING COUNT( DISTINCT DEPT_NAME ) < var0 ;"
How many sections does each course has ?,spider,"SELECT COUNT( * ) , CRS_CODE FROM CLASS AS CLASSalias0 GROUP BY CRS_CODE ;"
How many sections does each course have ?,spider,"SELECT COUNT( * ) , CRS_CODE FROM CLASS AS CLASSalias0 GROUP BY CRS_CODE ;"
What is the total credit does each department offer ?,spider,"SELECT DEPT_CODE , SUM( CRS_CREDIT ) FROM COURSE AS COURSEalias0 GROUP BY DEPT_CODE ;"
How many credits does the department offer ?,spider,"SELECT DEPT_CODE , SUM( CRS_CREDIT ) FROM COURSE AS COURSEalias0 GROUP BY DEPT_CODE ;"
Find the number of classes offered for all class rooms that held at least var0 classes .,spider,"SELECT CLASSalias0.CLASS_ROOM , COUNT( * ) FROM CLASS AS CLASSalias0 GROUP BY CLASSalias0.CLASS_ROOM HAVING COUNT( * ) >= var0 ;"
"For each classroom with at least var0 classes , how many classes are offered ?",spider,"SELECT CLASSalias0.CLASS_ROOM , COUNT( * ) FROM CLASS AS CLASSalias0 GROUP BY CLASSalias0.CLASS_ROOM HAVING COUNT( * ) >= var0 ;"
Find the number of classes in each department .,spider,"SELECT COUNT( * ) , DEPT_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY DEPT_CODE ;"
How many classes are held in each department ?,spider,"SELECT COUNT( * ) , DEPT_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY DEPT_CODE ;"
Find the number of classes in each school .,spider,"SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
How many classes exist for each school ?,spider,"SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM CLASS AS CLASSalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
What is the number of professors for different school ?,spider,"SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
How many different professors are there for the different schools ?,spider,"SELECT COUNT( * ) , DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ;"
Find the count and code of the job has most employees .,spider,"SELECT COUNT( * ) , EMP_JOBCODE FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMP_JOBCODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the count and code of the job with the most employee ?,spider,"SELECT COUNT( * ) , EMP_JOBCODE FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMP_JOBCODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which school has the smallest amount of professors ?,spider,SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ORDER BY COUNT( * ) LIMIT 1 ;
Which school has the fewest professors ?,spider,SELECT DEPARTMENTalias0.SCHOOL_CODE FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY DEPARTMENTalias0.SCHOOL_CODE ORDER BY COUNT( * ) LIMIT 1 ;
Find the number of professors with a Ph.D . degree in each department .,spider,"SELECT COUNT( * ) , DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" GROUP BY DEPT_CODE ;"
How many professors have a Ph.D . in each department ?,spider,"SELECT COUNT( * ) , DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" GROUP BY DEPT_CODE ;"
Find the number of students for each department .,spider,"SELECT COUNT( STUDENTalias0.* ) , DEPT_CODE FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
How many students are in each department ?,spider,"SELECT COUNT( STUDENTalias0.* ) , DEPT_CODE FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
Find the total number of hours have done for all students in each department .,spider,"SELECT DEPT_CODE , SUM( STU_HRS ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
How many hours do the students spend studying in each department ?,spider,"SELECT DEPT_CODE , SUM( STU_HRS ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
"Find the max , average , and minimum gpa of all students in each department .",spider,"SELECT AVG( STU_GPA ) , DEPT_CODE , MAX( STU_GPA ) , MIN( STU_GPA ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
"What is the highest , lowest , and average student GPA for every department ?",spider,"SELECT AVG( STU_GPA ) , DEPT_CODE , MAX( STU_GPA ) , MIN( STU_GPA ) FROM STUDENT AS STUDENTalias0 GROUP BY DEPT_CODE ;"
What is the name and the average gpa of department whose students have the highest average gpa ?,spider,"SELECT AVG( STUDENTalias0.STU_GPA ) , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY AVG( STUDENTalias0.STU_GPA ) DESC LIMIT 1 ;"
"Which department has the highest average student GPA , and what is the average gpa ?",spider,"SELECT AVG( STUDENTalias0.STU_GPA ) , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY AVG( STUDENTalias0.STU_GPA ) DESC LIMIT 1 ;"
how many schools exist in total ?,spider,SELECT COUNT( DISTINCT DEPARTMENTalias0.SCHOOL_CODE ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
How many schools are there in the department ?,spider,SELECT COUNT( DISTINCT DEPARTMENTalias0.SCHOOL_CODE ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
How many different classes are there ?,spider,SELECT COUNT( DISTINCT CLASSalias0.CLASS_CODE ) FROM CLASS AS CLASSalias0 ;
How many unique classes are offered ?,spider,SELECT COUNT( DISTINCT CLASSalias0.CLASS_CODE ) FROM CLASS AS CLASSalias0 ;
How many courses are offered ?,spider,SELECT COUNT( DISTINCT CRS_CODE ) FROM CLASS AS CLASSalias0 ;
What are the number of different course codes ?,spider,SELECT COUNT( DISTINCT CRS_CODE ) FROM CLASS AS CLASSalias0 ;
How many departments does the college has ?,spider,SELECT COUNT( DISTINCT DEPT_NAME ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
How many different departments are there ?,spider,SELECT COUNT( DISTINCT DEPT_NAME ) FROM DEPARTMENT AS DEPARTMENTalias0 ;
How many courses are offered by the Computer Info . Systems department ?,spider,"SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 JOIN COURSE AS COURSEalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPT_NAME = ""var0"" ;"
How many courses does the department of Computer Information Systmes offer ?,spider,"SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 JOIN COURSE AS COURSEalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPT_NAME = ""var0"" ;"
How many sections does course var0 has ?,spider,"SELECT COUNT( DISTINCT CLASSalias0.CLASS_SECTION ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = ""var0"" ;"
What is the number of different class sections offered in the course var0 ?,spider,"SELECT COUNT( DISTINCT CLASSalias0.CLASS_SECTION ) FROM CLASS AS CLASSalias0 WHERE CRS_CODE = ""var0"" ;"
Find the total credits of all classes offered by each department .,spider,"SELECT COURSEalias0.DEPT_CODE , SUM( COURSEalias0.CRS_CREDIT ) FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY COURSEalias0.DEPT_CODE ;"
What are the total number of credits offered by each department ?,spider,"SELECT COURSEalias0.DEPT_CODE , SUM( COURSEalias0.CRS_CREDIT ) FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE GROUP BY COURSEalias0.DEPT_CODE ;"
Find the name of the department that offers the largest number of credits of all classes .,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY COURSEalias0.DEPT_CODE ORDER BY SUM( COURSEalias0.CRS_CREDIT ) DESC LIMIT 1 ;
Which department offers the most credits all together ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM COURSE AS COURSEalias0 JOIN CLASS AS CLASSalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY COURSEalias0.DEPT_CODE ORDER BY SUM( COURSEalias0.CRS_CREDIT ) DESC LIMIT 1 ;
How many students enrolled in class var0 ?,spider,"SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
What are the total number of students enrolled in var0 ?,spider,"SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
What is the first name of each student enrolled in class var0 ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
What are the first names of all students in course var0 ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
What is the first name of students enrolled in class var0 and got grade var1 ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE CLASSalias0.CRS_CODE = ""var0"" AND ENROLLalias0.ENROLL_GRADE = ""var1"" ;"
What are the first names of all students who took var0 and received a var1 ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE CLASSalias0.CRS_CODE = ""var0"" AND ENROLLalias0.ENROLL_GRADE = ""var1"" ;"
How many professors do have a Ph.D . degree ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" ;"
What is the total number of professors with a Ph.D . ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" ;"
How many students are enrolled in the class taught by some professor from the accounting department ?,spider,"SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
How many students are enrolled in some classes that are taught by an accounting professor ?,spider,"SELECT COUNT( * ) FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What is the name of the department that has the largest number of students enrolled ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY COURSEalias0.DEPT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the department with the most students enrolled ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE GROUP BY COURSEalias0.DEPT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
list names of all departments ordered by their names .,spider,SELECT DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPT_NAME ;
What are the names of all departments in alphabetical order ?,spider,SELECT DEPT_NAME FROM DEPARTMENT AS DEPARTMENTalias0 ORDER BY DEPT_NAME ;
List the codes of all courses that take place in room var0 .,spider,"SELECT CLASSalias0.CLASS_CODE FROM CLASS AS CLASSalias0 WHERE CLASSalias0.CLASS_ROOM = ""var0"" ;"
What are the codes of all the courses that are located in room var0 ?,spider,"SELECT CLASSalias0.CLASS_CODE FROM CLASS AS CLASSalias0 WHERE CLASSalias0.CLASS_ROOM = ""var0"" ;"
List the first name of all employees with job code var0 ordered by their date of birth .,spider,"SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = ""var0"" ORDER BY EMP_DOB ;"
What are the first names of all employees that are professors ordered by date of birth ?,spider,"SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = ""var0"" ORDER BY EMP_DOB ;"
Find the first names and offices of all professors sorted by alphabetical order of their first name .,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ORDER BY EMPLOYEEalias0.EMP_FNAME ;"
What are the first names and office locations for all professors sorted alphabetically by first name ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ORDER BY EMPLOYEEalias0.EMP_FNAME ;"
What is the first and last name of the oldest employee ?,spider,"SELECT EMP_FNAME , EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMP_DOB LIMIT 1 ;"
What are the first and last names of the employee with the earliest date of birth ?,spider,"SELECT EMP_FNAME , EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMP_DOB LIMIT 1 ;"
"What is the first , last name , gpa of the youngest one among students whose GPA is above var0 ?",spider,"SELECT STU_FNAME , STU_GPA , STU_LNAME FROM STUDENT AS STUDENTalias0 WHERE STU_GPA > var0 ORDER BY STU_DOB DESC LIMIT 1 ;"
"What is the first and last name of the youngest student with a GPA above var0 , and what is their GPA ?",spider,"SELECT STU_FNAME , STU_GPA , STU_LNAME FROM STUDENT AS STUDENTalias0 WHERE STU_GPA > var0 ORDER BY STU_DOB DESC LIMIT 1 ;"
What is the first name of students who got grade var0 in any class ?,spider,"SELECT DISTINCT STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.ENROLL_GRADE = ""var0"" ;"
What are the first names of all students who got a grade var0 in a class ?,spider,"SELECT DISTINCT STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.ENROLL_GRADE = ""var0"" ;"
What is the name of department where has the smallest number of professors ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) LIMIT 1 ;
What is the name of the department with the fewest professors ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) LIMIT 1 ;
What is the name of department where has the largest number of professors with a Ph.D . degree ?,spider,"SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE PROFESSORalias0.PROF_HIGH_DEGREE = ""var0"" GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which department has the most professors with a Ph.D . ?,spider,"SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.DEPT_CODE FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE PROFESSORalias0.PROF_HIGH_DEGREE = ""var0"" GROUP BY PROFESSORalias0.DEPT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the first names of the professors who do not teach a class .,spider,"SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = ""var0"" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;"
What are the first names of all professors not teaching any classes ?,spider,"SELECT EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMP_JOBCODE = ""var0"" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;"
What is the first names of the professors from the history department who do not teach a class .,spider,"SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;"
What are the first names of all history professors who do not teach ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" EXCEPT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias1.EMP_NUM = CLASSalias0.PROF_NUM ;"
What is the last name and office of the professor from the history department ?,spider,"SELECT EMPLOYEEalias0.EMP_LNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What are the last name and office of all history professors ?,spider,"SELECT EMPLOYEEalias0.EMP_LNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What is department name and office for the professor whose last name is var0 ?,spider,"SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE EMPLOYEEalias0.EMP_LNAME = ""var0"" ;"
What is the name of the department and office location for the professor with the last name of var0 ?,spider,"SELECT DEPARTMENTalias0.DEPT_NAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE EMPLOYEEalias0.EMP_LNAME = ""var0"" ;"
Find the last name and hire date of the professor who is in office var0 .,spider,"SELECT EMPLOYEEalias0.EMP_HIREDATE , EMPLOYEEalias0.EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE PROFESSORalias0.PROF_OFFICE = ""var0"" ;"
"What is the last name of the professor whose office is located in var0 , and when were they hired ?",spider,"SELECT EMPLOYEEalias0.EMP_HIREDATE , EMPLOYEEalias0.EMP_LNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM WHERE PROFESSORalias0.PROF_OFFICE = ""var0"" ;"
What is the code of the course which the student whose last name is var0 took ?,spider,"SELECT CLASSalias0.CRS_CODE FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE STUDENTalias0.STU_LNAME = ""var0"" ;"
What are the course codes for every class that the student with the last name var0 took ?,spider,"SELECT CLASSalias0.CRS_CODE FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE STUDENTalias0.STU_LNAME = ""var0"" ;"
What are the description and credit of the course which the student whose last name is var0 took ?,spider,"SELECT COURSEalias0.CRS_CREDIT , COURSEalias0.CRS_DESCRIPTION FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE WHERE STUDENTalias0.STU_LNAME = ""var0"" ;"
"How many credits is the course that the student with the last name var0 took , and what is its description ?",spider,"SELECT COURSEalias0.CRS_CREDIT , COURSEalias0.CRS_DESCRIPTION FROM CLASS AS CLASSalias0 JOIN ENROLL AS ENROLLalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE WHERE STUDENTalias0.STU_LNAME = ""var0"" ;"
How many professors who has a either Ph.D . or var1 degree ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" OR PROF_HIGH_DEGREE = ""var1"" ;"
How many professors attained either Ph.D . or Masters degrees ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 WHERE PROF_HIGH_DEGREE = ""var0"" OR PROF_HIGH_DEGREE = ""var1"" ;"
How many professors who are from either var0 or var1 department ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" OR DEPARTMENTalias0.DEPT_NAME = ""var1"" ;"
What is the number of professors who are in the var0 or var1 departments ?,spider,"SELECT COUNT( * ) FROM PROFESSOR AS PROFESSORalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" OR DEPARTMENTalias0.DEPT_NAME = ""var1"" ;"
Find the first name of the professor who is teaching two courses with code var0 and var1 .,spider,"SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE CRS_CODE = ""var0"" INTERSECT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias1 ON EMPLOYEEalias1.EMP_NUM = CLASSalias1.PROF_NUM WHERE CRS_CODE = ""var1"" ;"
What is the first name of the professor who is teaching var0 and var1 ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN CLASS AS CLASSalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM WHERE CRS_CODE = ""var0"" INTERSECT SELECT EMPLOYEEalias1.EMP_FNAME FROM EMPLOYEE AS EMPLOYEEalias1 JOIN CLASS AS CLASSalias1 ON EMPLOYEEalias1.EMP_NUM = CLASSalias1.PROF_NUM WHERE CRS_CODE = ""var1"" ;"
Find the first name of student who is taking classes from accounting and Computer Info . Systems departments,spider,"SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" INTERSECT SELECT STUDENTalias1.STU_FNAME FROM STUDENT AS STUDENTalias1 JOIN ENROLL AS ENROLLalias1 ON STUDENTalias1.STU_NUM = ENROLLalias1.STU_NUM JOIN CLASS AS CLASSalias1 ON ENROLLalias1.CLASS_CODE = CLASSalias1.CLASS_CODE JOIN COURSE AS COURSEalias1 ON COURSEalias1.CRS_CODE = CLASSalias1.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias1 ON DEPARTMENTalias1.DEPT_CODE = COURSEalias1.DEPT_CODE WHERE DEPARTMENTalias1.DEPT_NAME = ""var1"" ;"
What are the first names of all students taking accoutning and Computer Information Systems classes ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" INTERSECT SELECT STUDENTalias1.STU_FNAME FROM STUDENT AS STUDENTalias1 JOIN ENROLL AS ENROLLalias1 ON STUDENTalias1.STU_NUM = ENROLLalias1.STU_NUM JOIN CLASS AS CLASSalias1 ON ENROLLalias1.CLASS_CODE = CLASSalias1.CLASS_CODE JOIN COURSE AS COURSEalias1 ON COURSEalias1.CRS_CODE = CLASSalias1.CRS_CODE JOIN DEPARTMENT AS DEPARTMENTalias1 ON DEPARTMENTalias1.DEPT_CODE = COURSEalias1.DEPT_CODE WHERE DEPARTMENTalias1.DEPT_NAME = ""var1"" ;"
What is the average gpa of the students enrolled in the course with code var0 ?,spider,"SELECT AVG( STUDENTalias0.STU_GPA ) FROM ENROLL AS ENROLLalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
What is the average GPA of students taking var0 ?,spider,"SELECT AVG( STUDENTalias0.STU_GPA ) FROM ENROLL AS ENROLLalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" ;"
"What is the first name , gpa and phone number of the top var0 students with highest gpa ?",spider,"SELECT STU_FNAME , STU_GPA , STU_PHONE FROM STUDENT AS STUDENTalias0 ORDER BY STU_GPA DESC LIMIT var0 ;"
"What is the first name , GPA , and phone number of the students with the top var0 GPAs ?",spider,"SELECT STU_FNAME , STU_GPA , STU_PHONE FROM STUDENT AS STUDENTalias0 ORDER BY STU_GPA DESC LIMIT var0 ;"
What is the department name of the students with lowest gpa belongs to ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ORDER BY STU_GPA LIMIT 1 ;
What is the name of the department with the student that has the lowest GPA ?,spider,SELECT DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ORDER BY STU_GPA LIMIT 1 ;
Find the first name and gpa of the students whose gpa is lower than the average gpa of all students .,spider,"SELECT STU_FNAME , STU_GPA FROM STUDENT AS STUDENTalias0 WHERE STU_GPA < ( SELECT AVG( STU_GPA ) FROM STUDENT AS STUDENTalias1 ) ;"
What is the first name and GPA of every student that has a GPA lower than average ?,spider,"SELECT STU_FNAME , STU_GPA FROM STUDENT AS STUDENTalias0 WHERE STU_GPA < ( SELECT AVG( STU_GPA ) FROM STUDENT AS STUDENTalias1 ) ;"
Find the name and address of the department that has the highest number of students .,spider,"SELECT DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;"
What is the name and address of the department with the most students ?,spider,"SELECT DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT 1 ;"
"Find the name , address , number of students in the departments that have the top var0 highest number of students .",spider,"SELECT COUNT( STUDENTalias0.* ) , DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT var0 ;"
"What is the name , address , and number of students in the departments that have the var0 most students ?",spider,"SELECT COUNT( STUDENTalias0.* ) , DEPARTMENTalias0.DEPT_ADDRESS , DEPARTMENTalias0.DEPT_NAME FROM STUDENT AS STUDENTalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON STUDENTalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE GROUP BY STUDENTalias0.DEPT_CODE ORDER BY COUNT( STUDENTalias0.* ) DESC LIMIT var0 ;"
Find the first name and office of the professor who is in the history department and has a Ph.D . degree .,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" AND PROFESSORalias0.PROF_HIGH_DEGREE = ""var1"" ;"
What are the first names and office of the professors who are in the history department and have a Ph.D ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM EMPLOYEE AS EMPLOYEEalias0 JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" AND PROFESSORalias0.PROF_HIGH_DEGREE = ""var1"" ;"
Find the first names of all instructors who have taught some course and the course code .,spider,"SELECT CLASSalias0.CRS_CODE , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM ;"
What are the first names of all teachers who have taught a course and the corresponding course codes ?,spider,"SELECT CLASSalias0.CRS_CODE , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM ;"
Find the first names of all instructors who have taught some course and the course description .,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;"
What are the first names of all teachers who have taught a course and the corresponding descriptions ?,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;"
Find the first names and offices of all instructors who have taught some course and also find the course description .,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ;"
"What are the first names , office locations of all lecturers who have taught some course ?",spider,"SELECT COURSEalias0.CRS_DESCRIPTION , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM ;"
Find the first names and offices of all instructors who have taught some course and the course description and the department name .,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , DEPARTMENTalias0.DEPT_NAME , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ;"
"What are the first names , office locations , and departments of all instructors , and also what are the descriptions of the courses they teach ?",spider,"SELECT COURSEalias0.CRS_DESCRIPTION , DEPARTMENTalias0.DEPT_NAME , EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE ;"
Find names of all students who took some course and the course description .,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;"
What are the names of all students who took a class and the corresponding course descriptions ?,spider,"SELECT COURSEalias0.CRS_DESCRIPTION , STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE JOIN COURSE AS COURSEalias0 ON COURSEalias0.CRS_CODE = CLASSalias0.CRS_CODE ;"
Find names of all students who took some course and got var1 or var0 .,spider,"SELECT STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.ENROLL_GRADE = ""var0"" OR ENROLLalias0.ENROLL_GRADE = ""var1"" ;"
What are the names of all students taking a course who received an var1 or var0 ?,spider,"SELECT STUDENTalias0.STU_FNAME , STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.ENROLL_GRADE = ""var0"" OR ENROLLalias0.ENROLL_GRADE = ""var1"" ;"
Find the first names of all professors in the var0 department who is teaching some course and the class room .,spider,"SELECT CLASSalias0.CLASS_ROOM , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What are the first names of all var0 professors who teach and what are the classrooms of the courses they teach ?,spider,"SELECT CLASSalias0.CLASS_ROOM , EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
Find the first names and degree of all professors who are teaching some class in Computer Info . Systems department .,spider,"SELECT DISTINCT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_HIGH_DEGREE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department ?,spider,"SELECT DISTINCT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_HIGH_DEGREE FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM JOIN PROFESSOR AS PROFESSORalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" ;"
What is the last name of the student who got a grade var0 in the class with code var1 .,spider,"SELECT STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.CLASS_CODE = var1 AND ENROLLalias0.ENROLL_GRADE = ""var0"" ;"
What is the last name of the student who received an var0 in the class with the code var1 ?,spider,"SELECT STUDENTalias0.STU_LNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM WHERE ENROLLalias0.CLASS_CODE = var1 AND ENROLLalias0.ENROLL_GRADE = ""var0"" ;"
Find the first name and office of history professor who did not get a Ph.D . degree .,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" AND PROFESSORalias0.PROF_HIGH_DEGREE != ""var1"" ;"
What are the first names and offices of history professors who don't have var1s ?,spider,"SELECT EMPLOYEEalias0.EMP_FNAME , PROFESSORalias0.PROF_OFFICE FROM PROFESSOR AS PROFESSORalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON PROFESSORalias0.EMP_NUM = EMPLOYEEalias0.EMP_NUM JOIN DEPARTMENT AS DEPARTMENTalias0 ON PROFESSORalias0.DEPT_CODE = DEPARTMENTalias0.DEPT_CODE WHERE DEPARTMENTalias0.DEPT_NAME = ""var0"" AND PROFESSORalias0.PROF_HIGH_DEGREE != ""var1"" ;"
Find the first names of professors who are teaching more than one class .,spider,SELECT EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM GROUP BY CLASSalias0.PROF_NUM HAVING COUNT( * ) > var0 ;
What are the first names of all professors who teach more than one class ?,spider,SELECT EMPLOYEEalias0.EMP_FNAME FROM CLASS AS CLASSalias0 JOIN EMPLOYEE AS EMPLOYEEalias0 ON EMPLOYEEalias0.EMP_NUM = CLASSalias0.PROF_NUM GROUP BY CLASSalias0.PROF_NUM HAVING COUNT( * ) > var0 ;
Find the first names of students who took exactly one class .,spider,SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM GROUP BY ENROLLalias0.STU_NUM HAVING COUNT( STUDENTalias0.* ) = var0 ;
What are the first names of student who only took one course ?,spider,SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM GROUP BY ENROLLalias0.STU_NUM HAVING COUNT( STUDENTalias0.* ) = var0 ;
"Find the name of department that offers the class whose description has the word "" var0 "" .",spider,"SELECT DEPARTMENTalias0.DEPT_NAME FROM COURSE AS COURSEalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE COURSEalias0.CRS_DESCRIPTION LIKE ""var0"" ;"
"What is the name of the department that offers a course that has a description including the word "" var0 "" ?",spider,"SELECT DEPARTMENTalias0.DEPT_NAME FROM COURSE AS COURSEalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPT_CODE = COURSEalias0.DEPT_CODE WHERE COURSEalias0.CRS_DESCRIPTION LIKE ""var0"" ;"
What is the first name of the student whose last name starting with the letter S and is taking var0 class ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" AND STUDENTalias0.STU_LNAME LIKE ""var1"" ;"
What is the first name of the student whose last name starts with the letter S and is taking var0 ?,spider,"SELECT STUDENTalias0.STU_FNAME FROM STUDENT AS STUDENTalias0 JOIN ENROLL AS ENROLLalias0 ON STUDENTalias0.STU_NUM = ENROLLalias0.STU_NUM JOIN CLASS AS CLASSalias0 ON ENROLLalias0.CLASS_CODE = CLASSalias0.CLASS_CODE WHERE CLASSalias0.CRS_CODE = ""var0"" AND STUDENTalias0.STU_LNAME LIKE ""var1"" ;"
How many clubs are there ?,spider,SELECT COUNT( * ) FROM CLUB AS CLUBalias0 ;
What is the total number of clubs ?,spider,SELECT COUNT( * ) FROM CLUB AS CLUBalias0 ;
How many clubs are there ?,spider,SELECT COUNT( * ) FROM CLUB AS CLUBalias0 ;
Count the total number of clubs .,spider,SELECT COUNT( * ) FROM CLUB AS CLUBalias0 ;
List the distinct region of clubs in ascending alphabetical order .,spider,SELECT DISTINCT CLUBalias0.REGION FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.REGION ASC ;
What are the different regions of clubs in ascending alphabetical order ?,spider,SELECT DISTINCT CLUBalias0.REGION FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.REGION ASC ;
What is the average number of gold medals for clubs ?,spider,SELECT AVG( CLUB_RANKalias0.GOLD ) FROM CLUB_RANK AS CLUB_RANKalias0 ;
What is the average number of gold medals for a club ?,spider,SELECT AVG( CLUB_RANKalias0.GOLD ) FROM CLUB_RANK AS CLUB_RANKalias0 ;
What are the types and countries of competitions ?,spider,"SELECT COMPETITIONalias0.COMPETITION_TYPE , COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 ;"
What are the types of every competition and in which countries are they located ?,spider,"SELECT COMPETITIONalias0.COMPETITION_TYPE , COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 ;"
"What are the distinct years in which the competitions type is not "" var0 "" ?",spider,"SELECT DISTINCT COMPETITIONalias0.YEAR FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE != ""var0"" ;"
What are the different years for all competitions that are not of type equal to tournament ?,spider,"SELECT DISTINCT COMPETITIONalias0.YEAR FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE != ""var0"" ;"
What are the maximum and minimum number of silver medals for clubs .,spider,"SELECT MAX( CLUB_RANKalias0.SILVER ) , MIN( CLUB_RANKalias0.SILVER ) FROM CLUB_RANK AS CLUB_RANKalias0 ;"
What are the maximum and minimum number of silver medals for all the clubs ?,spider,"SELECT MAX( CLUB_RANKalias0.SILVER ) , MIN( CLUB_RANKalias0.SILVER ) FROM CLUB_RANK AS CLUB_RANKalias0 ;"
How many clubs have total medals less than var0 ?,spider,SELECT COUNT( * ) FROM CLUB_RANK AS CLUB_RANKalias0 WHERE CLUB_RANKalias0.TOTAL < var0 ;
What is the total number of clubs that have less than var0 medals in total ?,spider,SELECT COUNT( * ) FROM CLUB_RANK AS CLUB_RANKalias0 WHERE CLUB_RANKalias0.TOTAL < var0 ;
List all club names in ascending order of start year .,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.START_YEAR ASC ;
What are the names of all the clubs starting with the oldest ?,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.START_YEAR ASC ;
List all club names in descending alphabetical order .,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.NAME DESC ;
What are the names of all the clubs ordered in descending alphabetical order ?,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 ORDER BY CLUBalias0.NAME DESC ;
Please show the names and the players of clubs .,spider,"SELECT CLUBalias0.NAME , PLAYERalias0.PLAYER_ID FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID ;"
What are the names and players of all the clubs ?,spider,"SELECT CLUBalias0.NAME , PLAYERalias0.PLAYER_ID FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID ;"
"Show the names of clubs that have players with position "" var0 "" .",spider,"SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE PLAYERalias0.POSITION = ""var0"" ;"
"What are the names of the clubs that have players in the position of "" var0 "" ?",spider,"SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE PLAYERalias0.POSITION = ""var0"" ;"
"What is the average points of players from club with name "" var0 "" .",spider,"SELECT AVG( PLAYERalias0.POINTS ) FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE CLUBalias0.NAME = ""var0"" ;"
"What is the average number of points for players from the "" var0 "" club ?",spider,"SELECT AVG( PLAYERalias0.POINTS ) FROM CLUB AS CLUBalias0 JOIN PLAYER AS PLAYERalias0 ON PLAYERalias0.CLUB_ID = CLUBalias0.CLUB_ID WHERE CLUBalias0.NAME = ""var0"" ;"
List the position of players and the average number of points of players of each position .,spider,"SELECT AVG( PLAYERalias0.POINTS ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.POSITION ;"
"For each position , what is the average number of points for players in that position ?",spider,"SELECT AVG( PLAYERalias0.POINTS ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.POSITION ;"
List the position of players with average number of points scored by players of that position bigger than var0 .,spider,SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.NAME HAVING AVG( PLAYERalias0.POINTS ) >= var0 ;
What are the positions of players whose average number of points scored by that position is larger than var0 ?,spider,SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 GROUP BY PLAYERalias0.NAME HAVING AVG( PLAYERalias0.POINTS ) >= var0 ;
List the types of competition and the number of competitions of each type .,spider,"SELECT COMPETITIONalias0.COMPETITION_TYPE , COUNT( * ) FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE ;"
What are the types of competition and number of competitions for that type ?,spider,"SELECT COMPETITIONalias0.COMPETITION_TYPE , COUNT( * ) FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE ;"
List the most common type of competition .,spider,SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common competition type ?,spider,SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the types of competition that have at most five competitions of that type .,spider,SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE HAVING COUNT( * ) <= var0 ;
What are the types of competition that have most var0 competitions for that type ?,spider,SELECT COMPETITIONalias0.COMPETITION_TYPE FROM COMPETITION AS COMPETITIONalias0 GROUP BY COMPETITIONalias0.COMPETITION_TYPE HAVING COUNT( * ) <= var0 ;
List the names of clubs that do not have any players .,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 WHERE CLUBalias0.CLUB_ID NOT IN ( SELECT PLAYERalias0.CLUB_ID FROM PLAYER AS PLAYERalias0 ) ;
What are the names of all clubs that do not have any players ?,spider,SELECT CLUBalias0.NAME FROM CLUB AS CLUBalias0 WHERE CLUBalias0.CLUB_ID NOT IN ( SELECT PLAYERalias0.CLUB_ID FROM PLAYER AS PLAYERalias0 ) ;
What are the positions with both players having more than var0 points and less than var1 points .,spider,SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > var0 INTERSECT SELECT PLAYERalias1.POSITION FROM PLAYER AS PLAYERalias1 WHERE PLAYERalias1.POINTS < var1 ;
What are the positions of both players that have more than var0 var0 points and less than var1 points ?,spider,SELECT PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > var0 INTERSECT SELECT PLAYERalias1.POSITION FROM PLAYER AS PLAYERalias1 WHERE PLAYERalias1.POINTS < var1 ;
Show total points of all players .,spider,SELECT SUM( PLAYERalias0.POINTS ) FROM PLAYER AS PLAYERalias0 ;
What is the total number of points for all players ?,spider,SELECT SUM( PLAYERalias0.POINTS ) FROM PLAYER AS PLAYERalias0 ;
how many different positions are there ?,spider,SELECT COUNT( DISTINCT PLAYERalias0.POSITION ) FROM PLAYER AS PLAYERalias0 ;
How many different position for players are listed ?,spider,SELECT COUNT( DISTINCT PLAYERalias0.POSITION ) FROM PLAYER AS PLAYERalias0 ;
How many different positions of players are there ?,spider,SELECT COUNT( DISTINCT PLAYERalias0.POSITION ) FROM PLAYER AS PLAYERalias0 ;
Count the number of distinct player positions .,spider,SELECT COUNT( DISTINCT PLAYERalias0.POSITION ) FROM PLAYER AS PLAYERalias0 ;
what are the name of players who get more than the average points .,spider,SELECT PLAYERalias0.NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > ( SELECT AVG( PLAYERalias1.POINTS ) FROM PLAYER AS PLAYERalias1 ) ;
What are the names of all players that got more than the average number of points ?,spider,SELECT PLAYERalias0.NAME FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.POINTS > ( SELECT AVG( PLAYERalias1.POINTS ) FROM PLAYER AS PLAYERalias1 ) ;
find the number of players whose points are lower than var0 in each position .,spider,"SELECT COUNT( * ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE POINTS < var0 GROUP BY PLAYERalias0.POSITION ;"
What is the number of players who have points less than var0 for each position ?,spider,"SELECT COUNT( * ) , PLAYERalias0.POSITION FROM PLAYER AS PLAYERalias0 WHERE POINTS < var0 GROUP BY PLAYERalias0.POSITION ;"
which country did participated in the most number of var0 competitions ?,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITION_TYPE = ""var0"" GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
what is the name of the country that participated in the most tournament competitions ?,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITION_TYPE = ""var0"" GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
which countries did participated in both var0 and var1 type competitions .,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE = ""var0"" INTERSECT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = ""var1"" ;"
What are the countries that participated in both friendly and tournament type competitions ?,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 WHERE COMPETITIONalias0.COMPETITION_TYPE = ""var0"" INTERSECT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = ""var1"" ;"
Find the countries that have never participated in any competition with var0 type .,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 EXCEPT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = ""var0"" ;"
What are the countries that have never participated in any friendly-type competitions ?,spider,"SELECT COMPETITIONalias0.COUNTRY FROM COMPETITION AS COMPETITIONalias0 EXCEPT SELECT COMPETITIONalias1.COUNTRY FROM COMPETITION AS COMPETITIONalias1 WHERE COMPETITIONalias1.COMPETITION_TYPE = ""var0"" ;"
How many furniture components are there in total ?,spider,SELECT SUM( FURNITUREalias0.NUM_OF_COMPONENT ) FROM FURNITURE AS FURNITUREalias0 ;
Return the name and id of the furniture with the highest market rate .,spider,"SELECT FURNITUREalias0.FURNITURE_ID , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE DESC LIMIT 1 ;"
find the total market rate of the furnitures that have the top var0 market shares .,spider,SELECT SUM( FURNITUREalias0.MARKET_RATE ) FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE DESC LIMIT var0 ;
Find the component amounts and names of all furnitures that have more than var0 components .,spider,"SELECT FURNITUREalias0.NAME , FURNITUREalias0.NUM_OF_COMPONENT FROM FURNITURE AS FURNITUREalias0 WHERE FURNITUREalias0.NUM_OF_COMPONENT > var0 ;"
Find the name and component amount of the least popular furniture .,spider,"SELECT FURNITUREalias0.NAME , FURNITUREalias0.NUM_OF_COMPONENT FROM FURNITURE AS FURNITUREalias0 ORDER BY FURNITUREalias0.MARKET_RATE LIMIT 1 ;"
Find the names of furnitures whose prices are lower than the highest price .,spider,SELECT FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID WHERE FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR < ( SELECT MAX( FURNITURE_MANUFACTEalias1.PRICE_IN_DOLLAR ) FROM FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias1 ) ;
Which manufacturer has the most number of shops ? List its name and year of opening .,spider,"SELECT MANUFACTURERalias0.NAME , MANUFACTURERalias0.OPEN_YEAR FROM MANUFACTURER AS MANUFACTURERalias0 ORDER BY MANUFACTURERalias0.NUM_OF_SHOPS DESC LIMIT 1 ;"
Find the average number of factories for the manufacturers that have more than var0 shops .,spider,SELECT AVG( MANUFACTURERalias0.NUM_OF_FACTORIES ) FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.NUM_OF_SHOPS > var0 ;
List all manufacturer names and ids ordered by their opening year .,spider,"SELECT MANUFACTURERalias0.MANUFACTURER_ID , MANUFACTURERalias0.NAME FROM MANUFACTURER AS MANUFACTURERalias0 ORDER BY MANUFACTURERalias0.OPEN_YEAR ;"
Give me the name and year of opening of the manufacturers that have either less than var0 factories or more than var0 shops .,spider,"SELECT MANUFACTURERalias0.NAME , MANUFACTURERalias0.OPEN_YEAR FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.NUM_OF_FACTORIES < var1 OR MANUFACTURERalias0.NUM_OF_SHOPS > var0 ;"
what is the average number of factories and maximum number of shops for manufacturers that opened before var0 .,spider,"SELECT AVG( MANUFACTURERalias0.NUM_OF_FACTORIES ) , MAX( MANUFACTURERalias0.NUM_OF_SHOPS ) FROM MANUFACTURER AS MANUFACTURERalias0 WHERE MANUFACTURERalias0.OPEN_YEAR < var0 ;"
Find the id and number of shops for the company that produces the most expensive furniture .,spider,"SELECT MANUFACTURERalias0.MANUFACTURER_ID , MANUFACTURERalias0.NUM_OF_SHOPS FROM MANUFACTURER AS MANUFACTURERalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID ORDER BY FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR DESC LIMIT 1 ;"
Find the number of funiture types produced by each manufacturer as well as the company names .,spider,"SELECT COUNT( FURNITURE_MANUFACTEalias0.* ) , MANUFACTURERalias0.NAME FROM MANUFACTURER AS MANUFACTURERalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID GROUP BY MANUFACTURERalias0.MANUFACTURER_ID ;"
Give me the names and prices of furnitures which some companies are manufacturing .,spider,"SELECT FURNITURE_MANUFACTEalias0.PRICE_IN_DOLLAR , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID ;"
Find the market shares and names of furnitures which no any company is producing in our records .,spider,"SELECT FURNITUREalias0.MARKET_RATE , FURNITUREalias0.NAME FROM FURNITURE AS FURNITUREalias0 WHERE FURNITUREalias0.FURNITURE_ID NOT IN ( SELECT FURNITURE_MANUFACTEalias0.FURNITURE_ID FROM FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ) ;"
Find the name of the company that produces both furnitures with less than var0 components and furnitures with more than var1 components .,spider,SELECT MANUFACTURERalias0.NAME FROM FURNITURE AS FURNITUREalias0 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias0 ON FURNITUREalias0.FURNITURE_ID = FURNITURE_MANUFACTEalias0.FURNITURE_ID JOIN MANUFACTURER AS MANUFACTURERalias0 ON MANUFACTURERalias0.MANUFACTURER_ID = FURNITURE_MANUFACTEalias0.MANUFACTURER_ID WHERE FURNITUREalias0.NUM_OF_COMPONENT < var0 INTERSECT SELECT MANUFACTURERalias1.NAME FROM FURNITURE AS FURNITUREalias1 JOIN FURNITURE_MANUFACTE AS FURNITURE_MANUFACTEalias1 ON FURNITUREalias1.FURNITURE_ID = FURNITURE_MANUFACTEalias1.FURNITURE_ID JOIN MANUFACTURER AS MANUFACTURERalias1 ON MANUFACTURERalias1.MANUFACTURER_ID = FURNITURE_MANUFACTEalias1.MANUFACTURER_ID WHERE FURNITUREalias1.NUM_OF_COMPONENT > var1 ;
Display the first name and department name for each employee .,spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID ;"
What are the first name and department name of all employees ?,spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID ;"
"List the full name (first and last name) , and salary for those employees who earn below var0 .",spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY < var0 ;"
What are the full names and salaries for any employees earning less than var0 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY < var0 ;"
"Display the first name , and department number for all employees whose last name is "" var0 "" .",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.LAST_NAME = ""var0"" ;"
What are the first names and department numbers for employees with last name var0 ?,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.LAST_NAME = ""var0"" ;"
Return all the information for all employees without any department number .,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ""var0"" ;"
What are all the employees without a department number ?,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ""var0"" ;"
Display all the information about the department var0 .,spider,"SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
What is all the information about the var0 department ?,spider,"SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
display all the information about the department var0 .,spider,"SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
What is all the information about the var0 department ?,spider,"SELECT * FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
when is the hire date for those employees whose first name does not containing the letter var0 ?,spider,"SELECT EMPLOYEESalias0.HIRE_DATE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE ""var0"" ;"
On what dates were employees without the letter var0 in their first names hired ?,spider,"SELECT EMPLOYEESalias0.HIRE_DATE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE ""var0"" ;"
"display the full name (first and last) , hire date , salary , and department number for those employees whose first name does not containing the letter var0 .",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE ""var0"" ;"
"What are the full name , hire date , salary , and department id for employees without the letter var0 in their first name ?",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME NOT LIKE ""var0"" ;"
"display the full name (first and last) , hire date , salary , and department number for those employees whose first name does not containing the letter var0 and make the result set in ascending order by department number .",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE FIRST_NAME NOT LIKE ""var0"" ORDER BY EMPLOYEESalias0.DEPARTMENT_ID ;"
"What are the full name , hire data , salary and department id for employees without the letter var0 in their first name , ordered by ascending department id ?",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE FIRST_NAME NOT LIKE ""var0"" ORDER BY EMPLOYEESalias0.DEPARTMENT_ID ;"
what is the phone number of employees whose salary is in the range of var0 and var1 ?,spider,SELECT EMPLOYEESalias0.PHONE_NUMBER FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 ;
Return the phone numbers of employees with salaries between var0 and var1 .,spider,SELECT EMPLOYEESalias0.PHONE_NUMBER FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 ;
display all the information of employees whose salary is in the range of var0 and var1 and commission is not var2 or department number does not equal to var3 .,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 AND EMPLOYEESalias0.COMMISSION_PCT != ""var2"" OR EMPLOYEESalias0.DEPARTMENT_ID != var3 ;"
Return all information about employees with salaries between var0 and var1 for which commission is not var2 or where their department id is not var3 .,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN var0 AND var1 AND EMPLOYEESalias0.COMMISSION_PCT != ""var2"" OR EMPLOYEESalias0.DEPARTMENT_ID != var3 ;"
What are the full name (first and last name) and salary for all employees who does not have any value for commission ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = ""var0"" ;"
Return the full names and salaries of employees with var0 commissions .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = ""var0"" ;"
"Display the first and last name , and salary for those employees whose first name is ending with the letter m .",spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME LIKE ""var0"" ;"
Return the full names and salaries for employees with first names that end with the letter m .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.FIRST_NAME LIKE ""var0"" ;"
"Find job id and date of hire for those employees who was hired between November 5th , 2007 and July 5th , 2009 .",spider,"SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE BETWEEN ""var0"" AND ""var1"" ;"
"What are the job ids and dates of hire for employees hired after November 5th , 2007 and before July 5th , 2009 ?",spider,"SELECT EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE BETWEEN ""var0"" AND ""var1"" ;"
What are the first and last name for those employees who works either in department var0 or var1 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 OR EMPLOYEESalias0.DEPARTMENT_ID = var1 ;"
What are the full names of employees who with in department var0 or var1 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 OR EMPLOYEESalias0.DEPARTMENT_ID = var1 ;"
Find the salary and manager number for those employees who is working under a manager .,spider,"SELECT EMPLOYEESalias0.MANAGER_ID , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.MANAGER_ID != ""var0"" ;"
What are the salaries and manager ids for employees who have managers ?,spider,"SELECT EMPLOYEESalias0.MANAGER_ID , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.MANAGER_ID != ""var0"" ;"
display all the details from Employees table for those employees who was hired before var0 .,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE < ""var0"" ;"
"What is all the information about employees hired before June 21 , 2002 ?",spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE < ""var0"" ;"
display all the information for all employees who have the letters var0 or var1 in their first name and also arrange the result in descending order by salary .,spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE FIRST_NAME LIKE ""var0"" OR FIRST_NAME LIKE ""var1"" ORDER BY EMPLOYEESalias0.SALARY DESC ;"
"What is all the information about employees with var0 or var1 in their first name , ordered by salary descending ?",spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE FIRST_NAME LIKE ""var0"" OR FIRST_NAME LIKE ""var1"" ORDER BY EMPLOYEESalias0.SALARY DESC ;"
"display those employees who joined after 7th September , 1987 .",spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE > ""var0"" ;"
"Which employees were hired after September 7th , 1987 ?",spider,"SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.HIRE_DATE > ""var0"" ;"
display the job title of jobs which minimum salary is greater than var0 .,spider,SELECT JOBSalias0.JOB_TITLE FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MIN_SALARY > var0 ;
Which job titles correspond to jobs with salaries over var0 ?,spider,SELECT JOBSalias0.JOB_TITLE FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MIN_SALARY > var0 ;
"display job Title , the difference between minimum and maximum salaries for those jobs which max salary within the range var0 to var1 .",spider,"SELECT JOBSalias0.JOB_TITLE , JOBSalias0.MAX_SALARY - JOBSalias0.MIN_SALARY FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MAX_SALARY BETWEEN var0 AND var1 ;"
"What are the job titles , and range of salaries for jobs with maximum salary between var0 and var1 ?",spider,"SELECT JOBSalias0.JOB_TITLE , JOBSalias0.MAX_SALARY - JOBSalias0.MIN_SALARY FROM JOBS AS JOBSalias0 WHERE JOBSalias0.MAX_SALARY BETWEEN var0 AND var1 ;"
display the emails of the employees who have no commission percentage and salary within the range var1 to var2 and works in that department which number is var3 .,spider,"SELECT EMPLOYEESalias0.EMAIL FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = ""var0"" AND EMPLOYEESalias0.DEPARTMENT_ID = var3 AND EMPLOYEESalias0.SALARY BETWEEN var1 AND var2 ;"
"What are the emails of employees with var0 commission , salary between var1 and var2 , and who work in department var3 ?",spider,"SELECT EMPLOYEESalias0.EMAIL FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.COMMISSION_PCT = ""var0"" AND EMPLOYEESalias0.DEPARTMENT_ID = var3 AND EMPLOYEESalias0.SALARY BETWEEN var1 AND var2 ;"
display the employee ID for each employee and the date on which he ended his previous job .,spider,"SELECT JOB_HISTORYalias0.EMPLOYEE_ID , MAX( JOB_HISTORYalias0.END_DATE ) FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID ;"
What are the employee ids for each employee and final dates of employment at their last job ?,spider,"SELECT JOB_HISTORYalias0.EMPLOYEE_ID , MAX( JOB_HISTORYalias0.END_DATE ) FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID ;"
display those departments where more than ten employees work who got a commission percentage .,spider,SELECT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( EMPLOYEESalias0.COMMISSION_PCT ) > var0 ;
What are the department ids for which more than var0 employees had a commission ?,spider,SELECT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( EMPLOYEESalias0.COMMISSION_PCT ) > var0 ;
Find the ids of the departments where any manager is managing var0 or more employees .,spider,"SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;"
What are department ids for departments with managers managing more than 3 employees ?,spider,"SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;"
What are the unique ids of those departments where any manager is managing var0 or more employees .,spider,"SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;"
Give the distinct department ids of departments in which a manager is in charge of var0 or more employees ?,spider,"SELECT DISTINCT EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.MANAGER_ID HAVING COUNT( EMPLOYEESalias0.EMPLOYEE_ID ) >= var0 ;"
display the average salary of employees for each department who gets a commission percentage .,spider,"SELECT AVG( EMPLOYEESalias0.SALARY ) , EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE COMMISSION_PCT != ""var0"" GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
What is the average salary of employees who have a commission percentage that is not var0 ?,spider,"SELECT AVG( EMPLOYEESalias0.SALARY ) , EMPLOYEESalias0.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE COMMISSION_PCT != ""var0"" GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
display the country ID and number of cities for each country .,spider,"SELECT COUNT( LOCATIONSalias0.* ) , LOCATIONSalias0.COUNTRY_ID FROM LOCATIONS AS LOCATIONSalias0 GROUP BY LOCATIONSalias0.COUNTRY_ID ;"
Give the country id and corresponding count of cities in each country .,spider,"SELECT COUNT( LOCATIONSalias0.* ) , LOCATIONSalias0.COUNTRY_ID FROM LOCATIONS AS LOCATIONSalias0 GROUP BY LOCATIONSalias0.COUNTRY_ID ;"
display job ID for those jobs that were done by two or more for more than var0 days .,spider,SELECT JOB_HISTORYalias0.JOB_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 WHERE END_DATE - START_DATE > var0 GROUP BY JOB_HISTORYalias0.JOB_ID HAVING COUNT( * ) >= var1 ;
What are the job ids for jobs done more than once for a period of more than var0 days ?,spider,SELECT JOB_HISTORYalias0.JOB_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 WHERE END_DATE - START_DATE > var0 GROUP BY JOB_HISTORYalias0.JOB_ID HAVING COUNT( * ) >= var1 ;
display the ID for those employees who did two or more jobs in the past .,spider,SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID HAVING COUNT( * ) >= var0 ;
What are the employee ids for employees who have held two or more jobs ?,spider,SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID HAVING COUNT( * ) >= var0 ;
display the ID for those employees who did two or more jobs in the past .,spider,SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID HAVING COUNT( * ) >= var0 ;
What are the employee ids for those who had two or more jobs .,spider,SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 GROUP BY JOB_HISTORYalias0.EMPLOYEE_ID HAVING COUNT( * ) >= var0 ;
Find employee with ID and name of the country presently where (s)he is working .,spider,"SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;"
What are all the employee ids and the names of the countries in which they work ?,spider,"SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;"
display the department name and number of employees in each of the department .,spider,"SELECT COUNT( * ) , DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID GROUP BY DEPARTMENTSalias0.DEPARTMENT_NAME ;"
Give the name of each department and the number of employees in each .,spider,"SELECT COUNT( * ) , DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID GROUP BY DEPARTMENTSalias0.DEPARTMENT_NAME ;"
display the department name and number of employees in each of the department .,spider,"SELECT COUNT( * ) , DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID GROUP BY DEPARTMENTSalias0.DEPARTMENT_NAME ;"
What are the department names and how many employees work in each of them ?,spider,"SELECT COUNT( * ) , DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID GROUP BY DEPARTMENTSalias0.DEPARTMENT_NAME ;"
Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above var0 ?,spider,SELECT * FROM JOB_HISTORY AS JOB_HISTORYalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON JOB_HISTORYalias0.EMPLOYEE_ID = EMPLOYEESalias0.EMPLOYEE_ID WHERE EMPLOYEESalias0.SALARY >= var0 ;
What is all the job history info done by employees earning a salary greater than or equal to var0 ?,spider,SELECT * FROM JOB_HISTORY AS JOB_HISTORYalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON JOB_HISTORYalias0.EMPLOYEE_ID = EMPLOYEESalias0.EMPLOYEE_ID WHERE EMPLOYEESalias0.SALARY >= var0 ;
display job title and average salary of employees .,spider,"SELECT AVG( EMPLOYEESalias0.SALARY ) , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID GROUP BY JOBSalias0.JOB_TITLE ;"
What is the average salary for each job title ?,spider,"SELECT AVG( EMPLOYEESalias0.SALARY ) , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID GROUP BY JOBSalias0.JOB_TITLE ;"
What is the full name ( first name and last name ) for those employees who gets more salary than the employee whose id is var0 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT EMPLOYEESalias1.SALARY FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.EMPLOYEE_ID = var0 ) ;"
Provide the full names of employees earning more than the employee with id var0 .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT EMPLOYEESalias1.SALARY FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.EMPLOYEE_ID = var0 ) ;"
return the smallest salary for every departments .,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , MIN( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
What is the minimum salary in each department ?,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , MIN( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments .,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY IN ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 GROUP BY EMPLOYEESalias1.DEPARTMENT_ID ) ;"
What are the full names and department ids for the lowest paid employees across all departments .,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY IN ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 GROUP BY EMPLOYEESalias1.DEPARTMENT_ID ) ;"
Find the employee id for all employees who earn more than the average salary .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;
What are the employee ids for employees who make more than the average ?,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;
display the employee id and salary of all employees who report to var0 (first name) .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.MANAGER_ID = ( SELECT EMPLOYEESalias1.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) ;"
"What are the employee ids of employees who report to var0 , and what are their salaries ?",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.MANAGER_ID = ( SELECT EMPLOYEESalias1.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) ;"
find the name of all departments that do actually have one or more employees assigned to them .,spider,SELECT DISTINCT DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID ;
What are the names of departments that have at least one employee .,spider,SELECT DISTINCT DEPARTMENTSalias0.DEPARTMENT_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID ;
get the details of employees who manage a department .,spider,SELECT DISTINCT * FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE EMPLOYEESalias0.EMPLOYEE_ID = DEPARTMENTSalias0.MANAGER_ID ;
What is all the information regarding employees who are managers ?,spider,SELECT DISTINCT * FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE EMPLOYEESalias0.EMPLOYEE_ID = DEPARTMENTSalias0.MANAGER_ID ;
Find the job ID for those jobs which average salary is above var0 .,spider,SELECT EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.JOB_ID HAVING AVG( EMPLOYEESalias0.SALARY ) > var0 ;
What are the job ids corresponding to jobs with average salary above var0 ?,spider,SELECT EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.JOB_ID HAVING AVG( EMPLOYEESalias0.SALARY ) > var0 ;
display the employee ID and job name for all those jobs in department var0 .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 ;"
what are the employee ids and job titles for employees in department var0 ?,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , JOBSalias0.JOB_TITLE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN JOBS AS JOBSalias0 ON JOBSalias0.JOB_ID = EMPLOYEESalias0.JOB_ID WHERE EMPLOYEESalias0.DEPARTMENT_ID = var0 ;"
What is the first name and job id for all employees in the var0 department ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
Give the first name and job id for all employees in the var0 department .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
display all the information of the employees whose salary if within the range of smallest salary and var0 .,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) AND var0 ;
What is all the information regarding employees with salaries above the minimum and under var0 ?,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY BETWEEN ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) AND var0 ;
Find the ids of the employees who does not work in those departments where some employees works whose manager id within the range var0 and var1 .,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID NOT IN ( SELECT DEPARTMENTSalias0.DEPARTMENT_ID FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.MANAGER_ID BETWEEN var0 AND var1 ) ;
What are the ids for employees who do not work in departments with managers that have ids between var0 and var1 ?,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID NOT IN ( SELECT DEPARTMENTSalias0.DEPARTMENT_ID FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.MANAGER_ID BETWEEN var0 AND var1 ) ;
display the employee name ( first name and last name ) and hire date for all employees in the same department as var0 .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) ;"
What are the full names and hire dates for employees in the same department as someone with the first name var0 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) ;"
display the employee name ( first name and last name ) and hire date for all employees in the same department as var0 excluding var0 .,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) AND EMPLOYEESalias0.FIRST_NAME != ""var1"" ;"
"What are the full names and hire dates for employees in the same department as someone with the first name var0 , not including var0 ?",spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.HIRE_DATE , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID = ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME = ""var0"" ) AND EMPLOYEESalias0.FIRST_NAME != ""var1"" ;"
display the employee number and name( first name and last name ) for all employees who work in a department with any employee whose name contains a  'var0 ' .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME LIKE ""var0"" ) ;"
What are the ids and full names for employees who work in a department that has someone with a first name that contains the letter var0 ?,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias1.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.FIRST_NAME LIKE ""var0"" ) ;"
"display the employee number , name( first name and last name ) , and salary for all employees who earn more than the average salary and who work in a department with any employee with a ' var0 ' in their first name .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias2.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias2 WHERE EMPLOYEESalias2.FIRST_NAME LIKE ""var0"" ) AND EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;"
"What are the ids , full names , and salaries for employees making more than average and who work in a department with employees who have the letter var0 in their first name ?",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.DEPARTMENT_ID IN ( SELECT EMPLOYEESalias2.DEPARTMENT_ID FROM EMPLOYEES AS EMPLOYEESalias2 WHERE EMPLOYEESalias2.FIRST_NAME LIKE ""var0"" ) AND EMPLOYEESalias0.SALARY > ( SELECT AVG( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 ) ;"
display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is var0 .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY < ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = ""var0"" ) ;"
What are the employee ids and job ids for employees who make less than the lowest earning employee with title var0 ?,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.JOB_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY < ( SELECT MIN( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = ""var0"" ) ;"
"display the employee number , name( first name and last name ) and job title for all employees whose salary is more than any salary of those employees whose job title is var0 .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT MAX( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = ""var0"" ) ;"
"What are the employee ids , full names , and job ids for employees who make more than the highest earning employee with title var0 ?",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.JOB_ID , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.SALARY > ( SELECT MAX( EMPLOYEESalias1.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias1 WHERE EMPLOYEESalias1.JOB_ID = ""var0"" ) ;"
display the department id and the total salary for those departments which contains at least two employees .,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , SUM( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( * ) >= var0 ;"
What are total salaries and department id for each department that has more than var0 employees ?,spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , SUM( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID HAVING COUNT( * ) >= var0 ;"
display all the information of those employees who did not have any job in the past .,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_ID NOT IN ( SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 ) ;
What is all the information about employees who have never had a job in the past ?,spider,SELECT * FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_ID NOT IN ( SELECT JOB_HISTORYalias0.EMPLOYEE_ID FROM JOB_HISTORY AS JOB_HISTORYalias0 ) ;
"display the department ID , full name (first and last name) , salary for those employees who is highest salary in every department .",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY , MAX( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
"What are the department ids , full names , and salaries for employees who make the most in their departments ?",spider,"SELECT EMPLOYEESalias0.DEPARTMENT_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY , MAX( EMPLOYEESalias0.SALARY ) FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.DEPARTMENT_ID ;"
"display the first and last name , department , city , and state province for each employee .",spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;"
"What are the full names , departments , cities , and state provinces for each employee ?",spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;"
"display those employees who contain a letter var0 to their first name and also display their last name , city .",spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE EMPLOYEESalias0.FIRST_NAME LIKE ""var0"" ;"
What are the full names and cities of employees who have the letter Z in their first names ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , LOCATIONSalias0.CITY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE EMPLOYEESalias0.FIRST_NAME LIKE ""var0"" ;"
"display the department name , city , and state province for each department .",spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;"
"What are the department names , cities , and state provinces for each department ?",spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_NAME , LOCATIONSalias0.CITY , LOCATIONSalias0.STATE_PROVINCE FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID ;"
display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working .,spider,"SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;"
"What the full names , ids of each employee and the name of the country they are in ?",spider,"SELECT COUNTRIESalias0.COUNTRY_NAME , EMPLOYEESalias0.EMPLOYEE_ID , EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID JOIN COUNTRIES AS COUNTRIESalias0 ON LOCATIONSalias0.COUNTRY_ID = COUNTRIESalias0.COUNTRY_ID ;"
"display the full name (first and last name) , and salary of those employees who working in any department located in var0 .",spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE LOCATIONSalias0.CITY = ""var0"" ;"
What are full names and salaries of employees working in the city of var0 ?,spider,"SELECT EMPLOYEESalias0.FIRST_NAME , EMPLOYEESalias0.LAST_NAME , EMPLOYEESalias0.SALARY FROM EMPLOYEES AS EMPLOYEESalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON EMPLOYEESalias0.DEPARTMENT_ID = DEPARTMENTSalias0.DEPARTMENT_ID JOIN LOCATIONS AS LOCATIONSalias0 ON LOCATIONSalias0.LOCATION_ID = DEPARTMENTSalias0.LOCATION_ID WHERE LOCATIONSalias0.CITY = ""var0"" ;"
What is the name of the song that was released in the most recent year ?,spider,"SELECT SONGalias0.RELEASEDATE , SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RELEASEDATE DESC LIMIT 1 ;"
What is the name of the song that was released most recently ?,spider,"SELECT SONGalias0.RELEASEDATE , SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RELEASEDATE DESC LIMIT 1 ;"
What is the id of the longest song ?,spider,SELECT F_ID FROM FILES AS FILESalias0 ORDER BY FILESalias0.DURATION DESC LIMIT 1 ;
Find the id of the song that lasts the longest .,spider,SELECT F_ID FROM FILES AS FILESalias0 ORDER BY FILESalias0.DURATION DESC LIMIT 1 ;
Find the names of all English songs .,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" ;"
What are the names of all songs in English ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" ;"
What are the id of songs whose format is var0 .,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" ;"
What are the id of all the files in var0 format ?,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" ;"
List the name and country of origin for all singers who have produced songs with rating above var0 .,spider,"SELECT DISTINCT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RATING > var0 ;"
What are the different names and countries of origins for all artists whose song ratings are above var0 ?,spider,"SELECT DISTINCT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RATING > var0 ;"
List the file size and format for all songs that have resolution lower than var0 .,spider,"SELECT DISTINCT FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.RESOLUTION < var0 ;"
What are the file sizes and formats for all songs with a resolution lower than var0 ?,spider,"SELECT DISTINCT FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.RESOLUTION < var0 ;"
What is the name of the artist who produced the shortest song ?,spider,SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 JOIN FILES AS FILESalias0 ON SONGalias0.F_ID = FILESalias0.F_ID ORDER BY FILESalias0.DURATION LIMIT 1 ;
What are the names of the artists who sang the shortest song ?,spider,SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 JOIN FILES AS FILESalias0 ON SONGalias0.F_ID = FILESalias0.F_ID ORDER BY FILESalias0.DURATION LIMIT 1 ;
What are the names and countries of origin for the artists who produced the top three highly rated songs .,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RATING DESC LIMIT var0 ;"
What are the names of the singers who sang the top var0 most highly rated songs and what countries do they hail from ?,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RATING DESC LIMIT var0 ;"
How many songs have 4 minute duration ?,spider,"SELECT COUNT( * ) FROM FILES AS FILESalias0 WHERE FILESalias0.DURATION LIKE ""var0"" ;"
What is the count of the songs that last approximately 4 minutes ?,spider,"SELECT COUNT( * ) FROM FILES AS FILESalias0 WHERE FILESalias0.DURATION LIKE ""var0"" ;"
How many artists are from var0 ?,spider,"SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" ;"
How many var0i artists are listed ?,spider,"SELECT COUNT( * ) FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" ;"
What is the average rating of songs produced by female artists ?,spider,"SELECT AVG( SONGalias0.RATING ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = ""var0"" ;"
"How many songs , on average , are sung by a female artist ?",spider,"SELECT AVG( SONGalias0.RATING ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = ""var0"" ;"
What is the most popular file format ?,spider,SELECT FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FORMATS ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the file format that is used by the most files .,spider,SELECT FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FORMATS ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the names of the artists who are from var0 and have produced English songs .,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" INTERSECT SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var1"" ;"
What are the names of the artists that are from the var0 and sang songs in English ?,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" INTERSECT SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var1"" ;"
Find the id of songs that are available in var0 format and have resolution lower than var1 .,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" INTERSECT SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION < var1 ;"
What is the id of the files that are available in the format of var0 and a resolution smaller than var1 ?,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" INTERSECT SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION < var1 ;"
What is the country of origin of the artist who is female and produced a song in Bangla ?,spider,"SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = ""var0"" AND SONGalias0.LANGUAGES = ""var1"" ;"
What countries are the female artists who sung in the language Bangla from ?,spider,"SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE ARTISTalias0.GENDER = ""var0"" AND SONGalias0.LANGUAGES = ""var1"" ;"
What is the average duration of songs that have var0 format and resolution below var1 ?,spider,"SELECT AVG( FILESalias0.DURATION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.FORMATS = ""var0"" AND SONGalias0.RESOLUTION < var1 ;"
What is the average song duration for the songs that are in var0 format and whose resolution below var1 ?,spider,"SELECT AVG( FILESalias0.DURATION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.FORMATS = ""var0"" AND SONGalias0.RESOLUTION < var1 ;"
What is the number of artists for each gender ?,spider,"SELECT ARTISTalias0.GENDER , COUNT( * ) FROM ARTIST AS ARTISTalias0 GROUP BY ARTISTalias0.GENDER ;"
How many artists are male and how many are female ?,spider,"SELECT ARTISTalias0.GENDER , COUNT( * ) FROM ARTIST AS ARTISTalias0 GROUP BY ARTISTalias0.GENDER ;"
What is the average rating of songs for each language ?,spider,"SELECT AVG( SONGalias0.RATING ) , SONGalias0.LANGUAGES FROM SONG AS SONGalias0 GROUP BY SONGalias0.LANGUAGES ;"
What is the average song rating for each language ?,spider,"SELECT AVG( SONGalias0.RATING ) , SONGalias0.LANGUAGES FROM SONG AS SONGalias0 GROUP BY SONGalias0.LANGUAGES ;"
Return the gender and name of artist who produced the song with the lowest resolution .,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RESOLUTION LIMIT 1 ;"
What is the gender and name of the artist who sang the song with the smallest resolution ?,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME ORDER BY SONGalias0.RESOLUTION LIMIT 1 ;"
"For each file format , return the number of artists who released songs in that format .",spider,"SELECT COUNT( * ) , FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FILESalias0.FORMATS ;"
How many songs were released for each format ?,spider,"SELECT COUNT( * ) , FILESalias0.FORMATS FROM FILES AS FILESalias0 GROUP BY FILESalias0.FORMATS ;"
Find the distinct names of all songs that have a higher resolution than some songs in English .,spider,"SELECT DISTINCT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MIN( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var0"" ) ;"
What are the different names for all songs that have a higher resolution than English songs ?,spider,"SELECT DISTINCT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MIN( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var0"" ) ;"
What are the names of all songs that have a lower rating than some song of var0 genre ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING < ( SELECT MAX( SONGalias1.RATING ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = ""var0"" ) ;"
What are the names of the songs that have a lower rating than at least one var0 song ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING < ( SELECT MAX( SONGalias1.RATING ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = ""var0"" ) ;"
"What is the name and country of origin of the artist who released a song that has "" var0 "" in its title ?",spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.SONG_NAME LIKE ""var0"" ;"
"What are the names of the artists who released a song that has the word var0 in its title , and where are the artists from ?",spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.SONG_NAME LIKE ""var0"" ;"
List the name and gender for all artists who released songs in var0ch .,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RELEASEDATE LIKE ""var0"" ;"
What are the names and genders of all artists who released songs in the month of var0ch ?,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.GENDER FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RELEASEDATE LIKE ""var0"" ;"
"List the names of all genres in alphabetical oder , together with its ratings .",spider,"SELECT GENREalias0.RATING , G_NAME FROM GENRE AS GENREalias0 ORDER BY G_NAME ;"
"What are the names of all genres in alphabetical order , combined with its ratings ?",spider,"SELECT GENREalias0.RATING , G_NAME FROM GENRE AS GENREalias0 ORDER BY G_NAME ;"
Give me a list of the names of all songs ordered by their resolution .,spider,SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RESOLUTION ;
What are the names of all songs that are ordered by their resolution numbers ?,spider,SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 ORDER BY SONGalias0.RESOLUTION ;
What are the ids of songs that are available in either var0 format or have resolution above var1 ?,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" UNION SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > var1 ;"
What are the ids of all songs that are available on var0 or have a higher resolution than var1 ?,spider,"SELECT F_ID FROM FILES AS FILESalias0 WHERE FILESalias0.FORMATS = ""var0"" UNION SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > var1 ;"
List the names of all songs that have 4 minute duration or are in English .,spider,"SELECT SONGalias0.SONG_NAME FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE ""var0"" UNION SELECT SONGalias1.SONG_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var1"" ;"
What are the names of all songs that are approximately 4 minutes long or are in English ?,spider,"SELECT SONGalias0.SONG_NAME FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE ""var0"" UNION SELECT SONGalias1.SONG_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var1"" ;"
What is the language used most often in the songs ?,spider,SELECT SONGalias0.LANGUAGES FROM SONG AS SONGalias0 GROUP BY LANGUAGES ORDER BY COUNT( SONGalias0.* ) DESC LIMIT 1 ;
What are the languages that are used most often in songs ?,spider,SELECT SONGalias0.LANGUAGES FROM SONG AS SONGalias0 GROUP BY LANGUAGES ORDER BY COUNT( SONGalias0.* ) DESC LIMIT 1 ;
What is the language that was used most often in songs with resolution above var0 ?,spider,SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE RESOLUTION > var0 GROUP BY LANGUAGES ORDER BY COUNT( SONGalias0.* ) DESC LIMIT 1 ;
"What is the name of the artist , for each language , that has the most songs with a higher resolution than var0 ?",spider,SELECT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE RESOLUTION > var0 GROUP BY LANGUAGES ORDER BY COUNT( SONGalias0.* ) DESC LIMIT 1 ;
What are the names of artists who are var1 and are from var0 ?,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" AND ARTISTalias0.GENDER = ""var1"" ;"
What are the names of all male British artists ?,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" AND ARTISTalias0.GENDER = ""var1"" ;"
Find the names of songs whose genre is var0 or language is English .,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.GENRE_IS = ""var0"" OR SONGalias0.LANGUAGES = ""var1"" ;"
What are the names of the songs that are var0 or sung in English ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.GENRE_IS = ""var0"" OR SONGalias0.LANGUAGES = ""var1"" ;"
Return the names of songs for which format is var0 and resolution is below var1 .,spider,"SELECT SONGalias0.SONG_NAME FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.FORMATS = ""var0"" INTERSECT SELECT SONGalias1.SONG_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RESOLUTION < var1 ;"
What are the names of all songs that are in var0 format and have a resolution lower than var1 ?,spider,"SELECT SONGalias0.SONG_NAME FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.FORMATS = ""var0"" INTERSECT SELECT SONGalias1.SONG_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RESOLUTION < var1 ;"
Return the names of singers who are from var0 and released an English song .,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" INTERSECT SELECT ARTISTalias1.ARTIST_NAME FROM ARTIST AS ARTISTalias1 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias1.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var1"" ;"
What are the names of all singers that are from the var0 and released a song in English ?,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" INTERSECT SELECT ARTISTalias1.ARTIST_NAME FROM ARTIST AS ARTISTalias1 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias1.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var1"" ;"
What are the average rating and resolution of songs that are in Bangla ?,spider,"SELECT AVG( SONGalias0.RATING ) , AVG( SONGalias0.RESOLUTION ) FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" ;"
What is the average rating and resolution of all var0 songs ?,spider,"SELECT AVG( SONGalias0.RATING ) , AVG( SONGalias0.RESOLUTION ) FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" ;"
What are the maximum and minimum resolution of songs whose duration is 3 minutes ?,spider,"SELECT MAX( SONGalias0.RESOLUTION ) , MIN( SONGalias0.RESOLUTION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE ""var0"" ;"
What is the maximum and minimum resolution of all songs that are approximately 3 minutes long ?,spider,"SELECT MAX( SONGalias0.RESOLUTION ) , MIN( SONGalias0.RESOLUTION ) FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE FILESalias0.DURATION LIKE ""var0"" ;"
What are the maximum duration and resolution of songs grouped and ordered by languages ?,spider,"SELECT MAX( FILESalias0.DURATION ) , MAX( SONGalias0.RESOLUTION ) , SONGalias0.LANGUAGES FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID GROUP BY SONGalias0.LANGUAGES ORDER BY SONGalias0.LANGUAGES ;"
"What are the maximum duration and resolution of all songs , for each language , ordered alphabetically by language ?",spider,"SELECT MAX( FILESalias0.DURATION ) , MAX( SONGalias0.RESOLUTION ) , SONGalias0.LANGUAGES FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID GROUP BY SONGalias0.LANGUAGES ORDER BY SONGalias0.LANGUAGES ;"
What are the shortest duration and lowest rating of songs grouped by genre and ordered by genre ?,spider,"SELECT MIN( FILESalias0.DURATION ) , MIN( SONGalias0.RATING ) , SONGalias0.GENRE_IS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID GROUP BY SONGalias0.GENRE_IS ORDER BY SONGalias0.GENRE_IS ;"
"What is the shortest and most poorly rated song for each genre , ordered alphabetically by genre ?",spider,"SELECT MIN( FILESalias0.DURATION ) , MIN( SONGalias0.RATING ) , SONGalias0.GENRE_IS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID GROUP BY SONGalias0.GENRE_IS ORDER BY SONGalias0.GENRE_IS ;"
Find the names and number of works of all artists who have at least one English songs .,spider,"SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var0"" GROUP BY SONGalias0.ARTIST_NAME HAVING COUNT( SONGalias0.* ) >= var1 ;"
What are the names and number of works for all artists who have sung at least one song in English ?,spider,"SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var0"" GROUP BY SONGalias0.ARTIST_NAME HAVING COUNT( SONGalias0.* ) >= var1 ;"
Find the name and country of origin for all artists who have release at least one song of resolution above var0 .,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RESOLUTION > var0 GROUP BY SONGalias0.ARTIST_NAME HAVING COUNT( SONGalias0.* ) >= var1 ;"
What is the name and country of origin for each artist who has released a song with a resolution higher than var0 ?,spider,"SELECT ARTISTalias0.ARTIST_NAME , ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.RESOLUTION > var0 GROUP BY SONGalias0.ARTIST_NAME HAVING COUNT( SONGalias0.* ) >= var1 ;"
Find the names and number of works of the three artists who have produced the most songs .,spider,"SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var0 ;"
"What are the names of the three artists who have produced the most songs , and how many works did they produce ?",spider,"SELECT ARTISTalias0.ARTIST_NAME , COUNT( SONGalias0.* ) FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var0 ;"
Find the country of origin for the artist who made the least number of songs ?,spider,SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) LIMIT 1 ;
What country is the artist who made the fewest songs from ?,spider,SELECT ARTISTalias0.COUNTRY FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) LIMIT 1 ;
What are the names of the songs whose rating is below the rating of all songs in English ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING < ( SELECT MIN( SONGalias1.RATING ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var0"" ) ;"
What are the song names for every song whose rating is less than the minimum rating for English songs ?,spider,"SELECT SONGalias0.SONG_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING < ( SELECT MIN( SONGalias1.RATING ) FROM SONG AS SONGalias1 WHERE SONGalias1.LANGUAGES = ""var0"" ) ;"
What is ids of the songs whose resolution is higher than the resolution of any songs with rating lower than var0 ?,spider,SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MAX( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.RATING < var0 ) ;
What is the id of every song that has a resolution higher than that of a song with a rating below var0 ?,spider,SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT MAX( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.RATING < var0 ) ;
What is ids of the songs whose resolution is higher than the average resolution of songs in var0 genre ?,spider,"SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT AVG( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = ""var0"" ) ;"
What are the ids of all songs that have higher resolution of the average resolution in the var0 genre ?,spider,"SELECT F_ID FROM SONG AS SONGalias0 WHERE SONGalias0.RESOLUTION > ( SELECT AVG( SONGalias1.RESOLUTION ) FROM SONG AS SONGalias1 WHERE SONGalias1.GENRE_IS = ""var0"" ) ;"
Find the top var1 artists who have the largest number of songs works whose language is Bangla .,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var0"" GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var1 ;"
What are the top var1 artists with the largest number of songs in the language Bangla ?,spider,"SELECT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 JOIN SONG AS SONGalias0 ON SONGalias0.ARTIST_NAME = ARTISTalias0.ARTIST_NAME WHERE SONGalias0.LANGUAGES = ""var0"" GROUP BY SONGalias0.ARTIST_NAME ORDER BY COUNT( SONGalias0.* ) DESC LIMIT var1 ;"
"List the id , genre and artist name of English songs ordered by rating .",spider,"SELECT F_ID , SONGalias0.ARTIST_NAME , SONGalias0.GENRE_IS FROM SONG AS SONGalias0 WHERE LANGUAGES = ""var0"" ORDER BY SONGalias0.RATING ;"
"What is the id , genre , and name of the artist for every English song ordered by ascending rating ?",spider,"SELECT F_ID , SONGalias0.ARTIST_NAME , SONGalias0.GENRE_IS FROM SONG AS SONGalias0 WHERE LANGUAGES = ""var0"" ORDER BY SONGalias0.RATING ;"
"List the duration , file size and format of songs whose genre is var0 , ordered by title ?",spider,"SELECT FILESalias0.DURATION , FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.GENRE_IS = ""var0"" ORDER BY SONGalias0.SONG_NAME ;"
"What is the duration , file size , and song format for every var0 song , ordered by title alphabetically ?",spider,"SELECT FILESalias0.DURATION , FILESalias0.FILE_SIZE , FILESalias0.FORMATS FROM FILES AS FILESalias0 JOIN SONG AS SONGalias0 ON SONGalias0.F_ID = FILESalias0.F_ID WHERE SONGalias0.GENRE_IS = ""var0"" ORDER BY SONGalias0.SONG_NAME ;"
Find the names of the artists who have produced English songs but have never received rating higher than var1 .,spider,"SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" EXCEPT SELECT DISTINCT SONGalias1.ARTIST_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RATING > var1 ;"
What are the names of the different artists that have produced a song in English but have never receieved a rating higher than var1 ?,spider,"SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.LANGUAGES = ""var0"" EXCEPT SELECT DISTINCT SONGalias1.ARTIST_NAME FROM SONG AS SONGalias1 WHERE SONGalias1.RATING > var1 ;"
Find the names of the artists who are from var0 and have never received rating higher than var1 .,spider,"SELECT DISTINCT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" EXCEPT SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING > var1 ;"
What are the names of the different artists from var0 who never received a rating higher than a var1 ?,spider,"SELECT DISTINCT ARTISTalias0.ARTIST_NAME FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.COUNTRY = ""var0"" EXCEPT SELECT DISTINCT SONGalias0.ARTIST_NAME FROM SONG AS SONGalias0 WHERE SONGalias0.RATING > var1 ;"
what is the full name and id of the college with the largest number of baseball players ?,spider,"SELECT COLLEGEalias0.COLLEGE_ID , COLLEGEalias0.NAME_FULL FROM COLLEGE AS COLLEGEalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID GROUP BY COLLEGEalias0.COLLEGE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the full name and id of the college that has the most baseball players .,spider,"SELECT COLLEGEalias0.COLLEGE_ID , COLLEGEalias0.NAME_FULL FROM COLLEGE AS COLLEGEalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID GROUP BY COLLEGEalias0.COLLEGE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is average salary of the players in the team named ' var0 ' ?,spider,"SELECT AVG( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE TEAMalias0.NAME = ""var0"" ;"
Compute the average salary of the players in the team called ' var0 ' .,spider,"SELECT AVG( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE TEAMalias0.NAME = ""var0"" ;"
What are first and last names of players participating in all star game in var0 ?,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID WHERE ALL_STARalias0.YEAR = var0 ;"
List the first and last name for players who participated in all star game in var0 .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID WHERE ALL_STARalias0.YEAR = var0 ;"
"What are the first name , last name and id of the player with the most all star game experiences ? Also list the count .",spider,"SELECT COUNT( * ) , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Which player has the most all star game experiences ? Give me the first name , last name and id of the player , as well as the number of times the player participated in all star game .",spider,"SELECT COUNT( * ) , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN ALL_STAR AS ALL_STARalias0 ON PLAYERalias0.PLAYER_ID = ALL_STARalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many players enter hall of fame each year ?,spider,"SELECT COUNT( * ) , HALL_OF_FAMEalias0.YEARID FROM HALL_OF_FAME AS HALL_OF_FAMEalias0 GROUP BY HALL_OF_FAMEalias0.YEARID ;"
Count the number of players who enter hall of fame for each year .,spider,"SELECT COUNT( * ) , HALL_OF_FAMEalias0.YEARID FROM HALL_OF_FAME AS HALL_OF_FAMEalias0 GROUP BY HALL_OF_FAMEalias0.YEARID ;"
What is the average number of attendance at home games for each year ?,spider,"SELECT AVG( HOME_GAMEalias0.ATTENDANCE ) , HOME_GAMEalias0.YEAR FROM HOME_GAME AS HOME_GAMEalias0 GROUP BY HOME_GAMEalias0.YEAR ;"
"For each year , return the year and the average number of attendance at home games .",spider,"SELECT AVG( HOME_GAMEalias0.ATTENDANCE ) , HOME_GAMEalias0.YEAR FROM HOME_GAME AS HOME_GAMEalias0 GROUP BY HOME_GAMEalias0.YEAR ;"
"In var0 , what are the id and rank of the team that has the largest average number of attendance ?",spider,"SELECT TEAMalias0.RANK , TEAMalias0.TEAM_ID FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 GROUP BY HOME_GAMEalias0.TEAM_ID ORDER BY AVG( HOME_GAMEalias0.ATTENDANCE ) DESC LIMIT 1 ;"
Find the id and rank of the team that has the highest average attendance rate in var0 .,spider,"SELECT TEAMalias0.RANK , TEAMalias0.TEAM_ID FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 GROUP BY HOME_GAMEalias0.TEAM_ID ORDER BY AVG( HOME_GAMEalias0.ATTENDANCE ) DESC LIMIT 1 ;"
"What are the manager's first name , last name and id who won the most manager award ?",spider,"SELECT MANAGER_AWARDalias0.PLAYER_ID , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN MANAGER_AWARD AS MANAGER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = MANAGER_AWARDalias0.PLAYER_ID GROUP BY MANAGER_AWARDalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Which manager won the most manager award ? Give me the manager's first name , last name and id .",spider,"SELECT MANAGER_AWARDalias0.PLAYER_ID , PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN MANAGER_AWARD AS MANAGER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = MANAGER_AWARDalias0.PLAYER_ID GROUP BY MANAGER_AWARDalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many parks are there in the state of var0 ?,spider,"SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.STATE = ""var0"" ;"
Show me the number of parks the state of var0 has .,spider,"SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.STATE = ""var0"" ;"
Which var0 players won the most player awards ? List their full name and id .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_AWARDalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
"Find the first name , last name and id for the top three players won the most player awards .",spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST , PLAYERalias0.PLAYER_ID FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_AWARDalias0.PLAYER_ID GROUP BY PLAYERalias0.PLAYER_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
List three countries which are the origins of the least players .,spider,SELECT PLAYERalias0.BIRTH_COUNTRY FROM PLAYER AS PLAYERalias0 GROUP BY BIRTH_COUNTRY ORDER BY COUNT( * ) ASC LIMIT var0 ;
What are the three countries that the least players are from ?,spider,SELECT PLAYERalias0.BIRTH_COUNTRY FROM PLAYER AS PLAYERalias0 GROUP BY BIRTH_COUNTRY ORDER BY COUNT( * ) ASC LIMIT var0 ;
Find all the players ' first name and last name who have empty death record .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.DEATH_YEAR = """" ;"
What are the first name and last name of the players whose death record is empty ?,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.DEATH_YEAR = """" ;"
"How many players born in var0 are right-handed batters ? That is , have the batter value ' var1 ' .",spider,"SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.BATS = ""var1"" AND PLAYERalias0.BIRTH_COUNTRY = ""var0"" ;"
Count the number of players who were born in var0 and have bats information ' var1 ' .,spider,"SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.BATS = ""var1"" AND PLAYERalias0.BIRTH_COUNTRY = ""var0"" ;"
What is the average height of the players from the college named ' var0 ' ?,spider,"SELECT AVG( PLAYERalias0.HEIGHT ) FROM PLAYER AS PLAYERalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COLLEGEalias0.PLAYER_ID JOIN COLLEGE AS COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID WHERE COLLEGEalias0.NAME_FULL = ""var0"" ;"
Find the average height of the players who belong to the college called ' var0 ' .,spider,"SELECT AVG( PLAYERalias0.HEIGHT ) FROM PLAYER AS PLAYERalias0 JOIN PLAYER_COLLEGE AS PLAYER_COLLEGEalias0 ON PLAYERalias0.PLAYER_ID = PLAYER_COLLEGEalias0.PLAYER_ID JOIN COLLEGE AS COLLEGEalias0 ON PLAYER_COLLEGEalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID WHERE COLLEGEalias0.NAME_FULL = ""var0"" ;"
"What is the highest salary among each team ? List the team name , id and maximum salary .",spider,"SELECT MAX( SALARYalias0.SALARY ) , TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ;"
"For each team , return the team name , id and the maximum salary among the team .",spider,"SELECT MAX( SALARYalias0.SALARY ) , TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ;"
What are the name and id of the team offering the lowest average salary ?,spider,"SELECT TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ORDER BY AVG( SALARYalias0.SALARY ) ASC LIMIT 1 ;"
Which team offers the lowest average salary ? Give me the name and id of the team .,spider,"SELECT TEAMalias0.NAME , TEAMalias0.TEAM_ID FROM TEAM AS TEAMalias0 JOIN SALARY AS SALARYalias0 ON TEAMalias0.TEAM_ID = SALARYalias0.TEAM_ID GROUP BY TEAMalias0.TEAM_ID ORDER BY AVG( SALARYalias0.SALARY ) ASC LIMIT 1 ;"
Find the players ' first name and last name who won award both in var0 and in var1 .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 WHERE PLAYER_AWARDalias0.YEAR = var0 INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM PLAYER AS PLAYERalias1 JOIN PLAYER_AWARD AS PLAYER_AWARDalias1 WHERE PLAYER_AWARDalias1.YEAR = var1 ;"
Which players won awards in both var0 and var1 ? Return their first names and last names .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 JOIN PLAYER_AWARD AS PLAYER_AWARDalias0 WHERE PLAYER_AWARDalias0.YEAR = var0 INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM PLAYER AS PLAYERalias1 JOIN PLAYER_AWARD AS PLAYER_AWARDalias1 WHERE PLAYER_AWARDalias1.YEAR = var1 ;"
List players ' first name and last name who have weight greater than var0 or height shorter than var1 .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.HEIGHT < var1 OR PLAYERalias0.WEIGHT > var0 ;"
What are the first name and last name of the players who have weight above var0 or height below var1 ?,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM PLAYER AS PLAYERalias0 WHERE PLAYERalias0.HEIGHT < var1 OR PLAYERalias0.WEIGHT > var0 ;"
List the maximum scores of the team var0 when the team won in postseason ?,spider,"SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" ;"
What are the maximum scores the team var0 got when the team won in postseason ?,spider,"SELECT MAX( POSTSEASONalias0.WINS ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" ;"
How many times did var0 lose in var1 postseason ?,spider,"SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_LOSER WHERE POSTSEASONalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
"Count the number of times the team "" var0 "" lost in var1 postseason .",spider,"SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_LOSER WHERE POSTSEASONalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
What are the name and id of the team with the most victories in var0 postseason ?,spider,"SELECT POSTSEASONalias0.TEAM_ID_WINNER , TEAMalias0.NAME FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE POSTSEASONalias0.YEAR = var0 GROUP BY POSTSEASONalias0.TEAM_ID_WINNER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the name and id of the team that won the most times in var0 postseason .,spider,"SELECT POSTSEASONalias0.TEAM_ID_WINNER , TEAMalias0.NAME FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE POSTSEASONalias0.YEAR = var0 GROUP BY POSTSEASONalias0.TEAM_ID_WINNER ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the number of wins the team var0 got in the postseasons each year in history ?,spider,"SELECT COUNT( * ) , POSTSEASONalias0.YEAR FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" GROUP BY POSTSEASONalias0.YEAR ;"
"For each year , return the year and the number of times the team var0 won in the postseasons .",spider,"SELECT COUNT( * ) , POSTSEASONalias0.YEAR FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" GROUP BY POSTSEASONalias0.YEAR ;"
What is the total number of postseason games that team var0 participated in ?,spider,"SELECT COUNT( * ) FROM ( SELECT * FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" UNION SELECT * FROM POSTSEASON AS POSTSEASONalias1 JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = POSTSEASONalias1.TEAM_ID_LOSER WHERE TEAMalias1.NAME = ""var1"" ) ;"
How many times in total did the team var0 participate in postseason games ?,spider,"SELECT COUNT( * ) FROM ( SELECT * FROM POSTSEASON AS POSTSEASONalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = POSTSEASONalias0.TEAM_ID_WINNER WHERE TEAMalias0.NAME = ""var0"" UNION SELECT * FROM POSTSEASON AS POSTSEASONalias1 JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = POSTSEASONalias1.TEAM_ID_LOSER WHERE TEAMalias1.NAME = ""var1"" ) ;"
"How many games in var0 postseason resulted in ties (that is , the value of "" ties "" is ' var1') ?",spider,SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 WHERE POSTSEASONalias0.TIES = var1 AND POSTSEASONalias0.YEAR = var0 ;
"Find the number of tied games (the value of "" ties "" is ' var1') in var0 postseason .",spider,SELECT COUNT( * ) FROM POSTSEASON AS POSTSEASONalias0 WHERE POSTSEASONalias0.TIES = var1 AND POSTSEASONalias0.YEAR = var0 ;
What is the total salary paid by team var0 in var1 ?,spider,"SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
What is the total salary expenses of team var0 in var1 ?,spider,"SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
How many players were in the team var0 in var1 ?,spider,"SELECT COUNT( * ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
How many players did var0 have in var1 ?,spider,"SELECT COUNT( * ) FROM SALARY AS SALARYalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var1 AND TEAMalias0.NAME = ""var0"" ;"
List the var1 highest salaries of the players in var0 ?,spider,SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE YEAR = var0 ORDER BY SALARYalias0.SALARY DESC LIMIT var1 ;
How much salary did the top var1 well-paid players get in var0 ?,spider,SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE YEAR = var0 ORDER BY SALARYalias0.SALARY DESC LIMIT var1 ;
What were all the salary values of players in var0 and var1 ?,spider,SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE SALARYalias0.YEAR = var0 UNION SELECT SALARYalias1.SALARY FROM SALARY AS SALARYalias1 WHERE SALARYalias1.YEAR = var1 ;
List all the salary values players received in var0 and var1 .,spider,SELECT SALARYalias0.SALARY FROM SALARY AS SALARYalias0 WHERE SALARYalias0.YEAR = var0 UNION SELECT SALARYalias1.SALARY FROM SALARY AS SALARYalias1 WHERE SALARYalias1.YEAR = var1 ;
In which year did the least people enter hall of fame ?,spider,SELECT HALL_OF_FAMEalias0.YEARID FROM HALL_OF_FAME AS HALL_OF_FAMEalias0 GROUP BY YEARID ORDER BY COUNT( * ) ASC LIMIT 1 ;
Find the year in which the least people enter hall of fame .,spider,SELECT HALL_OF_FAMEalias0.YEARID FROM HALL_OF_FAME AS HALL_OF_FAMEalias0 GROUP BY YEARID ORDER BY COUNT( * ) ASC LIMIT 1 ;
How many parks are there in var0 city ?,spider,"SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.CITY = ""var0"" ;"
How many parks does var0 city have ?,spider,"SELECT COUNT( * ) FROM PARK AS PARKalias0 WHERE PARKalias0.CITY = ""var0"" ;"
"How many games were played in park "" var1 "" in var0 ?",spider,"SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.PARK_NAME = ""var1"" ;"
"Count the number of games taken place in park "" var1 "" in var0 .",spider,"SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.PARK_NAME = ""var1"" ;"
How many games were played in city var1 in var0 ?,spider,"SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.CITY = ""var1"" ;"
Find the number of games taken place in city var1 in var0 .,spider,"SELECT COUNT( * ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 AND PARKalias0.CITY = ""var1"" ;"
What is the total home game attendance of team var0 from var1 to var2 ?,spider,"SELECT SUM( HOME_GAMEalias0.ATTENDANCE ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = ""var0"" ;"
How many games in total did team var0 attend from var1 to var2 ?,spider,"SELECT SUM( HOME_GAMEalias0.ATTENDANCE ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = ""var0"" ;"
How much did the the player with first name var0 and last name var1 earn between var2 to var3 in total ?,spider,"SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID WHERE PLAYERalias0.NAME_FIRST = ""var0"" AND PLAYERalias0.NAME_LAST = ""var1"" AND SALARYalias0.YEAR BETWEEN var2 AND var3 ;"
Compute the total salary that the player with first name var0 and last name var1 received between var2 to var3 .,spider,"SELECT SUM( SALARYalias0.SALARY ) FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID WHERE PLAYERalias0.NAME_FIRST = ""var0"" AND PLAYERalias0.NAME_LAST = ""var1"" AND SALARYalias0.YEAR BETWEEN var2 AND var3 ;"
List players ' first name and last name who received salary from team var1 in both var0 and var2 .,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var0 AND TEAMalias0.NAME = ""var1"" INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM SALARY AS SALARYalias1 JOIN PLAYER AS PLAYERalias1 ON SALARYalias1.PLAYER_ID = PLAYERalias1.PLAYER_ID JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = SALARYalias1.TEAM_ID WHERE SALARYalias1.YEAR = var2 AND TEAMalias1.NAME = ""var3"" ;"
What are the first name and last name of the players who were paid salary by team var1 in both var0 and var2 ?,spider,"SELECT PLAYERalias0.NAME_FIRST , PLAYERalias0.NAME_LAST FROM SALARY AS SALARYalias0 JOIN PLAYER AS PLAYERalias0 ON SALARYalias0.PLAYER_ID = PLAYERalias0.PLAYER_ID JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = SALARYalias0.TEAM_ID WHERE SALARYalias0.YEAR = var0 AND TEAMalias0.NAME = ""var1"" INTERSECT SELECT PLAYERalias1.NAME_FIRST , PLAYERalias1.NAME_LAST FROM SALARY AS SALARYalias1 JOIN PLAYER AS PLAYERalias1 ON SALARYalias1.PLAYER_ID = PLAYERalias1.PLAYER_ID JOIN TEAM AS TEAMalias1 ON TEAMalias1.TEAM_ID_BR = SALARYalias1.TEAM_ID WHERE SALARYalias1.YEAR = var2 AND TEAMalias1.NAME = ""var3"" ;"
How many home games did the team var0 play from var1 to var2 in total ?,spider,"SELECT SUM( HOME_GAMEalias0.GAMES ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = ""var0"" ;"
Count the total number of games the team var0 attended from var1 to var2 .,spider,"SELECT SUM( HOME_GAMEalias0.GAMES ) FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR BETWEEN var1 AND var2 AND TEAMalias0.NAME = ""var0"" ;"
Which team had the least number of attendances in home games in var0 ?,spider,SELECT TEAMalias0.NAME FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 ORDER BY HOME_GAMEalias0.ATTENDANCE ASC LIMIT 1 ;
Find the team that attended the least number of home games in var0 .,spider,SELECT TEAMalias0.NAME FROM HOME_GAME AS HOME_GAMEalias0 JOIN TEAM AS TEAMalias0 ON TEAMalias0.TEAM_ID_BR = HOME_GAMEalias0.TEAM_ID WHERE HOME_GAMEalias0.YEAR = var0 ORDER BY HOME_GAMEalias0.ATTENDANCE ASC LIMIT 1 ;
List the names of states that have more than var0 parks .,spider,SELECT PARKalias0.STATE FROM PARK AS PARKalias0 GROUP BY PARKalias0.STATE HAVING COUNT( * ) > var0 ;
Which states have more than var0 parks ?,spider,SELECT PARKalias0.STATE FROM PARK AS PARKalias0 GROUP BY PARKalias0.STATE HAVING COUNT( * ) > var0 ;
"How many team franchises are active , with active value ' var0 ' ?",spider,"SELECT COUNT( * ) FROM TEAM_FRANCHISE AS TEAM_FRANCHISEalias0 WHERE TEAM_FRANCHISEalias0.ACTIVE = ""var0"" ;"
"Find the number of team franchises that are active (have ' var0 ' as "" active "" information) .",spider,"SELECT COUNT( * ) FROM TEAM_FRANCHISE AS TEAM_FRANCHISEalias0 WHERE TEAM_FRANCHISEalias0.ACTIVE = ""var0"" ;"
Which cities have var0 to var1 parks ?,spider,SELECT PARKalias0.CITY FROM PARK AS PARKalias0 GROUP BY PARKalias0.CITY HAVING COUNT( * ) BETWEEN var0 AND var1 ;
Find all the cities that have var0 to var1 parks .,spider,SELECT PARKalias0.CITY FROM PARK AS PARKalias0 GROUP BY PARKalias0.CITY HAVING COUNT( * ) BETWEEN var0 AND var1 ;
Which park had most attendances in var0 ?,spider,SELECT PARKalias0.PARK_NAME FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 ORDER BY HOME_GAMEalias0.ATTENDANCE DESC LIMIT 1 ;
Which park did the most people attend in var0 ?,spider,SELECT PARKalias0.PARK_NAME FROM HOME_GAME AS HOME_GAMEalias0 JOIN PARK AS PARKalias0 ON PARKalias0.PARK_ID = HOME_GAMEalias0.PARK_ID WHERE HOME_GAMEalias0.YEAR = var0 ORDER BY HOME_GAMEalias0.ATTENDANCE DESC LIMIT 1 ;
How many camera lenses have a focal length longer than var0 mm ?,spider,SELECT COUNT( * ) FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.FOCAL_LENGTH_MM > var0 ;
"Find the brand and name for each camera lens , and sort in descending order of maximum aperture .",spider,"SELECT CAMERA_LENSalias0.BRAND , CAMERA_LENSalias0.NAME FROM CAMERA_LENS AS CAMERA_LENSalias0 ORDER BY CAMERA_LENSalias0.MAX_APERTURE DESC ;"
"List the id , color scheme , and name for all the photos .",spider,"SELECT PHOTOSalias0.COLOR , PHOTOSalias0.ID , PHOTOSalias0.NAME FROM PHOTOS AS PHOTOSalias0 ;"
What are the maximum and average height of the mountains ?,spider,"SELECT AVG( MOUNTAINalias0.HEIGHT ) , MAX( MOUNTAINalias0.HEIGHT ) FROM MOUNTAIN AS MOUNTAINalias0 ;"
What are the average prominence of the mountains in country ' var0 ' ?,spider,"SELECT AVG( MOUNTAINalias0.PROMINENCE ) FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.COUNTRY = ""var0"" ;"
"What are the name , height and prominence of mountains which do not belong to the range ' var0 ' ?",spider,"SELECT MOUNTAINalias0.HEIGHT , MOUNTAINalias0.NAME , MOUNTAINalias0.PROMINENCE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.RANGE != ""var0"" ;"
What are the id and name of the photos for mountains ?,spider,"SELECT MOUNTAINalias0.ID , MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID WHERE MOUNTAINalias0.HEIGHT > var0 ;"
What are the id and name of the mountains that have at least var0 photos ?,spider,"SELECT MOUNTAINalias0.ID , MOUNTAINalias0.NAME FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID GROUP BY MOUNTAINalias0.ID HAVING COUNT( PHOTOSalias0.* ) >= var0 ;"
What are the names of the cameras that have taken picture of the most mountains ?,spider,SELECT CAMERA_LENSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN CAMERA_LENS AS CAMERA_LENSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID GROUP BY CAMERA_LENSalias0.ID ORDER BY COUNT( PHOTOSalias0.* ) DESC LIMIT 1 ;
What are the names of photos taken with the lens brand ' var0 ' or ' var1 ' ?,spider,"SELECT CAMERA_LENSalias0.NAME FROM CAMERA_LENS AS CAMERA_LENSalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID WHERE CAMERA_LENSalias0.BRAND = ""var0"" OR CAMERA_LENSalias0.BRAND = ""var1"" ;"
How many different kinds of lens brands are there ?,spider,SELECT COUNT( DISTINCT CAMERA_LENSalias0.BRAND ) FROM CAMERA_LENS AS CAMERA_LENSalias0 ;
How many camera lenses are not used in taking any photos ?,spider,SELECT COUNT( * ) FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.ID NOT IN ( SELECT PHOTOSalias0.CAMERA_LENS_ID FROM PHOTOS AS PHOTOSalias0 ) ;
How many distinct kinds of camera lenses are used to take photos of mountains in the country ' var0 ' ?,spider,"SELECT COUNT( DISTINCT PHOTOSalias0.CAMERA_LENS_ID ) FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID WHERE MOUNTAINalias0.COUNTRY = ""var0"" ;"
List the brands of lenses that took both a picture of mountains with range ' var0 ' and a picture of mountains with range ' var1 ',spider,"SELECT CAMERA_LENSalias0.BRAND FROM MOUNTAIN AS MOUNTAINalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias0.ID JOIN CAMERA_LENS AS CAMERA_LENSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID WHERE MOUNTAINalias0.RANGE = ""var0"" INTERSECT SELECT CAMERA_LENSalias1.BRAND FROM MOUNTAIN AS MOUNTAINalias1 JOIN PHOTOS AS PHOTOSalias1 ON PHOTOSalias1.MOUNTAIN_ID = MOUNTAINalias1.ID JOIN CAMERA_LENS AS CAMERA_LENSalias1 ON PHOTOSalias1.CAMERA_LENS_ID = CAMERA_LENSalias1.ID WHERE MOUNTAINalias1.RANGE = ""var1"" ;"
Show the name and prominence of the mountains whose picture is not taken by a lens of brand ' var0 ' .,spider,"SELECT MOUNTAINalias0.NAME , MOUNTAINalias0.PROMINENCE FROM MOUNTAIN AS MOUNTAINalias0 EXCEPT SELECT MOUNTAINalias1.NAME , MOUNTAINalias1.PROMINENCE FROM MOUNTAIN AS MOUNTAINalias1 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.MOUNTAIN_ID = MOUNTAINalias1.ID JOIN CAMERA_LENS AS CAMERA_LENSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID WHERE CAMERA_LENSalias0.BRAND = ""var0"" ;"
"List the camera lens names containing substring "" var0 "" .",spider,"SELECT CAMERA_LENSalias0.NAME FROM CAMERA_LENS AS CAMERA_LENSalias0 WHERE CAMERA_LENSalias0.NAME LIKE ""var0"" ;"
What is the name of each camera lens and the number of photos taken by it ? Order the result by the count of photos .,spider,"SELECT CAMERA_LENSalias0.NAME , COUNT( PHOTOSalias0.* ) FROM CAMERA_LENS AS CAMERA_LENSalias0 JOIN PHOTOS AS PHOTOSalias0 ON PHOTOSalias0.CAMERA_LENS_ID = CAMERA_LENSalias0.ID GROUP BY CAMERA_LENSalias0.ID ORDER BY COUNT( PHOTOSalias0.* ) ;"
Find the names of channels that are not owned by var0 .,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER != ""var0"" ;"
Which channels are not owned by var0 ? Give me the channel names .,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER != ""var0"" ;"
List all channel names ordered by their rating in percent from big to small .,spider,SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC ;
Give me a list of all the channel names sorted by the channel rating in descending order .,spider,SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC ;
What is the owner of the channel that has the highest rating ratio ?,spider,SELECT CHANNELalias0.OWNER FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC LIMIT 1 ;
Show me the owner of the channel with the highest rating .,spider,SELECT CHANNELalias0.OWNER FROM CHANNEL AS CHANNELalias0 ORDER BY CHANNELalias0.RATING_IN_PERCENT DESC LIMIT 1 ;
how many programs are there ?,spider,SELECT COUNT( * ) FROM PROGRAM AS PROGRAMalias0 ;
Count the number of programs .,spider,SELECT COUNT( * ) FROM PROGRAM AS PROGRAMalias0 ;
"list all the names of programs , ordering by launch time .",spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH ;
"What is the list of program names , sorted by the order of launch date ?",spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH ;
"List the name , origin and owner of each program .",spider,"SELECT PROGRAMalias0.NAME , PROGRAMalias0.ORIGIN , PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 ;"
"What are the name , origin and owner of each program ?",spider,"SELECT PROGRAMalias0.NAME , PROGRAMalias0.ORIGIN , PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 ;"
find the name of the program that was launched most recently .,spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH DESC LIMIT 1 ;
Which program was launched most recently ? Return the program name .,spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.LAUNCH DESC LIMIT 1 ;
find the total percentage share of all channels owned by var0 .,spider,"SELECT SUM( CHANNELalias0.SHARE_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = ""var0"" ;"
What is the total share (in percent) of all the channels owned by var0 ?,spider,"SELECT SUM( CHANNELalias0.SHARE_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = ""var0"" ;"
Find the names of the channels that are broadcast in the morning .,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
Which channels are broadcast in the morning ? Give me the channel names .,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
what are the names of the channels that broadcast in both morning and night ?,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" INTERSECT SELECT CHANNELalias1.NAME FROM CHANNEL AS CHANNELalias1 JOIN BROADCAST AS BROADCASTalias1 ON CHANNELalias1.CHANNEL_ID = BROADCASTalias1.CHANNEL_ID WHERE BROADCASTalias1.TIME_OF_DAY = ""var1"" ;"
Which channels broadcast both in the morning and at night ? Give me the channel names .,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 JOIN BROADCAST AS BROADCASTalias0 ON CHANNELalias0.CHANNEL_ID = BROADCASTalias0.CHANNEL_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" INTERSECT SELECT CHANNELalias1.NAME FROM CHANNEL AS CHANNELalias1 JOIN BROADCAST AS BROADCASTalias1 ON CHANNELalias1.CHANNEL_ID = BROADCASTalias1.CHANNEL_ID WHERE BROADCASTalias1.TIME_OF_DAY = ""var1"" ;"
how many programs are broadcast in each time section of the day ?,spider,"SELECT BROADCASTalias0.TIME_OF_DAY , COUNT( * ) FROM BROADCAST AS BROADCASTalias0 GROUP BY BROADCASTalias0.TIME_OF_DAY ;"
Count the number of programs broadcast for each time section of a day .,spider,"SELECT BROADCASTalias0.TIME_OF_DAY , COUNT( * ) FROM BROADCAST AS BROADCASTalias0 GROUP BY BROADCASTalias0.TIME_OF_DAY ;"
find the number of different programs that are broadcast during night time .,spider,"SELECT COUNT( DISTINCT BROADCASTalias0.PROGRAM_ID ) FROM BROADCAST AS BROADCASTalias0 WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
"How many distinct programs are broadcast at "" var0 "" time ?",spider,"SELECT COUNT( DISTINCT BROADCASTalias0.PROGRAM_ID ) FROM BROADCAST AS BROADCASTalias0 WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
Find the names of programs that are never broadcasted in the morning .,spider,"SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 EXCEPT SELECT PROGRAMalias1.NAME FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
Which programs are never broadcasted in the morning ? Give me the names of the programs .,spider,"SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 EXCEPT SELECT PROGRAMalias1.NAME FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" ;"
find the program owners that have some programs in both morning and night time .,spider,"SELECT PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" INTERSECT SELECT PROGRAMalias1.OWNER FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias1 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias1.PROGRAM_ID WHERE BROADCASTalias1.TIME_OF_DAY = ""var1"" ;"
Who are the owners of the programs that broadcast both in the morning and at night ?,spider,"SELECT PROGRAMalias0.OWNER FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID WHERE BROADCASTalias0.TIME_OF_DAY = ""var0"" INTERSECT SELECT PROGRAMalias1.OWNER FROM PROGRAM AS PROGRAMalias1 JOIN BROADCAST AS BROADCASTalias1 ON PROGRAMalias1.PROGRAM_ID = BROADCASTalias1.PROGRAM_ID WHERE BROADCASTalias1.TIME_OF_DAY = ""var1"" ;"
List all program origins in the alphabetical order .,spider,SELECT PROGRAMalias0.ORIGIN FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.ORIGIN ;
What is the list of program origins ordered alphabetically ?,spider,SELECT PROGRAMalias0.ORIGIN FROM PROGRAM AS PROGRAMalias0 ORDER BY PROGRAMalias0.ORIGIN ;
what is the number of different channel owners ?,spider,SELECT COUNT( DISTINCT CHANNELalias0.OWNER ) FROM CHANNEL AS CHANNELalias0 ;
Count the number of distinct channel owners .,spider,SELECT COUNT( DISTINCT CHANNELalias0.OWNER ) FROM CHANNEL AS CHANNELalias0 ;
find the names of programs whose origin is not in var0 .,spider,"SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.ORIGIN != ""var0"" ;"
"Which programs ' origins are not "" var0 "" ? Give me the program names .",spider,"SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 WHERE PROGRAMalias0.ORIGIN != ""var0"" ;"
What are the names of the channels owned by var0 or var1 ?,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = ""var0"" OR CHANNELalias0.OWNER = ""var1"" ;"
List the names of all the channels owned by either var0 or var1,spider,"SELECT CHANNELalias0.NAME FROM CHANNEL AS CHANNELalias0 WHERE CHANNELalias0.OWNER = ""var0"" OR CHANNELalias0.OWNER = ""var1"" ;"
Find the total rating ratio for each channel owner .,spider,"SELECT CHANNELalias0.OWNER , SUM( CHANNELalias0.RATING_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 GROUP BY CHANNELalias0.OWNER ;"
What is the total rating of channel for each channel owner ?,spider,"SELECT CHANNELalias0.OWNER , SUM( CHANNELalias0.RATING_IN_PERCENT ) FROM CHANNEL AS CHANNELalias0 GROUP BY CHANNELalias0.OWNER ;"
Find the name of the program that is broadcast most frequently .,spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID GROUP BY BROADCASTalias0.PROGRAM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which program is broadcast most frequently ? Give me the program name .,spider,SELECT PROGRAMalias0.NAME FROM PROGRAM AS PROGRAMalias0 JOIN BROADCAST AS BROADCASTalias0 ON PROGRAMalias0.PROGRAM_ID = BROADCASTalias0.PROGRAM_ID GROUP BY BROADCASTalias0.PROGRAM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many courses are there in total ?,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
Find the total number of courses offered .,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
How many courses in total are listed ?,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
How many courses are there ?,spider,SELECT COUNT( * ) FROM COURSES AS COURSESalias0 ;
"What are the descriptions of the courses with name "" var0 "" ?",spider,"SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
"Return the description for the courses named "" var0 "" .",spider,"SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
How is the var0 course described ?,spider,"SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
What are the descriptions for all the var0 courses ?,spider,"SELECT COURSESalias0.COURSE_DESCRIPTION FROM COURSES AS COURSESalias0 WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
"What are the addresses of the course authors or tutors with personal name "" var0 """,spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 WHERE COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME = ""var0"" ;"
"Return the addresses of the course authors or tutors whose personal name is "" var0 "" .",spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 WHERE COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME = ""var0"" ;"
List the addresses of all the course authors or tutors .,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;
What is the address of each course author or tutor ?,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;
List all the login names and family names of course author and tutors .,spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;"
What are the login names and family names of course author and tutors ?,spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ;"
List all the dates of enrollment and completion of students .,spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;"
What are all the dates of enrollment and completion in record ?,spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;"
How many distinct students are enrolled in courses ?,spider,SELECT COUNT( DISTINCT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
Find the number of distinct students enrolled in courses .,spider,SELECT COUNT( DISTINCT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
How many distinct courses are enrolled in by students ?,spider,SELECT COUNT( STUDENT_COURSE_ENROLMENTalias0.COURSE_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
Find the number of distinct courses that have enrolled students .,spider,SELECT COUNT( STUDENT_COURSE_ENROLMENTalias0.COURSE_ID ) FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ;
"Find the dates of the tests taken with result "" var0 "" .",spider,"SELECT STUDENT_TESTS_TAKENalias0.DATE_TEST_TAKEN FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"Which tests have "" var0 "" results ? Return the dates when the tests were taken .",spider,"SELECT STUDENT_TESTS_TAKENalias0.DATE_TEST_TAKEN FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"How many tests have result "" var0 "" ?",spider,"SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"Count the number of tests with "" var0 "" result .",spider,"SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"What are the login names of the students with family name "" var0 "" ?",spider,"SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" ;"
"Return the login names of the students whose family name is "" var0 "" .",spider,"SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" ;"
"What are the dates of the latest logon of the students with family name "" var0 "" or "" var1 "" ?",spider,"SELECT STUDENTSalias0.DATE_OF_LATEST_LOGON FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" OR STUDENTSalias0.FAMILY_NAME = ""var1"" ;"
"Find the latest logon date of the students whose family name is "" var0 "" or "" var1 "" .",spider,"SELECT STUDENTSalias0.DATE_OF_LATEST_LOGON FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" OR STUDENTSalias0.FAMILY_NAME = ""var1"" ;"
"How many students have pervar0al names that contain the word "" var0 "" ?",spider,"SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERSONAL_NAME LIKE ""var0"" ;"
"Find the number of students who have the word "" var0 "" in their pervar0al names .",spider,"SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERSONAL_NAME LIKE ""var0"" ;"
List all the subject names .,spider,SELECT SUBJECTSalias0.SUBJECT_NAME FROM SUBJECTS AS SUBJECTSalias0 ;
What are the names of all the subjects .,spider,SELECT SUBJECTSalias0.SUBJECT_NAME FROM SUBJECTS AS SUBJECTSalias0 ;
List all the information about course authors and tutors in alphabetical order of the personal name .,spider,SELECT * FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ORDER BY COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME ;
Sort the information about course authors and tutors in alphabetical order of the personal name .,spider,SELECT * FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 ORDER BY COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME ;
List the personal names and family names of all the students in alphabetical order of family name .,spider,"SELECT STUDENTSalias0.FAMILY_NAME , STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.FAMILY_NAME ;"
What are the personal names and family names of the students ? Sort the result in alphabetical order of the family name .,spider,"SELECT STUDENTSalias0.FAMILY_NAME , STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.FAMILY_NAME ;"
List each test result and its count in descending order of count .,spider,"SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) , STUDENT_TESTS_TAKENalias0.TEST_RESULT FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 GROUP BY TEST_RESULT ORDER BY COUNT( STUDENT_TESTS_TAKENalias0.* ) DESC ;"
"For each distinct test result , find the number of students who got the result .",spider,"SELECT COUNT( STUDENT_TESTS_TAKENalias0.* ) , STUDENT_TESTS_TAKENalias0.TEST_RESULT FROM STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 GROUP BY TEST_RESULT ORDER BY COUNT( STUDENT_TESTS_TAKENalias0.* ) DESC ;"
"Find the login name of the course author that teaches the course with name "" var0 "" .",spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
"Which course author teaches the "" var0 "" course ? Give me his or her login name .",spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
"Find the addresses of the course authors who teach the course with name "" var0 "" or "" var1 "" .",spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" OR COURSESalias0.COURSE_NAME = ""var1"" ;"
"What are the addresses of the course authors who teach either "" var0 "" or "" var1 "" course .",spider,"SELECT COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" OR COURSESalias0.COURSE_NAME = ""var1"" ;"
"Find the personal name , family name , and author ID of the course author that teaches the most courses .",spider,"SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What are the personal name , family name , and author ID of the course author who teaches the most courses ?",spider,"SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.FAMILY_NAME , COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the addresses and author IDs of the course authors that teach at least two courses .,spider,"SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID HAVING COUNT ( * ) >= var0 ;"
Which course authors teach two or more courses ? Give me their addresses and author IDs .,spider,"SELECT COURSESalias0.AUTHOR_ID , COURSE_AUTHORS_AND_TUTORSalias0.ADDRESS_LINE_1 FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID GROUP BY COURSESalias0.AUTHOR_ID HAVING COUNT ( * ) >= var0 ;"
"Find the names of courses taught by the tutor who has personal name "" var0 "" .",spider,"SELECT COURSESalias0.COURSE_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME = ""var0"" ;"
"What are the names of the courses taught by the tutor whose personal name is "" var0 "" ?",spider,"SELECT COURSESalias0.COURSE_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 JOIN COURSES AS COURSESalias0 ON COURSE_AUTHORS_AND_TUTORSalias0.AUTHOR_ID = COURSESalias0.AUTHOR_ID WHERE COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME = ""var0"" ;"
"Find the names and descriptions of courses that belong to the subject named "" var0 "" .",spider,"SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID WHERE SUBJECTSalias0.SUBJECT_NAME = ""var0"" ;"
"What are the names and descriptions of the all courses under the "" var0 "" subject ?",spider,"SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID WHERE SUBJECTSalias0.SUBJECT_NAME = ""var0"" ;"
"Find the subject ID , subject name , and the corresponding number of available courses for each subject .",spider,"SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ;"
"What are the subject ID , subject name , and the number of available courses for each subject ?",spider,"SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ;"
"Find the subject ID , name of subject and the corresponding number of courses for each subject , and sort by the course count in ascending order .",spider,"SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ORDER BY COUNT( * ) ASC ;"
"List the subject ID , name of subject and the number of courses available for each subject in ascending order of the course counts .",spider,"SELECT COUNT( * ) , COURSESalias0.SUBJECT_ID , SUBJECTSalias0.SUBJECT_NAME FROM COURSES AS COURSESalias0 JOIN SUBJECTS AS SUBJECTSalias0 ON SUBJECTSalias0.SUBJECT_ID = COURSESalias0.SUBJECT_ID GROUP BY COURSESalias0.SUBJECT_ID ORDER BY COUNT( * ) ASC ;"
"What is the date of enrollment of the course named "" var0 "" ?",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
"Find the the date of enrollment of the "" var0 "" course .",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID WHERE COURSESalias0.COURSE_NAME = ""var0"" ;"
What is the name of the course that has the most student enrollment ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which course is enrolled in by the most students ? Give me the course name .,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the names of the courses that have exactly var0 student enrollment ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) = var0 ;
Find the names of the courses that have just one student enrollment .,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) = var0 ;
What are the descriptions and names of the courses that have student enrollment bigger than var0 ?,spider,"SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) > var0 ;"
Return the descriptions and names of the courses that have more than two students enrolled in .,spider,"SELECT COURSESalias0.COURSE_DESCRIPTION , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME HAVING COUNT( * ) > var0 ;"
What is the name of each course and the corresponding number of student enrollment ?,spider,"SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ;"
List the name and the number of enrolled student for each course .,spider,"SELECT COUNT( * ) , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ;"
"What are the enrollment dates of all the tests that have result "" var0 "" ?",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"Find the enrollment date for all the tests that have "" var0 "" result .",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"What are the completion dates of all the tests that have result "" var0 "" ?",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"Return the completion date for all the tests that have "" var0 "" result .",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENT_TESTS_TAKEN AS STUDENT_TESTS_TAKENalias0 ON STUDENT_TESTS_TAKENalias0.REGISTRATION_ID = STUDENT_COURSE_ENROLMENTalias0.REGISTRATION_ID WHERE STUDENT_TESTS_TAKENalias0.TEST_RESULT = ""var0"" ;"
"List the dates of enrollment and completion of the student with personal name "" var0 "" .",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.PERSONAL_NAME = ""var0"" ;"
"On what dates did the student whose personal name is "" var0 "" enroll in and complete the courses ?",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.PERSONAL_NAME = ""var0"" ;"
"List the dates of enrollment and completion of the student with family name "" var0 "" and personal name "" var1 "" .",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" AND STUDENTSalias0.PERSONAL_NAME = ""var1"" ;"
"On what dates did the student with family name "" var0 "" and personal name "" var1 "" enroll in and complete the courses ?",spider,"SELECT STUDENT_COURSE_ENROLMENTalias0.DATE_OF_COMPLETION , STUDENT_COURSE_ENROLMENTalias0.DATE_OF_ENROLMENT FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID WHERE STUDENTSalias0.FAMILY_NAME = ""var0"" AND STUDENTSalias0.PERSONAL_NAME = ""var1"" ;"
Find the student ID and login name of the student with the most course enrollments,spider,"SELECT STUDENTSalias0.LOGIN_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the student ID and login name of the student who are enrolled in the most courses ?,spider,"SELECT STUDENTSalias0.LOGIN_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the student ID and personal name of the student with at least two enrollments .,spider,"SELECT STUDENTSalias0.PERSONAL_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;"
Which student are enrolled in at least two courses ? Give me the student ID and personal name .,spider,"SELECT STUDENTSalias0.PERSONAL_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;"
Find the student ID and middle name for all the students with at most two enrollments .,spider,"SELECT STUDENTSalias0.MIDDLE_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) <= var0 ;"
What are the student IDs and middle names of the students enrolled in at most two courses ?,spider,"SELECT STUDENTSalias0.MIDDLE_NAME , STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID HAVING COUNT( * ) <= var0 ;"
Find the personal names of students not enrolled in any course .,spider,SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 EXCEPT SELECT STUDENTSalias1.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;
Which students not enrolled in any course ? Find their personal names .,spider,SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 EXCEPT SELECT STUDENTSalias1.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ON STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;
How many students did not have any course enrollment ?,spider,SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ) ;
Count the number of students who did not enroll in any course .,spider,SELECT COUNT( * ) FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.STUDENT_ID NOT IN ( SELECT STUDENT_COURSE_ENROLMENTalias0.STUDENT_ID FROM STUDENT_COURSE_ENROLMENT AS STUDENT_COURSE_ENROLMENTalias0 ) ;
Find the common login name of course authors and students .,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 ;
What are the login names used both by some course authors and some students ?,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.LOGIN_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.LOGIN_NAME FROM STUDENTS AS STUDENTSalias0 ;
Find the common personal name of course authors and students .,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 ;
What are the personal names used both by some course authors and some students ?,spider,SELECT COURSE_AUTHORS_AND_TUTORSalias0.PERSONAL_NAME FROM COURSE_AUTHORS_AND_TUTORS AS COURSE_AUTHORS_AND_TUTORSalias0 INTERSECT SELECT STUDENTSalias0.PERSONAL_NAME FROM STUDENTS AS STUDENTSalias0 ;
Which claims caused more than var0 settlements or have the maximum claim value ? List the date the claim was made and the claim id .,spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID HAVING COUNT( * ) > var0 UNION SELECT CLAIMSalias1.CLAIM_ID , CLAIMSalias1.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias1 JOIN SETTLEMENTS AS SETTLEMENTSalias1 ON SETTLEMENTSalias1.CLAIM_ID = CLAIMSalias1.CLAIM_ID WHERE CLAIMSalias1.AMOUNT_CLAIMED = ( SELECT MAX( CLAIMSalias2.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias2 ) ;"
"Find the claims that led to more than two settlements or have the maximum claim value . For each of them , return the date the claim was made and the id of the claim .",spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID HAVING COUNT( * ) > var0 UNION SELECT CLAIMSalias1.CLAIM_ID , CLAIMSalias1.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias1 JOIN SETTLEMENTS AS SETTLEMENTSalias1 ON SETTLEMENTSalias1.CLAIM_ID = CLAIMSalias1.CLAIM_ID WHERE CLAIMSalias1.AMOUNT_CLAIMED = ( SELECT MAX( CLAIMSalias2.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias2 ) ;"
Which customer had at least var0 policies but did not file any claims ? List the customer details and id .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS , CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias1 ON CUSTOMER_POLICIESalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN CLAIMS AS CLAIMSalias0 ON CUSTOMER_POLICIESalias1.POLICY_ID = CLAIMSalias0.POLICY_ID ;"
Give me the the customer details and id for the customers who had two or more policies but did not file any claims .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS , CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias1 ON CUSTOMER_POLICIESalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN CLAIMS AS CLAIMSalias0 ON CUSTOMER_POLICIESalias1.POLICY_ID = CLAIMSalias0.POLICY_ID ;"
"List the method , date and amount of all the payments , in ascending order of date .",spider,"SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 ORDER BY PAYMENTSalias0.DATE_PAYMENT_MADE ASC ;"
"What are the method , date and amount of each payment ? Sort the list in ascending order of date .",spider,"SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 ORDER BY PAYMENTSalias0.DATE_PAYMENT_MADE ASC ;"
"Among all the claims , what is the settlement amount of the claim with the largest claim amount ? List both the settlement amount and claim amount .",spider,"SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_CLAIMED DESC LIMIT 1 ;"
Find the settlement amount of the claim with the largest claim amount . Show both the settlement amount and claim amount .,spider,"SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_CLAIMED DESC LIMIT 1 ;"
"Among all the claims , what is the amount claimed in the claim with the least amount settled ? List both the settlement amount and claim amount .",spider,"SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_SETTLED ASC LIMIT 1 ;"
Find the claimed amount in the claim with the least amount settled . Show both the settlement amount and claim amount .,spider,"SELECT CLAIMSalias0.AMOUNT_CLAIMED , CLAIMSalias0.AMOUNT_SETTLED FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.AMOUNT_SETTLED ASC LIMIT 1 ;"
"Among all the claims , which claims have a claimed amount larger than the average ? List the date the claim was made and the date it was settled .",spider,"SELECT CLAIMSalias0.DATE_CLAIM_MADE , CLAIMSalias0.DATE_CLAIM_SETTLED FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_CLAIMED > ( SELECT AVG( CLAIMSalias1.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias1 ) ;"
"Give me the claim date , settlement date for all the claims whose claimed amount is larger than the average .",spider,"SELECT CLAIMSalias0.DATE_CLAIM_MADE , CLAIMSalias0.DATE_CLAIM_SETTLED FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_CLAIMED > ( SELECT AVG( CLAIMSalias1.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias1 ) ;"
"Among all the claims , which settlements have a claimed amount that is no more than the average ? List the claim start date .",spider,SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_SETTLED <= ( SELECT AVG( CLAIMSalias1.AMOUNT_SETTLED ) FROM CLAIMS AS CLAIMSalias1 ) ;
Return the claim start date for the claims whose claimed amount is no more than the average,spider,SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 WHERE CLAIMSalias0.AMOUNT_SETTLED <= ( SELECT AVG( CLAIMSalias1.AMOUNT_SETTLED ) FROM CLAIMS AS CLAIMSalias1 ) ;
How many settlements does each claim correspond to ? List the claim id and the number of settlements .,spider,"SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ;"
Find the number of settlements each claim corresponds to . Show the number together with the claim id .,spider,"SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ;"
"Which claim incurred the most number of settlements ? List the claim id , the date the claim was made , and the number .",spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the claim id and claim date of the claim that incurred the most settlement count . Also tell me the count .,spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many settlements were made on the claim with the most recent claim settlement date ? List the number and the claim id .,spider,"SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY CLAIMSalias0.DATE_CLAIM_SETTLED DESC LIMIT 1 ;"
Find the claim id and the number of settlements made for the claim with the most recent settlement date .,spider,"SELECT CLAIMSalias0.CLAIM_ID , COUNT( * ) FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID ORDER BY CLAIMSalias0.DATE_CLAIM_SETTLED DESC LIMIT 1 ;"
"Of all the claims , what was the earliest date when any claim was made ?",spider,SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.DATE_CLAIM_MADE ASC LIMIT 1 ;
Tell me the the date when the first claim was made .,spider,SELECT CLAIMSalias0.DATE_CLAIM_MADE FROM CLAIMS AS CLAIMSalias0 ORDER BY CLAIMSalias0.DATE_CLAIM_MADE ASC LIMIT 1 ;
What is the total amount of settlement made for all the settlements ?,spider,SELECT SUM( SETTLEMENTSalias0.AMOUNT_SETTLED ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
Compute the total amount of settlement across all the settlements .,spider,SELECT SUM( SETTLEMENTSalias0.AMOUNT_SETTLED ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
Who are the customers that had more than var0 policy ? List the customer details and id .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;"
Find the the customer details and id for the customers who had more than one policy .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;"
What are the claim dates and settlement dates of all the settlements ?,spider,"SELECT SETTLEMENTSalias0.DATE_CLAIM_MADE , SETTLEMENTSalias0.DATE_CLAIM_SETTLED FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
Tell me the the claim date and settlement date for each settlement case .,spider,"SELECT SETTLEMENTSalias0.DATE_CLAIM_MADE , SETTLEMENTSalias0.DATE_CLAIM_SETTLED FROM SETTLEMENTS AS SETTLEMENTSalias0 ;"
What is the most popular payment method ?,spider,SELECT PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( PAYMENTSalias0.* ) DESC LIMIT 1 ;
Which payment method is used the most often ?,spider,SELECT PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( PAYMENTSalias0.* ) DESC LIMIT 1 ;
With which kind of payment method were the least number of payments processed ?,spider,SELECT PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( PAYMENTSalias0.* ) ASC LIMIT 1 ;
What is the payment method that were used the least often ?,spider,SELECT PAYMENTSalias0.PAYMENT_METHOD_CODE FROM PAYMENTS AS PAYMENTSalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( PAYMENTSalias0.* ) ASC LIMIT 1 ;
What is the total amount of payment ?,spider,SELECT SUM( PAYMENTSalias0.AMOUNT_PAYMENT ) FROM PAYMENTS AS PAYMENTSalias0 ;
Compute the total amount of payment processed .,spider,SELECT SUM( PAYMENTSalias0.AMOUNT_PAYMENT ) FROM PAYMENTS AS PAYMENTSalias0 ;
What are all the distinct details of the customers ?,spider,SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ;
Return the distinct customer details .,spider,SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 ;
Which kind of policy type was chosen by the most customers ?,spider,SELECT CUSTOMER_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the policy type the most customers choose .,spider,SELECT CUSTOMER_POLICIESalias0.POLICY_TYPE_CODE FROM CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 GROUP BY POLICY_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many settlements are there in total ?,spider,SELECT COUNT( * ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
Count the total number of settlements made .,spider,SELECT COUNT( * ) FROM SETTLEMENTS AS SETTLEMENTSalias0 ;
"Which Payments were processed with var0 ? List the payment Id , the date and the amount .",spider,"SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_ID FROM PAYMENTS AS PAYMENTSalias0 WHERE PAYMENTSalias0.PAYMENT_METHOD_CODE = ""var0"" ;"
"Give me the payment Id , the date and the amount for all the payments processed with var0 .",spider,"SELECT PAYMENTSalias0.AMOUNT_PAYMENT , PAYMENTSalias0.DATE_PAYMENT_MADE , PAYMENTSalias0.PAYMENT_ID FROM PAYMENTS AS PAYMENTSalias0 WHERE PAYMENTSalias0.PAYMENT_METHOD_CODE = ""var0"" ;"
List the details of the customers who do not have any policies .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
Which customers do not have any policies ? Find the details of these customers .,spider,SELECT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_POLICIES AS CUSTOMER_POLICIESalias0 ON CUSTOMER_POLICIESalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
"List the date the claim was made , the date it was settled and the amount settled for all the claims which had exactly one settlement .",spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE , CLAIMSalias0.DATE_CLAIM_SETTLED FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID HAVING COUNT( * ) = var0 ;"
"Which claims had exactly one settlement ? For each , tell me the the date the claim was made , the date it was settled and the amount settled .",spider,"SELECT CLAIMSalias0.CLAIM_ID , CLAIMSalias0.DATE_CLAIM_MADE , CLAIMSalias0.DATE_CLAIM_SETTLED FROM CLAIMS AS CLAIMSalias0 JOIN SETTLEMENTS AS SETTLEMENTSalias0 ON SETTLEMENTSalias0.CLAIM_ID = CLAIMSalias0.CLAIM_ID GROUP BY CLAIMSalias0.CLAIM_ID HAVING COUNT( * ) = var0 ;"
Find the total claimed amount of all the claims .,spider,SELECT SUM( CLAIMSalias0.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias0 ;
What is total amount claimed summed across all the claims ?,spider,SELECT SUM( CLAIMSalias0.AMOUNT_CLAIMED ) FROM CLAIMS AS CLAIMSalias0 ;
Which department has the largest number of employees ?,spider,SELECT DEPARTMENTalias0.NAME FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) DESC LIMIT 1 ;
Find the department with the most employees .,spider,SELECT DEPARTMENTalias0.NAME FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) DESC LIMIT 1 ;
What is the employee id of the head whose department has the least number of employees ?,spider,SELECT DEPARTMENTalias0.HEAD FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) LIMIT 1 ;
Tell me the employee id of the head of the department with the least employees .,spider,SELECT DEPARTMENTalias0.HEAD FROM DEPARTMENT AS DEPARTMENTalias0 GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) LIMIT 1 ;
what is the name and position of the head whose department has least number of employees ?,spider,"SELECT PHYSICIANalias0.NAME , PHYSICIANalias0.POSITION FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias0 ON PHYSICIANalias0.EMPLOYEEID = DEPARTMENTalias0.HEAD GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) LIMIT 1 ;"
Find the name and position of the head of the department with the least employees .,spider,"SELECT PHYSICIANalias0.NAME , PHYSICIANalias0.POSITION FROM DEPARTMENT AS DEPARTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias0 ON PHYSICIANalias0.EMPLOYEEID = DEPARTMENTalias0.HEAD GROUP BY DEPARTMENTID ORDER BY COUNT( DEPARTMENTalias0.DEPARTMENTID ) LIMIT 1 ;"
What are names of patients who made an appointment ?,spider,SELECT PATIENTalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PATIENT AS PATIENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ;
List the names of patients who have made appointments .,spider,SELECT PATIENTalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PATIENT AS PATIENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ;
what are name and phone number of patients who had more than one appointment ?,spider,"SELECT PATIENTalias0.NAME , PATIENTalias0.PHONE FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PATIENT AS PATIENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT GROUP BY APPOINTMENTalias0.PATIENT HAVING COUNT( * ) > var0 ;"
Which patients made more than one appointment ? Tell me the name and phone number of these patients .,spider,"SELECT PATIENTalias0.NAME , PATIENTalias0.PHONE FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PATIENT AS PATIENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT GROUP BY APPOINTMENTalias0.PATIENT HAVING COUNT( * ) > var0 ;"
Find the id of the appointment with the most recent start date ?,spider,SELECT APPOINTMENTID FROM APPOINTMENT AS APPOINTMENTalias0 ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
What is the id of the appointment that started most recently ?,spider,SELECT APPOINTMENTID FROM APPOINTMENT AS APPOINTMENTalias0 ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
List the name of physicians who took some appointment .,spider,SELECT PHYSICIANalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias0 ON PHYSICIANalias0.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
What are the names of all the physicians who took appointments .,spider,SELECT PHYSICIANalias0.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias0 ON PHYSICIANalias0.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
List the name of physicians who never took any appointment .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 EXCEPT SELECT PHYSICIANalias1.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias1 ON PHYSICIANalias1.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
Which physicians have never taken any appointment ? Find their names .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 EXCEPT SELECT PHYSICIANalias1.NAME FROM APPOINTMENT AS APPOINTMENTalias0 JOIN PHYSICIAN AS PHYSICIANalias1 ON PHYSICIANalias1.EMPLOYEEID = APPOINTMENTalias0.PHYSICIAN ;
Find the names of all physicians and their primary affiliated departments ' names .,spider,"SELECT DEPARTMENTalias0.NAME , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE AFFILIATED_WITHalias0.PRIMARYAFFILIATION = var0 ;"
What are the name and primarily affiliated department name of each physician ?,spider,"SELECT DEPARTMENTalias0.NAME , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE AFFILIATED_WITHalias0.PRIMARYAFFILIATION = var0 ;"
What is the name of the patient who made the most recent appointment ?,spider,SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 JOIN APPOINTMENT AS APPOINTMENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
Find the name of the patient who made the appointment with the most recent start date .,spider,SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 JOIN APPOINTMENT AS APPOINTMENTalias0 ON PATIENTalias0.SSN = APPOINTMENTalias0.PATIENT ORDER BY APPOINTMENTalias0.START DESC LIMIT 1 ;
How many patients stay in room var0 ?,spider,SELECT COUNT( STAYalias0.PATIENT ) FROM STAY AS STAYalias0 WHERE STAYalias0.ROOM = var0 ;
Count the number of patients who stayed in room var0 .,spider,SELECT COUNT( STAYalias0.PATIENT ) FROM STAY AS STAYalias0 WHERE STAYalias0.ROOM = var0 ;
How many patients ' prescriptions are made by physician var0 ?,spider,"SELECT COUNT( PATIENTalias0.SSN ) FROM PATIENT AS PATIENTalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN PHYSICIAN AS PHYSICIANalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID WHERE PHYSICIANalias0.NAME = ""var0"" ;"
Find the number of patients ' prescriptions physician var0 made .,spider,"SELECT COUNT( PATIENTalias0.SSN ) FROM PATIENT AS PATIENTalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN PHYSICIAN AS PHYSICIANalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID WHERE PHYSICIANalias0.NAME = ""var0"" ;"
Find the name of medication used on the patient who stays in room var0 ?,spider,SELECT MEDICATIONalias0.NAME FROM STAY AS STAYalias0 JOIN PATIENT AS PATIENTalias0 ON STAYalias0.PATIENT = PATIENTalias0.SSN JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE STAYalias0.ROOM = var0 ;
What is the name of the medication used for the patient staying in room var0 ?,spider,SELECT MEDICATIONalias0.NAME FROM STAY AS STAYalias0 JOIN PATIENT AS PATIENTalias0 ON STAYalias0.PATIENT = PATIENTalias0.SSN JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias0.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE STAYalias0.ROOM = var0 ;
Find the patient who most recently stayed in room var0 .,spider,SELECT STAYalias0.PATIENT FROM STAY AS STAYalias0 WHERE ROOM = var0 ORDER BY STAYSTART DESC LIMIT 1 ;
What is the id of the patient who stayed in room var0 most recently ?,spider,SELECT STAYalias0.PATIENT FROM STAY AS STAYalias0 WHERE ROOM = var0 ORDER BY STAYSTART DESC LIMIT 1 ;
What is the name of the nurse has the most appointments ?,spider,SELECT NURSEalias0.NAME FROM NURSE AS NURSEalias0 JOIN APPOINTMENT AS APPOINTMENTalias0 ON NURSEalias0.EMPLOYEEID = APPOINTMENTalias0.PREPNURSE GROUP BY NURSEalias0.EMPLOYEEID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the nurse who has the largest number of appointments .,spider,SELECT NURSEalias0.NAME FROM NURSE AS NURSEalias0 JOIN APPOINTMENT AS APPOINTMENTalias0 ON NURSEalias0.EMPLOYEEID = APPOINTMENTalias0.PREPNURSE GROUP BY NURSEalias0.EMPLOYEEID ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many patients do each physician take care of ? List their names and number of patients they take care of .,spider,"SELECT COUNT( * ) , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PATIENT AS PATIENTalias0 ON PHYSICIANalias0.EMPLOYEEID = PATIENTalias0.PCP GROUP BY PHYSICIANalias0.EMPLOYEEID ;"
Return the name of each physician and the number of patients he or she treats .,spider,"SELECT COUNT( * ) , PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PATIENT AS PATIENTalias0 ON PHYSICIANalias0.EMPLOYEEID = PATIENTalias0.PCP GROUP BY PHYSICIANalias0.EMPLOYEEID ;"
Find the name of physicians who are in charge of more than one patient .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PATIENT AS PATIENTalias0 ON PHYSICIANalias0.EMPLOYEEID = PATIENTalias0.PCP GROUP BY PHYSICIANalias0.EMPLOYEEID HAVING COUNT( * ) > var0 ;
Which physicians are in charge of more than one patient ? Give me their names .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PATIENT AS PATIENTalias0 ON PHYSICIANalias0.EMPLOYEEID = PATIENTalias0.PCP GROUP BY PHYSICIANalias0.EMPLOYEEID HAVING COUNT( * ) > var0 ;
Find the number of rooms located on each block floor .,spider,"SELECT BLOCKalias0.BLOCKFLOOR , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKFLOOR ;"
How many rooms does each block floor have ?,spider,"SELECT BLOCKalias0.BLOCKFLOOR , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKFLOOR ;"
Find the number of rooms for different block code ?,spider,"SELECT BLOCKalias0.BLOCKCODE , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKCODE ;"
How many rooms are located for each block code ?,spider,"SELECT BLOCKalias0.BLOCKCODE , COUNT( * ) FROM BLOCK AS BLOCKalias0 JOIN ROOM AS ROOMalias0 ON ROOMalias0.BLOCKFLOOR = BLOCKalias0.BLOCKFLOOR AND ROOMalias0.BLOCKCODE = BLOCKalias0.BLOCKCODE GROUP BY BLOCKalias0.BLOCKCODE ;"
What are the unique block codes that have available rooms ?,spider,SELECT DISTINCT BLOCKCODE FROM ROOM AS ROOMalias0 WHERE ROOMalias0.UNAVAILABLE = var0 ;
Tell me the distinct block codes where some rooms are available .,spider,SELECT DISTINCT BLOCKCODE FROM ROOM AS ROOMalias0 WHERE ROOMalias0.UNAVAILABLE = var0 ;
How many different types of rooms are there ?,spider,SELECT COUNT( DISTINCT ROOMTYPE ) FROM ROOM AS ROOMalias0 ;
Find the number of distinct room types available .,spider,SELECT COUNT( DISTINCT ROOMTYPE ) FROM ROOM AS ROOMalias0 ;
What is the names of the physicians who prescribe medication var0 ?,spider,"SELECT DISTINCT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ;"
List the names of all the physicians who prescribe var0 as medication .,spider,"SELECT DISTINCT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ;"
Find the name and position of physicians who prescribe some medication whose brand is var0 ?,spider,"SELECT DISTINCT PHYSICIANalias0.NAME , PHYSICIANalias0.POSITION FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.BRAND = ""var0"" ;"
Which physicians prescribe a medication of brand var0 ? Tell me the name and position of those physicians .,spider,"SELECT DISTINCT PHYSICIANalias0.NAME , PHYSICIANalias0.POSITION FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.BRAND = ""var0"" ;"
Find the number of medications prescribed for each brand .,spider,"SELECT COUNT( * ) , MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE GROUP BY MEDICATIONalias0.BRAND ;"
How many medications are prescribed for each brand ?,spider,"SELECT COUNT( * ) , MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE GROUP BY MEDICATIONalias0.BRAND ;"
Find the name of physicians whose position title contains the word ' var0 ' .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 WHERE PHYSICIANalias0.POSITION LIKE ""var0"" ;"
What are the names of the physicians who have ' var0 ' in their titles .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 WHERE PHYSICIANalias0.POSITION LIKE ""var0"" ;"
Find the patient who has the most recent undergoing treatment ?,spider,SELECT UNDERGOESalias0.PATIENT FROM UNDERGOES AS UNDERGOESalias0 ORDER BY DATEUNDERGOES LIMIT 1 ;
Which patient is undergoing the most recent treatment ?,spider,SELECT UNDERGOESalias0.PATIENT FROM UNDERGOES AS UNDERGOESalias0 ORDER BY DATEUNDERGOES LIMIT 1 ;
Find the names of all patients who have an undergoing treatment and are staying in room var0 .,spider,SELECT DISTINCT PATIENTalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN PATIENT AS PATIENTalias0 ON UNDERGOESalias0.PATIENT = PATIENTalias0.SSN JOIN STAY AS STAYalias0 ON UNDERGOESalias0.STAY = STAYalias0.STAYID WHERE STAYalias0.ROOM = var0 ;
What are the names of patients who are staying in room var0 and have an undergoing treatment ?,spider,SELECT DISTINCT PATIENTalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN PATIENT AS PATIENTalias0 ON UNDERGOESalias0.PATIENT = PATIENTalias0.SSN JOIN STAY AS STAYalias0 ON UNDERGOESalias0.STAY = STAYalias0.STAYID WHERE STAYalias0.ROOM = var0 ;
List the names of all distinct nurses ordered by alphabetical order ?,spider,SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 ORDER BY NURSEalias0.NAME ;
What is the alphabetically ordered list of all the distinct names of nurses ?,spider,SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 ORDER BY NURSEalias0.NAME ;
Find the names of nurses who are nursing an undergoing treatment .,spider,SELECT DISTINCT NURSEalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN NURSE AS NURSEalias0 ON UNDERGOESalias0.ASSISTINGNURSE = NURSEalias0.EMPLOYEEID ;
Which nurses are in charge of patients undergoing treatments ?,spider,SELECT DISTINCT NURSEalias0.NAME FROM UNDERGOES AS UNDERGOESalias0 JOIN NURSE AS NURSEalias0 ON UNDERGOESalias0.ASSISTINGNURSE = NURSEalias0.EMPLOYEEID ;
"List the names of all distinct medications , ordered in an alphabetical order .",spider,SELECT DISTINCT MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 ORDER BY MEDICATIONalias0.NAME ;
What is the alphabetically ordered list of all distinct medications ?,spider,SELECT DISTINCT MEDICATIONalias0.NAME FROM MEDICATION AS MEDICATIONalias0 ORDER BY MEDICATIONalias0.NAME ;
What are the names of the physician who prescribed the highest dose ?,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID ORDER BY PRESCRIBESalias0.DOSE DESC LIMIT 1 ;
Find the physician who prescribed the highest dose . What is his or her name ?,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID ORDER BY PRESCRIBESalias0.DOSE DESC LIMIT 1 ;
List the physicians ' employee ids together with their primary affiliation departments ' ids .,spider,"SELECT AFFILIATED_WITHalias0.DEPARTMENT , AFFILIATED_WITHalias0.PHYSICIAN FROM AFFILIATED_WITH AS AFFILIATED_WITHalias0 WHERE PRIMARYAFFILIATION = var0 ;"
What are each physician's employee id and department id primarily affiliated .,spider,"SELECT AFFILIATED_WITHalias0.DEPARTMENT , AFFILIATED_WITHalias0.PHYSICIAN FROM AFFILIATED_WITH AS AFFILIATED_WITHalias0 WHERE PRIMARYAFFILIATION = var0 ;"
List the names of departments where some physicians are primarily affiliated with .,spider,SELECT DISTINCT DEPARTMENTalias0.NAME FROM AFFILIATED_WITH AS AFFILIATED_WITHalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE PRIMARYAFFILIATION = var0 ;
What are the names of departments that have primarily affiliated physicians .,spider,SELECT DISTINCT DEPARTMENTalias0.NAME FROM AFFILIATED_WITH AS AFFILIATED_WITHalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE PRIMARYAFFILIATION = var0 ;
What nurses are on call with block floor var0 and block code var0 ? Tell me their names .,spider,SELECT ON_CALLalias0.NURSE FROM ON_CALL AS ON_CALLalias0 WHERE BLOCKCODE = var1 AND BLOCKFLOOR = var0 ;
Find the ids of the nurses who are on call in block floor var0 and block code var0 .,spider,SELECT ON_CALLalias0.NURSE FROM ON_CALL AS ON_CALLalias0 WHERE BLOCKCODE = var1 AND BLOCKFLOOR = var0 ;
"What are the highest cost , lowest cost and average cost of procedures ?",spider,"SELECT AVG( PROCEDURESalias0.COST ) , MAX( PROCEDURESalias0.COST ) , MIN( PROCEDURESalias0.COST ) FROM PROCEDURES AS PROCEDURESalias0 ;"
"Tell me the highest , lowest , and average cost of procedures .",spider,"SELECT AVG( PROCEDURESalias0.COST ) , MAX( PROCEDURESalias0.COST ) , MIN( PROCEDURESalias0.COST ) FROM PROCEDURES AS PROCEDURESalias0 ;"
List the name and cost of all procedures sorted by the cost from the highest to the lowest .,spider,"SELECT PROCEDURESalias0.COST , PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST DESC ;"
Sort the list of names and costs of all procedures in the descending order of cost .,spider,"SELECT PROCEDURESalias0.COST , PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST DESC ;"
Find the three most expensive procedures .,spider,SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST LIMIT var0 ;
What are the three most costly procedures ?,spider,SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 ORDER BY PROCEDURESalias0.COST LIMIT var0 ;
Find the physicians who are trained in a procedure that costs more than var0 .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PROCEDURESalias0.COST > var0 ;
Which physicians are trained in procedures that are more expensive than var0 ?,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PROCEDURESalias0.COST > var0 ;
Find the physician who was trained in the most expensive procedure ?,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE ORDER BY PROCEDURESalias0.COST DESC LIMIT 1 ;
Which physician was trained in the procedure that costs the most .,spider,SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE ORDER BY PROCEDURESalias0.COST DESC LIMIT 1 ;
What is the average cost of procedures that physician var0 was trained in ?,spider,"SELECT AVG( PROCEDURESalias0.COST ) FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = ""var0"" ;"
Compute the mean price of procedures physician var0 was trained in .,spider,"SELECT AVG( PROCEDURESalias0.COST ) FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = ""var0"" ;"
Find the names of procedures which physician var0 was trained in .,spider,"SELECT PROCEDURESalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = ""var0"" ;"
What are the names of procedures physician var0 was trained in ?,spider,"SELECT PROCEDURESalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias0 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias0.CODE WHERE PHYSICIANalias0.NAME = ""var0"" ;"
Find all procedures which cost more than var0 or which physician var1 was trained in .,spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 UNION SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
What are the procedures that cost more than var0 or are specialized in by physician var1 ?,spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 UNION SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
Find the names of all procedures which cost more than var0 but which physician var1 was not trained in ?,spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 EXCEPT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
"Among the procedures that cost more than var0 , which were not specialized in by physician var1 ?",spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST > var0 EXCEPT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
Find the names of all procedures such that the cost is less than var0 and physician var1 was trained in .,spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST < var0 INTERSECT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
What procedures cost less than var0 and have var1 as a trained physician ?,spider,"SELECT PROCEDURESalias0.NAME FROM PROCEDURES AS PROCEDURESalias0 WHERE PROCEDURESalias0.COST < var0 INTERSECT SELECT PROCEDURESalias1.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN TRAINED_IN AS TRAINED_INalias0 ON TRAINED_INalias0.PHYSICIAN = PHYSICIANalias0.EMPLOYEEID JOIN PROCEDURES AS PROCEDURESalias1 ON TRAINED_INalias0.TREATMENT = PROCEDURESalias1.CODE WHERE PHYSICIANalias0.NAME = ""var1"" ;"
Find the name of physicians who are affiliated with both var0 and var1 departments .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = ""var0"" INTERSECT SELECT PHYSICIANalias1.NAME FROM PHYSICIAN AS PHYSICIANalias1 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias1 ON PHYSICIANalias1.EMPLOYEEID = AFFILIATED_WITHalias1.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias1 ON DEPARTMENTalias1.DEPARTMENTID = AFFILIATED_WITHalias1.DEPARTMENT WHERE DEPARTMENTalias1.NAME = ""var1"" ;"
Which physicians are affiliated with both var0 and var1 departments ? Tell me their names .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = ""var0"" INTERSECT SELECT PHYSICIANalias1.NAME FROM PHYSICIAN AS PHYSICIANalias1 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias1 ON PHYSICIANalias1.EMPLOYEEID = AFFILIATED_WITHalias1.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias1 ON DEPARTMENTalias1.DEPARTMENTID = AFFILIATED_WITHalias1.DEPARTMENT WHERE DEPARTMENTalias1.NAME = ""var1"" ;"
Find the name of physicians who are affiliated with var0 or var1 department .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = ""var0"" OR DEPARTMENTalias0.NAME = ""var1"" ;"
Which physicians are affiliated with either var0 or var1 department ? Give me their names .,spider,"SELECT PHYSICIANalias0.NAME FROM PHYSICIAN AS PHYSICIANalias0 JOIN AFFILIATED_WITH AS AFFILIATED_WITHalias0 ON PHYSICIANalias0.EMPLOYEEID = AFFILIATED_WITHalias0.PHYSICIAN JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DEPARTMENTID = AFFILIATED_WITHalias0.DEPARTMENT WHERE DEPARTMENTalias0.NAME = ""var0"" OR DEPARTMENTalias0.NAME = ""var1"" ;"
Find the names of patients who are not using the medication of var0 .,spider,"SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 EXCEPT SELECT PATIENTalias1.NAME FROM PATIENT AS PATIENTalias1 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias1.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ;"
What are the names of patients who are not taking the medication of var0 .,spider,"SELECT PATIENTalias0.NAME FROM PATIENT AS PATIENTalias0 EXCEPT SELECT PATIENTalias1.NAME FROM PATIENT AS PATIENTalias1 JOIN PRESCRIBES AS PRESCRIBESalias0 ON PRESCRIBESalias0.PATIENT = PATIENTalias1.SSN JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ;"
Find the number of patients who are not using the medication of var0 .,spider,"SELECT COUNT( * ) FROM PATIENT AS PATIENTalias0 WHERE PATIENTalias0.SSN NOT IN ( SELECT PRESCRIBESalias0.PATIENT FROM PRESCRIBES AS PRESCRIBESalias0 JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ) ;"
How many patients are not using var0 as medication ?,spider,"SELECT COUNT( * ) FROM PATIENT AS PATIENTalias0 WHERE PATIENTalias0.SSN NOT IN ( SELECT PRESCRIBESalias0.PATIENT FROM PRESCRIBES AS PRESCRIBESalias0 JOIN MEDICATION AS MEDICATIONalias0 ON PRESCRIBESalias0.MEDICATION = MEDICATIONalias0.CODE WHERE MEDICATIONalias0.NAME = ""var0"" ) ;"
How many appointments are there ?,spider,SELECT COUNT( * ) FROM APPOINTMENT AS APPOINTMENTalias0 ;
Count how many appointments have been made in total .,spider,SELECT COUNT( * ) FROM APPOINTMENT AS APPOINTMENTalias0 ;
Find the names of nurses who are on call .,spider,SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 JOIN ON_CALL AS ON_CALLalias0 ON ON_CALLalias0.NURSE = NURSEalias0.EMPLOYEEID ;
What are the distinct names of nurses on call ?,spider,SELECT DISTINCT NURSEalias0.NAME FROM NURSE AS NURSEalias0 JOIN ON_CALL AS ON_CALLalias0 ON ON_CALLalias0.NURSE = NURSEalias0.EMPLOYEEID ;
How many ships are there ?,spider,SELECT COUNT( SHIPalias0.* ) FROM SHIP AS SHIPalias0 ;
What is the number of ships ?,spider,SELECT COUNT( SHIPalias0.* ) FROM SHIP AS SHIPalias0 ;
how many ships are there ?,spider,SELECT COUNT( SHIPalias0.* ) FROM SHIP AS SHIPalias0 ;
Count the number of ships .,spider,SELECT COUNT( SHIPalias0.* ) FROM SHIP AS SHIPalias0 ;
List the name of ships in ascending order of tonnage .,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.TONNAGE ASC ;
what are the names of the ships ordered by ascending tonnage ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.TONNAGE ASC ;
What are the type and nationality of ships ?,spider,"SELECT SHIPalias0.NATIONALITY , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 ;"
What are the types and nationalities of every ship ?,spider,"SELECT SHIPalias0.NATIONALITY , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 ;"
"List the name of ships whose nationality is not "" var0 "" .",spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY != ""var0"" ;"
What are the names of the ships that are not from the var0 ?,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY != ""var0"" ;"
Show the name of ships whose nationality is either var0 or var1 .,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY = ""var0"" OR SHIPalias0.NATIONALITY = ""var1"" ;"
What are the names of the ships that are from either the US or the UK ?,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.NATIONALITY = ""var0"" OR SHIPalias0.NATIONALITY = ""var1"" ;"
What is the name of the ship with the largest tonnage ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.TONNAGE DESC LIMIT 1 ;
What is the ship with the largest amount of tonnage called ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.TONNAGE DESC LIMIT 1 ;
Show different types of ships and the number of ships of each type .,spider,"SELECT COUNT( SHIPalias0.* ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;"
"For each type , how many ships are there ?",spider,"SELECT COUNT( SHIPalias0.* ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;"
Please show the most common type of ships .,spider,SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY TYPE ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
What is the most common type of ships ?,spider,SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY TYPE ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
List the nations that have more than two ships .,spider,SELECT SHIPalias0.NATIONALITY FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.NATIONALITY HAVING COUNT( SHIPalias0.* ) > var0 ;
What are the nations that have more than two ships ?,spider,SELECT SHIPalias0.NATIONALITY FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.NATIONALITY HAVING COUNT( SHIPalias0.* ) > var0 ;
Show different types of ships and the average tonnage of ships of each type .,spider,"SELECT AVG( SHIPalias0.TONNAGE ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;"
"For each type , what is the average tonnage ?",spider,"SELECT AVG( SHIPalias0.TONNAGE ) , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.TYPE ;"
"Show codes and fates of missions , and names of ships involved .",spider,"SELECT MISSIONalias0.CODE , MISSIONalias0.FATE , SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID ;"
"What are the mission codes , fates , and names of the ships involved ?",spider,"SELECT MISSIONalias0.CODE , MISSIONalias0.FATE , SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID ;"
Show names of ships involved in a mission launched after var0 .,spider,SELECT SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE MISSIONalias0.LAUNCHED_YEAR > var0 ;
What are the names of ships that were involved in a mission launched after var0 ?,spider,SELECT SHIPalias0.NAME FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE MISSIONalias0.LAUNCHED_YEAR > var0 ;
"Show the distinct fate of missions that involve ships with nationality "" var0 """,spider,"SELECT DISTINCT MISSIONalias0.FATE FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE SHIPalias0.NATIONALITY = ""var0"" ;"
What are the different fates of the mission that involved ships from the var0 ?,spider,"SELECT DISTINCT MISSIONalias0.FATE FROM MISSION AS MISSIONalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.SHIP_ID = MISSIONalias0.SHIP_ID WHERE SHIPalias0.NATIONALITY = ""var0"" ;"
List the name of ships that are not involved in any mission,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT MISSIONalias0.SHIP_ID FROM MISSION AS MISSIONalias0 ) ;
What are the names of the ships that are not involved in any missions ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT MISSIONalias0.SHIP_ID FROM MISSION AS MISSIONalias0 ) ;
Show the types of ships that have both ships with tonnage larger than var0 and ships with tonnage smaller than var1 .,spider,SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.TONNAGE > var0 INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.TONNAGE < var1 ;
What are the types of the ships that have both shiips with tonnage more than var0 and those with tonnage less than var1 ?,spider,SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.TONNAGE > var0 INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.TONNAGE < var1 ;
Find the number of students in total .,spider,SELECT COUNT( * ) FROM LIST AS LISTalias0 ;
How many students are there ?,spider,SELECT COUNT( * ) FROM LIST AS LISTalias0 ;
Find the last names of students studying in room var0 .,spider,SELECT LASTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
What are the last names of students in room var0 ?,spider,SELECT LASTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
Find the first names of students studying in room var0 .,spider,SELECT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
What are the first names of students in room var0 ?,spider,SELECT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
What are the first names of students studying in room var0 ?,spider,SELECT DISTINCT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
List the first names of all the students in room var0 .,spider,SELECT DISTINCT FIRSTNAME FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
For each var0 report the grade that is taught in it . Report just the var0 number and the grade number .,spider,"SELECT DISTINCT LISTalias0.GRADE , var0 FROM LIST AS LISTalias0 ;"
What are the grade number and var0 number of each class in the list ?,spider,"SELECT DISTINCT LISTalias0.GRADE , var0 FROM LIST AS LISTalias0 ;"
Which grade is studying in var0 var1 ?,spider,SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE var0 = var1 ;
Find the grade taught in var0 var1 .,spider,SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE var0 = var1 ;
Find the grade studying in room var0 .,spider,SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
Which grade is studying in room var0 ?,spider,SELECT DISTINCT LISTalias0.GRADE FROM LIST AS LISTalias0 WHERE CLASSROOM = var0 ;
Which classrooms are used by grade var0 ?,spider,SELECT DISTINCT CLASSROOM FROM LIST AS LISTalias0 WHERE LISTalias0.GRADE = var0 ;
Find the classrooms in which grade var0 is studying .,spider,SELECT DISTINCT CLASSROOM FROM LIST AS LISTalias0 WHERE LISTalias0.GRADE = var0 ;
Which classrooms are used by grade var0 ?,spider,SELECT DISTINCT CLASSROOM FROM LIST AS LISTalias0 WHERE LISTalias0.GRADE = var0 ;
Show me the classrooms grade var0 is using .,spider,SELECT DISTINCT CLASSROOM FROM LIST AS LISTalias0 WHERE LISTalias0.GRADE = var0 ;
Find the last names of the teachers that teach fifth grade .,spider,SELECT DISTINCT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
what are the last names of the teachers who teach grade var0 ?,spider,SELECT DISTINCT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
Find the first names of the teachers that teach first grade .,spider,SELECT DISTINCT TEACHERSalias0.FIRSTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
What are the first names of the teachers who teach grade var0 ?,spider,SELECT DISTINCT TEACHERSalias0.FIRSTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 ;
Find the first names of all the teachers that teach in var0 var1 .,spider,SELECT FIRSTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
Which teachers teach in var0 var1 ? Give me their first names .,spider,SELECT FIRSTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
Find the last names of teachers teaching in var0 var1 .,spider,SELECT LASTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
Which teachers teach in var0 var1 ? Give me their last names .,spider,SELECT LASTNAME FROM TEACHERS AS TEACHERSalias0 WHERE var0 = var1 ;
Report the first name and last name of all the teachers .,spider,"SELECT DISTINCT FIRSTNAME , LASTNAME FROM TEACHERS AS TEACHERSalias0 ;"
What are the first name and last name of all the teachers ?,spider,"SELECT DISTINCT FIRSTNAME , LASTNAME FROM TEACHERS AS TEACHERSalias0 ;"
Report the first name and last name of all the students .,spider,"SELECT DISTINCT FIRSTNAME , LASTNAME FROM LIST AS LISTalias0 ;"
Show each student's first name and last name .,spider,"SELECT DISTINCT FIRSTNAME , LASTNAME FROM LIST AS LISTalias0 ;"
Find all students taught by var0 var1 . Output the first and last names of the students .,spider,"SELECT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Which students study under the teacher named var0 var1 ? Give me the first and last names of the students .,spider,"SELECT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Find all students taught by var0 var1 . Output first and last names of students .,spider,"SELECT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Which are the first and last names of the students taught by var0 var1 ?,spider,"SELECT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Find the first and last name of all the teachers that teach var0 var1 .,spider,"SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
Which teachers teach the student named var0 var1 ? Give me the first and last name of the teachers .,spider,"SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
Find the last names of all the teachers that teach var0 var1 .,spider,"SELECT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
What are the last names of the teachers who teach the student called var0 var1 ?,spider,"SELECT TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
How many students does var0 var1 teaches ?,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Count the number of students the teacher var0 var1 teaches .,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
How many students does var0 var1 teaches ?,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Find the number of students taught by the teacher var0 var1 .,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
Find the number of students taught by var0 var1 .,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
How many students are taught by teacher var0 var1 ?,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE TEACHERSalias0.FIRSTNAME = ""var0"" AND TEACHERSalias0.LASTNAME = ""var1"" ;"
How many teachers does the student named var0 var1 have ?,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
Find the number of teachers who teach the student called var0 var1 .,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
How many teachers does the student named var0 var1 have ?,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
Find the number of teachers who teach the student called var0 var1 .,spider,"SELECT COUNT( TEACHERSalias0.* ) FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.FIRSTNAME = ""var0"" AND LISTalias0.LASTNAME = ""var1"" ;"
Find all first-grade students who are NOT taught by var1 var2 . Report their first and last names .,spider,"SELECT DISTINCT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 EXCEPT SELECT LISTalias1.FIRSTNAME , LISTalias1.LASTNAME FROM LIST AS LISTalias1 JOIN TEACHERS AS TEACHERSalias1 ON TEACHERSalias1.CLASSROOM = LISTalias1.CLASSROOM WHERE TEACHERSalias1.FIRSTNAME = ""var1"" AND TEACHERSalias1.LASTNAME = ""var2"" ;"
What are the first and last names of the first-grade students who are NOT taught by teacher var1 var2 ?,spider,"SELECT DISTINCT LISTalias0.FIRSTNAME , LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 EXCEPT SELECT LISTalias1.FIRSTNAME , LISTalias1.LASTNAME FROM LIST AS LISTalias1 JOIN TEACHERS AS TEACHERSalias1 ON TEACHERSalias1.CLASSROOM = LISTalias1.CLASSROOM WHERE TEACHERSalias1.FIRSTNAME = ""var1"" AND TEACHERSalias1.LASTNAME = ""var2"" ;"
Find the last names of the students in third grade that are not taught by var1 var2 .,spider,"SELECT DISTINCT LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 AND TEACHERSalias0.FIRSTNAME != ""var1"" AND TEACHERSalias0.LASTNAME != ""var2"" ;"
Which students in third grade are not taught by teacher var1 var2 ? Give me the last names of the students .,spider,"SELECT DISTINCT LISTalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM WHERE LISTalias0.GRADE = var0 AND TEACHERSalias0.FIRSTNAME != ""var1"" AND TEACHERSalias0.LASTNAME != ""var2"" ;"
"For each grade , report the grade , the number of classrooms in which it is taught and the total number of students in the grade .",spider,"SELECT COUNT( * ) , COUNT( DISTINCT CLASSROOM ) , LISTalias0.GRADE FROM LIST AS LISTalias0 GROUP BY LISTalias0.GRADE ;"
"For each grade , return the grade number , the number of classrooms used for the grade , and the total number of students enrolled in the grade .",spider,"SELECT COUNT( * ) , COUNT( DISTINCT CLASSROOM ) , LISTalias0.GRADE FROM LIST AS LISTalias0 GROUP BY LISTalias0.GRADE ;"
"For each var0 , report the var0 number and the number of grades using it .",spider,"SELECT COUNT( DISTINCT LISTalias0.GRADE ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
"For each var0 , show the var0 number and count the number of distinct grades that use the room .",spider,"SELECT COUNT( DISTINCT LISTalias0.GRADE ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
Which var0 has the most students ?,spider,SELECT var0 FROM LIST AS LISTalias0 GROUP BY var1 ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the var0 that the most students use .,spider,SELECT var0 FROM LIST AS LISTalias0 GROUP BY var1 ORDER BY COUNT( * ) DESC LIMIT 1 ;
Report the number of students in each var0 .,spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
"For each var0 , show the var0 number and find how many students are using it .",spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
Find the number of students in one var0 .,spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
How many students does one var0 have ?,spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 GROUP BY var1 ;"
"For each grade var1 varvar1 , report the total number of students .",spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 WHERE GRADE = ""var1"" GROUP BY var2 ;"
"For each grade var1 varvar1 , return the varvar1 number and the count of students .",spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 WHERE GRADE = ""var1"" GROUP BY var2 ;"
Report the total number of students for each fourth-grade var0 .,spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 WHERE GRADE = ""var1"" GROUP BY var2 ;"
"For each fourth-grade var0 , show the var0 number and the total number of students using it .",spider,"SELECT COUNT( * ) , var0 FROM LIST AS LISTalias0 WHERE GRADE = ""var1"" GROUP BY var2 ;"
Find the name of the teacher who teaches the largest number of students .,spider,"SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM GROUP BY TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME ORDER BY COUNT( TEACHERSalias0.* ) DESC LIMIT 1 ;"
Which teacher teaches the most students ? Give me the first name and last name of the teacher .,spider,"SELECT TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME FROM LIST AS LISTalias0 JOIN TEACHERS AS TEACHERSalias0 ON TEACHERSalias0.CLASSROOM = LISTalias0.CLASSROOM GROUP BY TEACHERSalias0.FIRSTNAME , TEACHERSalias0.LASTNAME ORDER BY COUNT( TEACHERSalias0.* ) DESC LIMIT 1 ;"
How many companies are headquartered in the US ?,spider,"SELECT COUNT( * ) FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.HEADQUARTERS = ""var0"" ;"
List the names of companies by ascending number of sales .,spider,SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_IN_BILLION ASC ;
What are the headquarters and industries of all companies ?,spider,"SELECT COMPANYalias0.HEADQUARTERS , COMPANYalias0.INDUSTRY FROM COMPANY AS COMPANYalias0 ;"
Show the names of companies in the banking or retailing industry ?,spider,"SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.INDUSTRY = ""var0"" OR COMPANYalias0.INDUSTRY = ""var1"" ;"
What is the maximum and minimum market value of companies ?,spider,"SELECT MAX( COMPANYalias0.MARKET_VALUE_IN_BILLION ) , MIN( COMPANYalias0.MARKET_VALUE_IN_BILLION ) FROM COMPANY AS COMPANYalias0 ;"
What is the headquarter of the company with the largest sales ?,spider,SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 ORDER BY COMPANYalias0.SALES_IN_BILLION DESC LIMIT 1 ;
Show the most common headquarter for companies .,spider,SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 GROUP BY HEADQUARTERS ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the headquarters that have at least two companies .,spider,SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 GROUP BY COMPANYalias0.HEADQUARTERS HAVING COUNT( * ) >= var0 ;
Show the headquarters that have both companies in banking industry and companies in oil and gas industry .,spider,"SELECT COMPANYalias0.HEADQUARTERS FROM COMPANY AS COMPANYalias0 WHERE COMPANYalias0.INDUSTRY = ""var0"" INTERSECT SELECT COMPANYalias1.HEADQUARTERS FROM COMPANY AS COMPANYalias1 WHERE COMPANYalias1.INDUSTRY = ""var1"" ;"
Show the names of companies and of employees .,spider,"SELECT COMPANYalias0.NAME , PEOPLEalias0.NAME FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID ;"
Show names of companies and that of employees in descending order of number of years working for that employee .,spider,"SELECT COMPANYalias0.NAME , PEOPLEalias0.NAME FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID ORDER BY EMPLOYMENTalias0.YEAR_WORKING ;"
Show the names of employees that work for companies with sales bigger than var0 .,spider,SELECT PEOPLEalias0.NAME FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID WHERE COMPANYalias0.SALES_IN_BILLION > var0 ;
Show the names of companies and the number of employees they have,spider,"SELECT COMPANYalias0.NAME , COUNT( EMPLOYMENTalias0.* ) FROM EMPLOYMENT AS EMPLOYMENTalias0 JOIN PEOPLE AS PEOPLEalias0 ON PEOPLEalias0.PEOPLE_ID = EMPLOYMENTalias0.PEOPLE_ID JOIN COMPANY AS COMPANYalias0 ON EMPLOYMENTalias0.COMPANY_ID = COMPANYalias0.COMPANY_ID GROUP BY COMPANYalias0.NAME ;"
List the names of people that are not employed by any company,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT EMPLOYMENTalias0.PEOPLE_ID FROM EMPLOYMENT AS EMPLOYMENTalias0 ) ;
list the names of the companies with more than var0 sales in the descending order of sales and profits .,spider,"SELECT COMPANYalias0.NAME FROM COMPANY AS COMPANYalias0 WHERE SALES_IN_BILLION > var0 ORDER BY COMPANYalias0.SALES_IN_BILLION , COMPANYalias0.PROFITS_IN_BILLION DESC ;"
How many film are there ?,spider,SELECT COUNT( * ) FROM FILM AS FILMalias0 ;
Count the number of films .,spider,SELECT COUNT( * ) FROM FILM AS FILMalias0 ;
List the distinct director of all films .,spider,SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 ;
What are the different film Directors ?,spider,SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 ;
What is the average ticket sales gross in dollars of films ?,spider,SELECT AVG( FILMalias0.GROSS_IN_DOLLAR ) FROM FILM AS FILMalias0 ;
Return the average gross sales in dollars across all films .,spider,SELECT AVG( FILMalias0.GROSS_IN_DOLLAR ) FROM FILM AS FILMalias0 ;
What are the low and high estimates of film markets ?,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.HIGH_ESTIMATE , FILM_MARKET_ESTIMATIONalias0.LOW_ESTIMATE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ;"
Return the low and high estimates for all film markets .,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.HIGH_ESTIMATE , FILM_MARKET_ESTIMATIONalias0.LOW_ESTIMATE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ;"
What are the types of film market estimations in year var0 ?,spider,SELECT FILM_MARKET_ESTIMATIONalias0.TYPE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
Return the types of film market estimations in var0 .,spider,SELECT FILM_MARKET_ESTIMATIONalias0.TYPE FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
What are the maximum and minimum number of cities in all markets .,spider,"SELECT MAX( MARKETalias0.NUMBER_CITIES ) , MIN( MARKETalias0.NUMBER_CITIES ) FROM MARKET AS MARKETalias0 ;"
Return the maximum and minimum number of cities across all markets .,spider,"SELECT MAX( MARKETalias0.NUMBER_CITIES ) , MIN( MARKETalias0.NUMBER_CITIES ) FROM MARKET AS MARKETalias0 ;"
How many markets have number of cities smaller than var0 ?,spider,SELECT COUNT( * ) FROM MARKET AS MARKETalias0 WHERE MARKETalias0.NUMBER_CITIES < var0 ;
Count the number of markets that have a number of cities lower than var0 .,spider,SELECT COUNT( * ) FROM MARKET AS MARKETalias0 WHERE MARKETalias0.NUMBER_CITIES < var0 ;
List all countries of markets in ascending alphabetical order .,spider,SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.COUNTRY ASC ;
"What are the countries for each market , ordered alphabetically ?",spider,SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.COUNTRY ASC ;
List all countries of markets in descending order of number of cities .,spider,SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.NUMBER_CITIES DESC ;
What are the countries for each market ordered by decreasing number of cities ?,spider,SELECT MARKETalias0.COUNTRY FROM MARKET AS MARKETalias0 ORDER BY MARKETalias0.NUMBER_CITIES DESC ;
Please show the titles of films and the types of market estimations .,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.TYPE , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID ;"
What are the titles of films and corresponding types of market estimations ?,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.TYPE , FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID ;"
Show the distinct director of films with market estimation in the year of var0 .,spider,SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
Who are the different directors of films which had market estimation in var0 ?,spider,SELECT DISTINCT FILMalias0.DIRECTOR FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID WHERE FILM_MARKET_ESTIMATIONalias0.YEAR = var0 ;
What is the average number of cities of markets with low film market estimate bigger than var0 ?,spider,SELECT AVG( MARKETalias0.NUMBER_CITIES ) FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE FILM_MARKET_ESTIMATIONalias0.LOW_ESTIMATE > var0 ;
Give the average number of cities within markets that had a low market estimation larger than var0 ?,spider,SELECT AVG( MARKETalias0.NUMBER_CITIES ) FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE FILM_MARKET_ESTIMATIONalias0.LOW_ESTIMATE > var0 ;
Please list the countries and years of film market estimations .,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.YEAR , MARKETalias0.COUNTRY FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID ;"
What are the countries of markets and their corresponding years of market estimation ?,spider,"SELECT FILM_MARKET_ESTIMATIONalias0.YEAR , MARKETalias0.COUNTRY FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID ;"
"Please list the years of film market estimations when the market is in country "" var0 "" in descending order .",spider,"SELECT FILM_MARKET_ESTIMATIONalias0.YEAR FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = ""var0"" ORDER BY FILM_MARKET_ESTIMATIONalias0.YEAR DESC ;"
"What are the years of film market estimation for the market of var0 , ordered by year descending ?",spider,"SELECT FILM_MARKET_ESTIMATIONalias0.YEAR FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = ""var0"" ORDER BY FILM_MARKET_ESTIMATIONalias0.YEAR DESC ;"
List the studios of each film and the number of films produced by that studio .,spider,"SELECT COUNT( * ) , FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO ;"
How films are produced by each studio ?,spider,"SELECT COUNT( * ) , FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO ;"
List the name of film studio that have the most number of films .,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY STUDIO ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of teh studio that created the most films ?,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY STUDIO ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of studios that have at least two films .,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING COUNT( * ) >= var0 ;
What are the names of studios that have made two or more films ?,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING COUNT( * ) >= var0 ;
List the title of films that do not have any market estimation .,spider,SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ) ;
What are the titles of films that do not have a film market estimation ?,spider,SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ) ;
"Show the studios that have produced films with director "" var0 "" and "" var1 "" .",spider,"SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 WHERE FILMalias0.DIRECTOR = ""var0"" INTERSECT SELECT FILMalias1.STUDIO FROM FILM AS FILMalias1 WHERE FILMalias1.DIRECTOR = ""var1"" ;"
What are the names of studios that have produced films with both var0 and var1 ?,spider,"SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 WHERE FILMalias0.DIRECTOR = ""var0"" INTERSECT SELECT FILMalias1.STUDIO FROM FILM AS FILMalias1 WHERE FILMalias1.DIRECTOR = ""var1"" ;"
"Find the titles and studios of the films that are produced by some film studios that contained the word "" var0 "" .",spider,"SELECT FILMalias0.STUDIO , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.STUDIO LIKE ""var0"" ;"
"What are the titles and studios of films that have been produced by a studio whose name contains "" var0 "" ?",spider,"SELECT FILMalias0.STUDIO , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.STUDIO LIKE ""var0"" ;"
"Show the studios that have not produced films with director "" var0 "" .",spider,"SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 EXCEPT SELECT FILMalias1.STUDIO FROM FILM AS FILMalias1 WHERE FILMalias1.DIRECTOR = ""var0"" ;"
Which studios have never worked with the director var0 ?,spider,"SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 EXCEPT SELECT FILMalias1.STUDIO FROM FILM AS FILMalias1 WHERE FILMalias1.DIRECTOR = ""var0"" ;"
List the studios which average gross is above var0 .,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING AVG( FILMalias0.GROSS_IN_DOLLAR ) >= var0 ;
Which studios have an average gross of over var0 ?,spider,SELECT FILMalias0.STUDIO FROM FILM AS FILMalias0 GROUP BY FILMalias0.STUDIO HAVING AVG( FILMalias0.GROSS_IN_DOLLAR ) >= var0 ;
What is the title of the film that has the highest high market estimation .,spider,SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID ORDER BY FILM_MARKET_ESTIMATIONalias0.HIGH_ESTIMATE DESC LIMIT 1 ;
Return the title of the film with the highest high estimate ?,spider,SELECT FILMalias0.TITLE FROM FILM AS FILMalias0 JOIN FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 ON FILMalias0.FILM_ID = FILM_MARKET_ESTIMATIONalias0.FILM_ID ORDER BY FILM_MARKET_ESTIMATIONalias0.HIGH_ESTIMATE DESC LIMIT 1 ;
What are the titles and directors of the films were never presented in var0 ?,spider,"SELECT FILMalias0.DIRECTOR , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = ""var0"" ) ;"
Return the titles and directors of films that were never in the market of var0 .,spider,"SELECT FILMalias0.DIRECTOR , FILMalias0.TITLE FROM FILM AS FILMalias0 WHERE FILMalias0.FILM_ID NOT IN ( SELECT FILM_MARKET_ESTIMATIONalias0.FILM_ID FROM FILM_MARKET_ESTIMATION AS FILM_MARKET_ESTIMATIONalias0 JOIN MARKET AS MARKETalias0 ON MARKETalias0.MARKET_ID = FILM_MARKET_ESTIMATIONalias0.MARKET_ID WHERE MARKETalias0.COUNTRY = ""var0"" ) ;"
How many calendar items do we have ?,spider,SELECT COUNT( * ) FROM REF_CALENDAR ;
Count the number of all the calendar items .,spider,SELECT COUNT( * ) FROM REF_CALENDAR ;
Show all calendar dates and day Numbers .,spider,"SELECT CALENDAR_DATE , DAY_NUMBER FROM REF_CALENDAR ;"
What are all the calendar dates and day Numbers ?,spider,"SELECT CALENDAR_DATE , DAY_NUMBER FROM REF_CALENDAR ;"
Show the number of document types .,spider,SELECT COUNT( * ) FROM REF_DOCUMENT_TYPES ;
How many document types are there ?,spider,SELECT COUNT( * ) FROM REF_DOCUMENT_TYPES ;
List all document type codes and document type names .,spider,"SELECT DOCUMENT_TYPE_CODE , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES ;"
What are all the document type codes and document type names ?,spider,"SELECT DOCUMENT_TYPE_CODE , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES ;"
What is the name and description for document type code var0 ?,spider,"SELECT DOCUMENT_TYPE_DESCRIPTION , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = ""var0"" ;"
Give me the name and description of the document type code var0 .,spider,"SELECT DOCUMENT_TYPE_DESCRIPTION , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_CODE = ""var0"" ;"
"What is the document type code for document type "" var0 "" ?",spider,"SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = ""var0"" ;"
"Find the code of the document type "" var0 "" .",spider,"SELECT DOCUMENT_TYPE_CODE FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = ""var0"" ;"
Show the number of documents with document type code var0 or var1 .,spider,"SELECT COUNT( * ) FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" OR ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var1"" ;"
How many documents have document type code var0 or var1 ?,spider,"SELECT COUNT( * ) FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" OR ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var1"" ;"
"What is the date when the document "" var0 "" was stored ?",spider,"SELECT ALL_DOCUMENTSalias0.DATE_STORED FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"When was the document named "" var0 "" stored ? Give me the date .",spider,"SELECT ALL_DOCUMENTSalias0.DATE_STORED FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
What is the day Number and date of all the documents ?,spider,"SELECT ALL_DOCUMENTSalias0.DATE_STORED , DERIVED_TABLEalias0.DAY_NUMBER FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_CALENDAR AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.CALENDAR_DATE = ALL_DOCUMENTSalias0.DATE_STORED ;"
Return the day Number and stored date for all the documents .,spider,"SELECT ALL_DOCUMENTSalias0.DATE_STORED , DERIVED_TABLEalias0.DAY_NUMBER FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_CALENDAR AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.CALENDAR_DATE = ALL_DOCUMENTSalias0.DATE_STORED ;"
"What is the document type name for the document with name "" var0 "" ?",spider,"SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE = ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Find the document type name of the document named "" var0 "" .",spider,"SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE = ALL_DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Show the number of locations .,spider,SELECT COUNT( * ) FROM REF_LOCATIONS ;
How many locations are listed in the database ?,spider,SELECT COUNT( * ) FROM REF_LOCATIONS ;
List all location codes and location names .,spider,"SELECT LOCATION_CODE , LOCATION_NAME FROM REF_LOCATIONS ;"
What are all the location codes and location names ?,spider,"SELECT LOCATION_CODE , LOCATION_NAME FROM REF_LOCATIONS ;"
What are the name and description for location code var0 ?,spider,"SELECT LOCATION_DESCRIPTION , LOCATION_NAME FROM REF_LOCATIONS WHERE LOCATION_CODE = ""var0"" ;"
Give me the name and description of the location with code var0 .,spider,"SELECT LOCATION_DESCRIPTION , LOCATION_NAME FROM REF_LOCATIONS WHERE LOCATION_CODE = ""var0"" ;"
"What is the location code for the country "" var0 "" ?",spider,"SELECT LOCATION_CODE FROM REF_LOCATIONS WHERE LOCATION_NAME = ""var0"" ;"
"Show the location code of the country "" var0 "" .",spider,"SELECT LOCATION_CODE FROM REF_LOCATIONS WHERE LOCATION_NAME = ""var0"" ;"
How many roles are there ?,spider,SELECT COUNT( * ) FROM ROLES AS ROLESalias0 ;
Count the total number of roles listed .,spider,SELECT COUNT( * ) FROM ROLES AS ROLESalias0 ;
"List all role codes , role names , and role descriptions .",spider,"SELECT ROLESalias0.ROLE_CODE , ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 ;"
"What are all the role codes , role names , and role descriptions ?",spider,"SELECT ROLESalias0.ROLE_CODE , ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 ;"
"What are the name and description for role code "" var0 "" ?",spider,"SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ""var0"" ;"
"Find the name and description of the role with code "" var0 "" .",spider,"SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ""var0"" ;"
"Show the description for role name "" var0 "" .",spider,"SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_NAME = ""var0"" ;"
"What is the description of the role named "" var0 "" ?",spider,"SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_NAME = ""var0"" ;"
"Show the name , role code , and date of birth for the employee with name ' var0 ' .",spider,"SELECT EMPLOYEESalias0.DATE_OF_BIRTH , EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
"What are the name , role code , and date of birth of the employee named ' var0 ' ?",spider,"SELECT EMPLOYEESalias0.DATE_OF_BIRTH , EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
What is the id for the employee called var0 ?,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
Show the id of the employee named var0 .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
"Show the names of all the employees with role "" var0 "" .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.ROLE_CODE = ""var0"" ;"
"Which employees have the role with code "" var0 "" ? Find their names .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 WHERE EMPLOYEESalias0.ROLE_CODE = ""var0"" ;"
Show all role codes and the number of employees in each role .,spider,"SELECT COUNT( * ) , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE ;"
What is the code of each role and the number of employees in each role ?,spider,"SELECT COUNT( * ) , EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE ;"
What is the role code with the largest number of employees ?,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the code of the role that have the most employees .,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all role codes with at least var0 employees .,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE HAVING COUNT( * ) >= var0 ;
What are the roles with three or more employees ? Give me the role codes .,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY EMPLOYEESalias0.ROLE_CODE HAVING COUNT( * ) >= var0 ;
Show the role code with the least employees .,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the role with the smallest number of employees ? Find the role codes .,spider,SELECT EMPLOYEESalias0.ROLE_CODE FROM EMPLOYEES AS EMPLOYEESalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the role name and role description for employee called var0 ?,spider,"SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
Show the name and description of the role played by the employee named var0 .,spider,"SELECT ROLESalias0.ROLE_DESCRIPTION , ROLESalias0.ROLE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE EMPLOYEESalias0.EMPLOYEE_NAME = ""var0"" ;"
Show the names of employees with role name var0 .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = ""var0"" ;"
"Find the names of all the employees whose the role name is "" var0 "" .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = ""var0"" ;"
"Show the employee ids for all employees with role name "" var0 "" or "" var1 "" .",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = ""var0"" OR ROLESalias0.ROLE_NAME = ""var1"" ;"
"What are the employee ids of the employees whose role name is "" var0 "" or "" var1 "" ?",spider,"SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 JOIN ROLES AS ROLESalias0 ON ROLESalias0.ROLE_CODE = EMPLOYEESalias0.ROLE_CODE WHERE ROLESalias0.ROLE_NAME = ""var0"" OR ROLESalias0.ROLE_NAME = ""var1"" ;"
What are the different location codes for documents ?,spider,SELECT DISTINCT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ;
Give me all the distinct location codes for documents .,spider,SELECT DISTINCT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ;
"Show the location name for document "" var0 "" .",spider,"SELECT DERIVED_TABLEalias0.LOCATION_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"What is the location name of the document "" var0 "" ?",spider,"SELECT DERIVED_TABLEalias0.LOCATION_NAME FROM ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 JOIN DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Show the location code , the starting date and ending data in that location for all the documents .",spider,"SELECT DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATION_FROM , DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATON_TO , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ;"
"What are each document's location code , and starting date and ending data in that location ?",spider,"SELECT DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATION_FROM , DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATON_TO , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 ;"
"What is "" the date in location from "" and "" the date in location to "" for the document with name "" var0 "" ?",spider,"SELECT DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATION_FROM , DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATON_TO FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 JOIN ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Find the starting date and ending data in location for the document named "" var0 "" .",spider,"SELECT DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATION_FROM , DOCUMENT_LOCATIONSalias0.DATE_IN_LOCATON_TO FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 JOIN ALL_DOCUMENTS AS ALL_DOCUMENTSalias0 ON DOCUMENT_LOCATIONSalias0.DOCUMENT_ID = ALL_DOCUMENTSalias0.DOCUMENT_ID WHERE ALL_DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Show the location codes and the number of documents in each location .,spider,"SELECT COUNT( * ) , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ;"
What is the code of each location and the number of documents in that location ?,spider,"SELECT COUNT( * ) , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ;"
What is the location code with the most documents ?,spider,SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY LOCATION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the code of the location with the largest number of documents .,spider,SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY LOCATION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the location codes with at least var0 documents .,spider,SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE HAVING COUNT( * ) >= var0 ;
What are the codes of the locations with at least three documents ?,spider,SELECT DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE HAVING COUNT( * ) >= var0 ;
Show the location name and code with the least documents .,spider,"SELECT DERIVED_TABLEalias0.LOCATION_NAME , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;"
What are the name and code of the location with the smallest number of documents ?,spider,"SELECT DERIVED_TABLEalias0.LOCATION_NAME , DOCUMENT_LOCATIONSalias0.LOCATION_CODE FROM DOCUMENT_LOCATIONS AS DOCUMENT_LOCATIONSalias0 JOIN REF_LOCATIONS AS DERIVED_TABLEalias0 ON DOCUMENT_LOCATIONSalias0.LOCATION_CODE = DERIVED_TABLEalias0.LOCATION_CODE GROUP BY DOCUMENT_LOCATIONSalias0.LOCATION_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;"
What are the names of the employees who authorised the destruction and the employees who destroyed the corresponding documents ?,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias1.EMPLOYEE_NAME FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;"
List the names of the employees who authorized the destruction of documents and the employees who destroyed the corresponding documents .,spider,"SELECT EMPLOYEESalias0.EMPLOYEE_NAME , EMPLOYEESalias1.EMPLOYEE_NAME FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 JOIN EMPLOYEES AS EMPLOYEESalias0 ON EMPLOYEESalias0.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID JOIN EMPLOYEES AS EMPLOYEESalias1 ON EMPLOYEESalias1.EMPLOYEE_ID = DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;"
Show the id of each employee and the number of document destruction authorised by that employee .,spider,"SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID ;"
What are the id of each employee and the number of document destruction authorised by that employee ?,spider,"SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID ;"
Show the employee ids and the number of documents destroyed by each employee .,spider,"SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;"
What are the id of each employee and the number of document destroyed by that employee ?,spider,"SELECT COUNT( DOCUMENTS_TO_BE_DESTROYEDalias0.* ) , DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 GROUP BY DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID ;"
Show the ids of the employees who don't authorize destruction for any document .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Which employees do not authorize destruction for any document ? Give me their employee ids .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Show the ids of all employees who have authorized destruction .,spider,SELECT DISTINCT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
What are the ids of all the employees who authorize document destruction ?,spider,SELECT DISTINCT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Show the ids of all employees who have destroyed a document .,spider,SELECT DISTINCT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
What are the ids of all the employees who have destroyed documents ?,spider,SELECT DISTINCT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Show the ids of all employees who don't destroy any document .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Which employees do not destroy any document ? Find their employee ids .,spider,SELECT EMPLOYEESalias0.EMPLOYEE_ID FROM EMPLOYEES AS EMPLOYEESalias0 EXCEPT SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 ;
Show the ids of all employees who have either destroyed a document or made an authorization to do this .,spider,SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 UNION SELECT DOCUMENTS_TO_BE_DESTROYEDalias1.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias1 ;
Which employees have either destroyed a document or made an authorization to do so ? Return their employee ids .,spider,SELECT DOCUMENTS_TO_BE_DESTROYEDalias0.DESTROYED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias0 UNION SELECT DOCUMENTS_TO_BE_DESTROYEDalias1.DESTRUCTION_AUTHORISED_BY_EMPLOYEE_ID FROM DOCUMENTS_TO_BE_DESTROYED AS DOCUMENTS_TO_BE_DESTROYEDalias1 ;
What are the names of all clubs ?,spider,SELECT CLUBNAME FROM CLUB AS CLUBalias0 ;
Give me the name of each club .,spider,SELECT CLUBNAME FROM CLUB AS CLUBalias0 ;
How many students are there ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
Count the total number of students .,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
Find the number of students in total .,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
How many students are there in total ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
How many students are there ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
How many students exist ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 ;
What are the first names of all the students ?,spider,SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias0 ;
Find each student's first name .,spider,SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias0 ;
"Find the last names of the members of the club "" var0 "" .",spider,"SELECT STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Who are the members of the club named "" var0 "" ? Give me their last names .",spider,"SELECT STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Who are the members of the club named "" var0 "" ? Show the last name .",spider,"SELECT STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Return the last name for the members of the club named "" var0 "" .",spider,"SELECT STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"How many members does the club "" var0 "" has ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Count the members of the club "" var0 "" .",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Find the number of members of club "" var0 "" .",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"How many people have membership in the club "" var0 "" ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"How many clubs does "" var0 var1 "" belong to ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"How many clubs does "" var0 var1 "" have membership for ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"Find the number of clubs where "" var0 var1 "" is a member .",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"For how many clubs is "" var0 var1 "" a member ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"var1ind all the female members of club "" var0 "" . Show the first name and last name .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
"Give me the first name and last name for all the female members of the club "" var0 "" .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
"Find all the male members of club "" var0 "" . Show the first name and last name .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
"What are the first name and last name of each male member in club "" var0 "" ?",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
"Find all members of "" var0 "" whose major is "" var1 "" . Show the first name and last name .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.MAJOR = ""var1"" ;"
"Which members of "" var0 "" major in "" var1 "" ? Give me their first names and last names .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.MAJOR = ""var1"" ;"
"Which club has the most members majoring in "" var0 "" ?",spider,"SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.MAJOR = ""var0"" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;"
"Find the club which has the largest number of members majoring in "" var0 "" .",spider,"SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.MAJOR = ""var0"" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;"
var0ind the name of the club that has the most female students .,spider,"SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;"
Which club has the most female students as their members ? Give me the name of the club .,spider,"SELECT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" GROUP BY CLUBalias0.CLUBNAME ORDER BY COUNT( MEMBER_OF_CLUBalias0.* ) DESC LIMIT 1 ;"
"What is the description of the club named "" var0 "" ?",spider,"SELECT CLUBDESC FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Find the description of the club called "" var0 "" .",spider,"SELECT CLUBDESC FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Find the description of the club "" var0 "" .",spider,"SELECT CLUBDESC FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"What is the description of the club "" var0 "" ?",spider,"SELECT CLUBDESC FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"What is the location of the club named "" var0 "" ?",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Where us the club named "" var0 "" located ?",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Find the location of the club "" var0 "" .",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Where is the club "" var0 "" located ?",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Where is the club "" var0 "" located ?",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Tell me the location of the club "" var0 "" .",spider,"SELECT CLUBLOCATION FROM CLUB AS CLUBalias0 WHERE CLUBNAME = ""var0"" ;"
"Find the name of all the clubs at "" var0 "" .",spider,"SELECT CLUBNAME FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = ""var0"" ;"
"Which clubs are located at "" var0 "" ? Return the club names .",spider,"SELECT CLUBNAME FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = ""var0"" ;"
"How many clubs are located at "" var0 "" ?",spider,"SELECT COUNT( * ) FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = ""var0"" ;"
"Count the number of clubs located at "" var0 "" .",spider,"SELECT COUNT( * ) FROM CLUB AS CLUBalias0 WHERE CLUBLOCATION = ""var0"" ;"
"What are the first and last name of the president of the club "" var0 "" ?",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND MEMBER_OF_CLUBalias0.POSITION = ""var1"" ;"
"Who is the president of the club "" var0 "" ? Give me the first and last name .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND MEMBER_OF_CLUBalias0.POSITION = ""var1"" ;"
"Who is the "" var1 "" of club "" var0 "" ? Show the first name and last name .",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND MEMBER_OF_CLUBalias0.POSITION = ""var1"" ;"
"Find the first name and last name for the "" var1 "" of the club "" var0 "" ?",spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND MEMBER_OF_CLUBalias0.POSITION = ""var1"" ;"
"How many different roles are there in the club "" var0 "" ?",spider,"SELECT COUNT( DISTINCT MEMBER_OF_CLUBalias0.POSITION ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Count the number of different positions in the club "" var0 "" .",spider,"SELECT COUNT( DISTINCT MEMBER_OF_CLUBalias0.POSITION ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"How many members of "" var0 "" are older than var1 ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.AGE > var1 ;"
"Count the number of members in club "" var0 "" whose age is above var1 .",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.AGE > var1 ;"
"How many members of club "" var0 "" are younger than var1 ?",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.AGE < var1 ;"
"Count the number of members in club "" var0 "" whose age is below var1 .",spider,"SELECT COUNT( MEMBER_OF_CLUBalias0.* ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" AND STUDENTalias0.AGE < var1 ;"
"Find the names of all the clubs that have at least a member from the city with city code "" var0 "" .",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
"Which clubs have one or more members from the city with code "" var0 "" ? Give me the names of the clubs .",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
"Find the names of the clubs that have at least a member from the city with city code "" var0 "" .",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
"Which clubs have one or more members from the city with code "" var0 "" ? Give me the names of the clubs .",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
"How many clubs does the student named "" var0 var1 "" belong to ?",spider,"SELECT COUNT( DISTINCT CLUBalias0.CLUBNAME ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"Count the number of clubs for which the student named "" var0 var1 "" is a member .",spider,"SELECT COUNT( DISTINCT CLUBalias0.CLUBNAME ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"List the clubs having "" var0 var1 "" as a member .",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"What are the names of the clubs that have "" var0 var1 "" as a member ?",spider,"SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
"List the clubs that have at least a member with advisor "" var0 "" .",spider,SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.ADVISOR = var0 ;
"Which clubs have one or more members whose advisor is "" var0 "" ?",spider,SELECT DISTINCT CLUBalias0.CLUBNAME FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE STUDENTalias0.ADVISOR = var0 ;
"What is the average age of the members of the club "" var0 "" ?",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Find the average age of the members in the club "" var0 "" .",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Find the average age of members of the club "" var0 "" .",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"On average , how old are the members in the club "" var0 "" ?",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Retrieve the average age of members of the club "" var0 "" .",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
"Compute the average age of the members in the club "" var0 "" .",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM CLUB AS CLUBalias0 JOIN MEMBER_OF_CLUB AS MEMBER_OF_CLUBalias0 ON MEMBER_OF_CLUBalias0.CLUBID = CLUBalias0.CLUBID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MEMBER_OF_CLUBalias0.STUID WHERE CLUBalias0.CLUBNAME = ""var0"" ;"
What are the distinct grant amount for the grants where the documents were sent before ' var0 ' and grant were ended after ' var1 ' ?,spider,"SELECT GRANTSalias0.GRANT_AMOUNT FROM GRANTS AS GRANTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENTSalias0.SENT_DATE < ""var0"" INTERSECT SELECT GRANTSalias1.GRANT_AMOUNT FROM GRANTS AS GRANTSalias1 WHERE GRANTSalias1.GRANT_END_DATE > ""var1"" ;"
What are the different grant amounts for documents sent before ' var0 ' and after the grant ended on ' var1 ' ?,spider,"SELECT GRANTSalias0.GRANT_AMOUNT FROM GRANTS AS GRANTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENTSalias0.SENT_DATE < ""var0"" INTERSECT SELECT GRANTSalias1.GRANT_AMOUNT FROM GRANTS AS GRANTSalias1 WHERE GRANTSalias1.GRANT_END_DATE > ""var1"" ;"
List the project details of the project both producing patent and paper as outcomes .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = ""var0"" INTERSECT SELECT PROJECTSalias1.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias1 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias1 ON PROJECT_OUTCOMESalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID WHERE PROJECT_OUTCOMESalias1.OUTCOME_CODE = ""var1"" ;"
What are the details of the project that is producing both patents and papers as outcomes ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = ""var0"" INTERSECT SELECT PROJECTSalias1.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias1 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias1 ON PROJECT_OUTCOMESalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID WHERE PROJECT_OUTCOMESalias1.OUTCOME_CODE = ""var1"" ;"
What is the total grant amount of the organisations described as research ?,spider,"SELECT SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var0"" ;"
What is the total amount of grant money for research ?,spider,"SELECT SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var0"" ;"
List from which date and to which date these staff work: project staff of the project which hires the most staffs,spider,"SELECT PROJECT_STAFFalias0.DATE_FROM , PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.PROJECT_ID IN ( SELECT PROJECT_STAFFalias1.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias1 GROUP BY PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) UNION SELECT PROJECT_STAFFalias2.DATE_FROM , PROJECT_STAFFalias2.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias2 WHERE PROJECT_STAFFalias2.ROLE_CODE = ""var0"" ;"
From what date and to what date do the staff work on a project that has the most staff and has staff in a var0 role ?,spider,"SELECT PROJECT_STAFFalias0.DATE_FROM , PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.PROJECT_ID IN ( SELECT PROJECT_STAFFalias1.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias1 GROUP BY PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) UNION SELECT PROJECT_STAFFalias2.DATE_FROM , PROJECT_STAFFalias2.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias2 WHERE PROJECT_STAFFalias2.ROLE_CODE = ""var0"" ;"
Find the organisation ids and details of the organisations which are involved in,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS , ORGANISATIONSalias0.ORGANISATION_ID FROM GRANTS AS GRANTSalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID HAVING SUM( GRANTSalias0.GRANT_AMOUNT ) > var0 ;"
What are the ids and details for all organizations that have grants of more than var0 dollars ?,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS , ORGANISATIONSalias0.ORGANISATION_ID FROM GRANTS AS GRANTSalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID HAVING SUM( GRANTSalias0.GRANT_AMOUNT ) > var0 ;"
What is the organisation type and id of the organisation which has the most number of research staff ?,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the type and id of the organization that has the most research staff ?,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which organisation type hires most research staff ?,spider,SELECT ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the type of the organization with the most research staff ?,spider,SELECT ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find out the send dates of the documents with the grant amount of more than var0 were granted by organisation type described,spider,"SELECT DOCUMENTSalias0.SENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE GRANTSalias0.GRANT_AMOUNT > var0 AND ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var1"" ;"
What are the send dates for all documents that have a grant amount of more than var0 and are involved in research ?,spider,"SELECT DOCUMENTSalias0.SENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATIONSalias0.ORGANISATION_ID = GRANTSalias0.ORGANISATION_ID JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE GRANTSalias0.GRANT_AMOUNT > var0 AND ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var1"" ;"
What are the response received dates for the documents described as ' var0 ' or granted with more than var1 ?,spider,"SELECT DOCUMENTSalias0.RESPONSE_RECEIVED_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 ON DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE = DOCUMENTSalias0.DOCUMENT_TYPE_CODE JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION = ""var0"" OR GRANTSalias0.GRANT_AMOUNT > var1 ;"
What is the response received date for the document described as var0 that was granted more than var1 dollars ?,spider,"SELECT DOCUMENTSalias0.RESPONSE_RECEIVED_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 ON DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE = DOCUMENTSalias0.DOCUMENT_TYPE_CODE JOIN GRANTS AS GRANTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION = ""var0"" OR GRANTSalias0.GRANT_AMOUNT > var1 ;"
List the project details of the projects which did not hire any staff for a var0 role .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.PROJECT_ID NOT IN ( SELECT PROJECT_STAFFalias0.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ) ;"
What are the details for all projects that did not hire any staff in a research role ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.PROJECT_ID NOT IN ( SELECT PROJECT_STAFFalias0.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ) ;"
"What are the task details , task id and project id for the projects which are detailed as ' var0 ' or have more than var1 outcomes ?",spider,"SELECT PROJECTSalias0.PROJECT_ID , TASKSalias0.TASK_DETAILS , TASKSalias0.TASK_ID FROM TASKS AS TASKSalias0 JOIN PROJECTS AS PROJECTSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" UNION SELECT PROJECTSalias1.PROJECT_ID , TASKSalias1.TASK_DETAILS , TASKSalias1.TASK_ID FROM TASKS AS TASKSalias1 JOIN PROJECTS AS PROJECTSalias1 ON TASKSalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias1.PROJECT_ID GROUP BY PROJECTSalias1.PROJECT_ID HAVING COUNT( TASKSalias1.* ) > var1 ;"
"What are the task details , task ids , and project ids for the progrects that are detailed as ' var0 ' or have at least 3 outcomes ?",spider,"SELECT PROJECTSalias0.PROJECT_ID , TASKSalias0.TASK_DETAILS , TASKSalias0.TASK_ID FROM TASKS AS TASKSalias0 JOIN PROJECTS AS PROJECTSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" UNION SELECT PROJECTSalias1.PROJECT_ID , TASKSalias1.TASK_DETAILS , TASKSalias1.TASK_ID FROM TASKS AS TASKSalias1 JOIN PROJECTS AS PROJECTSalias1 ON TASKSalias1.PROJECT_ID = PROJECTSalias1.PROJECT_ID JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias1.PROJECT_ID GROUP BY PROJECTSalias1.PROJECT_ID HAVING COUNT( TASKSalias1.* ) > var1 ;"
"When do all the var0 role staff start to work , and when do they stop working ?",spider,"SELECT PROJECT_STAFFalias0.DATE_FROM , PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ;"
When did var0s start and stop working ?,spider,"SELECT PROJECT_STAFFalias0.DATE_FROM , PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ;"
How many kinds of roles are there for the staff ?,spider,SELECT COUNT( DISTINCT PROJECT_STAFFalias0.ROLE_CODE ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ;
How many different roles are there on the project staff ?,spider,SELECT COUNT( DISTINCT PROJECT_STAFFalias0.ROLE_CODE ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ;
What is the total amount of grants given by each organisations ? Also list the organisation id .,spider,"SELECT GRANTSalias0.ORGANISATION_ID , SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 GROUP BY GRANTSalias0.ORGANISATION_ID ;"
What is the total amount of grant money given to each organization and what is its id ?,spider,"SELECT GRANTSalias0.ORGANISATION_ID , SUM( GRANTSalias0.GRANT_AMOUNT ) FROM GRANTS AS GRANTSalias0 GROUP BY GRANTSalias0.ORGANISATION_ID ;"
List the project details of the projects with the research outcome described with the substring ' var0 ' .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID JOIN RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE WHERE RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION LIKE ""var0"" ;"
What are the details for the project whose research has been published ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID JOIN RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE WHERE RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION LIKE ""var0"" ;"
How many staff does each project has ? List the project id and the number in an ascending order .,spider,"SELECT COUNT( * ) , PROJECT_STAFFalias0.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_STAFFalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECT_STAFFalias0.PROJECT_ID ORDER BY COUNT( * ) ASC ;"
"For each project id , how many staff does it have ? List them in increasing order .",spider,"SELECT COUNT( * ) , PROJECT_STAFFalias0.PROJECT_ID FROM PROJECT_STAFF AS PROJECT_STAFFalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_STAFFalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECT_STAFFalias0.PROJECT_ID ORDER BY COUNT( * ) ASC ;"
What is the complete description of the var0 role .,spider,"SELECT STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 WHERE STAFF_ROLESalias0.ROLE_CODE = ""var0"" ;"
What is the complete description of the job of a var0 ?,spider,"SELECT STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 WHERE STAFF_ROLESalias0.ROLE_CODE = ""var0"" ;"
When did the first staff for the projects started working ?,spider,SELECT PROJECT_STAFFalias0.DATE_FROM FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ORDER BY PROJECT_STAFFalias0.DATE_FROM ASC LIMIT 1 ;
When did the first staff member start working ?,spider,SELECT PROJECT_STAFFalias0.DATE_FROM FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ORDER BY PROJECT_STAFFalias0.DATE_FROM ASC LIMIT 1 ;
Which project made the most number of outcomes ? List the project details and the project id .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the details and id of the project with the most outcomes ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which projects have no outcome ? List the project details .,spider,SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.PROJECT_ID NOT IN ( SELECT PROJECT_OUTCOMESalias0.PROJECT_ID FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ) ;
What are the details of the project with no outcomes ?,spider,SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.PROJECT_ID NOT IN ( SELECT PROJECT_OUTCOMESalias0.PROJECT_ID FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ) ;
"Which organisation hired the most number of research staff ? List the organisation id , type and detail .",spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS , ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What are the ids , types , and details of the organization with the most research staff ?",spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS , ORGANISATIONSalias0.ORGANISATION_ID , ORGANISATIONSalias0.ORGANISATION_TYPE FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN RESEARCH_STAFF AS RESEARCH_STAFFalias0 ON RESEARCH_STAFFalias0.EMPLOYER_ORGANISATION_ID = ORGANISATIONSalias0.ORGANISATION_ID GROUP BY ORGANISATIONSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show the role description and the id of the project staff involved in most number of project outcomes ?,spider,"SELECT PROJECT_STAFFalias0.STAFF_ID , STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 JOIN PROJECT_STAFF AS PROJECT_STAFFalias0 ON STAFF_ROLESalias0.ROLE_CODE = PROJECT_STAFFalias0.ROLE_CODE JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_STAFFalias0.PROJECT_ID = PROJECT_OUTCOMESalias0.PROJECT_ID GROUP BY PROJECT_STAFFalias0.STAFF_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"For each staff id , what is the description of the role that is involved with the most number of projects ?",spider,"SELECT PROJECT_STAFFalias0.STAFF_ID , STAFF_ROLESalias0.ROLE_DESCRIPTION FROM STAFF_ROLES AS STAFF_ROLESalias0 JOIN PROJECT_STAFF AS PROJECT_STAFFalias0 ON STAFF_ROLESalias0.ROLE_CODE = PROJECT_STAFFalias0.ROLE_CODE JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_STAFFalias0.PROJECT_ID = PROJECT_OUTCOMESalias0.PROJECT_ID GROUP BY PROJECT_STAFFalias0.STAFF_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which document type is described with the prefix ' Initial ' ?,spider,"SELECT DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE FROM DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION LIKE ""var0"" ;"
What is the type of the document whose description starts with the word ' Initial ' ?,spider,"SELECT DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE FROM DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION LIKE ""var0"" ;"
"For grants with both documents described as ' var0 ' and documents described as ' var1 ' , list its start date .",spider,"SELECT GRANTSalias0.GRANT_START_DATE FROM GRANTS AS GRANTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 ON DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE = DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION = ""var0"" INTERSECT SELECT GRANTSalias1.GRANT_START_DATE FROM GRANTS AS GRANTSalias1 JOIN DOCUMENTS AS DOCUMENTSalias1 ON GRANTSalias1.GRANT_ID = DOCUMENTSalias1.GRANT_ID JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias1 ON DOCUMENT_TYPESalias1.DOCUMENT_TYPE_CODE = DOCUMENTSalias1.DOCUMENT_TYPE_CODE WHERE DOCUMENT_TYPESalias1.DOCUMENT_DESCRIPTION = ""var1"" ;"
"For grants that have descriptions of var0 and var1s , what are their start dates ?",spider,"SELECT GRANTSalias0.GRANT_START_DATE FROM GRANTS AS GRANTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON GRANTSalias0.GRANT_ID = DOCUMENTSalias0.GRANT_ID JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias0 ON DOCUMENT_TYPESalias0.DOCUMENT_TYPE_CODE = DOCUMENTSalias0.DOCUMENT_TYPE_CODE WHERE DOCUMENT_TYPESalias0.DOCUMENT_DESCRIPTION = ""var0"" INTERSECT SELECT GRANTSalias1.GRANT_START_DATE FROM GRANTS AS GRANTSalias1 JOIN DOCUMENTS AS DOCUMENTSalias1 ON GRANTSalias1.GRANT_ID = DOCUMENTSalias1.GRANT_ID JOIN DOCUMENT_TYPES AS DOCUMENT_TYPESalias1 ON DOCUMENT_TYPESalias1.DOCUMENT_TYPE_CODE = DOCUMENTSalias1.DOCUMENT_TYPE_CODE WHERE DOCUMENT_TYPESalias1.DOCUMENT_DESCRIPTION = ""var1"" ;"
How many documents can one grant have at most ? List the grant id and number .,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.GRANT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY GRANT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"For each grant id , how many documents does it have , and which one has the most ?",spider,"SELECT COUNT( * ) , DOCUMENTSalias0.GRANT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY GRANT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the organisation type description of the organisation detailed as ' var0 ' .,spider,"SELECT ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION FROM ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATIONSalias0.ORGANISATION_DETAILS = ""var0"" ;"
What is the type description of the organization whose detail is listed as ' var0 ' ?,spider,"SELECT ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION FROM ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 JOIN ORGANISATIONS AS ORGANISATIONSalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATIONSalias0.ORGANISATION_DETAILS = ""var0"" ;"
What are all the details of the organisations described as ' var0 ' ? Sort the result in an ascending order .,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var0"" ORDER BY ORGANISATIONSalias0.ORGANISATION_DETAILS ;"
What are the details of all organizations that are described as var0s and sort the results in ascending order ?,spider,"SELECT ORGANISATIONSalias0.ORGANISATION_DETAILS FROM ORGANISATIONS AS ORGANISATIONSalias0 JOIN ORGANISATION_TYPES AS ORGANISATION_TYPESalias0 ON ORGANISATION_TYPESalias0.ORGANISATION_TYPE = ORGANISATIONSalias0.ORGANISATION_TYPE WHERE ORGANISATION_TYPESalias0.ORGANISATION_TYPE_DESCRIPTION = ""var0"" ORDER BY ORGANISATIONSalias0.ORGANISATION_DETAILS ;"
How many var0 outcomes are generated from all the projects ?,spider,"SELECT COUNT( * ) FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = ""var0"" ;"
How many patents outcomes were listed for all the projects ?,spider,"SELECT COUNT( * ) FROM PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 WHERE PROJECT_OUTCOMESalias0.OUTCOME_CODE = ""var0"" ;"
How many project staff worked as var0s or started working before ' var1 ' ?,spider,"SELECT COUNT( * ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM < ""var1"" OR PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ;"
How many project members were var0s or started working before ' var1 ' ?,spider,"SELECT COUNT( * ) FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM < ""var1"" OR PROJECT_STAFFalias0.ROLE_CODE = ""var0"" ;"
What is the last date of the staff leaving the projects ?,spider,SELECT PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ORDER BY PROJECT_STAFFalias0.DATE_TO DESC LIMIT 1 ;
What is the last date that a staff member left a project ?,spider,SELECT PROJECT_STAFFalias0.DATE_TO FROM PROJECT_STAFF AS PROJECT_STAFFalias0 ORDER BY PROJECT_STAFFalias0.DATE_TO DESC LIMIT 1 ;
What are the result description of the project whose detail is ' var0 ' ?,spider,"SELECT RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION FROM RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" ;"
What is the description for the results whose project detail is ' var0 ' ?,spider,"SELECT RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION FROM RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE JOIN PROJECTS AS PROJECTSalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" ;"
"List the organisation id with the maximum outcome count , and the count .",spider,"SELECT COUNT( * ) , PROJECTSalias0.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the id of the organization with the maximum number of outcomes and how many outcomes are there ?,spider,"SELECT COUNT( * ) , PROJECTSalias0.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON PROJECT_OUTCOMESalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
List the project details of the projects launched by the organisation,spider,SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.ORGANISATION_ID IN ( SELECT PROJECTSalias1.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias1 GROUP BY ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What are the details for the projects which were launched by the organization with the most projects ?,spider,SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.ORGANISATION_ID IN ( SELECT PROJECTSalias1.ORGANISATION_ID FROM PROJECTS AS PROJECTSalias1 GROUP BY ORGANISATION_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
"List the research staff details , and order in ascending order .",spider,SELECT RESEARCH_STAFFalias0.STAFF_DETAILS FROM RESEARCH_STAFF AS RESEARCH_STAFFalias0 ORDER BY RESEARCH_STAFFalias0.STAFF_DETAILS ASC ;
What details are there on the research staff ? List the result in ascending alphabetical order .,spider,SELECT RESEARCH_STAFFalias0.STAFF_DETAILS FROM RESEARCH_STAFF AS RESEARCH_STAFFalias0 ORDER BY RESEARCH_STAFFalias0.STAFF_DETAILS ASC ;
How many tasks are there in total ?,spider,SELECT COUNT( TASKSalias0.* ) FROM TASKS AS TASKSalias0 ;
How many tasks are there ?,spider,SELECT COUNT( TASKSalias0.* ) FROM TASKS AS TASKSalias0 ;
How many tasks does each project have ? List the task count and the project detail .,spider,"SELECT COUNT( TASKSalias0.* ) , PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN TASKS AS TASKSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ;"
"For each project id , how many tasks are there ?",spider,"SELECT COUNT( TASKSalias0.* ) , PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN TASKS AS TASKSalias0 ON TASKSalias0.PROJECT_ID = PROJECTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID ;"
What are the staff roles of the staff who,spider,"SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM > ""var0"" AND PROJECT_STAFFalias0.DATE_TO < ""var1"" ;"
What roles did staff members play between ' var0 ' and ' var1 ' ?,spider,"SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 WHERE PROJECT_STAFFalias0.DATE_FROM > ""var0"" AND PROJECT_STAFFalias0.DATE_TO < ""var1"" ;"
What are the descriptions of all the project outcomes ?,spider,SELECT RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION FROM RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE ;
List the description of the outcomes for all projects .,spider,SELECT RESEARCH_OUTCOMESalias0.OUTCOME_DESCRIPTION FROM RESEARCH_OUTCOMES AS RESEARCH_OUTCOMESalias0 JOIN PROJECT_OUTCOMES AS PROJECT_OUTCOMESalias0 ON RESEARCH_OUTCOMESalias0.OUTCOME_CODE = PROJECT_OUTCOMESalias0.OUTCOME_CODE ;
Which role is most common for the staff ?,spider,SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common role for the staff ?,spider,SELECT PROJECT_STAFFalias0.ROLE_CODE FROM PROJECT_STAFF AS PROJECT_STAFFalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many friends does var0 have ?,spider,"SELECT COUNT( DERIVED_TABLEalias0.FRIEND ) FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = ""var0"" ;"
How many friends does var0 have ?,spider,"SELECT COUNT( DERIVED_TABLEalias0.FRIEND ) FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = ""var0"" ;"
How many var0s does this network has ?,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.GENDER = ""var0"" ;"
How many var0s are in the network ?,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.GENDER = ""var0"" ;"
What is the average age for all person ?,spider,SELECT AVG( PERSONalias0.AGE ) FROM PERSON AS PERSONalias0 ;
What is the average age for all people in the table ?,spider,SELECT AVG( PERSONalias0.AGE ) FROM PERSON AS PERSONalias0 ;
How many different cities are they from ?,spider,SELECT COUNT( DISTINCT PERSONalias0.CITY ) FROM PERSON AS PERSONalias0 ;
How many different cities do people originate from ?,spider,SELECT COUNT( DISTINCT PERSONalias0.CITY ) FROM PERSON AS PERSONalias0 ;
How many type of jobs do they have ?,spider,SELECT COUNT( DISTINCT PERSONalias0.JOB ) FROM PERSON AS PERSONalias0 ;
How many different jobs are listed ?,spider,SELECT COUNT( DISTINCT PERSONalias0.JOB ) FROM PERSON AS PERSONalias0 ;
Who is the oldest person ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
What is the name of the person who is the oldest ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
Who is the oldest person whose job is var0 ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var1"" ) AND PERSONalias0.JOB = ""var0"" ;"
What is the name of the oldest var0 ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var1"" ) AND PERSONalias0.JOB = ""var0"" ;"
Who is the youngest var0 ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.GENDER = ""var1"" ) AND PERSONalias0.GENDER = ""var0"" ;"
What is the name of the youngest var0 ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE = ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.GENDER = ""var1"" ) AND PERSONalias0.GENDER = ""var0"" ;"
How old is the var0 named var1 ?,spider,"SELECT PERSONalias0.AGE FROM PERSON AS PERSONalias0 WHERE PERSONalias0.JOB = ""var0"" AND PERSONalias0.NAME = ""var1"" ;"
What is the age of the var0 named var1 ?,spider,"SELECT PERSONalias0.AGE FROM PERSON AS PERSONalias0 WHERE PERSONalias0.JOB = ""var0"" AND PERSONalias0.NAME = ""var1"" ;"
Who is the person whose age is below var0 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE < var0 ;
What is the name of the person whose age is below var0 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE < var0 ;
How many people whose age is greater var0 and job is var1 ?,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > var0 AND PERSONalias0.JOB = ""var1"" ;"
HOw many var1s are older than var0 ?,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > var0 AND PERSONalias0.JOB = ""var1"" ;"
What is the average age for each gender ?,spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.GENDER ;"
"How old is each gender , on average ?",spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.GENDER ;"
What is average age for different job title ?,spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.JOB ;"
How old is the average person for each job ?,spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.JOB ;"
What is average age of var0 for different job title ?,spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 WHERE GENDER = ""var0"" GROUP BY PERSONalias0.JOB ;"
What is the average age for a var0 in each job ?,spider,"SELECT AVG( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 WHERE GENDER = ""var0"" GROUP BY PERSONalias0.JOB ;"
What is minimum age for different job title ?,spider,"SELECT MIN( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.JOB ;"
How old is the youngest person for each job ?,spider,"SELECT MIN( PERSONalias0.AGE ) , PERSONalias0.JOB FROM PERSON AS PERSONalias0 GROUP BY PERSONalias0.JOB ;"
Find the number of people who is under var0 for each gender .,spider,"SELECT COUNT( * ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 WHERE AGE < var0 GROUP BY PERSONalias0.GENDER ;"
How many people are under var0 for each gender ?,spider,"SELECT COUNT( * ) , PERSONalias0.GENDER FROM PERSON AS PERSONalias0 WHERE AGE < var0 GROUP BY PERSONalias0.GENDER ;"
Find the name of people whose age is greater than any var0 sorted by their age .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE AGE > ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var0"" ) ORDER BY PERSONalias0.AGE ;"
What is the name of all the people who are older than at least one var0 ? Order them by age .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE AGE > ( SELECT MIN( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var0"" ) ORDER BY PERSONalias0.AGE ;"
Find the number of people whose age is greater than all var0s .,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var0"" ) ;"
How many people are older than every var0 ?,spider,"SELECT COUNT( * ) FROM PERSON AS PERSONalias0 WHERE PERSONalias0.AGE > ( SELECT MAX( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 WHERE PERSONalias1.JOB = ""var0"" ) ;"
"list the name , job title of all people ordered by their names .",spider,"SELECT PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.NAME ;"
What are the names and job titles of every person ordered alphabetically by name ?,spider,"SELECT PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.NAME ;"
Find the names of all person sorted in the descending order using age .,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.AGE DESC ;
What are the names of everybody sorted by age in descending order ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 ORDER BY PERSONalias0.AGE DESC ;
Find the name and age of all var0s in order of their age .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE GENDER = ""var0"" ORDER BY PERSONalias0.AGE ;"
What is the name and age of every var0 ? Order the results by age .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE GENDER = ""var0"" ORDER BY PERSONalias0.AGE ;"
Find the name and age of the person who is a friend of both var0 and var1 .,spider,"SELECT PERSONalias0.AGE , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" INTERSECT SELECT PERSONalias1.AGE , PERSONalias1.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias1.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND = ""var1"" ;"
What are the names and ages of every person who is a friend of both var0 and var1 ?,spider,"SELECT PERSONalias0.AGE , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" INTERSECT SELECT PERSONalias1.AGE , PERSONalias1.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias1.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND = ""var1"" ;"
Find the name and age of the person who is a friend of var0 or var1 .,spider,"SELECT DISTINCT PERSONalias0.AGE , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" OR DERIVED_TABLEalias0.FRIEND = ""var1"" ;"
What are the different names and ages of every friend of either var0 or alice ?,spider,"SELECT DISTINCT PERSONalias0.AGE , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" OR DERIVED_TABLEalias0.FRIEND = ""var1"" ;"
Find the name of the person who has friends with age above var0 and under age var1 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) INTERSECT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
What are the names of every person who has a friend over var0 and under var1 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) INTERSECT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
Find the name of the person who has friends with age above var0 but not under age var1 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) EXCEPT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
What are the names of the people who are older var0 but no friends under age var1 ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND IN ( SELECT PERSONalias1.NAME FROM PERSON AS PERSONalias1 WHERE PERSONalias1.AGE > var0 ) EXCEPT SELECT PERSONalias2.NAME FROM PERSON AS PERSONalias2 JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON PERSONalias2.NAME = DERIVED_TABLEalias1.NAME WHERE DERIVED_TABLEalias1.FRIEND IN ( SELECT PERSONalias3.NAME FROM PERSON AS PERSONalias3 WHERE PERSONalias3.AGE < var1 ) ;
Find the name of the person who has no var0 friends .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias1.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias1.JOB = ""var0"" ;"
What are the names of the people who have no friends who are var0s ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias1 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias1.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias1.JOB = ""var0"" ;"
Find the person who has exactly one friend .,spider,SELECT NAME FROM PERSONFRIEND GROUP BY NAME HAVING COUNT( * ) = var0 ;
What are the names of everybody who has exactly one friend ?,spider,SELECT NAME FROM PERSONFRIEND GROUP BY NAME HAVING COUNT( * ) = var0 ;
Who are the friends of var0 ?,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = ""var0"" ;"
Who are var0's friends ?,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE PERSONalias0.NAME = ""var0"" ;"
Find the name of persons who are friends with var0 .,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" ;"
What are the names of all of var0's friends ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" ;"
Find the names of var1s who are friends with var0,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" AND PERSONalias0.GENDER = ""var1"" ;"
What are the names of all var1s who are friends with var0 ?,spider,"SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" AND PERSONalias0.GENDER = ""var1"" ;"
Find the var1 friends of var0 .,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND PERSONalias0.GENDER = ""var1"" ;"
What are all the friends of var0 who are var1 ?,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND PERSONalias0.GENDER = ""var1"" ;"
Find the var1 friend of var0 whose job is a var2 ?,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND PERSONalias0.GENDER = ""var1"" AND PERSONalias0.JOB = ""var2"" ;"
Who are the friends of var0 that are var2s ?,spider,"SELECT DERIVED_TABLEalias0.FRIEND FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND PERSONalias0.GENDER = ""var1"" AND PERSONalias0.JOB = ""var2"" ;"
Who has a friend that is from var0 ?,spider,"SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.CITY = ""var0"" ;"
What are the names of all friends who are from New York ?,spider,"SELECT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.CITY = ""var0"" ;"
Who has friends that are younger than the average age ?,spider,SELECT DISTINCT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.AGE < ( SELECT AVG( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
What are the different names of friends who are younger than the average age for a friend ?,spider,SELECT DISTINCT DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.AGE < ( SELECT AVG( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;
Who has friends that are older than the average age ? Print their friends and their ages as well,spider,"SELECT DISTINCT DERIVED_TABLEalias0.FRIEND , DERIVED_TABLEalias0.NAME , PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.AGE > ( SELECT AVG( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;"
"Whare the names , friends , and ages of all people who are older than the average age of a person ?",spider,"SELECT DISTINCT DERIVED_TABLEalias0.FRIEND , DERIVED_TABLEalias0.NAME , PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE PERSONalias0.AGE > ( SELECT AVG( PERSONalias1.AGE ) FROM PERSON AS PERSONalias1 ) ;"
Who is the friend of var0 with longest year relationship ?,spider,"SELECT FRIEND FROM PERSONFRIEND WHERE NAME = ""var0"" AND YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE NAME = ""var1"" ) ;"
Which friend of var0 has the longest-lasting friendship ?,spider,"SELECT FRIEND FROM PERSONFRIEND WHERE NAME = ""var0"" AND YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE NAME = ""var1"" ) ;"
What is the age of the friend of var0 with longest year relationship ?,spider,"SELECT PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND DERIVED_TABLEalias0.YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE NAME = ""var1"" ) ;"
What are the ages of all of var0's friends who are in the longest relationship ?,spider,"SELECT PERSONalias0.AGE FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND WHERE DERIVED_TABLEalias0.NAME = ""var0"" AND DERIVED_TABLEalias0.YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE NAME = ""var1"" ) ;"
Find the name of persons who are friends with var0 for the shortest years .,spider,"SELECT NAME FROM PERSONFRIEND WHERE FRIEND = ""var0"" AND YEAR = ( SELECT MIN( YEAR ) FROM PERSONFRIEND WHERE FRIEND = ""var1"" ) ;"
What are the names of all people who are friends with var0 for the shortest amount of time ?,spider,"SELECT NAME FROM PERSONFRIEND WHERE FRIEND = ""var0"" AND YEAR = ( SELECT MIN( YEAR ) FROM PERSONFRIEND WHERE FRIEND = ""var1"" ) ;"
"Find the name , age , and job title of persons who are friends with var0 for the longest years .",spider,"SELECT PERSONalias0.AGE , PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" AND DERIVED_TABLEalias0.YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE FRIEND = ""var1"" ) ;"
"What are the names , ages , and jobs of all people who are friends with var0 for the longest amount of time ?",spider,"SELECT PERSONalias0.AGE , PERSONalias0.JOB , PERSONalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME WHERE DERIVED_TABLEalias0.FRIEND = ""var0"" AND DERIVED_TABLEalias0.YEAR = ( SELECT MAX( YEAR ) FROM PERSONFRIEND WHERE FRIEND = ""var1"" ) ;"
Who is the person that has no friend ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT NAME FROM PERSONFRIEND ;
What are the names of all people who do not have friends ?,spider,SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 EXCEPT SELECT NAME FROM PERSONFRIEND ;
Which person whose friends have the oldest average age ?,spider,"SELECT AVG( PERSONalias0.AGE ) , DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND GROUP BY DERIVED_TABLEalias0.NAME ORDER BY AVG( PERSONalias0.AGE ) DESC LIMIT 1 ;"
"What is the name of the person who has the oldest average age for their friends , and what is that average age ?",spider,"SELECT AVG( PERSONalias0.AGE ) , DERIVED_TABLEalias0.NAME FROM PERSON AS PERSONalias0 JOIN PERSONFRIEND AS DERIVED_TABLEalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.FRIEND GROUP BY DERIVED_TABLEalias0.NAME ORDER BY AVG( PERSONalias0.AGE ) DESC LIMIT 1 ;"
What is the total number of people who has no friend living in the city of var0 .,spider,"SELECT COUNT( DISTINCT NAME ) FROM PERSONFRIEND WHERE FRIEND NOT IN ( SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.CITY = ""var0"" ) ;"
What is the total number of people who have no friends living in var0 ?,spider,"SELECT COUNT( DISTINCT NAME ) FROM PERSONFRIEND WHERE FRIEND NOT IN ( SELECT PERSONalias0.NAME FROM PERSON AS PERSONalias0 WHERE PERSONalias0.CITY = ""var0"" ) ;"
Find var0's friends of friends .,spider,"SELECT DISTINCT DERIVED_TABLEalias2.NAME FROM PERSONFRIEND AS DERIVED_TABLEalias0 JOIN PERSON AS PERSONalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.NAME = DERIVED_TABLEalias0.FRIEND JOIN PERSONFRIEND AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.NAME = DERIVED_TABLEalias1.FRIEND WHERE DERIVED_TABLEalias2.NAME != ""var1"" AND PERSONalias0.NAME = ""var0"" ;"
What are the names of all of var0's friends of friends ?,spider,"SELECT DISTINCT DERIVED_TABLEalias2.NAME FROM PERSONFRIEND AS DERIVED_TABLEalias0 JOIN PERSON AS PERSONalias0 ON PERSONalias0.NAME = DERIVED_TABLEalias0.NAME JOIN PERSONFRIEND AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.NAME = DERIVED_TABLEalias0.FRIEND JOIN PERSONFRIEND AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.NAME = DERIVED_TABLEalias1.FRIEND WHERE DERIVED_TABLEalias2.NAME != ""var1"" AND PERSONalias0.NAME = ""var0"" ;"
How many members are there ?,spider,SELECT COUNT( * ) FROM MEMBER AS MEMBERalias0 ;
List the names of members in ascending alphabetical order .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.NAME ASC ;
What are the names and countries of members ?,spider,"SELECT MEMBERalias0.COUNTRY , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ;"
"Show the names of members whose country is "" var0 "" or "" var1 "" .",spider,"SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.COUNTRY = ""var0"" OR MEMBERalias0.COUNTRY = ""var1"" ;"
Show the different countries and the number of members from each .,spider,"SELECT COUNT( * ) , MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.COUNTRY ;"
Show the most common country across members .,spider,SELECT MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which countries have more than two members ?,spider,SELECT MEMBERalias0.COUNTRY FROM MEMBER AS MEMBERalias0 GROUP BY MEMBERalias0.COUNTRY HAVING COUNT( * ) > var0 ;
Show the leader names and locations of colleges .,spider,"SELECT COLLEGEalias0.COLLEGE_LOCATION , COLLEGEalias0.LEADER_NAME FROM COLLEGE AS COLLEGEalias0 ;"
Show the names of members and names of colleges they go to .,spider,"SELECT COLLEGEalias0.NAME , MEMBERalias0.NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID ;"
Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names .,spider,"SELECT COLLEGEalias0.COLLEGE_LOCATION , MEMBERalias0.NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID ORDER BY MEMBERalias0.NAME ASC ;"
"Show the distinct leader names of colleges associated with members from country "" var0 "" .",spider,"SELECT DISTINCT COLLEGEalias0.LEADER_NAME FROM COLLEGE AS COLLEGEalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.COLLEGE_ID = COLLEGEalias0.COLLEGE_ID WHERE MEMBERalias0.COUNTRY = ""var0"" ;"
Show the names of members and the decoration themes they have .,spider,"SELECT MEMBERalias0.NAME , ROUNDalias0.DECORATION_THEME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID ;"
Show the names of members that have a rank in round higher than var0 .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID WHERE ROUNDalias0.RANK_IN_ROUND > var0 ;
Show the names of members in ascending order of their rank in rounds .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 JOIN ROUND AS ROUNDalias0 ON ROUNDalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID ORDER BY ROUNDalias0.RANK_IN_ROUND ASC ;
List the names of members who did not participate in any round .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT ROUNDalias0.MEMBER_ID FROM ROUND AS ROUNDalias0 ) ;
"Find the name and access counts of all documents , in alphabetic order of the document name .",spider,"SELECT DOCUMENTSalias0.ACCESS_COUNT , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ORDER BY DOCUMENTSalias0.DOCUMENT_NAME ;"
"What are the names of all the documents , as well as the access counts of each , ordered alphabetically ?",spider,"SELECT DOCUMENTSalias0.ACCESS_COUNT , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ORDER BY DOCUMENTSalias0.DOCUMENT_NAME ;"
"Find the name of the document that has been accessed the greatest number of times , as well as the count of how many times it has been accessed ?",spider,"SELECT DOCUMENTSalias0.ACCESS_COUNT , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ORDER BY DOCUMENTSalias0.ACCESS_COUNT DESC LIMIT 1 ;"
"What is the name of the document which has been accessed the most times , as well as the number of times it has been accessed ?",spider,"SELECT DOCUMENTSalias0.ACCESS_COUNT , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ORDER BY DOCUMENTSalias0.ACCESS_COUNT DESC LIMIT 1 ;"
Find the types of documents with more than var0 documents .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) > var0 ;
What are the codes of types of documents of which there are for or more ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) > var0 ;
What document types have more than var0 corresponding documents ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) > var0 ;
Give the codes of document types that have more than var0 corresponding documents .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) > var0 ;
Find the total access count of all documents in the most popular document type .,spider,SELECT SUM( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the total access count of documents that are of the most common document type ?,spider,SELECT SUM( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the average access count of documents ?,spider,SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
Find the average access count across all documents ?,spider,SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
What is the structure of the document with the least number of accesses ?,spider,SELECT DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_DESCRIPTION FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_STRUCTURES AS DOCUMENT_STRUCTURESalias0 ON DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_CODE = DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the structure description of the document that has been accessed the fewest number of times .,spider,SELECT DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_DESCRIPTION FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_STRUCTURES AS DOCUMENT_STRUCTURESalias0 ON DOCUMENT_STRUCTURESalias0.DOCUMENT_STRUCTURE_CODE = DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What is the type of the document named "" var0 "" ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Return the type code of the document named "" var0 "" .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Find the list of documents that are both in the most three popular type and have the most three popular structure .,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT var0 INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT var1 ;
What are the names of documents that have both one of the three most common types and one of three most common structures ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT var0 INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) DESC LIMIT var1 ;
What document types do have more than var0 total access number .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING SUM( DOCUMENTSalias0.ACCESS_COUNT ) > var0 ;
Return the codes of the document types that do not have a total access count of over var0 .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING SUM( DOCUMENTSalias0.ACCESS_COUNT ) > var0 ;
"What are all the section titles of the document named "" var0 "" ?",spider,"SELECT DOCUMENT_SECTIONSalias0.SECTION_TITLE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Give the section titles of the document with the name "" var0 "" .",spider,"SELECT DOCUMENT_SECTIONSalias0.SECTION_TITLE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Find all the name of documents without any sections .,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_CODE NOT IN ( SELECT DOCUMENT_SECTIONSalias0.DOCUMENT_CODE FROM DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ) ;
What are the names of documents that do not have any sections ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_CODE NOT IN ( SELECT DOCUMENT_SECTIONSalias0.DOCUMENT_CODE FROM DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ) ;
List all the username and passwords of users with the most popular role .,spider,"SELECT USERSalias0.PASSWORD , USERSalias0.USER_NAME FROM USERS AS USERSalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the usernames and passwords of users that have the most common role ?,spider,"SELECT USERSalias0.PASSWORD , USERSalias0.USER_NAME FROM USERS AS USERSalias0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Find the average access counts of documents with functional area "" var0 "" .",spider,"SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_FUNCTIONAL_AREAS AS DOCUMENT_FUNCTIONAL_AREASalias0 ON DOCUMENT_FUNCTIONAL_AREASalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE JOIN FUNCTIONAL_AREAS AS FUNCTIONAL_AREASalias0 ON FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_CODE = DOCUMENT_FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_CODE WHERE FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_DESCRIPTION = ""var0"" ;"
"What are the average access counts of documents that have the functional area description "" var0 "" ?",spider,"SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_FUNCTIONAL_AREAS AS DOCUMENT_FUNCTIONAL_AREASalias0 ON DOCUMENT_FUNCTIONAL_AREASalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE JOIN FUNCTIONAL_AREAS AS FUNCTIONAL_AREASalias0 ON FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_CODE = DOCUMENT_FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_CODE WHERE FUNCTIONAL_AREASalias0.FUNCTIONAL_AREA_DESCRIPTION = ""var0"" ;"
Find names of the document without any images .,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias1.DOCUMENT_CODE JOIN DOCUMENT_SECTIONS_IMAGES AS DOCUMENT_SECTIONS_IMAGESalias0 ON DOCUMENT_SECTIONSalias0.SECTION_ID = DOCUMENT_SECTIONS_IMAGESalias0.SECTION_ID ;
What are the names of documents that do not have any images ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTSalias1.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias1.DOCUMENT_CODE JOIN DOCUMENT_SECTIONS_IMAGES AS DOCUMENT_SECTIONS_IMAGESalias0 ON DOCUMENT_SECTIONSalias0.SECTION_ID = DOCUMENT_SECTIONS_IMAGESalias0.SECTION_ID ;
What is the name of the document with the most number of sections ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the name of the document that has the most sections .,spider,SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENT_SECTIONS AS DOCUMENT_SECTIONSalias0 ON DOCUMENT_SECTIONSalias0.DOCUMENT_CODE = DOCUMENTSalias0.DOCUMENT_CODE GROUP BY DOCUMENTSalias0.DOCUMENT_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
"List all the document names which contains "" var0 "" .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE ""var0"" ;"
"What are the names of documents that contain the substring "" var0 "" ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE ""var0"" ;"
How many users are logged in ?,spider,SELECT COUNT( * ) FROM USERS AS USERSalias0 WHERE USERSalias0.USER_LOGIN = var0 ;
Count the number of users that are logged in .,spider,SELECT COUNT( * ) FROM USERS AS USERSalias0 WHERE USERSalias0.USER_LOGIN = var0 ;
Find the description of the most popular role among the users that have logged in .,spider,SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ( SELECT USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 WHERE USER_LOGIN = var0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What is the description of the most popular role among users that have logged in ?,spider,SELECT ROLESalias0.ROLE_DESCRIPTION FROM ROLES AS ROLESalias0 WHERE ROLESalias0.ROLE_CODE = ( SELECT USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 WHERE USER_LOGIN = var0 GROUP BY ROLE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the average access count of documents with the least popular structure .,spider,SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the average access count of documents that have the least common structure ?,spider,SELECT AVG( DOCUMENTSalias0.ACCESS_COUNT ) FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_STRUCTURE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
List all the image name and URLs in the order of their names .,spider,"SELECT IMAGESalias0.IMAGE_NAME , IMAGESalias0.IMAGE_URL FROM IMAGES AS IMAGESalias0 ORDER BY IMAGESalias0.IMAGE_NAME ;"
"What are the names and urls of images , sorted alphabetically ?",spider,"SELECT IMAGESalias0.IMAGE_NAME , IMAGESalias0.IMAGE_URL FROM IMAGES AS IMAGESalias0 ORDER BY IMAGESalias0.IMAGE_NAME ;"
Find the number of users in each role .,spider,"SELECT COUNT( * ) , USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 GROUP BY USERSalias0.ROLE_CODE ;"
"What are the different role codes for users , and how many users have each ?",spider,"SELECT COUNT( * ) , USERSalias0.ROLE_CODE FROM USERS AS USERSalias0 GROUP BY USERSalias0.ROLE_CODE ;"
How many companies are there ?,spider,SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 ;
Count the number of companies .,spider,SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 ;
List the names of companies in descending order of market value .,spider,SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.MARKET_VALUE_BILLION DESC ;
Sort the company names in descending order of the company's market value .,spider,SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.MARKET_VALUE_BILLION DESC ;
"What are the names of companies whose headquarters are not "" var0 "" ?",spider,"SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS != ""var0"" ;"
"Find the names of the companies whose headquarters are not located in "" var0 "" .",spider,"SELECT COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS != ""var0"" ;"
"What are the name and assets of each company , sorted in ascending order of company name ?",spider,"SELECT COMPANIESalias0.ASSETS_BILLION , COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.NAME ASC ;"
List the name and assets of each company in ascending order of company name .,spider,"SELECT COMPANIESalias0.ASSETS_BILLION , COMPANIESalias0.NAME FROM COMPANIES AS COMPANIESalias0 ORDER BY COMPANIESalias0.NAME ASC ;"
What are the average profits of companies ?,spider,SELECT AVG( COMPANIESalias0.PROFITS_BILLION ) FROM COMPANIES AS COMPANIESalias0 ;
Compute the average profits companies make .,spider,SELECT AVG( COMPANIESalias0.PROFITS_BILLION ) FROM COMPANIES AS COMPANIESalias0 ;
"What are the maximum and minimum sales of the companies whose industries are not "" var0 "" .",spider,"SELECT MAX( COMPANIESalias0.SALES_BILLION ) , MIN( COMPANIESalias0.SALES_BILLION ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY != ""var0"" ;"
"Find the maximum and minimum sales of the companies that are not in the "" var0 "" industry .",spider,"SELECT MAX( COMPANIESalias0.SALES_BILLION ) , MIN( COMPANIESalias0.SALES_BILLION ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY != ""var0"" ;"
How many different industries are the companies in ?,spider,SELECT COUNT( DISTINCT COMPANIESalias0.INDUSTRY ) FROM COMPANIES AS COMPANIESalias0 ;
Count the number of distinct company industries .,spider,SELECT COUNT( DISTINCT COMPANIESalias0.INDUSTRY ) FROM COMPANIES AS COMPANIESalias0 ;
List the names of buildings in descending order of building height .,spider,SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC ;
What are the names of buildings sorted in descending order of building height ?,spider,SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC ;
Find the stories of the building with the largest height .,spider,SELECT BUILDINGSalias0.STORIES FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC LIMIT 1 ;
What is the stories of highest building ?,spider,SELECT BUILDINGSalias0.STORIES FROM BUILDINGS AS BUILDINGSalias0 ORDER BY BUILDINGSalias0.HEIGHT DESC LIMIT 1 ;
List the name of a building along with the name of a company whose office is in the building .,spider,"SELECT BUILDINGSalias0.NAME , COMPANIESalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID ;"
"For each company , return the company name and the name of the building its office is located in .",spider,"SELECT BUILDINGSalias0.NAME , COMPANIESalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID ;"
Show the names of the buildings that have more than one company offices .,spider,SELECT BUILDINGSalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID GROUP BY OFFICE_LOCATIONSalias0.BUILDING_ID HAVING COUNT( OFFICE_LOCATIONSalias0.* ) > var0 ;
Which buildings have more than one company offices ? Give me the building names .,spider,SELECT BUILDINGSalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID GROUP BY OFFICE_LOCATIONSalias0.BUILDING_ID HAVING COUNT( OFFICE_LOCATIONSalias0.* ) > var0 ;
Show the name of the building that has the most company offices .,spider,SELECT BUILDINGSalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID GROUP BY OFFICE_LOCATIONSalias0.BUILDING_ID ORDER BY COUNT( OFFICE_LOCATIONSalias0.* ) DESC LIMIT 1 ;
Which building has the largest number of company offices ? Give me the building name .,spider,SELECT BUILDINGSalias0.NAME FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 JOIN BUILDINGS AS BUILDINGSalias0 ON OFFICE_LOCATIONSalias0.BUILDING_ID = BUILDINGSalias0.ID JOIN COMPANIES AS COMPANIESalias0 ON OFFICE_LOCATIONSalias0.COMPANY_ID = COMPANIESalias0.ID GROUP BY OFFICE_LOCATIONSalias0.BUILDING_ID ORDER BY COUNT( OFFICE_LOCATIONSalias0.* ) DESC LIMIT 1 ;
"Please show the names of the buildings whose status is "" var0 "" , in ascending order of stories .",spider,"SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE STATUS = ""var0"" ORDER BY BUILDINGSalias0.STORIES ASC ;"
"Find the names of the buildings in "" var0 "" status , and sort them in ascending order of building stories .",spider,"SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE STATUS = ""var0"" ORDER BY BUILDINGSalias0.STORIES ASC ;"
Please show each industry and the corresponding number of companies in that industry .,spider,"SELECT COMPANIESalias0.INDUSTRY , COUNT( * ) FROM COMPANIES AS COMPANIESalias0 GROUP BY COMPANIESalias0.INDUSTRY ;"
Whah are the name of each industry and the number of companies in that industry ?,spider,"SELECT COMPANIESalias0.INDUSTRY , COUNT( * ) FROM COMPANIES AS COMPANIESalias0 GROUP BY COMPANIESalias0.INDUSTRY ;"
Please show the industries of companies in descending order of the number of companies .,spider,SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 GROUP BY INDUSTRY ORDER BY COUNT( * ) DESC ;
Sort all the industries in descending order of the count of companies in each industry,spider,SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 GROUP BY INDUSTRY ORDER BY COUNT( * ) DESC ;
List the industry shared by the most companies .,spider,SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 GROUP BY INDUSTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which industry has the most companies ?,spider,SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 GROUP BY INDUSTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of buildings that have no company office .,spider,SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE BUILDINGSalias0.ID NOT IN ( SELECT OFFICE_LOCATIONSalias0.BUILDING_ID FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 ) ;
Which buildings do not have any company office ? Give me the building names .,spider,SELECT BUILDINGSalias0.NAME FROM BUILDINGS AS BUILDINGSalias0 WHERE BUILDINGSalias0.ID NOT IN ( SELECT OFFICE_LOCATIONSalias0.BUILDING_ID FROM OFFICE_LOCATIONS AS OFFICE_LOCATIONSalias0 ) ;
"Show the industries shared by companies whose headquarters are "" var0 "" and companies whose headquarters are "" var1 "" .",spider,"SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS = ""var0"" INTERSECT SELECT COMPANIESalias1.INDUSTRY FROM COMPANIES AS COMPANIESalias1 WHERE COMPANIESalias1.HEADQUARTERS = ""var1"" ;"
"Which industries have both companies with headquarter in "" var0 "" and companies with headquarter in "" var1 "" ?",spider,"SELECT COMPANIESalias0.INDUSTRY FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.HEADQUARTERS = ""var0"" INTERSECT SELECT COMPANIESalias1.INDUSTRY FROM COMPANIES AS COMPANIESalias1 WHERE COMPANIESalias1.HEADQUARTERS = ""var1"" ;"
"Find the number of companies whose industry is "" var0 "" or "" var1 "" ,",spider,"SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY = ""var0"" OR COMPANIESalias0.INDUSTRY = ""var1"" ;"
"How many companies are in either "" var0 "" industry or "" var1 "" industry ?",spider,"SELECT COUNT( * ) FROM COMPANIES AS COMPANIESalias0 WHERE COMPANIESalias0.INDUSTRY = ""var0"" OR COMPANIESalias0.INDUSTRY = ""var1"" ;"
Show the headquarters shared by more than two companies .,spider,SELECT COMPANIESalias0.HEADQUARTERS FROM COMPANIES AS COMPANIESalias0 GROUP BY COMPANIESalias0.HEADQUARTERS HAVING COUNT( * ) > var0 ;
Which headquarter locations are used by more than var0 companies ?,spider,SELECT COMPANIESalias0.HEADQUARTERS FROM COMPANIES AS COMPANIESalias0 GROUP BY COMPANIESalias0.HEADQUARTERS HAVING COUNT( * ) > var0 ;
How many products are there ?,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 ;
How many products are there ?,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 ;
Count the number of products .,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 ;
List the name of products in ascending order of price .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE ASC ;
List all product names in ascending order of price .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE ASC ;
Sort the names of products in ascending order of their price .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE ASC ;
What are the names and type codes of products ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 ;"
"Show the prices of the products named "" var0 "" or "" var1 "" .",spider,"SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" OR PRODUCTSalias0.PRODUCT_NAME = ""var1"" ;"
What is the average price for products ?,spider,SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
Show different type codes of products and the number of products with each type code .,spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
Show the most common type code across products .,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the product type codes that have at least two products .,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING COUNT( * ) >= var0 ;
Show the product type codes which have at least two products .,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING COUNT( * ) >= var0 ;
Show the product type codes that have both products with price higher than var0 and products with price lower than var1 .,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 INTERSECT SELECT PRODUCTSalias1.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias1 WHERE PRODUCTSalias1.PRODUCT_PRICE < var1 ;
Show the names of products and the number of events they are in .,spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
"Show the names of products and the number of events they are in , sorted by the number of events in descending order .",spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ORDER BY COUNT( * ) DESC ;"
Show the names of products that are in at least two events .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING COUNT( * ) >= var0 ;
Show the names of products that are in at least two events in ascending alphabetical order of product name .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ON PRODUCTSalias0.PRODUCT_ID = PRODUCTS_IN_EVENTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING COUNT( * ) >= var0 ORDER BY PRODUCTSalias0.PRODUCT_NAME ;
List the names of products that are not in any event .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT PRODUCTS_IN_EVENTSalias0.PRODUCT_ID FROM PRODUCTS_IN_EVENTS AS PRODUCTS_IN_EVENTSalias0 ) ;
How many artworks are there ?,spider,SELECT COUNT( * ) FROM ARTWORK AS ARTWORKalias0 ;
List the name of artworks in ascending alphabetical order .,spider,SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 ORDER BY ARTWORKalias0.NAME ASC ;
"List the name of artworks whose type is not "" var0 "" .",spider,"SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.TYPE != ""var0"" ;"
What are the names and locations of festivals ?,spider,"SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME , FESTIVAL_DETAILalias0.LOCATION FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ;"
"What are the names of the chairs of festivals , sorted in ascending order of the year held ?",spider,SELECT FESTIVAL_DETAILalias0.CHAIR_NAME FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ORDER BY FESTIVAL_DETAILalias0.YEAR ASC ;
What is the location of the festival with the largest number of audience ?,spider,SELECT FESTIVAL_DETAILalias0.LOCATION FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ORDER BY FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE DESC LIMIT 1 ;
What are the names of festivals held in year var0 ?,spider,SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.YEAR = var0 ;
What is the average number of audience for festivals ?,spider,SELECT AVG( FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE ) FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ;
Show the names of the three most recent festivals .,spider,SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ORDER BY FESTIVAL_DETAILalias0.YEAR DESC LIMIT var0 ;
"For each nomination , show the name of the artwork and name of the festival where it is nominated .",spider,"SELECT ARTWORKalias0.NAME , FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID ;"
Show distinct types of artworks that are nominated in festivals in var0 .,spider,SELECT DISTINCT ARTWORKalias0.TYPE FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID WHERE FESTIVAL_DETAILalias0.YEAR = var0 ;
Show the names of artworks in ascending order of the year they are nominated in .,spider,SELECT ARTWORKalias0.NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID ORDER BY FESTIVAL_DETAILalias0.YEAR ;
"Show the names of festivals that have nominated artworks of type "" var0 "" .",spider,"SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID WHERE ARTWORKalias0.TYPE = ""var0"" ;"
Show the ids and names of festivals that have at least two nominations for artworks .,spider,"SELECT FESTIVAL_DETAILalias0.FESTIVAL_NAME , NOMINATIONalias0.FESTIVAL_ID FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID GROUP BY NOMINATIONalias0.FESTIVAL_ID HAVING COUNT( NOMINATIONalias0.* ) >= var0 ;"
"Show the id , name of each festival and the number of artworks it has nominated .",spider,"SELECT COUNT( NOMINATIONalias0.* ) , FESTIVAL_DETAILalias0.FESTIVAL_NAME , NOMINATIONalias0.FESTIVAL_ID FROM NOMINATION AS NOMINATIONalias0 JOIN ARTWORK AS ARTWORKalias0 ON NOMINATIONalias0.ARTWORK_ID = ARTWORKalias0.ARTWORK_ID JOIN FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ON NOMINATIONalias0.FESTIVAL_ID = FESTIVAL_DETAILalias0.FESTIVAL_ID GROUP BY NOMINATIONalias0.FESTIVAL_ID ;"
Please show different types of artworks with the corresponding number of artworks of each type .,spider,"SELECT ARTWORKalias0.TYPE , COUNT( * ) FROM ARTWORK AS ARTWORKalias0 GROUP BY ARTWORKalias0.TYPE ;"
List the most common type of artworks .,spider,SELECT ARTWORKalias0.TYPE FROM ARTWORK AS ARTWORKalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the year in which there are more than one festivals .,spider,SELECT FESTIVAL_DETAILalias0.YEAR FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 GROUP BY FESTIVAL_DETAILalias0.YEAR HAVING COUNT( * ) > var0 ;
List the name of artworks that are not nominated .,spider,SELECT ARTWORKalias0.NAME FROM ARTWORK AS ARTWORKalias0 WHERE ARTWORKalias0.ARTWORK_ID NOT IN ( SELECT NOMINATIONalias0.ARTWORK_ID FROM NOMINATION AS NOMINATIONalias0 ) ;
Show the number of audience in year var0 or var1 .,spider,SELECT FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.YEAR = var0 OR FESTIVAL_DETAILalias0.YEAR = var1 ;
What are the total number of the audiences who visited any of the festivals ?,spider,SELECT SUM( FESTIVAL_DETAILalias0.NUM_OF_AUDIENCE ) FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 ;
In which year are there festivals both inside the ' var0 ' and outside the ' var0 ' ?,spider,"SELECT FESTIVAL_DETAILalias0.YEAR FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias0 WHERE FESTIVAL_DETAILalias0.LOCATION = ""var0"" INTERSECT SELECT FESTIVAL_DETAILalias1.YEAR FROM FESTIVAL_DETAIL AS FESTIVAL_DETAILalias1 WHERE FESTIVAL_DETAILalias1.LOCATION != ""var1"" ;"
How many premises are there ?,spider,SELECT COUNT( * ) FROM PREMISES AS PREMISESalias0 ;
What are all the distinct premise types ?,spider,SELECT DISTINCT PREMISESalias0.PREMISES_TYPE FROM PREMISES AS PREMISESalias0 ;
Find the types and details for all premises and order by the premise type .,spider,"SELECT PREMISESalias0.PREMISES_TYPE , PREMISESalias0.PREMISE_DETAILS FROM PREMISES AS PREMISESalias0 ORDER BY PREMISESalias0.PREMISES_TYPE ;"
Show each premise type and the number of premises in that type .,spider,"SELECT COUNT( * ) , PREMISESalias0.PREMISES_TYPE FROM PREMISES AS PREMISESalias0 GROUP BY PREMISESalias0.PREMISES_TYPE ;"
Show all distinct product categories along with the number of mailshots in each category .,spider,"SELECT COUNT( * ) , MAILSHOT_CAMPAIGNSalias0.PRODUCT_CATEGORY FROM MAILSHOT_CAMPAIGNS AS MAILSHOT_CAMPAIGNSalias0 GROUP BY MAILSHOT_CAMPAIGNSalias0.PRODUCT_CATEGORY ;"
Show the name and phone of the customer without any mailshot .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 ) ;"
Show the name and phone for customers with a mailshot with outcome code ' var0 ' .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE = ""var0"" ;"
Show the outcome code of mailshots along with the number of mailshots in each outcome code .,spider,"SELECT COUNT( * ) , MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 GROUP BY MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE ;"
Show the names of customers who have at least var1 mailshots with outcome code ' var0 ' .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE OUTCOME_CODE = ""var0"" GROUP BY MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var1 ;"
Show the names of customers who have the most mailshots .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the name and payment method of customers who have both mailshots in ' var0 ' outcome and mailshots in ' var1 ' outcome .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.PAYMENT_METHOD FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON MAILSHOT_CUSTOMERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias0.OUTCOME_CODE = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME , CUSTOMERSalias1.PAYMENT_METHOD FROM MAILSHOT_CUSTOMERS AS MAILSHOT_CUSTOMERSalias1 JOIN CUSTOMERS AS CUSTOMERSalias1 ON MAILSHOT_CUSTOMERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE MAILSHOT_CUSTOMERSalias1.OUTCOME_CODE = ""var1"" ;"
Show the premise type and address type code for all customer addresses .,spider,"SELECT CUSTOMER_ADDRESSESalias0.ADDRESS_TYPE_CODE , PREMISESalias0.PREMISES_TYPE FROM CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 JOIN PREMISES AS PREMISESalias0 ON PREMISESalias0.PREMISE_ID = CUSTOMER_ADDRESSESalias0.PREMISE_ID ;"
What are the distinct address type codes for all customer addresses ?,spider,SELECT DISTINCT CUSTOMER_ADDRESSESalias0.ADDRESS_TYPE_CODE FROM CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ;
Show the shipping charge and customer id for customer orders with order status var0 or var1 .,spider,"SELECT CUSTOMER_ORDERSalias0.CUSTOMER_ID , CUSTOMER_ORDERSalias0.ORDER_SHIPPING_CHARGES FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" OR CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var1"" ;"
Show the names of customers having an order with shipping method var0 and order status var1 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var1"" AND CUSTOMER_ORDERSalias0.SHIPPING_METHOD_CODE = ""var0"" ;"
How many courses are there in total ?,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 ;
Count the number of courses .,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 ;
How many courses have more than var0 credits ?,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS > var0 ;
Count the number of courses with more than var0 credits .,spider,SELECT COUNT( * ) FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS > var0 ;
List all names of courses with var0 credit ?,spider,SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = var0 ;
What are the names of courses with var0 credit ?,spider,SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = var0 ;
Which courses are taught on days var0 ?,spider,"SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DAYS = ""var0"" ;"
What are the course names for courses taught on var0 ?,spider,"SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.DAYS = ""var0"" ;"
"What is the number of departments in Division "" var0 "" ?",spider,"SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = ""var0"" ;"
How many departments are in the division var0 ?,spider,"SELECT COUNT( * ) FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = ""var0"" ;"
What are the phones of departments in Room var0 ?,spider,SELECT DPHONE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.ROOM = var0 ;
Give the phones for departments in room var0 .,spider,SELECT DPHONE FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.ROOM = var0 ;
"Find the number of students that have at least one grade "" var0 "" .",spider,"SELECT COUNT( DISTINCT STUID ) FROM ENROLLED_IN AS ENROLLED_INalias0 WHERE ENROLLED_INalias0.GRADE = ""var0"" ;"
"How many students have had at least one "" var0 "" grade ?",spider,"SELECT COUNT( DISTINCT STUID ) FROM ENROLLED_IN AS ENROLLED_INalias0 WHERE ENROLLED_INalias0.GRADE = ""var0"" ;"
Find the max and min grade point for all letter grade .,spider,"SELECT MAX( GRADEPOINT ) , MIN( GRADEPOINT ) FROM GRADECONVERSION ;"
What are the maximum and minumum grade points ?,spider,"SELECT MAX( GRADEPOINT ) , MIN( GRADEPOINT ) FROM GRADECONVERSION ;"
"Find the first nvar0mes of students whose first nvar0mes contvar0in letter "" var0 "" .",spider,"SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias0 WHERE FNAME LIKE ""var0"" ;"
"Whvar0t var0re the first nvar0mes for students who hvar0ve var0n "" var0 "" in their first nvar0me ?",spider,"SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias0 WHERE FNAME LIKE ""var0"" ;"
Find the first names and last names of male (sex is var0) faculties who live in building var1 .,spider,"SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.SEX = ""var0"" ;"
What are the full names of faculties with sex var0 and who live in building var1 ?,spider,"SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.SEX = ""var0"" ;"
Find the rooms of faculties with rank professor who live in building var1 .,spider,"SELECT FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.RANK = ""var0"" ;"
What are the rooms for members of the faculty who are professors and who live in building var1 ?,spider,"SELECT FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.RANK = ""var0"" ;"
"Find the department name that is in Building "" var0 "" .",spider,"SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUILDING = ""var0"" ;"
What is the name of the department in the Building var0 ?,spider,"SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.BUILDING = ""var0"" ;"
List all information about courses sorted by credits in the ascending order .,spider,SELECT * FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
"What is all the information about courses , ordered by credits ascending ?",spider,SELECT * FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
List the course name of courses sorted by credits .,spider,SELECT CNAME FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
"What are the course names , ordered by credits ?",spider,SELECT CNAME FROM COURSE AS COURSEalias0 ORDER BY COURSEalias0.CREDITS ;
Find the first name of students in the descending order of age .,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 ORDER BY STUDENTalias0.AGE DESC ;
"What are the first names of students , ordered by age from greatest to least ?",spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 ORDER BY STUDENTalias0.AGE DESC ;
var0ind the last name of female (sex is var0) students in the descending order of age .,spider,"SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" ORDER BY STUDENTalias0.AGE DESC ;"
"What are the last names of female students , ordered by age descending ?",spider,"SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" ORDER BY STUDENTalias0.AGE DESC ;"
Find the last names of faculties in building var0 in alphabetic order .,spider,"SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE BUILDING = ""var0"" ORDER BY LNAME ;"
"What are the last names of faculty in building var0 , sorted by last name ?",spider,"SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE BUILDING = ""var0"" ORDER BY LNAME ;"
Find the first names of faculties of rank var0 in alphabetic order .,spider,"SELECT FNAME FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" ORDER BY FNAME ;"
"What are the first names for all faculty professors , ordered by first name ?",spider,"SELECT FNAME FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" ORDER BY FNAME ;"
Find the name of the department that has the biggest number of students minored in ?,spider,SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MINOR_INalias0.DNO ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the department with the most students minoring in it ?,spider,SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MINOR_INalias0.DNO ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the department that has no students minored in ?,spider,SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 EXCEPT SELECT DEPARTMENTalias1.DNAME FROM DEPARTMENT AS DEPARTMENTalias1 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias1.DNO ;
What is the name of the department htat has no students minoring in it ?,spider,SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 EXCEPT SELECT DEPARTMENTalias1.DNAME FROM DEPARTMENT AS DEPARTMENTalias1 JOIN MINOR_IN AS MINOR_INalias0 ON MINOR_INalias0.DNO = DEPARTMENTalias1.DNO ;
Find the name of the department that has the fewest members .,spider,SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MEMBER_OFalias0.DNO ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the name of the department with the fewest members ?,spider,SELECT DEPARTMENTalias0.DNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO GROUP BY MEMBER_OFalias0.DNO ORDER BY COUNT( * ) ASC LIMIT 1 ;
Find the rank of the faculty that the fewest faculties belong to .,spider,SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the least common faculty rank ?,spider,SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( * ) ASC LIMIT 1 ;
What are the first and last names of the instructors who teach the top var0 number of courses ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR GROUP BY COURSEalias0.INSTRUCTOR ORDER BY COUNT( * ) DESC LIMIT var0 ;"
What are the full names of the var0 instructors who teach the most courses ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR GROUP BY COURSEalias0.INSTRUCTOR ORDER BY COUNT( * ) DESC LIMIT var0 ;"
Which building does the instructor who teaches the most number of courses live in ?,spider,SELECT FACULTYalias0.BUILDING FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR GROUP BY COURSEalias0.INSTRUCTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Give the building that the instructor who teaches the greatest number of courses lives in .,spider,SELECT FACULTYalias0.BUILDING FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR GROUP BY COURSEalias0.INSTRUCTOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the name of courses that have at least five enrollments ?,spider,SELECT COURSEalias0.CNAME FROM COURSE AS COURSEalias0 JOIN ENROLLED_IN AS ENROLLED_INalias0 ON ENROLLED_INalias0.CID = COURSEalias0.CID GROUP BY ENROLLED_INalias0.CID HAVING COUNT( * ) >= var0 ;
Give the names of the courses with at least five enrollments .,spider,SELECT COURSEalias0.CNAME FROM COURSE AS COURSEalias0 JOIN ENROLLED_IN AS ENROLLED_INalias0 ON ENROLLED_INalias0.CID = COURSEalias0.CID GROUP BY ENROLLED_INalias0.CID HAVING COUNT( * ) >= var0 ;
Find the first name and last name of the instructor of course that has course name,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR WHERE COURSEalias0.CNAME = ""var0"" ;"
What is the full name of the instructor who has a course named var0 ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM COURSE AS COURSEalias0 JOIN FACULTY AS FACULTYalias0 ON FACULTYalias0.FACID = COURSEalias0.INSTRUCTOR WHERE COURSEalias0.CNAME = ""var0"" ;"
Find the department name and room of the course var0 .,spider,"SELECT DEPARTMENTalias0.DNAME , DEPARTMENTalias0.ROOM FROM COURSE AS COURSEalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DNO = COURSEalias0.DNO WHERE COURSEalias0.CNAME = ""var0"" ;"
What are the department name and room for the course var0 ?,spider,"SELECT DEPARTMENTalias0.DNAME , DEPARTMENTalias0.ROOM FROM COURSE AS COURSEalias0 JOIN DEPARTMENT AS DEPARTMENTalias0 ON DEPARTMENTalias0.DNO = COURSEalias0.DNO WHERE COURSEalias0.CNAME = ""var0"" ;"
Find the student first and last names and grade points of all enrollments .,spider,"SELECT DERIVED_TABLEalias0.GRADEPOINT , STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID ;"
What are the full names and gradepoints for all enrollments ?,spider,"SELECT DERIVED_TABLEalias0.GRADEPOINT , STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID ;"
Find the distinct student first names of all students that have grade point at least var0 in one course .,spider,SELECT DISTINCT STUDENTalias0.FNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE DERIVED_TABLEalias0.GRADEPOINT >= var0 ;
What are the distinct first names for students with a grade point of var0 or above in at least one course ?,spider,SELECT DISTINCT STUDENTalias0.FNAME FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE DERIVED_TABLEalias0.GRADEPOINT >= var0 ;
Find the full names of faculties who are members of department with department number var0 .,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE MEMBER_OFalias0.DNO = var0 ;"
What are the full names of faculty members who are a part of department var0 ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE MEMBER_OFalias0.DNO = var0 ;"
What are the first names and last names of the students that minor in the department with DNO var0 .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM MINOR_IN AS MINOR_INalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MINOR_INalias0.STUID WHERE MINOR_INalias0.DNO = var0 ;"
What are the full names of students minoring in department var0 ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM MINOR_IN AS MINOR_INalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = MINOR_INalias0.STUID WHERE MINOR_INalias0.DNO = var0 ;"
Find the last names of faculties who are members of computer science department .,spider,"SELECT FACULTYalias0.LNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN FACULTY AS FACULTYalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE DEPARTMENTalias0.DNAME = ""var0"" ;"
What are the last names of faculty who are part of the computer science department ?,spider,"SELECT FACULTYalias0.LNAME FROM DEPARTMENT AS DEPARTMENTalias0 JOIN FACULTY AS FACULTYalias0 ON MEMBER_OFalias0.DNO = DEPARTMENTalias0.DNO JOIN MEMBER_OF AS MEMBER_OFalias0 ON MEMBER_OFalias0.FACID = FACULTYalias0.FACID WHERE DEPARTMENTalias0.DNAME = ""var0"" ;"
Find the average grade point of student whose last name is var0 .,spider,"SELECT AVG( DERIVED_TABLEalias0.GRADEPOINT ) FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
What is the average gradepoint for students with the last name var0 ?,spider,"SELECT AVG( DERIVED_TABLEalias0.GRADEPOINT ) FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
What is the maximum and minimum grade point of students who live in var0 ?,spider,"SELECT MAX( DERIVED_TABLEalias0.GRADEPOINT ) , MIN( DERIVED_TABLEalias0.GRADEPOINT ) FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
Give the maximum and minimum gradepoints for students living in var0 ?,spider,"SELECT MAX( DERIVED_TABLEalias0.GRADEPOINT ) , MIN( DERIVED_TABLEalias0.GRADEPOINT ) FROM ENROLLED_IN AS ENROLLED_INalias0 JOIN GRADECONVERSION AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON ENROLLED_INalias0.GRADE = DERIVED_TABLEalias0.LETTERGRADE AND STUDENTalias0.STUID = ENROLLED_INalias0.STUID WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
Find the names of courses that have either var0 credits or var1 credit but var2 hours .,spider,SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = var0 UNION SELECT CNAME FROM COURSE AS COURSEalias1 WHERE COURSEalias1.CREDITS = var1 AND COURSEalias1.HOURS = var2 ;
"What are the names of courses that give either var0 credits , or var1 credit and var2 hours ?",spider,SELECT CNAME FROM COURSE AS COURSEalias0 WHERE COURSEalias0.CREDITS = var0 UNION SELECT CNAME FROM COURSE AS COURSEalias1 WHERE COURSEalias1.CREDITS = var1 AND COURSEalias1.HOURS = var2 ;
Find the names of departments that are either in division var0 or in division var1 and in Building var2 .,spider,"SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = ""var0"" UNION SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias1 WHERE DEPARTMENTalias1.DIVISION = ""var1"" AND DEPARTMENTalias1.BUILDING = ""var2"" ;"
"What are the names of departments either in division var0 , or in division var1 and in building var2 ?",spider,"SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias0 WHERE DEPARTMENTalias0.DIVISION = ""var0"" UNION SELECT DNAME FROM DEPARTMENT AS DEPARTMENTalias1 WHERE DEPARTMENTalias1.DIVISION = ""var1"" AND DEPARTMENTalias1.BUILDING = ""var2"" ;"
Find the first name of students not enrolled in any course .,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUID FROM ENROLLED_IN AS ENROLLED_INalias0 ) ;
What are the first names of all students that are not enrolled in courses ?,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUID FROM ENROLLED_IN AS ENROLLED_INalias0 ) ;
What are the ids of the top three products that were purchased in the largest amount ?,spider,SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ORDER BY PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED DESC LIMIT var0 ;
Give the ids of the three products purchased in the largest amounts .,spider,SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ORDER BY PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED DESC LIMIT var0 ;
What are the product id and product type of the cheapest product ?,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;"
Give the id and product type of the product with the lowest price .,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;"
Find the number of different product types .,spider,SELECT COUNT( DISTINCT PRODUCTSalias0.PRODUCT_TYPE_CODE ) FROM PRODUCTS AS PRODUCTSalias0 ;
Count the number of distinct product types .,spider,SELECT COUNT( DISTINCT PRODUCTSalias0.PRODUCT_TYPE_CODE ) FROM PRODUCTS AS PRODUCTSalias0 ;
Return the address of customer var0 .,spider,SELECT ADDRESSESalias0.ADDRESS_DETAILS FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = var0 ;
What is the address for the customer with id var0 ?,spider,SELECT ADDRESSESalias0.ADDRESS_DETAILS FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = var0 ;
What are the staff ids and genders of all staffs whose job title is var0 ?,spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = ""var0"" ;"
Return the staff ids and genders for any staff with the title var0 .,spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_ID FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = ""var0"" ;"
"For each payment method , return how many customers use it .",spider,"SELECT COUNT( * ) , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.PAYMENT_METHOD_CODE ;"
How many customers use each payment method ?,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.PAYMENT_METHOD_CODE ;"
What is the id of the product that was ordered the most often ?,spider,SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Give the product id for the product that was ordered most frequently .,spider,SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What are the name , phone number and email address of the customer who made the largest number of orders ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Return the name , phone number and email address for the customer with the most orders .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the average price for each type of product ?,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
Return the average price for each product type .,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
How many department stores does the store chain var0 have ?,spider,"SELECT COUNT( * ) FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 JOIN DEPARTMENT_STORE_CHAIN AS DEPARTMENT_STORE_CHAINalias0 ON DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_ID = DEPARTMENT_STORESalias0.DEPT_STORE_CHAIN_ID WHERE DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_NAME = ""var0"" ;"
Count the number of stores the chain var0 has .,spider,"SELECT COUNT( * ) FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 JOIN DEPARTMENT_STORE_CHAIN AS DEPARTMENT_STORE_CHAINalias0 ON DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_ID = DEPARTMENT_STORESalias0.DEPT_STORE_CHAIN_ID WHERE DEPARTMENT_STORE_CHAINalias0.DEPT_STORE_CHAIN_NAME = ""var0"" ;"
What is the name and job title of the staff who was assigned the latest ?,spider,"SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO DESC LIMIT 1 ;"
Return the name and job title of the staff with the latest date assigned .,spider,"SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO DESC LIMIT 1 ;"
"Give me the product type , name and price for all the products supplied by supplier id var0 .",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;"
"Return the product type , name , and price for products supplied by supplier var0 .",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_PRICE , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;"
"Return the distinct name of customers whose order status is var0 , in the order of customer id .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" ORDER BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ;"
"What are the distinct names of customers with an order status of var0 , sorted by customer id ?",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" ORDER BY CUSTOMER_ORDERSalias0.CUSTOMER_ID ;"
Find the name and address of the customers who have both var0 and var1 orders .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ADDRESS , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ADDRESS , CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = ""var1"" ;"
What are the names and addressed of customers who have both var0 and var1 orders ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ADDRESS , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ADDRESS , CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = ""var1"" ;"
Return ids of all the products that are supplied by supplier id var0 and are more expensive than the average price of all products .,spider,SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) AND PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;
"What are the ids of products from the supplier with id var0 , which are more expensive than the average price across all products ?",spider,SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) AND PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = var0 ;
What is the id and name of the department store that has both var0 and var1 department ?,spider,"SELECT DEPARTMENT_STORESalias0.DEPT_STORE_ID , DEPARTMENT_STORESalias0.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 ON DEPARTMENT_STORESalias0.DEPT_STORE_ID = DEPARTMENTSalias0.DEPT_STORE_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" INTERSECT SELECT DEPARTMENT_STORESalias1.DEPT_STORE_ID , DEPARTMENT_STORESalias1.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias1 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias1 ON DEPARTMENT_STORESalias1.DEPT_STORE_ID = DEPARTMENTSalias1.DEPT_STORE_ID WHERE DEPARTMENTSalias1.DEPARTMENT_NAME = ""var1"" ;"
What are the ids and names of department stores with both var0 and var1 departments ?,spider,"SELECT DEPARTMENT_STORESalias0.DEPT_STORE_ID , DEPARTMENT_STORESalias0.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 ON DEPARTMENT_STORESalias0.DEPT_STORE_ID = DEPARTMENTSalias0.DEPT_STORE_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" INTERSECT SELECT DEPARTMENT_STORESalias1.DEPT_STORE_ID , DEPARTMENT_STORESalias1.STORE_NAME FROM DEPARTMENTS AS DEPARTMENTSalias1 JOIN DEPARTMENT_STORES AS DEPARTMENT_STORESalias1 ON DEPARTMENT_STORESalias1.DEPT_STORE_ID = DEPARTMENTSalias1.DEPT_STORE_ID WHERE DEPARTMENTSalias1.DEPARTMENT_NAME = ""var1"" ;"
What are the ids of the two department store chains with the largest number of department stores ?,spider,SELECT DEPT_STORE_CHAIN_ID FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 GROUP BY DEPT_STORE_CHAIN_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
Return the ids of the two department store chains with the most department stores .,spider,SELECT DEPT_STORE_CHAIN_ID FROM DEPARTMENT_STORES AS DEPARTMENT_STORESalias0 GROUP BY DEPT_STORE_CHAIN_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;
What is the id of the department with the least number of staff ?,spider,SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.DEPARTMENT_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 GROUP BY DEPARTMENT_ID ORDER BY COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) LIMIT 1 ;
Return the id of the department with the fewest staff assignments .,spider,SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.DEPARTMENT_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 GROUP BY DEPARTMENT_ID ORDER BY COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) LIMIT 1 ;
"For each product type , return the maximum and minimum price .",spider,"SELECT MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
What are the maximum and minimum product prices for each product type ?,spider,"SELECT MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
Find the product type whose average price is higher than the average price of all products .,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING AVG( PRODUCTSalias0.PRODUCT_PRICE ) > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
What is the code of the product type with an average price higher than the average price of all products ?,spider,SELECT PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_TYPE_CODE HAVING AVG( PRODUCTSalias0.PRODUCT_PRICE ) > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
Find the id and name of the staff who has been assigned for the shortest period .,spider,"SELECT STAFFalias0.STAFF_ID , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO - STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIMIT 1 ;"
What is the id and name of the staff who has been assigned for the least amount of time ?,spider,"SELECT STAFFalias0.STAFF_ID , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID ORDER BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO - STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIMIT 1 ;"
Return the names and ids of all products whose price is between var0 and var1 .,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE BETWEEN var0 AND var1 ;"
What are the names and ids of products costing between var0 and var1 ?,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE BETWEEN var0 AND var1 ;"
Find the ids of all distinct customers who made order after some orders that were var0 .,spider,"SELECT DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DATE > ( SELECT MIN( CUSTOMER_ORDERSalias1.ORDER_DATE ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = ""var0"" ) ;"
What are the distinct ids of customers who made an order after any order that was var0 ?,spider,"SELECT DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DATE > ( SELECT MIN( CUSTOMER_ORDERSalias1.ORDER_DATE ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = ""var0"" ) ;"
What is id of the staff who had a Staff Department Assignment earlier than any var0 ?,spider,"SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO < ( SELECT MAX( STAFF_DEPARTMENT_ASSIGNMENTSalias1.DATE_ASSIGNED_TO ) FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = ""var0"" ) ;"
Return the id of the staff whose Staff Department Assignment was earlier than that of any var0 .,spider,"SELECT STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_TO < ( SELECT MAX( STAFF_DEPARTMENT_ASSIGNMENTSalias1.DATE_ASSIGNED_TO ) FROM STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = ""var0"" ) ;"
What are the names and ids of customers whose address contains var0 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE ""var0"" ;"
Return the names and ids of customers who have var0 in their address .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE ""var0"" ;"
Return the name and gender of the staff who was assigned in 2016 .,spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIKE ""var0"" ;"
What are the names and genders of staff who were assigned in 2016 ?,spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.DATE_ASSIGNED_FROM LIKE ""var0"" ;"
List the name of staff who has been assigned multiple jobs .,spider,SELECT STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID GROUP BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID HAVING COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) > var0 ;
What are the names of staff who have been assigned multiple jobs ?,spider,SELECT STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID GROUP BY STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID HAVING COUNT( STAFF_DEPARTMENT_ASSIGNMENTSalias0.* ) > var0 ;
List the name and phone number of all suppliers in the alphabetical order of their addresses .,spider,"SELECT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN SUPPLIER_ADDRESSES AS SUPPLIER_ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.SUPPLIER_ID = SUPPLIERSalias0.SUPPLIER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ORDER BY ADDRESSESalias0.ADDRESS_DETAILS ;"
"What are the names and phone numbers for all suppliers , sorted in alphabetical order of their addressed ?",spider,"SELECT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN SUPPLIER_ADDRESSES AS SUPPLIER_ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.SUPPLIER_ID = SUPPLIERSalias0.SUPPLIER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON SUPPLIER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ORDER BY ADDRESSESalias0.ADDRESS_DETAILS ;"
What are the phone numbers of all customers and suppliers .,spider,SELECT CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 ;
Return the phone numbers for all customers and suppliers .,spider,SELECT CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 ;
Return the ids of all products that were ordered more than three times or supplied more than var1 .,spider,SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.PRODUCT_ID HAVING COUNT( * ) > var0 UNION SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 GROUP BY PRODUCT_SUPPLIERSalias0.PRODUCT_ID HAVING SUM( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) > var1 ;
What are the ids of all products that were either ordered more than var0 times or have a cumulative amount purchased of above var1 ?,spider,SELECT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 GROUP BY ORDER_ITEMSalias0.PRODUCT_ID HAVING COUNT( * ) > var0 UNION SELECT PRODUCT_SUPPLIERSalias0.PRODUCT_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 GROUP BY PRODUCT_SUPPLIERSalias0.PRODUCT_ID HAVING SUM( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) > var1 ;
What are id and name of the products whose price is lower than var0 or higher than var1 ?,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE < var0 OR PRODUCTSalias0.PRODUCT_PRICE > var1 ;"
Give the ids and names of products with price lower than var0 or higher than var1 .,spider,"SELECT PRODUCTSalias0.PRODUCT_ID , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE < var0 OR PRODUCTSalias0.PRODUCT_PRICE > var1 ;"
Find the id of suppliers whose average amount purchased for each product is above var0 or below var1 .,spider,SELECT PRODUCT_SUPPLIERSalias0.SUPPLIER_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 GROUP BY PRODUCT_SUPPLIERSalias0.SUPPLIER_ID HAVING AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) > var0 OR AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) < var1 ;
What are the ids of suppliers which have an average amount purchased of above var0 or below var1 ?,spider,SELECT PRODUCT_SUPPLIERSalias0.SUPPLIER_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 GROUP BY PRODUCT_SUPPLIERSalias0.SUPPLIER_ID HAVING AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) > var0 OR AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) < var1 ;
What are the average amount purchased and value purchased for the supplier who supplies the most products .,spider,"SELECT AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) , AVG( PRODUCT_SUPPLIERSalias0.TOTAL_VALUE_PURCHASED ) FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = ( SELECT PRODUCT_SUPPLIERSalias1.SUPPLIER_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias1 GROUP BY SUPPLIER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;"
Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products .,spider,"SELECT AVG( PRODUCT_SUPPLIERSalias0.TOTAL_AMOUNT_PURCHASED ) , AVG( PRODUCT_SUPPLIERSalias0.TOTAL_VALUE_PURCHASED ) FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 WHERE PRODUCT_SUPPLIERSalias0.SUPPLIER_ID = ( SELECT PRODUCT_SUPPLIERSalias1.SUPPLIER_ID FROM PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias1 GROUP BY SUPPLIER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;"
What is the largest and smallest customer codes ?,spider,"SELECT MAX( CUSTOMERSalias0.CUSTOMER_CODE ) , MIN( CUSTOMERSalias0.CUSTOMER_CODE ) FROM CUSTOMERS AS CUSTOMERSalias0 ;"
Return the maximum and minimum customer codes .,spider,"SELECT MAX( CUSTOMERSalias0.CUSTOMER_CODE ) , MIN( CUSTOMERSalias0.CUSTOMER_CODE ) FROM CUSTOMERS AS CUSTOMERSalias0 ;"
List the names of all the distinct customers who bought a var0 .,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the distinct names of customers who have purchased a var0 ?,spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
List the names and phone numbers of all the distinct suppliers who supply var0 .,spider,"SELECT DISTINCT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ON SUPPLIERSalias0.SUPPLIER_ID = PRODUCT_SUPPLIERSalias0.SUPPLIER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the distinct names and phone numbers for suppliers who have var0 ?,spider,"SELECT DISTINCT SUPPLIERSalias0.SUPPLIER_NAME , SUPPLIERSalias0.SUPPLIER_PHONE FROM SUPPLIERS AS SUPPLIERSalias0 JOIN PRODUCT_SUPPLIERS AS PRODUCT_SUPPLIERSalias0 ON SUPPLIERSalias0.SUPPLIER_ID = PRODUCT_SUPPLIERSalias0.SUPPLIER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCT_SUPPLIERSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"What are the highest and lowest prices of products , grouped by and alphabetically ordered by product type ?",spider,"SELECT MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCT_TYPE_CODE ORDER BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
"Give the maximum and minimum product prices for each product type , grouped and ordered by product type .",spider,"SELECT MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCT_TYPE_CODE ORDER BY PRODUCTSalias0.PRODUCT_TYPE_CODE ;"
"List the order id , customer id for orders in var0 status , ordered by their order dates .",spider,"SELECT CUSTOMER_ORDERSalias0.CUSTOMER_ID , CUSTOMER_ORDERSalias0.ORDER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE ORDER_STATUS_CODE = ""var0"" ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE ;"
"What are the order ids and customer ids for orders that have been var0 , sorted by their order dates ?",spider,"SELECT CUSTOMER_ORDERSalias0.CUSTOMER_ID , CUSTOMER_ORDERSalias0.ORDER_ID FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE ORDER_STATUS_CODE = ""var0"" ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE ;"
Find the names of products that were bought by at least two distinct customers .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) >= var0 ;
What are the distinct names of products purchased by at least two different customers ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) >= var0 ;
Find the names of customers who have bought by at least three distinct products .,spider,SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) >= var0 ;
What are the distinct names of customers who have purchased at least three different products ?,spider,SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) >= var0 ;
Find the name and gender of the staff who has been assigned the job of var0 but never var1 .,spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = ""var0"" EXCEPT SELECT STAFFalias1.STAFF_GENDER , STAFFalias1.STAFF_NAME FROM STAFF AS STAFFalias1 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 ON STAFFalias1.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias1.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = ""var1"" ;"
"What are the names and genders of staff who have held the title var0 , but never var1 ?",spider,"SELECT STAFFalias0.STAFF_GENDER , STAFFalias0.STAFF_NAME FROM STAFF AS STAFFalias0 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias0 ON STAFFalias0.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias0.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias0.JOB_TITLE_CODE = ""var0"" EXCEPT SELECT STAFFalias1.STAFF_GENDER , STAFFalias1.STAFF_NAME FROM STAFF AS STAFFalias1 JOIN STAFF_DEPARTMENT_ASSIGNMENTS AS STAFF_DEPARTMENT_ASSIGNMENTSalias1 ON STAFFalias1.STAFF_ID = STAFF_DEPARTMENT_ASSIGNMENTSalias1.STAFF_ID WHERE STAFF_DEPARTMENT_ASSIGNMENTSalias1.JOB_TITLE_CODE = ""var1"" ;"
Find the id and name of customers whose address contains var0 state and do not use credit card for payment .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE ""var0"" AND CUSTOMERSalias0.PAYMENT_METHOD_CODE != ""var1"" ;"
What are the ids and names of customers with addressed that contain var0 and who do not use a credit card for payment ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID , CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ADDRESS LIKE ""var0"" AND CUSTOMERSalias0.PAYMENT_METHOD_CODE != ""var1"" ;"
Find the average price of all product clothes .,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_TYPE_CODE = ""var0"" ;"
What is the average price of clothes ?,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_TYPE_CODE = ""var0"" ;"
Find the name of the most expensive hardware product .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCT_TYPE_CODE = ""var0"" ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;"
What is the name of the hardware product with the greatest price ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCT_TYPE_CODE = ""var0"" ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;"
List the description of all aircrafts .,spider,SELECT AIRCRAFTalias0.DESCRIPTION FROM AIRCRAFT AS AIRCRAFTalias0 ;
What are the descriptions for the aircrafts ?,spider,SELECT AIRCRAFTalias0.DESCRIPTION FROM AIRCRAFT AS AIRCRAFTalias0 ;
What is the average number of international passengers of all airports ?,spider,SELECT AVG( AIRPORTalias0.INTERNATIONAL_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 ;
What is the average number of international passengers for an airport ?,spider,SELECT AVG( AIRPORTalias0.INTERNATIONAL_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 ;
"What are the number of international and domestic passengers of the airport named London "" Heathrow "" ?",spider,"SELECT AIRPORTalias0.DOMESTIC_PASSENGERS , AIRPORTalias0.INTERNATIONAL_PASSENGERS FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" ;"
How many international and domestic passengers are there in the airport var0 ?,spider,"SELECT AIRPORTalias0.DOMESTIC_PASSENGERS , AIRPORTalias0.INTERNATIONAL_PASSENGERS FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" ;"
"What are the total number of Domestic Passengers of airports that contain the word "" var0 "" .",spider,"SELECT SUM( AIRPORTalias0.DOMESTIC_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_NAME LIKE ""var0"" ;"
What are the total number of domestic passengers at all var0 airports ?,spider,"SELECT SUM( AIRPORTalias0.DOMESTIC_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.AIRPORT_NAME LIKE ""var0"" ;"
What are the maximum and minimum number of transit passengers of all aiports .,spider,"SELECT MAX( AIRPORTalias0.TRANSIT_PASSENGERS ) , MIN( AIRPORTalias0.TRANSIT_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 ;"
What is the maximum and mininum number of transit passengers for all airports ?,spider,"SELECT MAX( AIRPORTalias0.TRANSIT_PASSENGERS ) , MIN( AIRPORTalias0.TRANSIT_PASSENGERS ) FROM AIRPORT AS AIRPORTalias0 ;"
What are the name of pilots aged var0 or older ?,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.AGE >= var0 ;
what is the name of every pilot who is at least var0 years old ?,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.AGE >= var0 ;
List all pilot names in ascending alphabetical order .,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.NAME ASC ;
What are the names of the pilots in alphabetical order ?,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.NAME ASC ;
List names of all pilot aged var0 or younger in descending alphabetical order .,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE AGE <= var0 ORDER BY PILOTalias0.NAME DESC ;
What are the names of all pilots var0 years old or young in descending alphabetical order ?,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE AGE <= var0 ORDER BY PILOTalias0.NAME DESC ;
"Please show the names of aircrafts associated with airport with name "" var0 "" .",spider,"SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" ;"
What are the names of all the aircrafts associated with var0 airport ?,spider,"SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" ;"
Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than var0 .,spider,"SELECT AIRCRAFTalias0.AIRCRAFT , AIRCRAFTalias0.DESCRIPTION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.TOTAL_PASSENGERS > var0 ;"
What are the names and descriptions of aircrafts associated with an airport that has more total passengers than var0 ?,spider,"SELECT AIRCRAFTalias0.AIRCRAFT , AIRCRAFTalias0.DESCRIPTION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.TOTAL_PASSENGERS > var0 ;"
"What is the average total number of passengers of airports that are associated with aircraft "" var0 "" ?",spider,"SELECT AVG( AIRPORTalias0.TOTAL_PASSENGERS ) FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRCRAFTalias0.AIRCRAFT = ""var0"" ;"
"What is the average total number of passengers for all airports that the aircraft "" var0 "" visits ?",spider,"SELECT AVG( AIRPORTalias0.TOTAL_PASSENGERS ) FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRCRAFTalias0.AIRCRAFT = ""var0"" ;"
Please list the location and the winning aircraft name .,spider,"SELECT AIRCRAFTalias0.AIRCRAFT , MATCHalias0.LOCATION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID ;"
What is the location and name of the winning aircraft ?,spider,"SELECT AIRCRAFTalias0.AIRCRAFT , MATCHalias0.LOCATION FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID ;"
List the name of the aircraft that has been named winning aircraft the most number of times .,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the aircraft that has won an award the most ?,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of aircrafts and the number of times it won matches .,spider,"SELECT AIRCRAFTalias0.AIRCRAFT , COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT ;"
"For each aircraft that has won an award , what is its name and how many time has it won ?",spider,"SELECT AIRCRAFTalias0.AIRCRAFT , COUNT( * ) FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT ;"
List names of all pilot in descending order of age .,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.AGE DESC ;
What are the names of all pilots listed by descending age ?,spider,SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 ORDER BY PILOTalias0.AGE DESC ;
List the names of aircrafts and that won matches at least twice .,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT HAVING COUNT( * ) >= var0 ;
What are the names of all aircrafts that have won a match at least twice ?,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN MATCH AS MATCHalias0 ON MATCHalias0.WINNING_AIRCRAFT = AIRCRAFTalias0.AIRCRAFT_ID GROUP BY MATCHalias0.WINNING_AIRCRAFT HAVING COUNT( * ) >= var0 ;
List the names of aircrafts and that did not win any match .,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_ID NOT IN ( SELECT MATCHalias0.WINNING_AIRCRAFT FROM MATCH AS MATCHalias0 ) ;
What are the names of all aicrafts that have never won any match ?,spider,SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 WHERE AIRCRAFTalias0.AIRCRAFT_ID NOT IN ( SELECT MATCHalias0.WINNING_AIRCRAFT FROM MATCH AS MATCHalias0 ) ;
"Show the names of aircrafts that are associated with both an airport named "" var0 "" and an airport named "" var1 """,spider,"SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" INTERSECT SELECT AIRCRAFTalias1.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias1 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias1 ON AIRPORT_AIRCRAFTalias1.AIRCRAFT_ID = AIRCRAFTalias1.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias1 ON AIRPORTalias1.AIRPORT_ID = AIRPORT_AIRCRAFTalias1.AIRPORT_ID WHERE AIRPORTalias1.AIRPORT_NAME = ""var1"" ;"
What are the names of all aircrafts that are associated with both var0 and Gatwick airports ?,spider,"SELECT AIRCRAFTalias0.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias0 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias0 ON AIRPORT_AIRCRAFTalias0.AIRCRAFT_ID = AIRCRAFTalias0.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias0 ON AIRPORTalias0.AIRPORT_ID = AIRPORT_AIRCRAFTalias0.AIRPORT_ID WHERE AIRPORTalias0.AIRPORT_NAME = ""var0"" INTERSECT SELECT AIRCRAFTalias1.AIRCRAFT FROM AIRCRAFT AS AIRCRAFTalias1 JOIN AIRPORT_AIRCRAFT AS AIRPORT_AIRCRAFTalias1 ON AIRPORT_AIRCRAFTalias1.AIRCRAFT_ID = AIRCRAFTalias1.AIRCRAFT_ID JOIN AIRPORT AS AIRPORTalias1 ON AIRPORTalias1.AIRPORT_ID = AIRPORT_AIRCRAFTalias1.AIRPORT_ID WHERE AIRPORTalias1.AIRPORT_NAME = ""var1"" ;"
Show all information on the airport that has the largest number of international passengers .,spider,SELECT * FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.INTERNATIONAL_PASSENGERS DESC LIMIT 1 ;
What is all the information on the airport with the largest number of international passengers ?,spider,SELECT * FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.INTERNATIONAL_PASSENGERS DESC LIMIT 1 ;
find the name and age of the pilot who has won the most number of times among the pilots who are younger than var0 .,spider,"SELECT PILOTalias0.AGE , PILOTalias0.NAME FROM PILOT AS PILOTalias0 JOIN MATCH AS MATCHalias0 ON PILOTalias0.PILOT_ID = MATCHalias0.WINNING_PILOT WHERE PILOTalias0.AGE < var0 GROUP BY MATCHalias0.WINNING_PILOT ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and age of the pilot younger than var0 who has won the most number of times ?,spider,"SELECT PILOTalias0.AGE , PILOTalias0.NAME FROM PILOT AS PILOTalias0 JOIN MATCH AS MATCHalias0 ON PILOTalias0.PILOT_ID = MATCHalias0.WINNING_PILOT WHERE PILOTalias0.AGE < var0 GROUP BY MATCHalias0.WINNING_PILOT ORDER BY COUNT( * ) DESC LIMIT 1 ;"
what is the name and age of the youngest winning pilot ?,spider,"SELECT PILOTalias0.AGE , PILOTalias0.NAME FROM PILOT AS PILOTalias0 JOIN MATCH AS MATCHalias0 ON PILOTalias0.PILOT_ID = MATCHalias0.WINNING_PILOT ORDER BY PILOTalias0.AGE LIMIT 1 ;"
How old is the youngest winning pilot and what is their name ?,spider,"SELECT PILOTalias0.AGE , PILOTalias0.NAME FROM PILOT AS PILOTalias0 JOIN MATCH AS MATCHalias0 ON PILOTalias0.PILOT_ID = MATCHalias0.WINNING_PILOT ORDER BY PILOTalias0.AGE LIMIT 1 ;"
find the name of pilots who did not win the matches held in the country of var0 .,spider,"SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT MATCHalias0.WINNING_PILOT FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COUNTRY = ""var0"" ) ;"
What are the names of the pilots that have not won any matches in var0 ?,spider,"SELECT PILOTalias0.NAME FROM PILOT AS PILOTalias0 WHERE PILOTalias0.PILOT_ID NOT IN ( SELECT MATCHalias0.WINNING_PILOT FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COUNTRY = ""var0"" ) ;"
How many residents does each property have ? List property id and resident count .,spider,"SELECT COUNT( * ) , PROPERTIESalias0.PROPERTY_ID FROM PROPERTIES AS PROPERTIESalias0 JOIN RESIDENTS AS RESIDENTSalias0 ON RESIDENTSalias0.PROPERTY_ID = PROPERTIESalias0.PROPERTY_ID GROUP BY PROPERTIESalias0.PROPERTY_ID ;"
What is the distinct service types that are provided by the organization which has detail ' var0 ' ?,spider,"SELECT DISTINCT SERVICESalias0.SERVICE_TYPE_CODE FROM SERVICES AS SERVICESalias0 JOIN ORGANIZATIONS AS ORGANIZATIONSalias0 ON SERVICESalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_DETAILS = ""var0"" ;"
"How many services has each resident requested ? List the resident id , details , and the count in descending order of the count .",spider,"SELECT COUNT( * ) , RESIDENTSalias0.OTHER_DETAILS , RESIDENTSalias0.RESIDENT_ID FROM RESIDENTS AS RESIDENTSalias0 JOIN RESIDENTS_SERVICES AS RESIDENTS_SERVICESalias0 ON RESIDENTSalias0.RESIDENT_ID = RESIDENTS_SERVICESalias0.RESIDENT_ID GROUP BY RESIDENTSalias0.RESIDENT_ID ORDER BY COUNT( * ) DESC ;"
"What is the maximum number that a certain service is provided ? List the service id , details and number .",spider,"SELECT COUNT( * ) , SERVICESalias0.SERVICE_DETAILS , SERVICESalias0.SERVICE_ID FROM SERVICES AS SERVICESalias0 JOIN RESIDENTS_SERVICES AS RESIDENTS_SERVICESalias0 ON SERVICESalias0.SERVICE_ID = RESIDENTS_SERVICESalias0.SERVICE_ID GROUP BY SERVICESalias0.SERVICE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"List the id and type of each thing , and the details of the organization that owns it .",spider,"SELECT ORGANIZATIONSalias0.ORGANIZATION_DETAILS , THINGSalias0.THING_ID , THINGSalias0.TYPE_OF_THING_CODE FROM THINGS AS THINGSalias0 JOIN ORGANIZATIONS AS ORGANIZATIONSalias0 ON THINGSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID ;"
What are the id and details of the customers who have at least var0 events ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ON CUSTOMER_EVENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
"What is each customer's move in date , and the corresponding customer id and details ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_DETAILS , CUSTOMERSalias0.CUSTOMER_ID , CUSTOMER_EVENTSalias0.DATE_MOVED_IN FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ON CUSTOMER_EVENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID ;"
Which events have the number of notes between one and three ? List the event id and the property id .,spider,"SELECT CUSTOMER_EVENTSalias0.CUSTOMER_EVENT_ID , CUSTOMER_EVENTSalias0.PROPERTY_ID FROM CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 JOIN CUSTOMER_EVENT_NOTES AS CUSTOMER_EVENT_NOTESalias0 ON CUSTOMER_EVENT_NOTESalias0.CUSTOMER_EVENT_ID = CUSTOMER_EVENTSalias0.CUSTOMER_EVENT_ID GROUP BY CUSTOMER_EVENTSalias0.CUSTOMER_EVENT_ID HAVING COUNT( * ) BETWEEN var0 AND var1 ;"
What are the distinct id and type of the thing that has the status ' var0 ' or has a status record before the date ' var1 ',spider,"SELECT DISTINCT THINGSalias0.THING_ID , THINGSalias0.TYPE_OF_THING_CODE FROM TIMED_STATUS_OF_THINGS AS TIMED_STATUS_OF_THINGSalias0 JOIN THINGS AS THINGSalias0 ON TIMED_STATUS_OF_THINGSalias0.THING_ID = THINGSalias0.THING_ID WHERE TIMED_STATUS_OF_THINGSalias0.DATE_AND_DATE < ""var1"" OR TIMED_STATUS_OF_THINGSalias0.STATUS_OF_THING_CODE = ""var0"" ;"
How many distinct locations have the things with service detail ' var0 ' been located in ?,spider,"SELECT COUNT( DISTINCT TIMED_LOCATIONS_OF_THINGSalias0.LOCATION_CODE ) FROM THINGS AS THINGSalias0 JOIN TIMED_LOCATIONS_OF_THINGS AS TIMED_LOCATIONS_OF_THINGSalias0 ON TIMED_LOCATIONS_OF_THINGSalias0.THING_ID = THINGSalias0.THING_ID WHERE THINGSalias0.SERVICE_DETAILS = ""var0"" ;"
How many different status codes of things are there ?,spider,SELECT COUNT( DISTINCT TIMED_STATUS_OF_THINGSalias0.STATUS_OF_THING_CODE ) FROM TIMED_STATUS_OF_THINGS AS TIMED_STATUS_OF_THINGSalias0 ;
Which organizations are not a parent organization of others ? List the organization id .,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_ID FROM ORGANIZATIONS AS ORGANIZATIONSalias0 EXCEPT SELECT ORGANIZATIONSalias1.PARENT_ORGANIZATION_ID FROM ORGANIZATIONS AS ORGANIZATIONSalias1 ;
When is the last day any resident moved in ?,spider,SELECT MAX( RESIDENTSalias0.DATE_MOVED_IN ) FROM RESIDENTS AS RESIDENTSalias0 ;
What are the resident details containing the substring ' var0 ' ?,spider,"SELECT RESIDENTSalias0.OTHER_DETAILS FROM RESIDENTS AS RESIDENTSalias0 WHERE RESIDENTSalias0.OTHER_DETAILS LIKE ""var0"" ;"
List the customer event id and the corresponding move in date and property id .,spider,"SELECT CUSTOMER_EVENTSalias0.CUSTOMER_EVENT_ID , CUSTOMER_EVENTSalias0.DATE_MOVED_IN , CUSTOMER_EVENTSalias0.PROPERTY_ID FROM CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ;"
How many customers did not have any event ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_EVENTSalias0.CUSTOMER_ID FROM CUSTOMER_EVENTS AS CUSTOMER_EVENTSalias0 ) ;
What are the distinct move in dates of the residents ?,spider,SELECT DISTINCT RESIDENTSalias0.DATE_MOVED_IN FROM RESIDENTS AS RESIDENTSalias0 ;
List the locations of schools in ascending order of enrollment .,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT ASC ;
What is the list of school locations sorted in ascending order of school enrollment ?,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT ASC ;
List the locations of schools in descending order of founded year .,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.FOUNDED DESC ;
What is the list of school locations sorted in descending order of school foundation year ?,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.FOUNDED DESC ;
"What are the enrollments of schools whose denomination is not "" var0 "" ?",spider,"SELECT SCHOOLalias0.ENROLLMENT FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.DENOMINATION != ""var0"" ;"
"List the enrollment for each school that does not have "" var0 "" as denomination .",spider,"SELECT SCHOOLalias0.ENROLLMENT FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.DENOMINATION != ""var0"" ;"
What is the average enrollment of schools ?,spider,SELECT AVG( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
Take the average of the school enrollment .,spider,SELECT AVG( SCHOOLalias0.ENROLLMENT ) FROM SCHOOL AS SCHOOLalias0 ;
"What are the teams of the players , sorted in ascending alphabetical order ?",spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.TEAM ASC ;
Find the team of each player and sort them in ascending alphabetical order .,spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.TEAM ASC ;
Find the team of the player of the highest age .,spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT 1 ;
Which team has the oldest player ?,spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT 1 ;
List the teams of the players with the top var0 largest ages .,spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT var0 ;
What are the teams that have the var0 oldest players ?,spider,SELECT PLAYERalias0.TEAM FROM PLAYER AS PLAYERalias0 ORDER BY PLAYERalias0.AGE DESC LIMIT var0 ;
"For each player , show the team and the location of school they belong to .",spider,"SELECT PLAYERalias0.TEAM , SCHOOLalias0.LOCATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID ;"
What are the team and the location of school each player belongs to ?,spider,"SELECT PLAYERalias0.TEAM , SCHOOLalias0.LOCATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID ;"
Show the locations of schools that have more than var0 player .,spider,SELECT SCHOOLalias0.LOCATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID GROUP BY PLAYERalias0.SCHOOL_ID HAVING COUNT( PLAYERalias0.* ) > var0 ;
Which schools have more than var0 player ? Give me the school locations .,spider,SELECT SCHOOLalias0.LOCATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID GROUP BY PLAYERalias0.SCHOOL_ID HAVING COUNT( PLAYERalias0.* ) > var0 ;
Show the denomination of the school that has the most players .,spider,SELECT SCHOOLalias0.DENOMINATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID GROUP BY PLAYERalias0.SCHOOL_ID ORDER BY COUNT( PLAYERalias0.* ) DESC LIMIT 1 ;
What is the denomination of the school the most players belong to ?,spider,SELECT SCHOOLalias0.DENOMINATION FROM PLAYER AS PLAYERalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = PLAYERalias0.SCHOOL_ID GROUP BY PLAYERalias0.SCHOOL_ID ORDER BY COUNT( PLAYERalias0.* ) DESC LIMIT 1 ;
Show locations and nicknames of schools .,spider,"SELECT SCHOOL_DETAILSalias0.NICKNAME , SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 JOIN SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_DETAILSalias0.SCHOOL_ID ;"
What are the location and nickname of each school ?,spider,"SELECT SCHOOL_DETAILSalias0.NICKNAME , SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 JOIN SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_DETAILSalias0.SCHOOL_ID ;"
Please show different denominations and the corresponding number of schools .,spider,"SELECT COUNT( * ) , SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.DENOMINATION ;"
"For each denomination , return the denomination and the count of schools with that denomination .",spider,"SELECT COUNT( * ) , SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.DENOMINATION ;"
Please show different denominations and the corresponding number of schools in descending order .,spider,"SELECT COUNT( * ) , SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY DENOMINATION ORDER BY COUNT( * ) DESC ;"
Order denominations in descending order of the count of schools with the denomination . Return each denomination with the count of schools .,spider,"SELECT COUNT( * ) , SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY DENOMINATION ORDER BY COUNT( * ) DESC ;"
List the school color of the school that has the largest enrollment .,spider,SELECT SCHOOLalias0.SCHOOL_COLORS FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT DESC LIMIT 1 ;
What is the school color of the school with the largest enrollment ?,spider,SELECT SCHOOLalias0.SCHOOL_COLORS FROM SCHOOL AS SCHOOLalias0 ORDER BY SCHOOLalias0.ENROLLMENT DESC LIMIT 1 ;
List the locations of schools that do not have any player .,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT PLAYERalias0.SCHOOL_ID FROM PLAYER AS PLAYERalias0 ) ;
Which schools do not have any player ? Give me the school locations .,spider,SELECT SCHOOLalias0.LOCATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT PLAYERalias0.SCHOOL_ID FROM PLAYER AS PLAYERalias0 ) ;
Show the denomination shared by schools founded before var0 and schools founded after var1,spider,SELECT SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.FOUNDED < var0 INTERSECT SELECT SCHOOLalias1.DENOMINATION FROM SCHOOL AS SCHOOLalias1 WHERE SCHOOLalias1.FOUNDED > var1 ;
What are the denominations used by both schools founded before var0 and schools founded after var1 ?,spider,SELECT SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.FOUNDED < var0 INTERSECT SELECT SCHOOLalias1.DENOMINATION FROM SCHOOL AS SCHOOLalias1 WHERE SCHOOLalias1.FOUNDED > var1 ;
Show the nicknames of schools that are not in division 1 .,spider,"SELECT SCHOOL_DETAILSalias0.NICKNAME FROM SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 WHERE SCHOOL_DETAILSalias0.DIVISION != ""var0"" ;"
What are the nicknames of schools whose division is not 1 ?,spider,"SELECT SCHOOL_DETAILSalias0.NICKNAME FROM SCHOOL_DETAILS AS SCHOOL_DETAILSalias0 WHERE SCHOOL_DETAILSalias0.DIVISION != ""var0"" ;"
Show the denomination shared by more than one school .,spider,SELECT SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.DENOMINATION HAVING COUNT( * ) > var0 ;
What are the denomination more than one school have ?,spider,SELECT SCHOOLalias0.DENOMINATION FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.DENOMINATION HAVING COUNT( * ) > var0 ;
Find all the distinct district names ordered by city area in descending .,spider,SELECT DISTINCT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC ;
What are the different district names in order of descending city area ?,spider,SELECT DISTINCT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC ;
Find the list of page size which have more than var0 product listed,spider,SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY PRODUCTalias0.MAX_PAGE_SIZE HAVING COUNT( * ) > var0 ;
What is the maximum page size for everything that has more than var0 products listed ?,spider,SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY PRODUCTalias0.MAX_PAGE_SIZE HAVING COUNT( * ) > var0 ;
Find the name and population of district with population between var0 and var00,spider,"SELECT DISTRICTalias0.CITY_POPULATION , DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_POPULATION BETWEEN var0 AND var1 ;"
"What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents ?",spider,"SELECT DISTRICTalias0.CITY_POPULATION , DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_POPULATION BETWEEN var0 AND var1 ;"
Find the name all districts with city area greater than var0 or population larger than var00000,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > var0 OR DISTRICTalias0.CITY_POPULATION > var1 ;
What are the names of all districts with a city area greater than var0 or have more than var00000 people living there ?,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > var0 OR DISTRICTalias0.CITY_POPULATION > var1 ;
Which district has the largest population ?,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_POPULATION DESC LIMIT 1 ;
What is the name of the district with the most residents ?,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_POPULATION DESC LIMIT 1 ;
Which district has the least area ?,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA ASC LIMIT 1 ;
What is the name of the district with the smallest area ?,spider,SELECT DISTRICTalias0.DISTRICT_NAME FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA ASC LIMIT 1 ;
Find the total population of the top var0 districts with the largest area .,spider,SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC LIMIT var0 ;
What is the total number of residents for the districts with the var0 largest areas ?,spider,SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_AREA DESC LIMIT var0 ;
Find all types of store and number of them .,spider,"SELECT COUNT( * ) , STOREalias0.TYPE FROM STORE AS STOREalias0 GROUP BY STOREalias0.TYPE ;"
"For each type of store , how many of them are there ?",spider,"SELECT COUNT( * ) , STOREalias0.TYPE FROM STORE AS STOREalias0 GROUP BY STOREalias0.TYPE ;"
Find the names of all stores in var0 .,spider,"SELECT STOREalias0.STORE_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE DISTRICTalias0.DISTRICT_NAME = ""var0"" ;"
What are the names of all the stores located in var0 ?,spider,"SELECT STOREalias0.STORE_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE DISTRICTalias0.DISTRICT_NAME = ""var0"" ;"
Find all the stores in the district with the most population .,spider,SELECT STOREalias0.STORE_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID WHERE STORE_DISTRICTalias0.DISTRICT_ID = ( SELECT DISTRICTalias0.DISTRICT_ID FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_POPULATION DESC LIMIT 1 ) ;
What are the names of all the stores in the largest district by population ?,spider,SELECT STOREalias0.STORE_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID WHERE STORE_DISTRICTalias0.DISTRICT_ID = ( SELECT DISTRICTalias0.DISTRICT_ID FROM DISTRICT AS DISTRICTalias0 ORDER BY DISTRICTalias0.CITY_POPULATION DESC LIMIT 1 ) ;
"Which city is the headquarter of the store named "" var0 "" in ?",spider,"SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE STOREalias0.STORE_NAME = ""var0"" ;"
What city is the headquarter of the store var0 ?,spider,"SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE STOREalias0.STORE_NAME = ""var0"" ;"
Find the number of stores in each city .,spider,"SELECT COUNT( STORE_DISTRICTalias0.* ) , DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ;"
How many stores are headquarted in each city ?,spider,"SELECT COUNT( STORE_DISTRICTalias0.* ) , DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ;"
Find the city with the most number of stores .,spider,SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ORDER BY COUNT( STORE_DISTRICTalias0.* ) DESC LIMIT 1 ;
What is the city with the most number of flagship stores ?,spider,SELECT DISTRICTalias0.HEADQUARTERED_CITY FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID GROUP BY DISTRICTalias0.HEADQUARTERED_CITY ORDER BY COUNT( STORE_DISTRICTalias0.* ) DESC LIMIT 1 ;
What is the average pages per minute color ?,spider,SELECT AVG( PRODUCTalias0.PAGES_PER_MINUTE_COLOR ) FROM PRODUCT AS PRODUCTalias0 ;
What is the average number of pages per minute color ?,spider,SELECT AVG( PRODUCTalias0.PAGES_PER_MINUTE_COLOR ) FROM PRODUCT AS PRODUCTalias0 ;
"What products are available at store named "" var0 "" ?",spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 JOIN STORE_PRODUCT AS STORE_PRODUCTalias0 ON STORE_PRODUCTalias0.PRODUCT_ID = PRODUCTalias0.PRODUCT_ID JOIN STORE AS STOREalias0 ON STOREalias0.STORE_ID = STORE_PRODUCTalias0.STORE_ID WHERE STOREalias0.STORE_NAME = ""var0"" ;"
What products are sold at the store named var0 ?,spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 JOIN STORE_PRODUCT AS STORE_PRODUCTalias0 ON STORE_PRODUCTalias0.PRODUCT_ID = PRODUCTalias0.PRODUCT_ID JOIN STORE AS STOREalias0 ON STOREalias0.STORE_ID = STORE_PRODUCTalias0.STORE_ID WHERE STOREalias0.STORE_NAME = ""var0"" ;"
"Find products with max page size as "" var0 "" and pages per minute color smaller than var1 .",spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = ""var0"" AND PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;"
What are the products with the maximum page size var0 that also have a pages per minute color smaller than var1 ?,spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = ""var0"" AND PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;"
"Find products with max page size as "" var0 "" or pages per minute color smaller than var1 .",spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = ""var0"" OR PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;"
What are the products with the maximum page size eqal to var0 or a pages per minute color less than var1 ?,spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.MAX_PAGE_SIZE = ""var0"" OR PRODUCTalias0.PAGES_PER_MINUTE_COLOR < var1 ;"
"Find all the product whose name contains the word "" var0 "" .",spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.PRODUCT LIKE ""var0"" ;"
"What are all of the products whose name includes the substring "" var0 "" ?",spider,"SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.PRODUCT LIKE ""var0"" ;"
Find the most prominent max page size among all the products .,spider,SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common maximum page size ?,spider,SELECT PRODUCTalias0.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias0 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the products that are not using the most frequently-used max page size .,spider,SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.PRODUCT != ( SELECT PRODUCTalias1.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias1 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What are the names of all products that are not the most frequently-used maximum page size ?,spider,SELECT PRODUCTalias0.PRODUCT FROM PRODUCT AS PRODUCTalias0 WHERE PRODUCTalias0.PRODUCT != ( SELECT PRODUCTalias1.MAX_PAGE_SIZE FROM PRODUCT AS PRODUCTalias1 GROUP BY MAX_PAGE_SIZE ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the total population of the districts where the area is bigger than the average city area .,spider,SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > ( SELECT AVG( DISTRICTalias1.CITY_AREA ) FROM DISTRICT AS DISTRICTalias1 ) ;
What is the total population for all the districts that have an area larger tahn the average city area ?,spider,SELECT SUM( DISTRICTalias0.CITY_POPULATION ) FROM DISTRICT AS DISTRICTalias0 WHERE DISTRICTalias0.CITY_AREA > ( SELECT AVG( DISTRICTalias1.CITY_AREA ) FROM DISTRICT AS DISTRICTalias1 ) ;
Find the names of districts where have both city mall and village store type stores .,spider,"SELECT DISTRICTalias0.DISTRICT_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE STOREalias0.TYPE = ""var0"" INTERSECT SELECT DISTRICTalias1.DISTRICT_NAME FROM STORE AS STOREalias1 JOIN STORE_DISTRICT AS STORE_DISTRICTalias1 ON STOREalias1.STORE_ID = STORE_DISTRICTalias1.STORE_ID JOIN DISTRICT AS DISTRICTalias1 ON STORE_DISTRICTalias1.DISTRICT_ID = DISTRICTalias1.DISTRICT_ID WHERE STOREalias1.TYPE = ""var1"" ;"
What are the names of the districts that have both mall and village store style shops ?,spider,"SELECT DISTRICTalias0.DISTRICT_NAME FROM STORE AS STOREalias0 JOIN STORE_DISTRICT AS STORE_DISTRICTalias0 ON STOREalias0.STORE_ID = STORE_DISTRICTalias0.STORE_ID JOIN DISTRICT AS DISTRICTalias0 ON STORE_DISTRICTalias0.DISTRICT_ID = DISTRICTalias0.DISTRICT_ID WHERE STOREalias0.TYPE = ""var0"" INTERSECT SELECT DISTRICTalias1.DISTRICT_NAME FROM STORE AS STOREalias1 JOIN STORE_DISTRICT AS STORE_DISTRICTalias1 ON STOREalias1.STORE_ID = STORE_DISTRICTalias1.STORE_ID JOIN DISTRICT AS DISTRICTalias1 ON STORE_DISTRICTalias1.DISTRICT_ID = DISTRICTalias1.DISTRICT_ID WHERE STOREalias1.TYPE = ""var1"" ;"
What is the total enrollment number of all colleges ?,spider,SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
How many students are enrolled in college ?,spider,SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
What is the average enrollment number ?,spider,SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
"How many students , on average , does each college have enrolled ?",spider,SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 ;
How many colleges in total ?,spider,SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 ;
How many different colleges are there ?,spider,SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 ;
How many players have more than var0 hours of training ?,spider,SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE HS > var0 ;
How many different players trained for more than var0 hours ?,spider,SELECT COUNT( * ) FROM PLAYER AS PLAYERalias0 WHERE HS > var0 ;
How many colleges has more than var0 students ?,spider,SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ;
What is the number of colleges with a student population greater than var0 ?,spider,SELECT COUNT( * ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ;
What is the average training hours of all players ?,spider,SELECT AVG( HS ) FROM PLAYER AS PLAYERalias0 ;
How many hours do the players train on average ?,spider,SELECT AVG( HS ) FROM PLAYER AS PLAYERalias0 ;
Find the name and training hours of players whose hours are below var0 .,spider,"SELECT HS , PNAME FROM PLAYER AS PLAYERalias0 WHERE HS < var0 ;"
What are the names and number of hours spent training for each player who trains for less than var0 hours ?,spider,"SELECT HS , PNAME FROM PLAYER AS PLAYERalias0 WHERE HS < var0 ;"
How many different colleges do attend the tryout test ?,spider,SELECT COUNT( DISTINCT CNAME ) FROM TRYOUT AS TRYOUTalias0 ;
How many different colleges were represented at tryouts ?,spider,SELECT COUNT( DISTINCT CNAME ) FROM TRYOUT AS TRYOUTalias0 ;
What are the unique types of player positions in the tryout ?,spider,SELECT COUNT( DISTINCT PPOS ) FROM TRYOUT AS TRYOUTalias0 ;
What are the different types of player positions ?,spider,SELECT COUNT( DISTINCT PPOS ) FROM TRYOUT AS TRYOUTalias0 ;
How many students got accepted after the tryout ?,spider,"SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE TRYOUTalias0.DECISION = ""var0"" ;"
How many students received a var0 from tryouts ?,spider,"SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE TRYOUTalias0.DECISION = ""var0"" ;"
How many students whose are playing the role of var0 ?,spider,"SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" ;"
What is the number of students playing as a var0 ?,spider,"SELECT COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" ;"
"Find the max , average and min training hours of all players .",spider,"SELECT AVG( HS ) , MAX( HS ) , MIN( HS ) FROM PLAYER AS PLAYERalias0 ;"
"What is the average , maximum , and minimum for the number of hours spent training ?",spider,"SELECT AVG( HS ) , MAX( HS ) , MIN( HS ) FROM PLAYER AS PLAYERalias0 ;"
What is average enrollment of colleges in the state var0 ?,spider,"SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var0"" ;"
What is average number of students enrolled in Florida colleges ?,spider,"SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var0"" ;"
What are the names of players whose training hours is between var0 and 1var0 ?,spider,SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE HS BETWEEN var0 AND var1 ;
What are the names of players who train between var0 and 1var0 hours ?,spider,SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE HS BETWEEN var0 AND var1 ;
Find the plvar0yers whose nvar0mes contvar0in letter ' var0 ' .,spider,"SELECT DISTINCT PNAME FROM PLAYER AS PLAYERalias0 WHERE PNAME LIKE ""var0"" ;"
Who var0re the plvar0yers thvar0t hvar0ve nvar0mes contvar0ining the letter var0 ?,spider,"SELECT DISTINCT PNAME FROM PLAYER AS PLAYERalias0 WHERE PNAME LIKE ""var0"" ;"
"Find the name , enrollment of the colleges whose size is bigger than var0 and location is in state var1 .",spider,"SELECT CNAME , ENR FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var1"" AND ENR > var0 ;"
What are the names and enrollment numbers for colleges that have more than var0 enrolled and are located in Louisiana ?,spider,"SELECT CNAME , ENR FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var1"" AND ENR > var0 ;"
List all information about college sorted by enrollment number in the ascending order .,spider,SELECT * FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR ;
What information do you have on colleges sorted by increasing enrollment numbers ?,spider,SELECT * FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR ;
List the name of the colleges whose enrollment is greater var0 sorted by the college's name .,spider,SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ORDER BY CNAME ;
What is the name of every college in alphabetical order that has more than var0 students enrolled ?,spider,SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > var0 ORDER BY CNAME ;
Find the name of players whose card is var0 in the descending order of training hours .,spider,"SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE YCARD = ""var0"" ORDER BY HS DESC ;"
What are the name of the players who received a card in descending order of the hours of training ?,spider,"SELECT PNAME FROM PLAYER AS PLAYERalias0 WHERE YCARD = ""var0"" ORDER BY HS DESC ;"
Find the name of different colleges involved in the tryout in alphabetical order .,spider,SELECT DISTINCT CNAME FROM TRYOUT AS TRYOUTalias0 ORDER BY CNAME ;
What are the different names of the colleges involved in the tryout in alphabetical order ?,spider,SELECT DISTINCT CNAME FROM TRYOUT AS TRYOUTalias0 ORDER BY CNAME ;
Which position is most popular among players in the tryout ?,spider,SELECT PPOS FROM TRYOUT AS TRYOUTalias0 GROUP BY PPOS ORDER BY COUNT( TRYOUTalias0.* ) DESC LIMIT 1 ;
What was the most popular position at tryouts ?,spider,SELECT PPOS FROM TRYOUT AS TRYOUTalias0 GROUP BY PPOS ORDER BY COUNT( TRYOUTalias0.* ) DESC LIMIT 1 ;
Find the number of students who participate in the tryout for each college ordered by descending count .,spider,"SELECT CNAME , COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 GROUP BY CNAME ORDER BY COUNT( TRYOUTalias0.* ) DESC ;"
How many students participated in tryouts for each college by descennding count ?,spider,"SELECT CNAME , COUNT( TRYOUTalias0.* ) FROM TRYOUT AS TRYOUTalias0 GROUP BY CNAME ORDER BY COUNT( TRYOUTalias0.* ) DESC ;"
What is minimum hours of the students playing in different position ?,spider,"SELECT MIN( PLAYERalias0.HS ) , TRYOUTalias0.PPOS FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID GROUP BY TRYOUTalias0.PPOS ;"
"For each position , what is the minimum time students spent practicing ?",spider,"SELECT MIN( PLAYERalias0.HS ) , TRYOUTalias0.PPOS FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID GROUP BY TRYOUTalias0.PPOS ;"
What are the names of schools with the top var0 largest size ?,spider,SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT var0 ;
What are the names of the schools with the top var0 largest class sizes ?,spider,SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT var0 ;
What is the name of school that has the smallest enrollment in each state ?,spider,"SELECT CNAME , COLLEGEalias0.STATE , MIN( ENR ) FROM COLLEGE AS COLLEGEalias0 GROUP BY COLLEGEalias0.STATE ;"
What is the name of the school with smallest enrollment size per state ?,spider,"SELECT CNAME , COLLEGEalias0.STATE , MIN( ENR ) FROM COLLEGE AS COLLEGEalias0 GROUP BY COLLEGEalias0.STATE ;"
Find the states where have some college students in tryout .,spider,SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME ;
What are the different states that have students trying out ?,spider,SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME ;
Find the states where have some college students in tryout and their decisions are var0 .,spider,"SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = ""var0"" ;"
What are the different states that had students successfully try out ?,spider,"SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = ""var0"" ;"
Find the name and college of students whose decisions are var0 in the tryout .,spider,"SELECT PLAYERalias0.PNAME , TRYOUTalias0.CNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
"What are the names of all the players who received a var0 during tryouts , and also what are the names of their colleges ?",spider,"SELECT PLAYERalias0.PNAME , TRYOUTalias0.CNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
Find the name of all students who were in the tryout sorted in alphabetic order .,spider,SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID ORDER BY PLAYERalias0.PNAME ;
What are the names of all students who tried out in alphabetical order ?,spider,SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID ORDER BY PLAYERalias0.PNAME ;
Find the name and hours of the students whose tryout decision is var0 .,spider,"SELECT PLAYERalias0.HS , PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
What are the names and hours spent practicing of every student who received a var0 at tryouts ?,spider,"SELECT PLAYERalias0.HS , PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
Find the states of the colleges that have students in the tryout who played in var0 position .,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" ;"
What are the states of the colleges where students who tried out for the var0 position attend ?,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" ;"
Find the names of the students who are in the position of var1 and got a var0 tryout decision .,spider,"SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" AND TRYOUTalias0.PPOS = ""var1"" ;"
What are the names of all students who successfully tried out for the position of var1 ?,spider,"SELECT PLAYERalias0.PNAME FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" AND TRYOUTalias0.PPOS = ""var1"" ;"
Find the state of the college which player var0 is attending .,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME = ""var0"" ;"
In which state is the college that var0 attends ?,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME = ""var0"" ;"
Find the average and maximum hours for the students whose tryout decision is var0 .,spider,"SELECT AVG( PLAYERalias0.HS ) , MAX( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
What is the average and maximum number of hours students who made the team practiced ?,spider,"SELECT AVG( PLAYERalias0.HS ) , MAX( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
Find the average hours for the students whose tryout decision is var0 .,spider,"SELECT AVG( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
What is the average number of hours spent practicing for students who got rejected ?,spider,"SELECT AVG( PLAYERalias0.HS ) FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.DECISION = ""var0"" ;"
What is the maximum training hours for the students whose training hours is greater than var0 in different positions ?,spider,"SELECT MAX( PLAYERalias0.HS ) , PPOS FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.HS > var0 GROUP BY TRYOUTalias0.PPOS ;"
"For each position , what is the maximum number of hours for students who spent more than var0 hours training ?",spider,"SELECT MAX( PLAYERalias0.HS ) , PPOS FROM PLAYER AS PLAYERalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.HS > var0 GROUP BY TRYOUTalias0.PPOS ;"
Which colleges do the tryout players whose name starts with letter D go to ?,spider,"SELECT TRYOUTalias0.CNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME LIKE ""var0"" ;"
Which colleges does each player with a name that starts with the letter D who tried out go to ?,spider,"SELECT TRYOUTalias0.CNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE PLAYERalias0.PNAME LIKE ""var0"" ;"
Which college has any student who is a var1 and succeeded in the tryout .,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var1"" AND TRYOUTalias0.DECISION = ""var0"" ;"
What college has a student who successfully made the team in the role of a var1 ?,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var1"" AND TRYOUTalias0.DECISION = ""var0"" ;"
Find the name of the tryout players who are from the college with largest size .,spider,SELECT PLAYERalias0.PNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.CNAME = ( SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT 1 ) ;
What are the names of all tryout participants who are from the largest college ?,spider,SELECT PLAYERalias0.PNAME FROM TRYOUT AS TRYOUTalias0 JOIN PLAYER AS PLAYERalias0 ON TRYOUTalias0.PID = PLAYERalias0.PID WHERE TRYOUTalias0.CNAME = ( SELECT CNAME FROM COLLEGE AS COLLEGEalias0 ORDER BY ENR DESC LIMIT 1 ) ;
What is the state and enrollment of the colleges where have any students who got accepted in the tryout decision .,spider,"SELECT DISTINCT COLLEGEalias0.ENR , COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = ""var0"" ;"
"How many students are enrolled in colleges that have student accepted during tryouts , and in which states are those colleges ?",spider,"SELECT DISTINCT COLLEGEalias0.ENR , COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.DECISION = ""var0"" ;"
Find the names of either colleges in var3 with greater than var2 size or in state var1 with less than var0 enrollment .,spider,"SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var1"" UNION SELECT CNAME FROM COLLEGE AS COLLEGEalias1 WHERE ENR > var2 AND COLLEGEalias1.STATE = ""var3"" AND ENR < var0 ;"
"What are the names of colleges in var3 that have more than 15,000 students and of colleges in var1 with less than 13,000 students ?",spider,"SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE COLLEGEalias0.STATE = ""var1"" UNION SELECT CNAME FROM COLLEGE AS COLLEGEalias1 WHERE ENR > var2 AND COLLEGEalias1.STATE = ""var3"" AND ENR < var0 ;"
Find the names of schools that have some students playing in var0 and var1 positions .,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ;"
What are the names of all schools that have students trying out for the position of goal and ' var1'-field .,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ;"
Find the names of states that have some college students playing in var0 and var1 positions .,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" INTERSECT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ;"
What are the names of the states that have some college students playing in the positions of var0 and var1-field ?,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" INTERSECT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ;"
How many schools have some students playing in var0 and var1 positions .,spider,"SELECT COUNT( * ) FROM ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ) ;"
How many schools have students playing in var0 and var1-field positions ?,spider,"SELECT COUNT( * ) FROM ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" INTERSECT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ) ;"
Find the names of schools that have some players in the var0 position but not in the var1 position .,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ;"
What are the names of the schools with some players in the var0 position but no var1s ?,spider,"SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" EXCEPT SELECT CNAME FROM TRYOUT AS TRYOUTalias1 WHERE PPOS = ""var1"" ;"
Find the names of states that have some college students playing in the var0 position but not in the var1 position .,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ;"
What are the names of all the states with college students playing in the var0 position but no var1s ?,spider,"SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ;"
How many states that have some college students playing in the var0 position but not in the var1 position .,spider,"SELECT COUNT( * ) FROM ( SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ) ;"
What is the count of states with college students playing in the var0 position but not as var1s ?,spider,"SELECT COUNT( * ) FROM ( SELECT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 JOIN TRYOUT AS TRYOUTalias0 ON TRYOUTalias0.CNAME = COLLEGEalias0.CNAME WHERE TRYOUTalias0.PPOS = ""var0"" EXCEPT SELECT COLLEGEalias1.STATE FROM COLLEGE AS COLLEGEalias1 JOIN TRYOUT AS TRYOUTalias1 ON TRYOUTalias1.CNAME = COLLEGEalias1.CNAME WHERE TRYOUTalias1.PPOS = ""var1"" ) ;"
Find the states where have the colleges whose enrollments are less than the largest size .,spider,SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 WHERE ENR < ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
What are the states with colleges that have enrollments less than the some other college ?,spider,SELECT DISTINCT COLLEGEalias0.STATE FROM COLLEGE AS COLLEGEalias0 WHERE ENR < ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
Find names of colleges with enrollment greater than that of some (at least one) college in the var0 state .,spider,"SELECT DISTINCT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MIN( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = ""var0"" ) ;"
What are the names of the colleges that are larger than at least one college in Florida ?,spider,"SELECT DISTINCT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MIN( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = ""var0"" ) ;"
Find names of all colleges whose enrollment is greater than that of all colleges in the var0 state .,spider,"SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = ""var0"" ) ;"
What are the names of all colleges with a larger enrollment than the largest college in Florida ?,spider,"SELECT CNAME FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT MAX( ENR ) FROM COLLEGE AS COLLEGEalias1 WHERE COLLEGEalias1.STATE = ""var0"" ) ;"
What is the total number of enrollment of schools that do not have any var0 player ?,spider,"SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE CNAME NOT IN ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" ) ;"
What is the total number of students enrolled in schools without any var0s ?,spider,"SELECT SUM( ENR ) FROM COLLEGE AS COLLEGEalias0 WHERE CNAME NOT IN ( SELECT CNAME FROM TRYOUT AS TRYOUTalias0 WHERE PPOS = ""var0"" ) ;"
What is the number of states that has some college whose enrollment is larger than the average enrollment ?,spider,SELECT COUNT( DISTINCT COLLEGEalias0.STATE ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
How many states have a college with more students than average ?,spider,SELECT COUNT( DISTINCT COLLEGEalias0.STATE ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR > ( SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
What is the number of states that has some colleges whose enrollment is smaller than the average enrollment ?,spider,SELECT COUNT( DISTINCT COLLEGEalias0.STATE ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR < ( SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
How many states have smaller colleges than average ?,spider,SELECT COUNT( DISTINCT COLLEGEalias0.STATE ) FROM COLLEGE AS COLLEGEalias0 WHERE ENR < ( SELECT AVG( ENR ) FROM COLLEGE AS COLLEGEalias1 ) ;
How many devices are there ?,spider,SELECT COUNT( * ) FROM DEVICE AS DEVICEalias0 ;
Count the number of devices .,spider,SELECT COUNT( * ) FROM DEVICE AS DEVICEalias0 ;
List the carriers of devices in ascending alphabetical order .,spider,SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 ORDER BY DEVICEalias0.CARRIER ASC ;
"What are the different carriers for devices , listed in alphabetical order ?",spider,SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 ORDER BY DEVICEalias0.CARRIER ASC ;
"What are the carriers of devices whose software platforms are not "" var0 "" ?",spider,"SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.SOFTWARE_PLATFORM != ""var0"" ;"
Return the device carriers that do not have var0 as their software platform .,spider,"SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.SOFTWARE_PLATFORM != ""var0"" ;"
What are the names of shops in ascending order of open year ?,spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR ASC ;
"Return the names of shops , ordered by year of opening ascending .",spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR ASC ;
What is the average quantity of stocks ?,spider,SELECT AVG( STOCKalias0.QUANTITY ) FROM STOCK AS STOCKalias0 ;
Give the average quantity of stocks .,spider,SELECT AVG( STOCKalias0.QUANTITY ) FROM STOCK AS STOCKalias0 ;
What are the names and location of the shops in ascending alphabetical order of name .,spider,"SELECT SHOPalias0.LOCATION , SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.SHOP_NAME ASC ;"
"Return the names and locations of shops , ordered by name in alphabetical order .",spider,"SELECT SHOPalias0.LOCATION , SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.SHOP_NAME ASC ;"
How many different software platforms are there for devices ?,spider,SELECT COUNT( DISTINCT DEVICEalias0.SOFTWARE_PLATFORM ) FROM DEVICE AS DEVICEalias0 ;
Count the number of different software platforms .,spider,SELECT COUNT( DISTINCT DEVICEalias0.SOFTWARE_PLATFORM ) FROM DEVICE AS DEVICEalias0 ;
"List the open date of open year of the shop named "" var0 "" .",spider,"SELECT SHOPalias0.OPEN_DATE , SHOPalias0.OPEN_YEAR FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_NAME = ""var0"" ;"
What are the open dates and years for the shop named var0 ?,spider,"SELECT SHOPalias0.OPEN_DATE , SHOPalias0.OPEN_YEAR FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_NAME = ""var0"" ;"
List the name of the shop with the latest open year .,spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR DESC LIMIT 1 ;
What is the shop name corresponding to the shop that opened in the most recent year ?,spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.OPEN_YEAR DESC LIMIT 1 ;
Show names of shops and the carriers of devices they have in stock .,spider,"SELECT DEVICEalias0.CARRIER , SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID ;"
"What are the names of device shops , and what are the carriers that they carry devices in stock for ?",spider,"SELECT DEVICEalias0.CARRIER , SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID ;"
Show names of shops that have more than one kind of device in stock .,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
What are the names of shops that have more than a single kind of device in stock ?,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
Show the name of the shop that has the most kind of devices in stock .,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY COUNT( STOCKalias0.* ) DESC LIMIT 1 ;
What is the name of the shop that has the most different kinds of devices in stock ?,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY COUNT( STOCKalias0.* ) DESC LIMIT 1 ;
Show the name of the shop that have the largest quantity of devices in stock .,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY SUM( STOCKalias0.QUANTITY ) DESC LIMIT 1 ;
What is the name of the shop that has the greatest quantity of devices in stock ?,spider,SELECT SHOPalias0.SHOP_NAME FROM STOCK AS STOCKalias0 JOIN SHOP AS SHOPalias0 ON STOCKalias0.SHOP_ID = SHOPalias0.SHOP_ID GROUP BY STOCKalias0.SHOP_ID ORDER BY SUM( STOCKalias0.QUANTITY ) DESC LIMIT 1 ;
Please show different software platforms and the corresponding number of devices using each .,spider,"SELECT COUNT( * ) , DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY DEVICEalias0.SOFTWARE_PLATFORM ;"
"What are the different software platforms for devices , and how many devices have each ?",spider,"SELECT COUNT( * ) , DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY DEVICEalias0.SOFTWARE_PLATFORM ;"
Please show the software platforms of devices in descending order of the count .,spider,SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC ;
"What are the different software platforms for devices , ordered by frequency descending ?",spider,SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC ;
List the software platform shared by the greatest number of devices .,spider,SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the software platform that is most common amongst all devices ?,spider,SELECT DEVICEalias0.SOFTWARE_PLATFORM FROM DEVICE AS DEVICEalias0 GROUP BY SOFTWARE_PLATFORM ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of shops that have no devices in stock .,spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT STOCKalias0.SHOP_ID FROM STOCK AS STOCKalias0 ) ;
What are the names of shops that do not have any devices in stock ?,spider,SELECT SHOPalias0.SHOP_NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT STOCKalias0.SHOP_ID FROM STOCK AS STOCKalias0 ) ;
Show the locations shared by shops with open year later than var0 and shops with open year before var1 .,spider,SELECT SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 WHERE SHOPalias0.OPEN_YEAR > var0 INTERSECT SELECT SHOPalias1.LOCATION FROM SHOP AS SHOPalias1 WHERE SHOPalias1.OPEN_YEAR < var1 ;
Which locations contains both shops that opened after the year var0 and shops that opened before var1 ?,spider,SELECT SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 WHERE SHOPalias0.OPEN_YEAR > var0 INTERSECT SELECT SHOPalias1.LOCATION FROM SHOP AS SHOPalias1 WHERE SHOPalias1.OPEN_YEAR < var1 ;
List the carriers of devices that have no devices in stock .,spider,SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.DEVICE_ID NOT IN ( SELECT STOCKalias0.DEVICE_ID FROM STOCK AS STOCKalias0 ) ;
What are the carriers of devices that are not in stock anywhere ?,spider,SELECT DEVICEalias0.CARRIER FROM DEVICE AS DEVICEalias0 WHERE DEVICEalias0.DEVICE_ID NOT IN ( SELECT STOCKalias0.DEVICE_ID FROM STOCK AS STOCKalias0 ) ;
Show the carriers of devices in stock at more than one shop .,spider,SELECT DEVICEalias0.CARRIER FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID GROUP BY STOCKalias0.DEVICE_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
What are the carriers of devices that are in stock in more than a single shop ?,spider,SELECT DEVICEalias0.CARRIER FROM STOCK AS STOCKalias0 JOIN DEVICE AS DEVICEalias0 ON STOCKalias0.DEVICE_ID = DEVICEalias0.DEVICE_ID GROUP BY STOCKalias0.DEVICE_ID HAVING COUNT( STOCKalias0.* ) > var0 ;
How many bookings do we have ?,spider,SELECT COUNT( * ) FROM BOOKINGS AS BOOKINGSalias0 ;
Count the total number of bookings made .,spider,SELECT COUNT( * ) FROM BOOKINGS AS BOOKINGSalias0 ;
List the order dates of all the bookings .,spider,SELECT BOOKINGSalias0.ORDER_DATE FROM BOOKINGS AS BOOKINGSalias0 ;
What is the order date of each booking ?,spider,SELECT BOOKINGSalias0.ORDER_DATE FROM BOOKINGS AS BOOKINGSalias0 ;
Show all the planned delivery dates and actual delivery dates of bookings .,spider,"SELECT BOOKINGSalias0.ACTUAL_DELIVERY_DATE , BOOKINGSalias0.PLANNED_DELIVERY_DATE FROM BOOKINGS AS BOOKINGSalias0 ;"
What are the planned delivery date and actual delivery date for each booking ?,spider,"SELECT BOOKINGSalias0.ACTUAL_DELIVERY_DATE , BOOKINGSalias0.PLANNED_DELIVERY_DATE FROM BOOKINGS AS BOOKINGSalias0 ;"
What are the phone and email for customer var0 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL_ADDRESS , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Find the phone number and email address of customer "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_EMAIL_ADDRESS , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
Show all the Store_Name of drama workshop groups .,spider,SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ;
What are the store names of drama workshop groups ?,spider,SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ;
"Show the minimum , average , maximum order quantity of all invoices .",spider,"SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) , MAX( INVOICESalias0.ORDER_QUANTITY ) , MIN( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 ;"
"What are the minimum , average , and maximum quantities ordered ? Check all the invoices .",spider,"SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) , MAX( INVOICESalias0.ORDER_QUANTITY ) , MIN( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 ;"
What are the distinct payment method codes in all the invoices ?,spider,SELECT DISTINCT INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 ;
Show me the distinct payment method codes from the invoice record .,spider,SELECT DISTINCT INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 ;
What is the description of the marketing region var0 ?,spider,"SELECT MARKETING_REGIONSalias0.MARKETING_REGION_DESCRIPTRION FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 WHERE MARKETING_REGIONSalias0.MARKETING_REGION_NAME = ""var0"" ;"
Find the marketing region description of var0 ?,spider,"SELECT MARKETING_REGIONSalias0.MARKETING_REGION_DESCRIPTRION FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 WHERE MARKETING_REGIONSalias0.MARKETING_REGION_NAME = ""var0"" ;"
Show all the distinct product names with price higher than the average .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
What are the distinct names of the products that cost more than the average ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
What is the phone number of the performer var0 ?,spider,"SELECT PERFORMERSalias0.CUSTOMER_PHONE FROM PERFORMERS AS PERFORMERSalias0 WHERE PERFORMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Find the phone number of performer "" var0 "" .",spider,"SELECT PERFORMERSalias0.CUSTOMER_PHONE FROM PERFORMERS AS PERFORMERSalias0 WHERE PERFORMERSalias0.CUSTOMER_NAME = ""var0"" ;"
Show all payment method codes and the number of orders for each code .,spider,"SELECT COUNT( * ) , INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.PAYMENT_METHOD_CODE ;"
List the distinct payment method codes with the number of orders made,spider,"SELECT COUNT( * ) , INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 GROUP BY INVOICESalias0.PAYMENT_METHOD_CODE ;"
What is the payment method code used by the most orders ?,spider,SELECT INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the payment method that is used the most often in all the invoices . Give me its code .,spider,SELECT INVOICESalias0.PAYMENT_METHOD_CODE FROM INVOICES AS INVOICESalias0 GROUP BY PAYMENT_METHOD_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Which city is the address of the store named "" var0 "" located in ?",spider,"SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.STORE_NAME = ""var0"" ;"
"Find the city the store named "" var0 "" is in .",spider,"SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.STORE_NAME = ""var0"" ;"
"What are the states or counties of the address of the stores with marketing region code "" var0 "" ?",spider,"SELECT ADDRESSESalias0.STATE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.MARKETING_REGION_CODE = ""var0"" ;"
"Find the states or counties where the stores with marketing region code "" var0 "" are located .",spider,"SELECT ADDRESSESalias0.STATE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STORES AS STORESalias0 ON STORESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STORESalias0.MARKETING_REGION_CODE = ""var0"" ;"
What is the name of the marketing region that the store var0 belongs to ?,spider,"SELECT MARKETING_REGIONSalias0.MARKETING_REGION_NAME FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 JOIN STORES AS STORESalias0 ON STORESalias0.MARKETING_REGION_CODE = MARKETING_REGIONSalias0.MARKETING_REGION_CODE WHERE STORESalias0.STORE_NAME = ""var0"" ;"
Return the name of the marketing region the store var0 is located in .,spider,"SELECT MARKETING_REGIONSalias0.MARKETING_REGION_NAME FROM MARKETING_REGIONS AS MARKETING_REGIONSalias0 JOIN STORES AS STORESalias0 ON STORESalias0.MARKETING_REGION_CODE = MARKETING_REGIONSalias0.MARKETING_REGION_CODE WHERE STORESalias0.STORE_NAME = ""var0"" ;"
What are the descriptions of the service types with product price above var0 ?,spider,SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_PRICE > var0 ;
Give me the descriptions of the service types that cost more than var0 .,spider,SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_PRICE > var0 ;
"What is the description , code and the corresponding count of each service type ?",spider,"SELECT COUNT( * ) , DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION , SERVICESalias0.SERVICE_TYPE_CODE FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE GROUP BY SERVICESalias0.SERVICE_TYPE_CODE ;"
"List the description , code and the number of services for each service type .",spider,"SELECT COUNT( * ) , DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION , SERVICESalias0.SERVICE_TYPE_CODE FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE GROUP BY SERVICESalias0.SERVICE_TYPE_CODE ;"
What is the description and code of the type of service that is performed the most often ?,spider,"SELECT DERIVED_TABLEalias0.SERVICE_TYPE_CODE , DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE GROUP BY DERIVED_TABLEalias0.SERVICE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the description and code of the service type that is performed the most times .,spider,"SELECT DERIVED_TABLEalias0.SERVICE_TYPE_CODE , DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE GROUP BY DERIVED_TABLEalias0.SERVICE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What are the phones and emails of workshop groups in which services are performed ?,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS , DRAMA_WORKSHOP_GROUPSalias0.STORE_PHONE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.WORKSHOP_GROUP_ID = DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID ;"
Give me all the phone numbers and email addresses of the workshop groups where services are performed .,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS , DRAMA_WORKSHOP_GROUPSalias0.STORE_PHONE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.WORKSHOP_GROUP_ID = DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID ;"
"What are the names of workshop groups in which services with product name "" var0 "" are performed ?",spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS , DRAMA_WORKSHOP_GROUPSalias0.STORE_PHONE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.WORKSHOP_GROUP_ID = DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID WHERE SERVICESalias0.PRODUCT_NAME = ""var0"" ;"
"Find the names of the workshop groups where services with product name "" var0 "" are performed .",spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS , DRAMA_WORKSHOP_GROUPSalias0.STORE_PHONE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.WORKSHOP_GROUP_ID = DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID WHERE SERVICESalias0.PRODUCT_NAME = ""var0"" ;"
What are the different product names ? What is the average product price for each of them ?,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
"For each distinct product name , show its average product price .",spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
What are the product names with average product price smaller than var0 ?,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING AVG( PRODUCTSalias0.PRODUCT_PRICE ) < var0 ;
Find the product names whose average product price is below var0 .,spider,SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_NAME HAVING AVG( PRODUCTSalias0.PRODUCT_PRICE ) < var0 ;
What are the total order quantities of var0 products ?,spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Compute the total order quantities of the product "" var0 "" .",spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the order details of the products with price higher than var0 ?,spider,SELECT ORDER_ITEMSalias0.OTHER_ITEM_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
Find the order detail for the products with price above var0 .,spider,SELECT ORDER_ITEMSalias0.OTHER_ITEM_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
What are the actual delivery dates of orders with quantity var0 ?,spider,SELECT CUSTOMER_ORDERSalias0.ACTUAL_DELIVERY_DATE FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE ORDER_ITEMSalias0.ORDER_QUANTITY = var0 ;
List the actual delivery date for all the orders with quantity var0,spider,SELECT CUSTOMER_ORDERSalias0.ACTUAL_DELIVERY_DATE FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE ORDER_ITEMSalias0.ORDER_QUANTITY = var0 ;
What are the order dates of orders with price higher than var0 ?,spider,SELECT CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
Find the order dates of the orders with price above var0 .,spider,SELECT CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_PRICE > var0 ;
How many distinct currency codes are there for all drama workshop groups ?,spider,SELECT COUNT( DISTINCT DRAMA_WORKSHOP_GROUPSalias0.CURRENCY_CODE ) FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ;
Find the number of distinct currency codes used in drama workshop groups .,spider,SELECT COUNT( DISTINCT DRAMA_WORKSHOP_GROUPSalias0.CURRENCY_CODE ) FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ;
What are the names of the drama workshop groups with address in var0 city ?,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY_TOWN = ""var0"" ;"
Return the the names of the drama workshop groups that are located in var0 city .,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY_TOWN = ""var0"" ;"
What are the email addresses of the drama workshop groups with address in var0 state ?,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_COUNTY = ""var0"" ;"
List the email addresses of the drama workshop groups located in var0 state .,spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_EMAIL_ADDRESS FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_COUNTY = ""var0"" ;"
Show all cities along with the number of drama workshop groups in each city .,spider,"SELECT ADDRESSESalias0.CITY_TOWN , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY_TOWN ;"
How many drama workshop groups are there in each city ? Return both the city and the count .,spider,"SELECT ADDRESSESalias0.CITY_TOWN , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY_TOWN ;"
What is the marketing region code that has the most drama workshop groups ?,spider,SELECT DRAMA_WORKSHOP_GROUPSalias0.MARKETING_REGION_CODE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 GROUP BY MARKETING_REGION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which marketing region has the most drama workshop groups ? Give me the region code .,spider,SELECT DRAMA_WORKSHOP_GROUPSalias0.MARKETING_REGION_CODE FROM DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 GROUP BY MARKETING_REGION_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all cities where at least one customer lives in but no performer lives in .,spider,SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID EXCEPT SELECT ADDRESSESalias1.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias1 JOIN PERFORMERS AS PERFORMERSalias0 ON PERFORMERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
Which cities have at least one customer but no performer ?,spider,SELECT ADDRESSESalias0.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMERSalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID EXCEPT SELECT ADDRESSESalias1.CITY_TOWN FROM ADDRESSES AS ADDRESSESalias1 JOIN PERFORMERS AS PERFORMERSalias0 ON PERFORMERSalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ;
What is the most frequent status of bookings ?,spider,SELECT BOOKINGSalias0.STATUS_CODE FROM BOOKINGS AS BOOKINGSalias0 GROUP BY STATUS_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which status code is the most common of all the bookings ?,spider,SELECT BOOKINGSalias0.STATUS_CODE FROM BOOKINGS AS BOOKINGSalias0 GROUP BY STATUS_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What are the names of the workshop groups that have bookings with status code "" var0 "" ?",spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID = BOOKINGSalias0.WORKSHOP_GROUP_ID WHERE BOOKINGSalias0.STATUS_CODE = ""var0"" ;"
"Which workshop groups have bookings with status code "" var0 "" ? Give me the names .",spider,"SELECT DRAMA_WORKSHOP_GROUPSalias0.STORE_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN DRAMA_WORKSHOP_GROUPS AS DRAMA_WORKSHOP_GROUPSalias0 ON DRAMA_WORKSHOP_GROUPSalias0.WORKSHOP_GROUP_ID = BOOKINGSalias0.WORKSHOP_GROUP_ID WHERE BOOKINGSalias0.STATUS_CODE = ""var0"" ;"
Show the names of all the clients with no booking .,spider,SELECT CLIENTSalias0.CUSTOMER_NAME FROM CLIENTS AS CLIENTSalias0 EXCEPT SELECT CLIENTSalias1.CUSTOMER_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN CLIENTS AS CLIENTSalias1 ON CLIENTSalias1.CLIENT_ID = BOOKINGSalias0.CUSTOMER_ID ;
What are the names of the clients who do not have any booking ?,spider,SELECT CLIENTSalias0.CUSTOMER_NAME FROM CLIENTS AS CLIENTSalias0 EXCEPT SELECT CLIENTSalias1.CUSTOMER_NAME FROM BOOKINGS AS BOOKINGSalias0 JOIN CLIENTS AS CLIENTSalias1 ON CLIENTSalias1.CLIENT_ID = BOOKINGSalias0.CUSTOMER_ID ;
"What is the average quantities ordered with payment method code "" var0 "" on invoices ?",spider,"SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.PAYMENT_METHOD_CODE = ""var0"" ;"
"Check the invoices record and compute the average quantities ordered with the payment method "" var0 "" .",spider,"SELECT AVG( INVOICESalias0.ORDER_QUANTITY ) FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.PAYMENT_METHOD_CODE = ""var0"" ;"
What is the product ID of the most frequently ordered item on invoices ?,spider,SELECT INVOICESalias0.PRODUCT_ID FROM INVOICES AS INVOICESalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the id of the product ordered the most often on invoices .,spider,SELECT INVOICESalias0.PRODUCT_ID FROM INVOICES AS INVOICESalias0 GROUP BY PRODUCT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the description of the service type which offers both the var0 product and the var1 product ?,spider,"SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_NAME = ""var0"" INTERSECT SELECT DERIVED_TABLEalias1.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias1 JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_TYPE_CODE = DERIVED_TABLEalias1.SERVICE_TYPE_CODE WHERE SERVICESalias1.PRODUCT_NAME = ""var1"" ;"
Give me the description of the service type that offers not only the var0 product but also the var1 product .,spider,"SELECT DERIVED_TABLEalias0.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias0 JOIN SERVICES AS SERVICESalias0 ON SERVICESalias0.SERVICE_TYPE_CODE = DERIVED_TABLEalias0.SERVICE_TYPE_CODE WHERE SERVICESalias0.PRODUCT_NAME = ""var0"" INTERSECT SELECT DERIVED_TABLEalias1.SERVICE_TYPE_DESCRIPTION FROM REF_SERVICE_TYPES AS DERIVED_TABLEalias1 JOIN SERVICES AS SERVICESalias1 ON SERVICESalias1.SERVICE_TYPE_CODE = DERIVED_TABLEalias1.SERVICE_TYPE_CODE WHERE SERVICESalias1.PRODUCT_NAME = ""var1"" ;"
How many bands are there ?,spider,SELECT COUNT( * ) FROM BAND AS BANDalias0 ;
Find the number of bands .,spider,SELECT COUNT( * ) FROM BAND AS BANDalias0 ;
What are all the labels ?,spider,SELECT DISTINCT ALBUMSalias0.LABEL FROM ALBUMS AS ALBUMSalias0 ;
What are the different album labels listed ?,spider,SELECT DISTINCT ALBUMSalias0.LABEL FROM ALBUMS AS ALBUMSalias0 ;
Find all the albums in var0 .,spider,SELECT * FROM ALBUMS AS ALBUMSalias0 WHERE ALBUMSalias0.YEAR = var0 ;
return all columns of the albums created in the year of var0 .,spider,SELECT * FROM ALBUMS AS ALBUMSalias0 WHERE ALBUMSalias0.YEAR = var0 ;
What are the albums produced in year var0 ?,spider,SELECT * FROM ALBUMS AS ALBUMSalias0 WHERE ALBUMSalias0.YEAR = var0 ;
What information is there on albums from var0 ?,spider,SELECT * FROM ALBUMS AS ALBUMSalias0 WHERE ALBUMSalias0.YEAR = var0 ;
"Find all the stage positions of the musicians with first name "" var0 """,spider,"SELECT DISTINCT PERFORMANCEalias0.STAGEPOSITION FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" ;"
"What are the different stage positions for all musicians whose first name is "" var0 "" ?",spider,"SELECT DISTINCT PERFORMANCEalias0.STAGEPOSITION FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" ;"
How many songs are there ?,spider,SELECT COUNT( * ) FROM SONGS AS SONGSalias0 ;
Count the number of songs .,spider,SELECT COUNT( * ) FROM SONGS AS SONGSalias0 ;
"Find all the songs performed by artist with last name "" var0 """,spider,"SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.LASTNAME = ""var0"" ;"
"What are the names of the songs by the artist whose last name is "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.LASTNAME = ""var0"" ;"
"Hom many musicians performed in the song "" var0 "" ?",spider,"SELECT COUNT( * ) FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many musicians play in the song "" var0 "" ?",spider,"SELECT COUNT( * ) FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"Find all the songs produced by artists with first name "" var0 "" .",spider,"SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.FIRSTNAME = ""var0"" ;"
"What are the names of all songs produced by the artist with the first name "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE BANDalias0.FIRSTNAME = ""var0"" ;"
"Who performed the song named "" var0 "" ? Show the first name and the last name .",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What are the first and last names of the artist who perfomed the song "" var0 "" ?",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"Who performed the song named "" var0 "" ?",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What is the first and last name of artist who performed "" var0 "" ?",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"Who is performing in the var1 stage position for the song "" var0 "" ? Show the first name and the last name .",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE PERFORMANCEalias0.STAGEPOSITION = ""var1"" AND SONGSalias0.TITLE = ""var0"" ;"
"What are the first and last names of the performer who was in the var1 stage position for the song "" var0 "" ?",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE PERFORMANCEalias0.STAGEPOSITION = ""var1"" AND SONGSalias0.TITLE = ""var0"" ;"
"Who is performing in the var1 stage position for the song "" var0 "" ? Show the first name and last name .",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE PERFORMANCEalias0.STAGEPOSITION = ""var1"" AND SONGSalias0.TITLE = ""var0"" ;"
"What is the first and last name of the artist who performed var1 stage for the song "" var0 "" ?",spider,"SELECT BANDalias0.FIRSTNAME , BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID WHERE PERFORMANCEalias0.STAGEPOSITION = ""var1"" AND SONGSalias0.TITLE = ""var0"" ;"
How many unique labels are there for albums ?,spider,SELECT COUNT( DISTINCT ALBUMSalias0.LABEL ) FROM ALBUMS AS ALBUMSalias0 ;
What are the unique labels for the albums ?,spider,SELECT COUNT( DISTINCT ALBUMSalias0.LABEL ) FROM ALBUMS AS ALBUMSalias0 ;
What is the label that has the most albums ?,spider,SELECT ALBUMSalias0.LABEL FROM ALBUMS AS ALBUMSalias0 GROUP BY LABEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the label with the most albums ?,spider,SELECT ALBUMSalias0.LABEL FROM ALBUMS AS ALBUMSalias0 GROUP BY LABEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the musician that have produced the most number of songs ?,spider,SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the musician who was in the most songs ?,spider,SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the musician that have produced the most songs ?,spider,SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the artist who sang the most songs ?,spider,SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the musician that has been at the var0 position the most ?,spider,"SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE STAGEPOSITION = ""var0"" GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the last name of the musicians who has played var0 position the most ?,spider,"SELECT BANDalias0.LASTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID WHERE STAGEPOSITION = ""var0"" GROUP BY LASTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Find all var0 songs whose name contains var0 word "" var0 "" .",spider,"SELECT SONGSalias0.TITLE FROM SONGS AS SONGSalias0 WHERE SONGSalias0.TITLE LIKE ""var0"" ;"
"What are var0 names of var0 songs whose title has var0 word "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM SONGS AS SONGSalias0 WHERE SONGSalias0.TITLE LIKE ""var0"" ;"
What are all the instruments used ?,spider,SELECT DISTINCT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 ;
What are the different instruments listed in the database ?,spider,SELECT DISTINCT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 ;
"What instrument did the musician with last name "" var0 "" use in the song "" var1 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
"What instruments did the musician with the last name "" var0 "" play in the song "" var1 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
"What instrument did the musician with last name "" var0 "" use in the song "" var1 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
"What instruments did the musician with the last name "" var0 "" play in "" var1 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID JOIN INSTRUMENTS AS INSTRUMENTSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID AND INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
What is the most used instrument ?,spider,SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 GROUP BY INSTRUMENT ORDER BY COUNT( * ) DESC LIMIT 1 ;
What instrument is used the most ?,spider,SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 GROUP BY INSTRUMENT ORDER BY COUNT( * ) DESC LIMIT 1 ;
"How many songs have used the instrument "" var0 "" ?",spider,"SELECT COUNT( * ) FROM INSTRUMENTS AS INSTRUMENTSalias0 WHERE INSTRUMENTSalias0.INSTRUMENT = ""var0"" ;"
How many songs use var0 as an instrument ?,spider,"SELECT COUNT( * ) FROM INSTRUMENTS AS INSTRUMENTSalias0 WHERE INSTRUMENTSalias0.INSTRUMENT = ""var0"" ;"
"What instruments does the the song "" var0 "" use ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What are the instruments are used in the song "" var0 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many instruments does the song "" var0 "" use ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many different instruments are used in the song "" var0 "" ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many instruments does the song "" var0 "" use ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many different instruments are used in the song "" var0 "" ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = INSTRUMENTSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many instrument does the musician with last name "" var0 "" use ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" ;"
"How many different instruments does the musician with the last name "" var0 "" use ?",spider,"SELECT COUNT( DISTINCT INSTRUMENTSalias0.INSTRUMENT ) FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" ;"
"Find all the instruments ever used by the musician with last name "" var0 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" ;"
"What are all the instruments used by the musician with the last name "" var0 "" ?",spider,"SELECT INSTRUMENTSalias0.INSTRUMENT FROM INSTRUMENTS AS INSTRUMENTSalias0 JOIN BAND AS BANDalias0 ON INSTRUMENTSalias0.BANDMATEID = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" ;"
Which song has the most vocals ?,spider,SELECT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID GROUP BY VOCALSalias0.SONGID ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
What is the song with the most vocals ?,spider,SELECT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID GROUP BY VOCALSalias0.SONGID ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
Which vocal type is the most frequently appearring type ?,spider,SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
What is the type of vocables that appears most frequently ?,spider,SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;
"Which vocal type has the band mate with last name "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE LASTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"What is the type of vocals that the band member with the last name "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE LASTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"What are the vocal types used in song "" var0 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What are the types of vocals used in the song "" var0 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What are the vocal types used in song "" var0 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What types of vocals are used in the song "" var0 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"Find the number of vocal types used in song "" var0 "" ?",spider,"SELECT COUNT( VOCALSalias0.* ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"What are the types of vocals used in the song "" var0 "" ?",spider,"SELECT COUNT( VOCALSalias0.* ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"Find the number of vocal types used in song "" var0 """,spider,"SELECT COUNT( VOCALSalias0.* ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
"How many vocal types are used in the song "" var0 "" ?",spider,"SELECT COUNT( VOCALSalias0.* ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE SONGSalias0.TITLE = ""var0"" ;"
How many songs have a var0 vocal ?,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE VOCALSalias0.TYPE = ""var0"" ;"
How many songs have vocals of type var0 ?,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE VOCALSalias0.TYPE = ""var0"" ;"
How many songs have a var0 vocal ?,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE VOCALSalias0.TYPE = ""var0"" ;"
How many different songs have var0 vocals ?,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID WHERE VOCALSalias0.TYPE = ""var0"" ;"
"Which vocal type did the musician with first name "" var0 "" played in the song with title "" A Bar in Amsterdam "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE BANDalias0.FIRSTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
"What are the types of vocals that the musician with the first name "" var0 "" played in the song "" A Bar in Amsterdam "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE BANDalias0.FIRSTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
Find all the songs that do not have a var0 vocal .,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
What are the names of the songs without a var0 vocal ?,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
Find all the songs that do not have a var0 vocal .,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
What are the different names of all songs without var0 vocals ?,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
Find the name of songs that does not have a var0 vocal .,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
What are the names of the songs that do not have var0 vocals ?,spider,"SELECT DISTINCT SONGSalias0.TITLE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID EXCEPT SELECT SONGSalias1.TITLE FROM VOCALS AS VOCALSalias1 JOIN SONGS AS SONGSalias1 ON VOCALSalias1.SONGID = SONGSalias1.SONGID WHERE VOCALSalias1.TYPE = ""var0"" ;"
Find all the vocal types .,spider,SELECT DISTINCT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 ;
What are the different types of vocals ?,spider,SELECT DISTINCT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 ;
"Which vocal type has the band mate with first name "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"What are the types of vocals that the band member with the first name "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"Which vocal type has the band mate with first name "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"What is the vocal type of the band mate whose first name is "" var0 "" played the most ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE FIRSTNAME = ""var0"" GROUP BY TYPE ORDER BY COUNT( VOCALSalias0.* ) DESC LIMIT 1 ;"
"Which vocal type did the musician with last name "" var0 "" played in the song with title "" var1 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
"What are the types of vocals that the musician with the last name "" var0 "" played in "" var1 "" ?",spider,"SELECT VOCALSalias0.TYPE FROM VOCALS AS VOCALSalias0 JOIN SONGS AS SONGSalias0 ON VOCALSalias0.SONGID = SONGSalias0.SONGID JOIN BAND AS BANDalias0 ON VOCALSalias0.BANDMATE = BANDalias0.ID WHERE BANDalias0.LASTNAME = ""var0"" AND SONGSalias0.TITLE = ""var1"" ;"
Find the first name of the band mate that has performed in most songs .,spider,SELECT BANDalias0.FIRSTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY FIRSTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the first name of the band mate who perfomed in the most songs ?,spider,SELECT BANDalias0.FIRSTNAME FROM PERFORMANCE AS PERFORMANCEalias0 JOIN BAND AS BANDalias0 ON PERFORMANCEalias0.BANDMATE = BANDalias0.ID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = PERFORMANCEalias0.SONGID GROUP BY FIRSTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
"What are the songs in album "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.TITLE = ""var0"" ;"
"What are the song titles on the album "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.TITLE = ""var0"" ;"
"What are all the songs in albums under label "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.LABEL = ""var0"" ;"
"What are the names of all the songs whose album is under the label of "" var0 "" ?",spider,"SELECT SONGSalias0.TITLE FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.LABEL = ""var0"" ;"
Find the number of songs in all the studio albums .,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.TYPE = ""var0"" ;"
How many songs appear in studio albums ?,spider,"SELECT COUNT( DISTINCT SONGSalias0.TITLE ) FROM ALBUMS AS ALBUMSalias0 JOIN TRACKLISTS AS DERIVED_TABLEalias0 ON DERIVED_TABLEalias0.ALBUMID = ALBUMSalias0.AID JOIN SONGS AS SONGSalias0 ON SONGSalias0.SONGID = DERIVED_TABLEalias0.SONGID WHERE ALBUMSalias0.TYPE = ""var0"" ;"
Who is the founder of var0 ?,spider,"SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME = ""var0"" ;"
Return the founder of var0 .,spider,"SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME = ""var0"" ;"
Where is the headquarter of the company founded by var0 ?,spider,"SELECT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.FOUNDER = ""var0"" ;"
What is the headquarter of the company whose founder is var0 ?,spider,"SELECT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.FOUNDER = ""var0"" ;"
"Find all manufacturers ' names and their headquarters , sorted by the ones with highest revenue first .",spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC ;"
"What are the names and headquarters of all manufacturers , ordered by revenue descending ?",spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC ;"
"What are the average , maximum and total revenues of all companies ?",spider,"SELECT AVG( MANUFACTURERSalias0.REVENUE ) , MAX( MANUFACTURERSalias0.REVENUE ) , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 ;"
"Return the average , maximum , and total revenues across all manufacturers .",spider,"SELECT AVG( MANUFACTURERSalias0.REVENUE ) , MAX( MANUFACTURERSalias0.REVENUE ) , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 ;"
How many companies were created by var0 ?,spider,"SELECT COUNT( * ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.FOUNDER = ""var0"" ;"
Return the number of companies created by var0 .,spider,"SELECT COUNT( * ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.FOUNDER = ""var0"" ;"
Find the total revenue created by the companies whose headquarter is located at var0 .,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" ;"
What is the sum of revenue from companies with headquarters in var0 ?,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" ;"
What are the different cities listed ?,spider,SELECT DISTINCT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 ;
Give the distinct headquarters of manufacturers .,spider,SELECT DISTINCT MANUFACTURERSalias0.HEADQUARTER FROM MANUFACTURERS AS MANUFACTURERSalias0 ;
Find the number of manufactures that are based in var0 or var1 .,spider,"SELECT COUNT( * ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" OR MANUFACTURERSalias0.HEADQUARTER = ""var1"" ;"
How many manufacturers have headquarters in either var0 or var1 ?,spider,"SELECT COUNT( * ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" OR MANUFACTURERSalias0.HEADQUARTER = ""var1"" ;"
Find the founder of the company whose name begins with the letter ' S ' .,spider,"SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME LIKE ""var0"" ;"
Who is the founders of companies whose first letter is S ?,spider,"SELECT MANUFACTURERSalias0.FOUNDER FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.NAME LIKE ""var0"" ;"
Find the name of companies whose revenue is between var0 and var1 .,spider,SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE BETWEEN var0 AND var1 ;
What are the names of companies with revenue between var0 and var1 ?,spider,SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE BETWEEN var0 AND var1 ;
What is the total revenue of all companies whose main office is at var0 or var1 ?,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" OR MANUFACTURERSalias0.HEADQUARTER = ""var1"" ;"
Return the total revenue of companies with headquarters in var0 or var1 .,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.HEADQUARTER = ""var0"" OR MANUFACTURERSalias0.HEADQUARTER = ""var1"" ;"
Find the name of product that is produced by both companies var0 and var1 .,spider,"SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = ""var0"" INTERSECT SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE MANUFACTURERSalias1.NAME = ""var1"" ;"
What are the names of products produced by both var0 and var1 ?,spider,"SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = ""var0"" INTERSECT SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE MANUFACTURERSalias1.NAME = ""var1"" ;"
"Find the name , headquarter and founder of the manufacturer that has the highest revenue .",spider,"SELECT MANUFACTURERSalias0.FOUNDER , MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC LIMIT 1 ;"
"What are the names , headquarters and founders of the company with the highest revenue ?",spider,"SELECT MANUFACTURERSalias0.FOUNDER , MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC LIMIT 1 ;"
"Find the name , headquarter and revenue of all manufacturers sorted by their revenue in the descending order .",spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME , MANUFACTURERSalias0.REVENUE FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC ;"
"What are the names , headquarters and revenues for manufacturers , sorted by revenue descending ?",spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME , MANUFACTURERSalias0.REVENUE FROM MANUFACTURERS AS MANUFACTURERSalias0 ORDER BY MANUFACTURERSalias0.REVENUE DESC ;"
Find the name of companies whose revenue is greater than the average revenue of all companies .,spider,SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT AVG( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 ) ;
What are the names of manufacturers with revenue greater than the average of all revenues ?,spider,SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT AVG( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 ) ;
Find the name of companies whose revenue is smaller than the revenue of all companies based in var0 .,spider,"SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE < ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = ""var0"" ) ;"
What are the names of companies with revenue less than the lowest revenue of any manufacturer in var0 ?,spider,"SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE < ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = ""var0"" ) ;"
Find the total revenue of companies whose revenue is larger than the revenue of some companies based in var0 .,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = ""var0"" ) ;"
What is the total revenue of companies with revenue greater than the lowest revenue of any manufacturer in var0 ?,spider,"SELECT SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 WHERE MANUFACTURERSalias0.REVENUE > ( SELECT MIN( MANUFACTURERSalias1.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias1 WHERE MANUFACTURERSalias1.HEADQUARTER = ""var0"" ) ;"
Find the total revenue of companies of each founder .,spider,"SELECT MANUFACTURERSalias0.FOUNDER , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.FOUNDER ;"
What is the total revenue of companies started by founder ?,spider,"SELECT MANUFACTURERSalias0.FOUNDER , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.FOUNDER ;"
Find the name and revenue of the company that earns the highest revenue in each city .,spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME , MAX( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.HEADQUARTER ;"
What are the names and revenues of the companies with the highest revenues in each headquarter city ?,spider,"SELECT MANUFACTURERSalias0.HEADQUARTER , MANUFACTURERSalias0.NAME , MAX( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.HEADQUARTER ;"
Find the total revenue for each manufacturer .,spider,"SELECT MANUFACTURERSalias0.NAME , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.NAME ;"
What is the total revenue of each manufacturer ?,spider,"SELECT MANUFACTURERSalias0.NAME , SUM( MANUFACTURERSalias0.REVENUE ) FROM MANUFACTURERS AS MANUFACTURERSalias0 GROUP BY MANUFACTURERSalias0.NAME ;"
"Find the average prices of all products from each manufacture , and list each company's name .",spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
What are the average prices of products for each manufacturer ?,spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
"Select the average price of each manufacturer's products , showing the manufacturer's name .",spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
"What are the average prices of products , grouped by manufacturer name ?",spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
Find the number of different products that are produced by companies at different headquarter cities .,spider,"SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) , MANUFACTURERSalias0.HEADQUARTER FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.HEADQUARTER ;"
How many different products are produced in each headquarter city ?,spider,"SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) , MANUFACTURERSalias0.HEADQUARTER FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.HEADQUARTER ;"
Find number of products which var0 does not make .,spider,"SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.NAME NOT IN ( SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = ""var0"" ) ;"
How many products are not made by var0 ?,spider,"SELECT COUNT( DISTINCT PRODUCTSalias0.NAME ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.NAME NOT IN ( SELECT PRODUCTSalias1.NAME FROM PRODUCTS AS PRODUCTSalias1 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias1.MANUFACTURER = MANUFACTURERSalias0.CODE WHERE MANUFACTURERSalias0.NAME = ""var0"" ) ;"
Find the name of companies that do not make var0 .,spider,"SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 EXCEPT SELECT MANUFACTURERSalias1.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE PRODUCTSalias0.NAME = ""var0"" ;"
What are the names of companies that do not make var0s ?,spider,"SELECT MANUFACTURERSalias0.NAME FROM MANUFACTURERS AS MANUFACTURERSalias0 EXCEPT SELECT MANUFACTURERSalias1.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias1 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias1.CODE WHERE PRODUCTSalias0.NAME = ""var0"" ;"
"Find the number of products for each manufacturer , showing the name of each company .",spider,"SELECT COUNT( PRODUCTSalias0.* ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
How many products are there for each manufacturer ?,spider,"SELECT COUNT( PRODUCTSalias0.* ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
Select the names of all the products in the store .,spider,SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 ;
What are the names of all products ?,spider,SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 ;
Select the names and the prices of all the products in the store .,spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ;"
What are the names and prices of all products in the store ?,spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ;"
Select the name of the products with a price less than or equal to $var0 .,spider,SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE <= var0 ;
What are the names of products with price at most var0 ?,spider,SELECT PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE <= var0 ;
Find all information of all the products with a price between $var0 and $var1 .,spider,SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE BETWEEN var0 AND var1 ;
What is all the information of all the products that have a price between var0 and var1 ?,spider,SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE BETWEEN var0 AND var1 ;
Compute the average price of all the products .,spider,SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
What is the average price across all products ?,spider,SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;
Compute the average price of all products with manufacturer code equal to var0 .,spider,SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.MANUFACTURER = var0 ;
What is the average price of products with manufacturer codes equal to var0 ?,spider,SELECT AVG( PRODUCTSalias0.PRICE ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.MANUFACTURER = var0 ;
Compute the number of products with a price larger than or equal to $var0 .,spider,SELECT COUNT( PRODUCTSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE >= var0 ;
How many products have prices of at least var0 ?,spider,SELECT COUNT( PRODUCTSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRICE >= var0 ;
"Select the name and price of all products with a price larger than or equal to $var0 , and sort first by price (in descending order) , and then by name (in ascending order) .",spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRICE >= var0 ORDER BY PRODUCTSalias0.PRICE DESC , PRODUCTSalias0.NAME ASC ;"
"What are the names and prices of products that cost at least var0 , sorted by price decreasing and name ascending ?",spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRICE >= var0 ORDER BY PRODUCTSalias0.PRICE DESC , PRODUCTSalias0.NAME ASC ;"
Select all the data from the products and each product's manufacturer .,spider,SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE ;
"What is all the product data , as well as each product's manufacturer ?",spider,SELECT PRODUCTSalias0.* FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE ;
"Select the average price of each manufacturer's products , showing only the manufacturer's code .",spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.MANUFACTURER FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.MANUFACTURER ;"
"What are the average prices of products , grouped by manufacturer code ?",spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.MANUFACTURER FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.MANUFACTURER ;"
Select the names of manufacturer whose products have an average price higher than or equal to $var0 .,spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME HAVING AVG( PRODUCTSalias0.PRICE ) >= var0 ;"
What are the names and average prices of products for manufacturers whose products cost on average var0 or more ?,spider,"SELECT AVG( PRODUCTSalias0.PRICE ) , MANUFACTURERSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME HAVING AVG( PRODUCTSalias0.PRICE ) >= var0 ;"
Select the name and price of the cheapest product .,spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRICE ASC LIMIT 1 ;"
What is the name and price of the cheapest product ?,spider,"SELECT PRODUCTSalias0.NAME , PRODUCTSalias0.PRICE FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRICE ASC LIMIT 1 ;"
Select the name of each manufacturer along with the name and price of its most expensive product .,spider,"SELECT MANUFACTURERSalias0.NAME , MAX( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
"For each manufacturer name , what are the names and prices of their most expensive product ?",spider,"SELECT MANUFACTURERSalias0.NAME , MAX( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN MANUFACTURERS AS MANUFACTURERSalias0 ON PRODUCTSalias0.MANUFACTURER = MANUFACTURERSalias0.CODE GROUP BY MANUFACTURERSalias0.NAME ;"
Select the code of the product that is cheapest in each product category .,spider,"SELECT MIN( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.CODE , PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.NAME ;"
What are the codes and names of the cheapest products in each category ?,spider,"SELECT MIN( PRODUCTSalias0.PRICE ) , PRODUCTSalias0.CODE , PRODUCTSalias0.NAME FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.NAME ;"
What is the id of the problem log that is created most recently ?,spider,SELECT PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ORDER BY PROBLEM_LOGalias0.LOG_ENTRY_DATE DESC LIMIT 1 ;
Which problem log was created most recently ? Give me the log id .,spider,SELECT PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ORDER BY PROBLEM_LOGalias0.LOG_ENTRY_DATE DESC LIMIT 1 ;
What is the oldest log id and its corresponding problem id ?,spider,"SELECT PROBLEM_LOGalias0.PROBLEM_ID , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ORDER BY PROBLEM_LOGalias0.LOG_ENTRY_DATE LIMIT 1 ;"
Find the oldest log id and its corresponding problem id .,spider,"SELECT PROBLEM_LOGalias0.PROBLEM_ID , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ORDER BY PROBLEM_LOGalias0.LOG_ENTRY_DATE LIMIT 1 ;"
Find all the ids and dates of the logs for the problem whose id is var0 .,spider,"SELECT PROBLEM_LOGalias0.LOG_ENTRY_DATE , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;"
"For the problem with id var0 , return the ids and dates of its problem logs .",spider,"SELECT PROBLEM_LOGalias0.LOG_ENTRY_DATE , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;"
List all the log ids and their descriptions from the problem logs .,spider,"SELECT PROBLEM_LOGalias0.LOG_ENTRY_DESCRIPTION , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ;"
What are the log id and entry description of each problem ?,spider,"SELECT PROBLEM_LOGalias0.LOG_ENTRY_DESCRIPTION , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM PROBLEM_LOG AS PROBLEM_LOGalias0 ;"
List the first and last names of all distinct staff members who are assigned to the problem whose id is var0 .,spider,"SELECT DISTINCT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;"
Which staff members are assigned to the problem with id var0 ? Give me their first and last names .,spider,"SELECT DISTINCT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE PROBLEM_LOGalias0.PROBLEM_ID = var0 ;"
List the problem id and log id which are assigned to the staff named var0 var1 .,spider,"SELECT DISTINCT PROBLEM_LOGalias0.PROBLEM_ID , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" ;"
Which problem id and log id are assigned to the staff named var0 var1 ?,spider,"SELECT DISTINCT PROBLEM_LOGalias0.PROBLEM_ID , PROBLEM_LOGalias0.PROBLEM_LOG_ID FROM STAFF AS STAFFalias0 JOIN PROBLEM_LOG AS PROBLEM_LOGalias0 ON STAFFalias0.STAFF_ID = PROBLEM_LOGalias0.ASSIGNED_TO_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" ;"
How many problems are there for product var0 ?,spider,"SELECT COUNT( PROBLEMSalias0.* ) FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PRODUCTalias0.PRODUCT_NAME = ""var0"" ;"
"How many problems did the product called "" var0 "" have in record ?",spider,"SELECT COUNT( PROBLEMSalias0.* ) FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PRODUCTalias0.PRODUCT_NAME = ""var0"" ;"
How many problems does the product with the most problems have ? List the number of the problems and product name .,spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT 1 ;"
Which product has the most problems ? Give me the number of problems and the product name .,spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 JOIN PROBLEMS AS PROBLEMSalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT 1 ;"
Give me a list of descriptions of the problems that are reported by the staff whose first name is var0 .,spider,"SELECT PROBLEMSalias0.PROBLEM_DESCRIPTION FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" ;"
"Which problems are reported by the staff with first name "" var0 "" ? Show the descriptions of the problems .",spider,"SELECT PROBLEMSalias0.PROBLEM_DESCRIPTION FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" ;"
Find the ids of the problems that are reported by the staff whose last name is var0 .,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_LAST_NAME = ""var0"" ;"
"Which problems are reported by the staff with last name "" var0 "" ? Show the ids of the problems .",spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_LAST_NAME = ""var0"" ;"
What are the ids of the problems which are reported after var0 ?,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var0"" ;"
Find the ids of the problems reported after var0 .,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var0"" ;"
What are the ids of the problems which are reported before var0 ?,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < ""var0"" ;"
Which problems are reported before var0 ? Give me the ids of the problems .,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < ""var0"" ;"
"For each product which has problems , what are the number of problems and the product id ?",spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_ID ;"
"For each product with some problems , list the count of problems and the product id .",spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_ID ;"
"For each product that has problems , find the number of problems reported after var0 and the product id ?",spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var0"" GROUP BY PRODUCTalias0.PRODUCT_ID ;"
What are the products that have problems reported after var0 ? Give me the product id and the count of problems reported after var0 .,spider,"SELECT COUNT( PROBLEMSalias0.* ) , PRODUCTalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var0"" GROUP BY PRODUCTalias0.PRODUCT_ID ;"
List the names of all the distinct product names in alphabetical order ?,spider,SELECT DISTINCT PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 ORDER BY PRODUCTalias0.PRODUCT_NAME ;
Sort all the distinct product names in alphabetical order .,spider,SELECT DISTINCT PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 ORDER BY PRODUCTalias0.PRODUCT_NAME ;
List all the distinct product names ordered by product id ?,spider,SELECT DISTINCT PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 ORDER BY PRODUCTalias0.PRODUCT_ID ;
What is the list of distinct product names sorted by product id ?,spider,SELECT DISTINCT PRODUCTalias0.PRODUCT_NAME FROM PRODUCT AS PRODUCTalias0 ORDER BY PRODUCTalias0.PRODUCT_ID ;
What are the id of problems reported by the staff named var0 var1 or var2 var3 ?,spider,"SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" UNION SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
Which problems were reported by the staff named var0 var1 or var2 var3 ? Give me the ids of the problems .,spider,"SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" UNION SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
What are the product ids for the problems reported by var0 var1 with closure authorised by var2 var3 ?,spider,"SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" INTERSECT SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.CLOSURE_AUTHORISED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
"For which product was there a problem reported by var0 var1 , with closure authorised by var2 var3 ? Return the product ids .",spider,"SELECT PROBLEMSalias0.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" INTERSECT SELECT PROBLEMSalias1.PRODUCT_ID FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.CLOSURE_AUTHORISED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
What are the ids of the problems reported before the date of any problem reported by var0 var1 ?,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < ( SELECT MIN( PROBLEMSalias1.DATE_PROBLEM_REPORTED ) FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var0"" AND STAFFalias1.STAFF_LAST_NAME = ""var1"" ) ;"
Which problems were reported before the date of any problem reported by the staff var0 var1 ? Give me the ids of the problems .,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED < ( SELECT MIN( PROBLEMSalias1.DATE_PROBLEM_REPORTED ) FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var0"" AND STAFFalias1.STAFF_LAST_NAME = ""var1"" ) ;"
What are the ids of the problems reported after the date of any problems reported by var0 var1 ?,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ( SELECT MAX( PROBLEMSalias1.DATE_PROBLEM_REPORTED ) FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var0"" AND STAFFalias1.STAFF_LAST_NAME = ""var1"" ) ;"
Find the ids of the problems reported after the date of any problems reported by the staff var0 var1 .,spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ( SELECT MAX( PROBLEMSalias1.DATE_PROBLEM_REPORTED ) FROM PROBLEMS AS PROBLEMSalias1 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var0"" AND STAFFalias1.STAFF_LAST_NAME = ""var1"" ) ;"
Find the top var0 products which have the largest number of problems ?,spider,SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT var0 ;
What are the three products that have the most problems?s,spider,SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID GROUP BY PRODUCTalias0.PRODUCT_NAME ORDER BY COUNT( PROBLEMSalias0.* ) DESC LIMIT var0 ;
"List the ids of the problems from the product "" var0 "" that are reported after var1 ?",spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var1"" AND PRODUCTalias0.PRODUCT_NAME = ""var0"" ;"
"What are the ids of the problems that are from the product "" var0 "" and are reported after var1 ?",spider,"SELECT PROBLEMSalias0.PROBLEM_ID FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID WHERE PROBLEMSalias0.DATE_PROBLEM_REPORTED > ""var1"" AND PRODUCTalias0.PRODUCT_NAME = ""var0"" ;"
"Find the first and last name of the staff members who reported problems from the product "" var0 "" but not "" var1 "" ?",spider,"SELECT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PRODUCTalias0.PRODUCT_NAME = ""var0"" EXCEPT SELECT STAFFalias1.STAFF_FIRST_NAME , STAFFalias1.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE PRODUCTalias1.PRODUCT_NAME = ""var1"" ;"
"Which staff members who reported problems from the product "" var0 "" but not "" var1 "" ? Give me their first and last names .",spider,"SELECT STAFFalias0.STAFF_FIRST_NAME , STAFFalias0.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE PRODUCTalias0.PRODUCT_NAME = ""var0"" EXCEPT SELECT STAFFalias1.STAFF_FIRST_NAME , STAFFalias1.STAFF_LAST_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE PRODUCTalias1.PRODUCT_NAME = ""var1"" ;"
Find the products which have problems reported by both var0 var1 and var2 var3 ?,spider,"SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" INTERSECT SELECT PRODUCTalias1.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
Which products have problems reported by both the staff named var0 var1 and the staff named var2 var3 ?,spider,"SELECT PRODUCTalias0.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias0 JOIN PRODUCT AS PRODUCTalias0 JOIN STAFF AS STAFFalias0 ON PRODUCTalias0.PRODUCT_ID = PROBLEMSalias0.PRODUCT_ID AND STAFFalias0.STAFF_ID = PROBLEMSalias0.REPORTED_BY_STAFF_ID WHERE STAFFalias0.STAFF_FIRST_NAME = ""var0"" AND STAFFalias0.STAFF_LAST_NAME = ""var1"" INTERSECT SELECT PRODUCTalias1.PRODUCT_NAME FROM PROBLEMS AS PROBLEMSalias1 JOIN PRODUCT AS PRODUCTalias1 JOIN STAFF AS STAFFalias1 ON PRODUCTalias1.PRODUCT_ID = PROBLEMSalias1.PRODUCT_ID AND STAFFalias1.STAFF_ID = PROBLEMSalias1.REPORTED_BY_STAFF_ID WHERE STAFFalias1.STAFF_FIRST_NAME = ""var2"" AND STAFFalias1.STAFF_LAST_NAME = ""var3"" ;"
How many branches where have more than average number of memberships are there ?,spider,SELECT COUNT( * ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT > ( SELECT AVG( BRANCHalias1.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias1 ) ;
What is the number of branches that have more than the average number of memberships ?,spider,SELECT COUNT( * ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT > ( SELECT AVG( BRANCHalias1.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias1 ) ;
"Show name , address road , and city for all branches sorted by open year .",spider,"SELECT BRANCHalias0.ADDRESS_ROAD , BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.OPEN_YEAR ;"
"What are the names , address roads , and cities of the branches ordered by opening year ?",spider,"SELECT BRANCHalias0.ADDRESS_ROAD , BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.OPEN_YEAR ;"
What are names for top three branches with most number of membership ?,spider,SELECT BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.MEMBERSHIP_AMOUNT DESC LIMIT var0 ;
What are the names for the var0 branches that have the most memberships ?,spider,SELECT BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 ORDER BY BRANCHalias0.MEMBERSHIP_AMOUNT DESC LIMIT var0 ;
Show all distinct city where branches with at least var0 memberships are located .,spider,SELECT DISTINCT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT >= var0 ;
What are the different cities that have more than var0 memberships ?,spider,SELECT DISTINCT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT >= var0 ;
List all open years when at least two shops are opened .,spider,SELECT BRANCHalias0.OPEN_YEAR FROM BRANCH AS BRANCHalias0 GROUP BY BRANCHalias0.OPEN_YEAR HAVING COUNT( * ) >= var0 ;
What are the opening years in which at least two shops opened ?,spider,SELECT BRANCHalias0.OPEN_YEAR FROM BRANCH AS BRANCHalias0 GROUP BY BRANCHalias0.OPEN_YEAR HAVING COUNT( * ) >= var0 ;
Show minimum and maximum amount of memberships for all branches opened in var0 or located at city var1 .,spider,"SELECT MAX( BRANCHalias0.MEMBERSHIP_AMOUNT ) , MIN( BRANCHalias0.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.CITY = ""var1"" OR BRANCHalias0.OPEN_YEAR = var0 ;"
What are the minimum and maximum membership amounts for all branches that either opened in var0 or are located in var1 ?,spider,"SELECT MAX( BRANCHalias0.MEMBERSHIP_AMOUNT ) , MIN( BRANCHalias0.MEMBERSHIP_AMOUNT ) FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.CITY = ""var1"" OR BRANCHalias0.OPEN_YEAR = var0 ;"
Show the city and the number of branches opened before var0 for each city .,spider,"SELECT BRANCHalias0.CITY , COUNT( * ) FROM BRANCH AS BRANCHalias0 WHERE OPEN_YEAR < var0 GROUP BY BRANCHalias0.CITY ;"
"For each city , how many branches opened before var0 ?",spider,"SELECT BRANCHalias0.CITY , COUNT( * ) FROM BRANCH AS BRANCHalias0 WHERE OPEN_YEAR < var0 GROUP BY BRANCHalias0.CITY ;"
How many different levels do members have ?,spider,SELECT COUNT( DISTINCT MEMBERalias0.LEVEL ) FROM MEMBER AS MEMBERalias0 ;
What are the different membership levels ?,spider,SELECT COUNT( DISTINCT MEMBERalias0.LEVEL ) FROM MEMBER AS MEMBERalias0 ;
"Show card number , name , and hometown for all members in a descending order of level .",spider,"SELECT MEMBERalias0.CARD_NUMBER , MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.LEVEL DESC ;"
"What are the card numbers , names , and hometowns of every member ordered by descending level ?",spider,"SELECT MEMBERalias0.CARD_NUMBER , MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 ORDER BY MEMBERalias0.LEVEL DESC ;"
Show the membership level with most number of members .,spider,SELECT MEMBERalias0.LEVEL FROM MEMBER AS MEMBERalias0 GROUP BY LEVEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the membership level with the most people ?,spider,SELECT MEMBERalias0.LEVEL FROM MEMBER AS MEMBERalias0 GROUP BY LEVEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all member names and registered branch names sorted by register year .,spider,"SELECT BRANCHalias0.NAME , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID ORDER BY MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR ;"
What are the names of the members and branches at which they are registered sorted by year of registration ?,spider,"SELECT BRANCHalias0.NAME , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID ORDER BY MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR ;"
Show all branch names with the number of members in each branch registered after var0 .,spider,"SELECT BRANCHalias0.NAME , COUNT( * ) FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR > var0 GROUP BY BRANCHalias0.BRANCH_ID ;"
"For each branch id , what are the names of the branches that were registered after var0 ?",spider,"SELECT BRANCHalias0.NAME , COUNT( * ) FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR > var0 GROUP BY BRANCHalias0.BRANCH_ID ;"
Show member names without any registered branch .,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;
What are the names of the members that have never registered at any branch ?,spider,SELECT MEMBERalias0.NAME FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.MEMBER_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;
List the branch name and city without any registered members .,spider,"SELECT BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.BRANCH_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;"
What are the names and cities of the branches that do not have any registered members ?,spider,"SELECT BRANCHalias0.CITY , BRANCHalias0.NAME FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.BRANCH_ID NOT IN ( SELECT MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 ) ;"
What is the name and open year for the branch with most number of memberships registered in var0 ?,spider,"SELECT BRANCHalias0.NAME , BRANCHalias0.OPEN_YEAR FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 GROUP BY BRANCHalias0.BRANCH_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and opening year for the branch that registered the most members in var0 ?,spider,"SELECT BRANCHalias0.NAME , BRANCHalias0.OPEN_YEAR FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 GROUP BY BRANCHalias0.BRANCH_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show the member name and hometown who registered a branch in var0 .,spider,"SELECT MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 ;"
What are the member names and hometowns of those who registered at a branch in var0 ?,spider,"SELECT MEMBERalias0.HOMETOWN , MEMBERalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERSHIP_REGISTER_BRANCHalias0.REGISTER_YEAR = var0 ;"
Show all city with a branch opened in var0 and a branch with more than var1 membership .,spider,SELECT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT > var1 AND BRANCHalias0.OPEN_YEAR = var0 ;
What are the cities that have a branch that opened in var0 and a branch with more than var1 members ?,spider,SELECT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 WHERE BRANCHalias0.MEMBERSHIP_AMOUNT > var1 AND BRANCHalias0.OPEN_YEAR = var0 ;
Show all cities without a branch having more than var0 memberships .,spider,SELECT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 EXCEPT SELECT BRANCHalias1.CITY FROM BRANCH AS BRANCHalias1 WHERE BRANCHalias1.MEMBERSHIP_AMOUNT > var0 ;
What are the cities that do not have any branches with more than var0 members ?,spider,SELECT BRANCHalias0.CITY FROM BRANCH AS BRANCHalias0 EXCEPT SELECT BRANCHalias1.CITY FROM BRANCH AS BRANCHalias1 WHERE BRANCHalias1.MEMBERSHIP_AMOUNT > var0 ;
What is the sum of total pounds of purchase in year var1 for all branches in var0 ?,spider,"SELECT SUM( PURCHASEalias0.TOTAL_POUNDS ) FROM PURCHASE AS PURCHASEalias0 JOIN BRANCH AS BRANCHalias0 ON PURCHASEalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE BRANCHalias0.CITY = ""var0"" AND PURCHASEalias0.YEAR = var1 ;"
How many total pounds were purchased in the year var1 at all var0 branches ?,spider,"SELECT SUM( PURCHASEalias0.TOTAL_POUNDS ) FROM PURCHASE AS PURCHASEalias0 JOIN BRANCH AS BRANCHalias0 ON PURCHASEalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID WHERE BRANCHalias0.CITY = ""var0"" AND PURCHASEalias0.YEAR = var1 ;"
What is the total number of purchases for members with level var0 ?,spider,SELECT COUNT( PURCHASEalias0.* ) FROM PURCHASE AS PURCHASEalias0 JOIN MEMBER AS MEMBERalias0 ON PURCHASEalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID WHERE MEMBERalias0.LEVEL = var0 ;
What are the total purchases for members rated at level var0 ?,spider,SELECT COUNT( PURCHASEalias0.* ) FROM PURCHASE AS PURCHASEalias0 JOIN MEMBER AS MEMBERalias0 ON PURCHASEalias0.MEMBER_ID = MEMBERalias0.MEMBER_ID WHERE MEMBERalias0.LEVEL = var0 ;
Find the name of branches where have some members whose hometown is in var0 and some in var1 .,spider,"SELECT BRANCHalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERalias0.HOMETOWN = ""var0"" INTERSECT SELECT BRANCHalias1.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias1 JOIN BRANCH AS BRANCHalias1 ON MEMBERSHIP_REGISTER_BRANCHalias1.BRANCH_ID = BRANCHalias1.BRANCH_ID JOIN MEMBER AS MEMBERalias1 ON MEMBERalias1.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias1.MEMBER_ID WHERE MEMBERalias1.HOMETOWN = ""var1"" ;"
"What are the names of the branches that have some members with a hometown in var0 and also those from Hiram , Goergia ?",spider,"SELECT BRANCHalias0.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias0 JOIN BRANCH AS BRANCHalias0 ON MEMBERSHIP_REGISTER_BRANCHalias0.BRANCH_ID = BRANCHalias0.BRANCH_ID JOIN MEMBER AS MEMBERalias0 ON MEMBERalias0.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias0.MEMBER_ID WHERE MEMBERalias0.HOMETOWN = ""var0"" INTERSECT SELECT BRANCHalias1.NAME FROM MEMBERSHIP_REGISTER_BRANCH AS MEMBERSHIP_REGISTER_BRANCHalias1 JOIN BRANCH AS BRANCHalias1 ON MEMBERSHIP_REGISTER_BRANCHalias1.BRANCH_ID = BRANCHalias1.BRANCH_ID JOIN MEMBER AS MEMBERalias1 ON MEMBERalias1.MEMBER_ID = MEMBERSHIP_REGISTER_BRANCHalias1.MEMBER_ID WHERE MEMBERalias1.HOMETOWN = ""var1"" ;"
"list the card number of all members whose hometown address includes word "" var0 "" .",spider,"SELECT MEMBERalias0.CARD_NUMBER FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.HOMETOWN LIKE ""var0"" ;"
What are the card numbers of members from var0 ?,spider,"SELECT MEMBERalias0.CARD_NUMBER FROM MEMBER AS MEMBERalias0 WHERE MEMBERalias0.HOMETOWN LIKE ""var0"" ;"
Find the number of voting records in total .,spider,SELECT COUNT( VOTING_RECORDalias0.* ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
How many voting records do we have ?,spider,SELECT COUNT( VOTING_RECORDalias0.* ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
Find the distinct number of president votes .,spider,SELECT COUNT( DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
How many distinct president votes are recorded ?,spider,SELECT COUNT( DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE ) FROM VOTING_RECORD AS VOTING_RECORDalias0 ;
Find the maximum age of all the students .,spider,SELECT MAX( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;
What is the oldest age among the students ?,spider,SELECT MAX( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 ;
Find the last names of students with major var0 .,spider,SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
What are the last names of students studying major var0 ?,spider,SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
Find the first names of students with age above var0 .,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
What are the first names of all the students aged above var0 ?,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
Find the first name of students who is older than var0 .,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
What are the first names of all students who are older than var0 ?,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE > var0 ;
What are the majors of male (sex is var0) students ?,spider,"SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
List the major of each male student .,spider,"SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
What is the average age of female (sex is var0) students ?,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
var0ind the average age of female students .,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" ;"
What are the maximum and minimum age of students with major var0 ?,spider,"SELECT MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;"
Tell me the ages of the oldest and youngest students studying major var0 .,spider,"SELECT MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;"
"Who are the advisors for students that live in a city with city code "" var0 "" ?",spider,"SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
"Show the advisors of the students whose city of residence has city code "" var0 "" .",spider,"SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
What are the distinct secretary votes in the fall election cycle ?,spider,"SELECT DISTINCT VOTING_RECORDalias0.SECRETARY_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
Return all the distinct secretary votes made in the fall election cycle .,spider,"SELECT DISTINCT VOTING_RECORDalias0.SECRETARY_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
What are the distinct president votes on var0 ?,spider,"SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.REGISTRATION_DATE = ""var0"" ;"
Show all the distinct president votes made on var0 .,spider,"SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 WHERE VOTING_RECORDalias0.REGISTRATION_DATE = ""var0"" ;"
Report the distinct registration date and the election cycle .,spider,"SELECT DISTINCT VOTING_RECORDalias0.ELECTION_CYCLE , VOTING_RECORDalias0.REGISTRATION_DATE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;"
What are the distinct registration dates and the election cycles ?,spider,"SELECT DISTINCT VOTING_RECORDalias0.ELECTION_CYCLE , VOTING_RECORDalias0.REGISTRATION_DATE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;"
Report the distinct president vote and the vice president vote .,spider,"SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE , VOTING_RECORDalias0.VICE_PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;"
List all the distinct president votes and the vice president votes .,spider,"SELECT DISTINCT VOTING_RECORDalias0.PRESIDENT_VOTE , VOTING_RECORDalias0.VICE_PRESIDENT_VOTE FROM VOTING_RECORD AS VOTING_RECORDalias0 ;"
Find the distinct last names of the students who have class president votes .,spider,SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_PRESIDENT_VOTE = STUDENTalias0.STUID ;
What are the distinct last names of the students who have class president votes ?,spider,SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_PRESIDENT_VOTE = STUDENTalias0.STUID ;
Find the distinct first names of the students who have class senator votes .,spider,SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_SENATOR_VOTE = STUDENTalias0.STUID ;
What are the distinct first names of the students who have class president votes ?,spider,SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.CLASS_SENATOR_VOTE = STUDENTalias0.STUID ;
Find the distinct ages of students who have secretary votes in the fall election cycle .,spider,"SELECT DISTINCT STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.SECRETARY_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
What are the distinct ages of students who have secretary votes in the fall election cycle ?,spider,"SELECT DISTINCT STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.SECRETARY_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
Find the distinct Advisor of students who have treasurer votes in the spring election cycle .,spider,"SELECT DISTINCT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
Who served as an advisor for students who have treasurer votes in the spring election cycle ?,spider,"SELECT DISTINCT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID WHERE VOTING_RECORDalias0.ELECTION_CYCLE = ""var0"" ;"
Find the distinct majors of students who have treasurer votes .,spider,SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID ;
What are the distinct majors that students with treasurer votes are studying ?,spider,SELECT DISTINCT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.TREASURER_VOTE = STUDENTalias0.STUID ;
var0ind the first and last names of all the female (sex is var0) students who have president votes .,spider,"SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" ;"
What are the first and last names of all the female students who have president votes ?,spider,"SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.SEX = ""var0"" ;"
Find the first and last name of all the students of age var0 who have vice president votes .,spider,"SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.AGE = var0 ;"
What are the first names and last names of the students who are var0 years old and have vice president votes .,spider,"SELECT DISTINCT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID WHERE STUDENTalias0.AGE = var0 ;"
How many male (sex is var0) students have class senator votes in the fall election cycle ?,spider,"SELECT COUNT( VOTING_RECORDalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = CLASS_SENATOR_VOTE WHERE STUDENTalias0.SEX = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
Count the number of male students who had class senator votes in the fall election cycle .,spider,"SELECT COUNT( VOTING_RECORDalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = CLASS_SENATOR_VOTE WHERE STUDENTalias0.SEX = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
Find the number of students whose city code is var0 and who have class senator votes in the spring election cycle .,spider,"SELECT COUNT( VOTING_RECORDalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = CLASS_SENATOR_VOTE WHERE STUDENTalias0.CITY_CODE = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
"Which students live in the city with code "" var0 "" and have class senator votes in the spring election cycle ? Count the numbers .",spider,"SELECT COUNT( VOTING_RECORDalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = CLASS_SENATOR_VOTE WHERE STUDENTalias0.CITY_CODE = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
"Find the average age of students who live in the city with code "" var0 "" and have secretary votes in the spring election cycle .",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.CITY_CODE = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
"What is the average age of students who have city code "" var0 "" and have secretary votes for the spring election cycle ?",spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.CITY_CODE = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
var0ind the average age of female (sex is var0) students who have secretary votes in the spring election cycle .,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.SEX = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
What is the average age of the female students with secretary votes in the spring election cycle ?,spider,"SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = SECRETARY_VOTE WHERE STUDENTalias0.SEX = ""var0"" AND VOTING_RECORDalias0.ELECTION_CYCLE = ""var1"" ;"
Find the distinct first names of all the students who have vice president votes and whose city code is not var0 .,spider,"SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID EXCEPT SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.CITY_CODE = ""var0"" ;"
What are the distinct first names of the students who have vice president votes and reside in a city whose city code is not var0 ?,spider,"SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON VOTING_RECORDalias0.VICE_PRESIDENT_VOTE = STUDENTalias0.STUID EXCEPT SELECT DISTINCT FNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.CITY_CODE = ""var0"" ;"
Find the distinct last names of all the students who have president votes and whose advisor is not var0 .,spider,"SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE EXCEPT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = ""var0"" ;"
What are the distinct last names of the students who have president votes but do not have var0 as the advisor ?,spider,"SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE EXCEPT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = ""var0"" ;"
Find the distinct last names of all the students who have president votes and whose advisor is var0 .,spider,"SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE INTERSECT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = ""var0"" ;"
What are the distinct last names of the students who have president votes and have var0 as the advisor ?,spider,"SELECT DISTINCT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN VOTING_RECORD AS VOTING_RECORDalias0 ON STUDENTalias0.STUID = PRESIDENT_VOTE INTERSECT SELECT DISTINCT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.ADVISOR = ""var0"" ;"
"For each advisor , report the total number of students advised by him or her .",spider,"SELECT COUNT( * ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;"
How many students does each advisor have ?,spider,"SELECT COUNT( * ) , STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR ;"
Report all advisors that advise more than var0 students .,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) > var0 ;
Which advisors have more than two students ?,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) > var0 ;
Report the distinct advisors who have more than var0 students .,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) > var0 ;
Which advisors are advising more than var0 students ?,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) > var0 ;
Report all majors that have less than var0 students .,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR HAVING COUNT( * ) < var0 ;
What are the majors only less than three students are studying ?,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR HAVING COUNT( * ) < var0 ;
"For each election cycle , report the number of voting records .",spider,"SELECT COUNT( VOTING_RECORDalias0.* ) , VOTING_RECORDalias0.ELECTION_CYCLE FROM VOTING_RECORD AS VOTING_RECORDalias0 GROUP BY VOTING_RECORDalias0.ELECTION_CYCLE ;"
Count the number of voting records for each election cycle .,spider,"SELECT COUNT( VOTING_RECORDalias0.* ) , VOTING_RECORDalias0.ELECTION_CYCLE FROM VOTING_RECORD AS VOTING_RECORDalias0 GROUP BY VOTING_RECORDalias0.ELECTION_CYCLE ;"
Which major has the most students ?,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the major that is studied by the largest number of students .,spider,SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common major among female (sex is var0) students ?,spider,"SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;"
var0ind the major that is studied by the most female students .,spider,"SELECT STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the city_code of the city that the most students live in ?,spider,SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY CITY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the code of the city that has the most students .,spider,SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY CITY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the code of city where most of students are living in .,spider,SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY CITY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the code of the city with the most students ?,spider,SELECT STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY CITY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many colors are there ?,spider,SELECT COUNT( * ) FROM REF_COLORS ;
Count the number of colors .,spider,SELECT COUNT( * ) FROM REF_COLORS ;
How many characteristics are there ?,spider,SELECT COUNT( * ) FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
Count the number of characteristics .,spider,SELECT COUNT( * ) FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
What are the names and buying prices of all the products ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.TYPICAL_BUYING_PRICE FROM PRODUCTS AS PRODUCTSalias0 ;"
Return the names and typical buying prices for all products .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.TYPICAL_BUYING_PRICE FROM PRODUCTS AS PRODUCTSalias0 ;"
List the description of all the colors .,spider,SELECT COLOR_DESCRIPTION FROM REF_COLORS ;
What are the descriptions for each color ?,spider,SELECT COLOR_DESCRIPTION FROM REF_COLORS ;
Find the names of all the product characteristics .,spider,SELECT DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
What are the different names of the product characteristics ?,spider,SELECT DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM CHARACTERISTICS AS CHARACTERISTICSalias0 ;
"What are the names of products with category "" var0 "" ?",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
Return the names of products in the category ' var0 ' .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
"List the names , color descriptions and product descriptions of products with category "" var0 "" .",spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_DESCRIPTION , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
"What are the names , color descriptions , and product descriptions for products in the ' var0 ' category ?",spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_DESCRIPTION , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
"How many products are there under the category "" var0 "" ?",spider,"SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
Count the number of products in the category ' var0 ' .,spider,"SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" ;"
"Find the number of products with category "" var0 "" and typically sold above var1 .",spider,"SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" AND PRODUCTSalias0.TYPICAL_BUYING_PRICE > var1 ;"
How many products are in the ' var0 ' category and have a typical price of over var1 ?,spider,"SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_CATEGORY_CODE = ""var0"" AND PRODUCTSalias0.TYPICAL_BUYING_PRICE > var1 ;"
"What is the category and typical buying price of the product with name "" var0 "" ?",spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.TYPICAL_BUYING_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Return the category code and typical price of ' var0 ' .,spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.TYPICAL_BUYING_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Which category does the product named "" var0 "" belong to ?",spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What is the code of the category that the product with the name ' var0 ' belongs to ?,spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What is the name of the product with the color description ' var0 ' ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
Give the name of the products that have a color description ' var0 ' .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
"List all the product names with the color description "" var0 "" .",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
What are the names of products with ' var0 ' as their color description ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
Find var0he cavar0egory descripvar0ions of var0he producvar0s whose descripvar0ions include levar0var0er ' var0 ' .,spider,"SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_DESCRIPTION LIKE ""var0"" ;"
Whavar0 are var0he descripvar0ions of var0he cavar0egories var0havar0 producvar0s wivar0h producvar0 descripvar0ions var0havar0 convar0ain var0he levar0var0er var0 are in ?,spider,"SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_DESCRIPTION LIKE ""var0"" ;"
"What is the color description of the product with name "" var0 "" ?",spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Give the color description for the product ' var0 ' .,spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"What is the color code and description of the product named "" var0 "" ?",spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.COLOR_CODE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Return the color code and description for the product with the name ' var0 ' .,spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.COLOR_CODE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Find the id and color description of the products with at least var0 characteristics .,spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_ID FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;"
What are the product ids and color descriptions for products with two or more characteristics ?,spider,"SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION , PRODUCTSalias0.PRODUCT_ID FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;"
"What are the name and typical buying and selling prices of the products that have color described as "" var0 "" ?",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.TYPICAL_BUYING_PRICE , PRODUCTSalias0.TYPICAL_SELLING_PRICE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
Return the names and typical buying and selling prices for products that have ' var0 ' as their color description .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.TYPICAL_BUYING_PRICE , PRODUCTSalias0.TYPICAL_SELLING_PRICE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
"How many characteristics does the product named "" var0 "" have ?",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Count the number of characteristics the product ' var0 ' has .,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"How many distinct characteristic names does the product "" cumin "" have ?",spider,"SELECT COUNT( DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Count the number of different characteristic names the product ' cumin ' has .,spider,"SELECT COUNT( DISTINCT CHARACTERISTICSalias0.CHARACTERISTIC_NAME ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"What are all the characteristic names of product "" var0 "" ?",spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Return the characteristic names of the ' var0 ' product .,spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"List all the characteristic names and data types of product "" var0 "" .",spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the names and data types of the characteristics of the ' var0 ' product ?,spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"List all characteristics of product named "" var0 "" with type code "" var1 "" .",spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_TYPE_CODE = ""var1"" AND PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the names of the characteristics of the product ' var0 ' that have the characteristic type code ' var1 ' ?,spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_TYPE_CODE = ""var1"" AND PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"How many characteristics does the product named "" var0 "" have ?",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Count the number of characteristics of the product named ' var0 ' .,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Find the number of characteristics that the product "" var0 "" has .",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Count the number of characteristics of the ' var0 ' product .,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Find the name of the products that have the color description "" var0 "" and have the characteristic name "" var1 "" .",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
What are the names of the products that have a color description of ' var0 ' and the ' var1 ' characteristic ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
"How many products have the characteristic named "" var0 "" ?",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var0"" ;"
Count the number of products with the ' var0 ' charactersitic .,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var0"" ;"
List the all the distinct names of the products with the characteristic name ' var0 ' .,spider,"SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var0"" ;"
What are the different product names for products that have the ' var0 ' characteristic: ?,spider,"SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var0"" ;"
"Find the number of the products that have their color described as "" var0 "" and have a characteristic named "" var1 "" .",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
How many products have the color description ' var0 ' and the characteristic name ' var1 ' ?,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" AND DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
"Count the products that have the color description "" var0 "" or have the characteristic name "" var1 "" .",spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" OR DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
How many products have their color described as ' var0 ' or have a characteristic with the name ' var1 ' ?,spider,"SELECT COUNT( PRODUCT_CHARACTERISTICSalias0.* ) FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE WHERE CHARACTERISTICSalias0.CHARACTERISTIC_NAME = ""var1"" OR DERIVED_TABLEalias0.COLOR_DESCRIPTION = ""var0"" ;"
"What is the unit of measuerment of the product category code "" var0 "" ?",spider,"SELECT UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
Return the unit of measure for ' Herb ' products .,spider,"SELECT UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
"Find the product category description of the product category with code "" var0 "" .",spider,"SELECT PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
What is the description of the product category with the code ' var0 ' ?,spider,"SELECT PRODUCT_CATEGORY_DESCRIPTION FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
"What is the product category description and unit of measurement of category "" var0 "" ?",spider,"SELECT PRODUCT_CATEGORY_DESCRIPTION , UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
Return the description and unit of measurement for products in the ' var0 ' category .,spider,"SELECT PRODUCT_CATEGORY_DESCRIPTION , UNIT_OF_MEASURE FROM REF_PRODUCT_CATEGORIES WHERE PRODUCT_CATEGORY_CODE = ""var0"" ;"
"What is the unit of measurement of product named "" var0 "" ?",spider,"SELECT DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Give the unit of measure for the product with the name ' var0 ' .,spider,"SELECT DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Find the unit of measurement and product category code of product named "" var0 "" .",spider,"SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE , DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
What are the unit of measure and category code for the ' var0 ' product ?,spider,"SELECT DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE , DERIVED_TABLEalias0.UNIT_OF_MEASURE FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Find the product names that are colored ' var0 ' but do not have unit of measurement "" var1 "" .",spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE JOIN REF_COLORS AS DERIVED_TABLEalias1 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias1.COLOR_CODE WHERE DERIVED_TABLEalias0.UNIT_OF_MEASURE != ""var1"" AND DERIVED_TABLEalias1.COLOR_DESCRIPTION = ""var0"" ;"
What are the names of products that are not ' var0 ' in color and are not measured by the unit ' var1 ' ?,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_PRODUCT_CATEGORIES AS DERIVED_TABLEalias0 ON PRODUCTSalias0.PRODUCT_CATEGORY_CODE = DERIVED_TABLEalias0.PRODUCT_CATEGORY_CODE JOIN REF_COLORS AS DERIVED_TABLEalias1 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias1.COLOR_CODE WHERE DERIVED_TABLEalias0.UNIT_OF_MEASURE != ""var1"" AND DERIVED_TABLEalias1.COLOR_DESCRIPTION = ""var0"" ;"
What is the description of the color for most products ?,spider,SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the color description that is most common across all products .,spider,SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the description of the color used by least products ?,spider,SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) ASC LIMIT 1 ;
Give the color description that is least common across products .,spider,SELECT DERIVED_TABLEalias0.COLOR_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 JOIN REF_COLORS AS DERIVED_TABLEalias0 ON PRODUCTSalias0.COLOR_CODE = DERIVED_TABLEalias0.COLOR_CODE GROUP BY DERIVED_TABLEalias0.COLOR_DESCRIPTION ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the characteristic name used by most number of the products ?,spider,SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME ORDER BY COUNT( PRODUCT_CHARACTERISTICSalias0.* ) DESC LIMIT 1 ;
Return the name of the characteristic that is most common across all products .,spider,SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME ORDER BY COUNT( PRODUCT_CHARACTERISTICSalias0.* ) DESC LIMIT 1 ;
"What are the names , details and data types of the characteristics which are never used by any product ?",spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias0.CHARACTERISTIC_NAME , CHARACTERISTICSalias0.OTHER_CHARACTERISTIC_DETAILS FROM CHARACTERISTICS AS CHARACTERISTICSalias0 EXCEPT SELECT CHARACTERISTICSalias1.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias1.CHARACTERISTIC_NAME , CHARACTERISTICSalias1.OTHER_CHARACTERISTIC_DETAILS FROM CHARACTERISTICS AS CHARACTERISTICSalias1 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias1.CHARACTERISTIC_ID ;"
"Give the names , details , and data types of characteristics that are not found in any product .",spider,"SELECT CHARACTERISTICSalias0.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias0.CHARACTERISTIC_NAME , CHARACTERISTICSalias0.OTHER_CHARACTERISTIC_DETAILS FROM CHARACTERISTICS AS CHARACTERISTICSalias0 EXCEPT SELECT CHARACTERISTICSalias1.CHARACTERISTIC_DATA_TYPE , CHARACTERISTICSalias1.CHARACTERISTIC_NAME , CHARACTERISTICSalias1.OTHER_CHARACTERISTIC_DETAILS FROM CHARACTERISTICS AS CHARACTERISTICSalias1 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias1.CHARACTERISTIC_ID ;"
What are characteristic names used at least twice across all products ?,spider,SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;
Give the names of characteristics that are in two or more products ?,spider,SELECT CHARACTERISTICSalias0.CHARACTERISTIC_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN PRODUCT_CHARACTERISTICS AS PRODUCT_CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.PRODUCT_ID = PRODUCTSalias0.PRODUCT_ID JOIN CHARACTERISTICS AS CHARACTERISTICSalias0 ON PRODUCT_CHARACTERISTICSalias0.CHARACTERISTIC_ID = CHARACTERISTICSalias0.CHARACTERISTIC_ID GROUP BY CHARACTERISTICSalias0.CHARACTERISTIC_NAME HAVING COUNT( PRODUCT_CHARACTERISTICSalias0.* ) >= var0 ;
How many colors are never used by any product ?,spider,SELECT COUNT( * ) FROM REF_COLORS WHERE COLOR_CODE NOT IN ( SELECT PRODUCTSalias0.COLOR_CODE FROM PRODUCTS AS PRODUCTSalias0 ) ;
Count the number of colors that are not used in any products .,spider,SELECT COUNT( * ) FROM REF_COLORS WHERE COLOR_CODE NOT IN ( SELECT PRODUCTSalias0.COLOR_CODE FROM PRODUCTS AS PRODUCTSalias0 ) ;
How many events are there ?,spider,SELECT COUNT( * ) FROM EVENT AS EVENTalias0 ;
List all the event names by year from the most recent to the oldest .,spider,SELECT EVENTalias0.NAME FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.YEAR DESC ;
What is the name of the event that happened in the most recent year ?,spider,SELECT EVENTalias0.NAME FROM EVENT AS EVENTalias0 ORDER BY EVENTalias0.YEAR DESC LIMIT 1 ;
How many stadiums are there ?,spider,SELECT COUNT( * ) FROM STADIUM AS STADIUMalias0 ;
Find the name of the stadium that has the maximum capacity .,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
Find the names of stadiums whose capacity is smaller than the average capacity .,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY < ( SELECT AVG( STADIUMalias1.CAPACITY ) FROM STADIUM AS STADIUMalias1 ) ;
Find the country that has the most stadiums .,spider,SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which country has at most var0 stadiums listed ?,spider,SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 GROUP BY STADIUMalias0.COUNTRY HAVING COUNT( * ) <= var0 ;
Which country has both stadiums with capacity greater than var0 and stadiums with capacity less than var1 ?,spider,SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY > var0 INTERSECT SELECT STADIUMalias1.COUNTRY FROM STADIUM AS STADIUMalias1 WHERE STADIUMalias1.CAPACITY < var1 ;
How many cities have a stadium that was opened before the year of var0 ?,spider,SELECT COUNT( DISTINCT STADIUMalias0.CITY ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.OPENING_YEAR < var0 ;
How many stadiums does each country have ?,spider,"SELECT COUNT( * ) , STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 GROUP BY STADIUMalias0.COUNTRY ;"
Which countries do not have a stadium that was opened after var0 ?,spider,SELECT STADIUMalias0.COUNTRY FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.COUNTRY FROM STADIUM AS STADIUMalias1 WHERE STADIUMalias1.OPENING_YEAR > var0 ;
"How many stadiums are not in country "" var0 "" ?",spider,"SELECT COUNT( * ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.COUNTRY != ""var0"" ;"
"Find the names of all swimmers , sorted by their 100 meter scores in ascending order .",spider,SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 ORDER BY SWIMMERalias0.METER_100 ;
How many different countries are all the swimmers from ?,spider,SELECT COUNT( DISTINCT SWIMMERalias0.NATIONALITY ) FROM SWIMMER AS SWIMMERalias0 ;
List countries that have more than one swimmer .,spider,"SELECT COUNT( * ) , SWIMMERalias0.NATIONALITY FROM SWIMMER AS SWIMMERalias0 GROUP BY SWIMMERalias0.NATIONALITY HAVING COUNT( * ) > var0 ;"
"Find all 200 meter and 300 meter results of swimmers with nationality "" var0 "" .",spider,"SELECT SWIMMERalias0.METER_200 , SWIMMERalias0.METER_300 FROM SWIMMER AS SWIMMERalias0 WHERE SWIMMERalias0.NATIONALITY = ""var0"" ;"
"Find the names of swimmers who has a result of "" win "" .",spider,"SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RECORDalias0.RESULT = ""var0"" ;"
What is the name of the stadium which held the most events ?,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN EVENT AS EVENTalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID GROUP BY EVENTalias0.STADIUM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Find the name and capacity of the stadium where the event named "" var0 "" happened .",spider,"SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 JOIN EVENT AS EVENTalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID WHERE EVENTalias0.NAME = ""var0"" ;"
Find the names of stadiums which have never had any event .,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.ID NOT IN ( SELECT EVENTalias0.STADIUM_ID FROM EVENT AS EVENTalias0 ) ;
Find the name of the swimmer who has the most records .,spider,SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID GROUP BY RECORDalias0.SWIMMER_ID ORDER BY COUNT( RECORDalias0.* ) DESC LIMIT 1 ;
Find the name of the swimmer who has at least var0 records .,spider,SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID GROUP BY RECORDalias0.SWIMMER_ID HAVING COUNT( RECORDalias0.* ) >= var0 ;
"Find the name and nationality of the swimmer who has won (i.e . , has a result of "" win"") more than var1 time .",spider,"SELECT SWIMMERalias0.NAME , SWIMMERalias0.NATIONALITY FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RESULT = ""var0"" GROUP BY RECORDalias0.SWIMMER_ID HAVING COUNT( RECORDalias0.* ) > var1 ;"
Find the names of the swimmers who have no record .,spider,SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 WHERE SWIMMERalias0.ID NOT IN ( SELECT RECORDalias0.SWIMMER_ID FROM RECORD AS RECORDalias0 ) ;
"Find the names of the swimmers who have both "" win "" and "" loss "" results in the record .",spider,"SELECT SWIMMERalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID WHERE RECORDalias0.RESULT = ""var0"" INTERSECT SELECT SWIMMERalias1.NAME FROM SWIMMER AS SWIMMERalias1 JOIN RECORD AS RECORDalias1 ON SWIMMERalias1.ID = RECORDalias1.SWIMMER_ID WHERE RECORDalias1.RESULT = ""var1"" ;"
Find the names of stadiums that some var0n swimmers have been to .,spider,"SELECT STADIUMalias0.NAME FROM SWIMMER AS SWIMMERalias0 JOIN RECORD AS RECORDalias0 ON SWIMMERalias0.ID = RECORDalias0.SWIMMER_ID JOIN EVENT AS EVENTalias0 ON RECORDalias0.EVENT_ID = EVENTalias0.ID JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID WHERE SWIMMERalias0.NATIONALITY = ""var0"" ;"
Find the names of stadiums that the most swimmers have been to .,spider,SELECT STADIUMalias0.NAME FROM RECORD AS RECORDalias0 JOIN EVENT AS EVENTalias0 ON RECORDalias0.EVENT_ID = EVENTalias0.ID JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.ID = EVENTalias0.STADIUM_ID GROUP BY EVENTalias0.STADIUM_ID ORDER BY COUNT( RECORDalias0.* ) DESC LIMIT 1 ;
Find all details for each swimmer .,spider,SELECT * FROM SWIMMER AS SWIMMERalias0 ;
What is the average capacity of the stadiums that were opened in year var0 ?,spider,SELECT AVG( STADIUMalias0.CAPACITY ) FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.OPENING_YEAR = var0 ;
How many railways are there ?,spider,SELECT COUNT( * ) FROM RAILWAY AS RAILWAYalias0 ;
List the builders of railways in ascending alphabetical order .,spider,SELECT RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 ORDER BY RAILWAYalias0.BUILDER ASC ;
List the wheels and locations of the railways .,spider,"SELECT RAILWAYalias0.LOCATION , RAILWAYalias0.WHEELS FROM RAILWAY AS RAILWAYalias0 ;"
"What is the maximum level of managers in countries that are not "" var0 "" ?",spider,"SELECT MAX( MANAGERalias0.LEVEL ) FROM MANAGER AS MANAGERalias0 WHERE MANAGERalias0.COUNTRY != ""var0"" ;"
What is the average age for all managers ?,spider,SELECT AVG( MANAGERalias0.AGE ) FROM MANAGER AS MANAGERalias0 ;
What are the names of managers in ascending order of level ?,spider,SELECT MANAGERalias0.NAME FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.LEVEL ASC ;
What are the names and arrival times of trains ?,spider,"SELECT TRAINalias0.ARRIVAL , TRAINalias0.NAME FROM TRAIN AS TRAINalias0 ;"
What is the name of the oldest manager ?,spider,SELECT MANAGERalias0.NAME FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.AGE DESC LIMIT 1 ;
Show the names of trains and locations of railways they are in .,spider,"SELECT RAILWAYalias0.LOCATION , TRAINalias0.NAME FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID ;"
"Show the builder of railways associated with the trains named "" var0 "" .",spider,"SELECT RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID WHERE TRAINalias0.NAME = ""var0"" ;"
Show id and location of railways that are associated with more than one train .,spider,"SELECT RAILWAYalias0.LOCATION , TRAINalias0.RAILWAY_ID FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID GROUP BY TRAINalias0.RAILWAY_ID HAVING COUNT( * ) > var0 ;"
Show the id and builder of the railway that are associated with the most trains .,spider,"SELECT RAILWAYalias0.BUILDER , TRAINalias0.RAILWAY_ID FROM RAILWAY AS RAILWAYalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.RAILWAY_ID = RAILWAYalias0.RAILWAY_ID GROUP BY TRAINalias0.RAILWAY_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Show different builders of railways , along with the corresponding number of railways using each builder .",spider,"SELECT COUNT( * ) , RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.BUILDER ;"
Show the most common builder of railways .,spider,SELECT RAILWAYalias0.BUILDER FROM RAILWAY AS RAILWAYalias0 GROUP BY BUILDER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show different locations of railways along with the corresponding number of railways at each location .,spider,"SELECT COUNT( * ) , RAILWAYalias0.LOCATION FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.LOCATION ;"
Show the locations that have more than one railways .,spider,SELECT RAILWAYalias0.LOCATION FROM RAILWAY AS RAILWAYalias0 GROUP BY RAILWAYalias0.LOCATION HAVING COUNT( * ) > var0 ;
List the object number of railways that do not have any trains .,spider,SELECT RAILWAYalias0.OBJECTNUMBER FROM RAILWAY AS RAILWAYalias0 WHERE RAILWAYalias0.RAILWAY_ID NOT IN ( SELECT TRAINalias0.RAILWAY_ID FROM TRAIN AS TRAINalias0 ) ;
Show the countries that have both managers of age above var0 and managers of age below var1 .,spider,SELECT MANAGERalias0.COUNTRY FROM MANAGER AS MANAGERalias0 WHERE MANAGERalias0.AGE > var0 INTERSECT SELECT MANAGERalias1.COUNTRY FROM MANAGER AS MANAGERalias1 WHERE MANAGERalias1.AGE < var1 ;
Show the distinct countries of managers .,spider,SELECT DISTINCT MANAGERalias0.COUNTRY FROM MANAGER AS MANAGERalias0 ;
Show the working years of managers in descending order of their level .,spider,SELECT MANAGERalias0.WORKING_YEAR_STARTS FROM MANAGER AS MANAGERalias0 ORDER BY MANAGERalias0.LEVEL DESC ;
Show the countries that have managers of age above var0 or below var1 .,spider,SELECT MANAGERalias0.COUNTRY FROM MANAGER AS MANAGERalias0 WHERE MANAGERalias0.AGE < var1 OR MANAGERalias0.AGE > var0 ;
How many addresses are there in country var0 ?,spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.COUNTRY = ""var0"" ;"
Show all distinct cities in the address record .,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ;
Retrieve the list of all cities .,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ;
List all the distinct cities,spider,SELECT DISTINCT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 ;
Show each state and the number of addresses in each state .,spider,"SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY ;"
Show names and phones of customers who do not have address information .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_ADDRESS_HISTORYalias0.CUSTOMER_ID FROM CUSTOMER_ADDRESS_HISTORY AS CUSTOMER_ADDRESS_HISTORYalias0 ) ;"
Show the name of the customer who has the most orders .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the names of customers who have both an order in completed status and an order in part status .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS_CODE = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias1.ORDER_STATUS_CODE = ""var1"" ;"
"Show the name , phone , and payment method code for all customers in descending order of customer number .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE , CUSTOMERSalias0.PAYMENT_METHOD_CODE FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.CUSTOMER_NUMBER DESC ;"
Show the product name and total order quantity for each product .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM PRODUCTS AS PRODUCTSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;"
"Show the minimum , maximum , average price for all products .",spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , MAX( PRODUCTSalias0.PRODUCT_PRICE ) , MIN( PRODUCTSalias0.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias0 ;"
How many products have a price higher than the average ?,spider,SELECT COUNT( * ) FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE > ( SELECT AVG( PRODUCTSalias1.PRODUCT_PRICE ) FROM PRODUCTS AS PRODUCTSalias1 ) ;
"Show the customer name , customer address city , date from , and date to for each customer address history .",spider,"SELECT ADDRESSESalias0.CITY , CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_ADDRESS_HISTORYalias0.DATE_FROM , CUSTOMER_ADDRESS_HISTORYalias0.DATE_TO FROM CUSTOMER_ADDRESS_HISTORY AS CUSTOMER_ADDRESS_HISTORYalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_ADDRESS_HISTORYalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESS_HISTORYalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID ;"
Show the names of customers who use var0 payment method and have more than var1 orders .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.PAYMENT_METHOD_CODE = ""var0"" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) > var1 ;"
What are the name and phone of the customer with the most ordered product quantity ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMERSalias0.CUSTOMER_PHONE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) DESC LIMIT 1 ;"
Show the product type and name for the products with price higher than var0 or lower than var1 .,spider,"SELECT PRODUCTSalias0.PRODUCT_NAME , PRODUCTSalias0.PRODUCT_TYPE_CODE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_PRICE < var1 OR PRODUCTSalias0.PRODUCT_PRICE > var0 ;"
var0ind the name of dorms only for female (var0 gender) .,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = ""var0"" ;"
What are the names of the all-female dorms ?,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = ""var0"" ;"
Find the name of dorms that can accommodate more than var0 students .,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY > var0 ;
What are the names of all the dorms that can accomdate more than var0 students ?,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY > var0 ;
How many female students (sex is var0) whose age is below var1 ?,spider,"SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var1 AND STUDENTalias0.SEX = ""var0"" ;"
How many girl students who are younger than var1 ?,spider,"SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var1 AND STUDENTalias0.SEX = ""var0"" ;"
Find the first name of students living in city var0 whose age is between var1 and var2 .,spider,"SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE BETWEEN var1 AND var2 AND STUDENTalias0.CITY_CODE = ""var0"" ;"
What is the first name of the students who are in age var1 to var2 and living in var0 city ?,spider,"SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE BETWEEN var1 AND var2 AND STUDENTalias0.CITY_CODE = ""var0"" ;"
How many dorms are there ?,spider,SELECT COUNT( * ) FROM DORM AS DORMalias0 ;
How many dorms are in the database ?,spider,SELECT COUNT( * ) FROM DORM AS DORMalias0 ;
Find the number of distinct amenities .,spider,SELECT COUNT( * ) FROM DORM_AMENITY AS DORM_AMENITYalias0 ;
How many diffrent dorm amenities are there ?,spider,SELECT COUNT( * ) FROM DORM_AMENITY AS DORM_AMENITYalias0 ;
Find the total capacity of all dorms .,spider,SELECT SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 ;
What is the total student capacity of all dorms ?,spider,SELECT SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 ;
Find the average age of all students living in the each city .,spider,"SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
What is the average age for each city and what are those cities ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
Find the average and total capacity of dorms for the students with gender var0 .,spider,"SELECT AVG( DORMalias0.STUDENT_CAPACITY ) , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = ""var0"" ;"
What is the average and total capacity for all dorms who are of gender var0 ?,spider,"SELECT AVG( DORMalias0.STUDENT_CAPACITY ) , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 WHERE DORMalias0.GENDER = ""var0"" ;"
Find the number of dorms that have some amenity .,spider,SELECT COUNT( DISTINCT DORMID ) FROM HAS_AMENITY AS HAS_AMENITYalias0 ;
How many dorms have amenities ?,spider,SELECT COUNT( DISTINCT DORMID ) FROM HAS_AMENITY AS HAS_AMENITYalias0 ;
Find the name of dorms that do not have any amenity,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMID NOT IN ( SELECT DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 ) ;
What are the names of all the dorms that don't have any amenities ?,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 WHERE DORMID NOT IN ( SELECT DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 ) ;
Find the number of distinct gender for dorms .,spider,SELECT COUNT( DISTINCT DORMalias0.GENDER ) FROM DORM AS DORMalias0 ;
How many different genders are there in the dorms ?,spider,SELECT COUNT( DISTINCT DORMalias0.GENDER ) FROM DORM AS DORMalias0 ;
Find the capacity and gender type of the dorm whose name has substring ' var0 ' .,spider,"SELECT DORMalias0.GENDER , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 WHERE DORMalias0.DORM_NAME LIKE ""var0"" ;"
What is the student capacity and type of gender for the dorm whose name as the phrase var0 in it ?,spider,"SELECT DORMalias0.GENDER , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 WHERE DORMalias0.DORM_NAME LIKE ""var0"" ;"
Find the name and gender type of the dorms whose capacity is greater than var0 or less than var1 .,spider,"SELECT DORMalias0.DORM_NAME , DORMalias0.GENDER FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY < var1 OR DORMalias0.STUDENT_CAPACITY > var0 ;"
What are the names and types of the dorms that have a capacity greater than var0 or less than var1 ?,spider,"SELECT DORMalias0.DORM_NAME , DORMalias0.GENDER FROM DORM AS DORMalias0 WHERE DORMalias0.STUDENT_CAPACITY < var1 OR DORMalias0.STUDENT_CAPACITY > var0 ;"
Find the numbers of different majors and cities .,spider,"SELECT COUNT( DISTINCT STUDENTalias0.CITY_CODE ) , COUNT( DISTINCT STUDENTalias0.MAJOR ) FROM STUDENT AS STUDENTalias0 ;"
How many different majors are there and how many different city codes are there for each student ?,spider,"SELECT COUNT( DISTINCT STUDENTalias0.CITY_CODE ) , COUNT( DISTINCT STUDENTalias0.MAJOR ) FROM STUDENT AS STUDENTalias0 ;"
Find the name of dorms which have both var0 and var1 as amenities .,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" INTERSECT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias1 ON HAS_AMENITYalias1.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias1 ON HAS_AMENITYalias1.AMENID = DORM_AMENITYalias1.AMENID WHERE DORM_AMENITYalias1.AMENITY_NAME = ""var1"" ;"
What is the name of the dorm with both a var0 and var1 listed as amenities ?,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" INTERSECT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias1 ON HAS_AMENITYalias1.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias1 ON HAS_AMENITYalias1.AMENID = DORM_AMENITYalias1.AMENID WHERE DORM_AMENITYalias1.AMENITY_NAME = ""var1"" ;"
Find the name of dorms which have var0 but no var1 as amenity .,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" EXCEPT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias1 ON HAS_AMENITYalias1.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias1 ON HAS_AMENITYalias1.AMENID = DORM_AMENITYalias1.AMENID WHERE DORM_AMENITYalias1.AMENITY_NAME = ""var1"" ;"
What is the name of each dorm that has a var0 but no study rooms ?,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" EXCEPT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias1 ON HAS_AMENITYalias1.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias1 ON HAS_AMENITYalias1.AMENID = DORM_AMENITYalias1.AMENID WHERE DORM_AMENITYalias1.AMENITY_NAME = ""var1"" ;"
var0ind the last name of students who is either female (sex is var0) and living in the city of code var1 or male (sex is var2) and in age of below var3 .,spider,"SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var1"" UNION SELECT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.SEX = ""var2"" AND STUDENTalias0.SEX = ""var0"" AND STUDENTalias1.AGE < var3 ;"
What is the last name of every student who is either female or living in a city with the code var1 or male and under var3 ?,spider,"SELECT LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var1"" UNION SELECT LNAME FROM STUDENT AS STUDENTalias1 WHERE STUDENTalias1.SEX = ""var2"" AND STUDENTalias0.SEX = ""var0"" AND STUDENTalias1.AGE < var3 ;"
Find the name of the dorm with the largest capacity .,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 ORDER BY DORMalias0.STUDENT_CAPACITY DESC LIMIT 1 ;
What are the names of the dorm with the largest capacity ?,spider,SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 ORDER BY DORMalias0.STUDENT_CAPACITY DESC LIMIT 1 ;
List in alphabetic order all different amenities .,spider,SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
What are the different dorm amenity names in alphabetical order ?,spider,SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;
Find the first and last name of students whose age is younger than the average age .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;"
What is the first and last name of all students who are younger than average ?,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) ;"
"List the first and last name of students who are not living in the city with code var0 , and sorted the results by their ages .",spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE CITY_CODE != ""var0"" ORDER BY STUDENTalias0.AGE ;"
What are the first and last names of all students who are not living in the city var0 and order the results by age ?,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE CITY_CODE != ""var0"" ORDER BY STUDENTalias0.AGE ;"
"List name of all amenities which var0 has , and sort the results in alphabetic order .",spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN DORM AS DORMalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;"
What are the amenities in alphabetical order that var0 has ?,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN DORM AS DORMalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;"
Find the number of dorms and total capacity for each gender .,spider,"SELECT COUNT( * ) , DORMalias0.GENDER , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 GROUP BY DORMalias0.GENDER ;"
How many dorms are there and what is the total capacity for each gender ?,spider,"SELECT COUNT( * ) , DORMalias0.GENDER , SUM( DORMalias0.STUDENT_CAPACITY ) FROM DORM AS DORMalias0 GROUP BY DORMalias0.GENDER ;"
Find the average and oldest age for students with different sex .,spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SEX ;"
What is the average and oldest age for each gender of student ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.SEX ;"
Find the number of students in each major .,spider,"SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
How many students are there in each major ?,spider,"SELECT COUNT( * ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
Find the number and average age of students living in each city .,spider,"SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
How many students live in each city and what are their average ages ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE ;"
Find the average age and number of male students (with sex var0) from each city .,spider,"SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" GROUP BY STUDENTalias0.CITY_CODE ;"
What is the average age and how many male students are there in each city ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 WHERE SEX = ""var0"" GROUP BY STUDENTalias0.CITY_CODE ;"
Find the number of students for the cities where have more than one student .,spider,"SELECT COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE HAVING COUNT( * ) > var0 ;"
"How many students are from each city , and which cities have more than one cities ?",spider,"SELECT COUNT( * ) , STUDENTalias0.CITY_CODE FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.CITY_CODE HAVING COUNT( * ) > var0 ;"
Find the first and last name of students who are not in the largest major .,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR != ( SELECT STUDENTalias1.MAJOR FROM STUDENT AS STUDENTalias1 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ) ;"
What is the first and last name of the students who are not in the largest major ?,spider,"SELECT FNAME , LNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR != ( SELECT STUDENTalias1.MAJOR FROM STUDENT AS STUDENTalias1 GROUP BY MAJOR ORDER BY COUNT( * ) DESC LIMIT 1 ) ;"
Find the number of students whose age is older than the average age for each gender .,spider,"SELECT COUNT( * ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE AGE > ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) GROUP BY STUDENTalias0.SEX ;"
How many students are older than average for each gender ?,spider,"SELECT COUNT( * ) , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE AGE > ( SELECT AVG( STUDENTalias1.AGE ) FROM STUDENT AS STUDENTalias1 ) GROUP BY STUDENTalias0.SEX ;"
Find the average age of students living in each dorm and the name of dorm .,spider,"SELECT AVG( STUDENTalias0.AGE ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID GROUP BY DORMalias0.DORM_NAME ;"
What is the average age for each dorm and what are the names of each dorm ?,spider,"SELECT AVG( STUDENTalias0.AGE ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID GROUP BY DORMalias0.DORM_NAME ;"
Find the number of amenities for each of the dorms that can accommodate more than var0 students .,spider,"SELECT COUNT( * ) , DORMalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY > var0 GROUP BY DORMalias0.DORMID ;"
"For each dorm , how many amenities does it have ?",spider,"SELECT COUNT( * ) , DORMalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY > var0 GROUP BY DORMalias0.DORMID ;"
Find the number of students who is older than var0 in each dorm .,spider,"SELECT COUNT( LIVES_INalias0.* ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE STUDENTalias0.AGE > var0 GROUP BY DORMalias0.DORM_NAME ;"
How many students are older than var0 in each dorm ?,spider,"SELECT COUNT( LIVES_INalias0.* ) , DORMalias0.DORM_NAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE STUDENTalias0.AGE > var0 GROUP BY DORMalias0.DORM_NAME ;"
Find the first name of students who are living in the var0 .,spider,"SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" ;"
What are the first names of all students in var0 ?,spider,"SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" ;"
Find the average age of students who are living in the dorm with the largest capacity .,spider,SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY = ( SELECT MAX( DORMalias1.STUDENT_CAPACITY ) FROM DORM AS DORMalias1 ) ;
What is the average age of students who are living in the dorm with the largest capacity ?,spider,SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.STUDENT_CAPACITY = ( SELECT MAX( DORMalias1.STUDENT_CAPACITY ) FROM DORM AS DORMalias1 ) ;
Find the total number of students living in the male dorm (with gender var0) .,spider,"SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.GENDER = ""var0"" ;"
What are the total number of students who are living in a male dorm ?,spider,"SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.GENDER = ""var0"" ;"
var1ind the number of female students (with var1 sex) living in var0,spider,"SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
How many female students live in var0 ?,spider,"SELECT COUNT( LIVES_INalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID JOIN DORM AS DORMalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID WHERE DORMalias0.DORM_NAME = ""var0"" AND STUDENTalias0.SEX = ""var1"" ;"
Find the name of amenities var0 dorm have .,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = ""var0"" ;"
What are the names of the amenities that var0 has ?,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = ""var0"" ;"
Find the name of amenities var0 dorm have . ordered the results by amenity names .,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = ""var0"" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;"
What amenities does var0 have in alphabetical order ?,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORMalias0.DORM_NAME = ""var0"" ORDER BY DORM_AMENITYalias0.AMENITY_NAME ;"
Find the name of amenity that is most common in all dorms .,spider,SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.AMENID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most common amenity in the dorms ?,spider,SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM_AMENITY AS DORM_AMENITYalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.AMENID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the first name of students who are living in the dorm that has most number of amenities .,spider,SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID IN ( SELECT LIVES_INalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY DORMalias0.DORMID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What are the first names of all students who live in the dorm with the most amenities ?,spider,SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID IN ( SELECT LIVES_INalias0.DORMID FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY DORMalias0.DORMID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the name and capacity of the dorm with least number of amenities .,spider,"SELECT DORMalias0.DORM_NAME , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.DORMID ORDER BY COUNT( * ) LIMIT 1 ;"
What is the name and capacity of the dorm with the fewest amount of amenities ?,spider,"SELECT DORMalias0.DORM_NAME , DORMalias0.STUDENT_CAPACITY FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID GROUP BY HAS_AMENITYalias0.DORMID ORDER BY COUNT( * ) LIMIT 1 ;"
Find the name of dorms that do not have amenity var0 .,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 EXCEPT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ;"
What are the names of the dorm that does not have a var0 ?,spider,"SELECT DORMalias0.DORM_NAME FROM DORM AS DORMalias0 EXCEPT SELECT DORMalias1.DORM_NAME FROM DORM AS DORMalias1 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias1.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ;"
Find the first and last name of students who are living in the dorms that have amenity var0 .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID IN ( SELECT HAS_AMENITYalias0.DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ) ;"
What are the first and last names of all students who are living in a dorm with a var0 ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID IN ( SELECT HAS_AMENITYalias0.DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ) ;"
Find the first name and age of students who are living in the dorms that do not have amenity var0 .,spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID NOT IN ( SELECT HAS_AMENITYalias0.DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ) ;"
What is the first name and age of every student who lives in a dorm with a var0 ?,spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN LIVES_IN AS LIVES_INalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE LIVES_INalias0.DORMID NOT IN ( SELECT HAS_AMENITYalias0.DORMID FROM HAS_AMENITY AS HAS_AMENITYalias0 JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID WHERE DORM_AMENITYalias0.AMENITY_NAME = ""var0"" ) ;"
Find the name of amenities of the dorm where the student with last name var0 is living in .,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN LIVES_IN AS LIVES_INalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
What are the amenities in the dorm that a student who has the last name of var0 lives in ?,spider,"SELECT DORM_AMENITYalias0.AMENITY_NAME FROM DORM AS DORMalias0 JOIN HAS_AMENITY AS HAS_AMENITYalias0 ON HAS_AMENITYalias0.DORMID = DORMalias0.DORMID JOIN DORM_AMENITY AS DORM_AMENITYalias0 ON HAS_AMENITYalias0.AMENID = DORM_AMENITYalias0.AMENID JOIN LIVES_IN AS LIVES_INalias0 ON LIVES_INalias0.DORMID = DORMalias0.DORMID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = LIVES_INalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
"Find the emails and phone numbers of all the customers , ordered by email address and phone number .",spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER ;"
"What are the emails and phone numbers of all customers , sorted by email address and phone number ?",spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 ORDER BY CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER ;"
"Which city has the least number of customers whose type code is "" var0 "" ?",spider,"SELECT CUSTOMERSalias0.TOWN_CITY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMER_TYPE_CODE = ""var0"" GROUP BY TOWN_CITY ORDER BY COUNT( * ) LIMIT 1 ;"
"Return the city with the customer type code "" var0 "" that had the fewest customers .",spider,"SELECT CUSTOMERSalias0.TOWN_CITY FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMER_TYPE_CODE = ""var0"" GROUP BY TOWN_CITY ORDER BY COUNT( * ) LIMIT 1 ;"
List the name of all products along with the number of complaints that they have received .,spider,"SELECT COUNT( COMPLAINTSalias0.* ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
"What are all the different product names , and how many complains has each received ?",spider,"SELECT COUNT( COMPLAINTSalias0.* ) , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_NAME ;"
Find the emails of customers who has filed a complaints of the product with the most complaints .,spider,SELECT CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
What are the emails of customers who have filed complaints on the product which has had the greatest number of complaints ?,spider,SELECT CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
Which products has been complained by the customer who has filed least amount of complaints ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID JOIN CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
Return the names of products that have had complaints filed by the customer who has filed the fewest complaints .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID JOIN CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT 1 ;
What is the phone number of the customer who has filed the most recent complaint ?,spider,SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED DESC LIMIT 1 ;
Return the phone number of the customer who filed the complaint that was raised most recently .,spider,SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON CUSTOMERSalias0.CUSTOMER_ID = COMPLAINTSalias0.CUSTOMER_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED DESC LIMIT 1 ;
Find the email and phone number of the customers who have never filed a complaint before .,spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT COMPLAINTSalias0.CUSTOMER_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;"
What are the emails and phone numbers of custoemrs who have never filed a complaint ?,spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT COMPLAINTSalias0.CUSTOMER_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;"
Find the phone number of all the customers and staff .,spider,SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.PHONE_NUMBER FROM STAFF AS STAFFalias0 ;
What are the phone numbers of all customers and all staff members ?,spider,SELECT CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 UNION SELECT STAFFalias0.PHONE_NUMBER FROM STAFF AS STAFFalias0 ;
"What is the description of the product named "" var0 "" ?",spider,"SELECT PRODUCTSalias0.PRODUCT_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
"Return the description of the product called "" var0 "" .",spider,"SELECT PRODUCTSalias0.PRODUCT_DESCRIPTION FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" ;"
Find the name and category of the most expensive product .,spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;"
What is the name and category code of the product with the highest price ?,spider,"SELECT PRODUCTSalias0.PRODUCT_CATEGORY_CODE , PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_PRICE DESC LIMIT 1 ;"
Find the prices of products which has never received a single complaint .,spider,SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT COMPLAINTSalias0.PRODUCT_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;
What are the prices of products that have never gotten a complaint ?,spider,SELECT PRODUCTSalias0.PRODUCT_PRICE FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_ID NOT IN ( SELECT COMPLAINTSalias0.PRODUCT_ID FROM COMPLAINTS AS COMPLAINTSalias0 ) ;
What is the average price of the products for each category ?,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_CATEGORY_CODE ;"
Return the average price of products that have each category code .,spider,"SELECT AVG( PRODUCTSalias0.PRODUCT_PRICE ) , PRODUCTSalias0.PRODUCT_CATEGORY_CODE FROM PRODUCTS AS PRODUCTSalias0 GROUP BY PRODUCTSalias0.PRODUCT_CATEGORY_CODE ;"
Find the last name of the staff member who processed the complaint of the cheapest product .,spider,SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;
What is the last name of the staff member in charge of the complaint on the product with the lowest price ?,spider,SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = COMPLAINTSalias0.PRODUCT_ID ORDER BY PRODUCTSalias0.PRODUCT_PRICE LIMIT 1 ;
Which complaint status has more than var0 records on file ?,spider,SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE FROM COMPLAINTS AS COMPLAINTSalias0 GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE HAVING COUNT( COMPLAINTSalias0.* ) > var0 ;
Return complaint status codes have more than var0 corresponding complaints ?,spider,SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE FROM COMPLAINTS AS COMPLAINTSalias0 GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE HAVING COUNT( COMPLAINTSalias0.* ) > var0 ;
"Find the last name of the staff whose email address contains "" var0 "" .",spider,"SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 WHERE STAFFalias0.EMAIL_ADDRESS LIKE ""var0"" ;"
"What are the last names of staff with email addressed containing the substring "" var0 "" ?",spider,"SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 WHERE STAFFalias0.EMAIL_ADDRESS LIKE ""var0"" ;"
How many customers are there in the customer type with the most customers ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Count the number of customers that have the customer type that is most common .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the last name of the staff who has handled the first ever complaint ?,spider,SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED LIMIT 1 ;
Return the last name of the staff member who handled the complaint with the earliest date raised .,spider,SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID ORDER BY COMPLAINTSalias0.DATE_COMPLAINT_RAISED LIMIT 1 ;
How many distinct complaint type codes are there in the database ?,spider,SELECT COUNT( DISTINCT COMPLAINTSalias0.COMPLAINT_TYPE_CODE ) FROM COMPLAINTS AS COMPLAINTSalias0 ;
Count the number of different complaint type codes .,spider,SELECT COUNT( DISTINCT COMPLAINTSalias0.COMPLAINT_TYPE_CODE ) FROM COMPLAINTS AS COMPLAINTSalias0 ;
"Find the address line 1 and 2 of the customer with email "" var0 "" .",spider,"SELECT CUSTOMERSalias0.ADDRESS_LINE_1 , CUSTOMERSalias0.ADDRESS_LINE_2 FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.EMAIL_ADDRESS = ""var0"" ;"
"What are lines 1 and 2 of the addressed of the customer with the email "" var0 "" ?",spider,"SELECT CUSTOMERSalias0.ADDRESS_LINE_1 , CUSTOMERSalias0.ADDRESS_LINE_2 FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.EMAIL_ADDRESS = ""var0"" ;"
Find the number of complaints with var0 type for each complaint status .,spider,"SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE , COUNT( COMPLAINTSalias0.* ) FROM COMPLAINTS AS COMPLAINTSalias0 WHERE COMPLAINT_TYPE_CODE = ""var0"" GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE ;"
"Of complaints with the type code "" var0 "" , how many had each different status code ?",spider,"SELECT COMPLAINTSalias0.COMPLAINT_STATUS_CODE , COUNT( COMPLAINTSalias0.* ) FROM COMPLAINTS AS COMPLAINTSalias0 WHERE COMPLAINT_TYPE_CODE = ""var0"" GROUP BY COMPLAINTSalias0.COMPLAINT_STATUS_CODE ;"
What is first names of the top var0 staff who have handled the greatest number of complaints ?,spider,SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID GROUP BY COMPLAINTSalias0.STAFF_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT var0 ;
Return the first names of the var0 staff members who have handled the most complaints .,spider,SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 JOIN COMPLAINTS AS COMPLAINTSalias0 ON STAFFalias0.STAFF_ID = COMPLAINTSalias0.STAFF_ID GROUP BY COMPLAINTSalias0.STAFF_ID ORDER BY COUNT( COMPLAINTSalias0.* ) LIMIT var0 ;
Which state has the most customers ?,spider,SELECT CUSTOMERSalias0.STATE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY STATE ORDER BY COUNT( * ) LIMIT 1 ;
Give the state that has the most customers .,spider,SELECT CUSTOMERSalias0.STATE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY STATE ORDER BY COUNT( * ) LIMIT 1 ;
How many submissions are there ?,spider,SELECT COUNT( * ) FROM SUBMISSION AS SUBMISSIONalias0 ;
Count the number of submissions .,spider,SELECT COUNT( * ) FROM SUBMISSION AS SUBMISSIONalias0 ;
List the authors of submissions in ascending order of scores .,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES ASC ;
Find the author for each submission and list them in ascending order of submission score .,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES ASC ;
What are the authors of submissions and their colleges ?,spider,"SELECT SUBMISSIONalias0.AUTHOR , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 ;"
"For each submission , show the author and their affiliated college .",spider,"SELECT SUBMISSIONalias0.AUTHOR , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 ;"
"Show the names of authors from college "" var0 "" or "" var1 """,spider,"SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.COLLEGE = ""var0"" OR SUBMISSIONalias0.COLLEGE = ""var1"" ;"
"Which authors with submissions are from college "" var0 "" or "" var1 "" ?",spider,"SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.COLLEGE = ""var0"" OR SUBMISSIONalias0.COLLEGE = ""var1"" ;"
What is the average score of submissions ?,spider,SELECT AVG( SUBMISSIONalias0.SCORES ) FROM SUBMISSION AS SUBMISSIONalias0 ;
Compute the average score of submissions .,spider,SELECT AVG( SUBMISSIONalias0.SCORES ) FROM SUBMISSION AS SUBMISSIONalias0 ;
What is the author of the submission with the highest score ?,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
Find the author who achieved the highest score in a submission .,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
Show different colleges along with the number of authors of submission from each college .,spider,"SELECT COUNT( * ) , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY SUBMISSIONalias0.COLLEGE ;"
"For each college , return the college name and the count of authors with submissions from that college .",spider,"SELECT COUNT( * ) , SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY SUBMISSIONalias0.COLLEGE ;"
Show the most common college of authors of submissions .,spider,SELECT SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which college has the most authors with submissions ?,spider,SELECT SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 GROUP BY COLLEGE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the colleges that have both authors with submission score larger than var0 and authors with submission score smaller than var1 .,spider,SELECT SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.SCORES > var0 INTERSECT SELECT SUBMISSIONalias1.COLLEGE FROM SUBMISSION AS SUBMISSIONalias1 WHERE SUBMISSIONalias1.SCORES < var1 ;
Which colleges have both authors with submission score above var0 and authors with submission score below var1 ?,spider,SELECT SUBMISSIONalias0.COLLEGE FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.SCORES > var0 INTERSECT SELECT SUBMISSIONalias1.COLLEGE FROM SUBMISSION AS SUBMISSIONalias1 WHERE SUBMISSIONalias1.SCORES < var1 ;
Show the authors of submissions and the acceptance results of their submissions .,spider,"SELECT ACCEPTANCEalias0.RESULT , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ;"
"For each submission , find its author and acceptance result .",spider,"SELECT ACCEPTANCEalias0.RESULT , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ;"
Show the result of the submission with the highest score .,spider,SELECT ACCEPTANCEalias0.RESULT FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
Which submission received the highest score in acceptance result . Show me the result .,spider,SELECT ACCEPTANCEalias0.RESULT FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID ORDER BY SUBMISSIONalias0.SCORES DESC LIMIT 1 ;
Show each author and the number of workshops they submitted to .,spider,"SELECT COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR ;"
How many workshops did each author submit to ? Return the author name and the number of workshops .,spider,"SELECT COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) , SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR ;"
Show the authors who have submissions to more than one workshop .,spider,SELECT SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR HAVING COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) > var0 ;
Which authors have submitted to more than one workshop ?,spider,SELECT SUBMISSIONalias0.AUTHOR FROM ACCEPTANCE AS ACCEPTANCEalias0 JOIN SUBMISSION AS SUBMISSIONalias0 ON SUBMISSIONalias0.SUBMISSION_ID = ACCEPTANCEalias0.SUBMISSION_ID GROUP BY SUBMISSIONalias0.AUTHOR HAVING COUNT( DISTINCT ACCEPTANCEalias0.WORKSHOP_ID ) > var0 ;
Show the date and venue of each workshop in ascending alphabetical order of the venue .,spider,"SELECT WORKSHOPalias0.DATE , WORKSHOPalias0.VENUE FROM WORKSHOP AS WORKSHOPalias0 ORDER BY WORKSHOPalias0.VENUE ;"
Sort the each workshop in alphabetical order of the venue . Return the date and venue of each workshop .,spider,"SELECT WORKSHOPalias0.DATE , WORKSHOPalias0.VENUE FROM WORKSHOP AS WORKSHOPalias0 ORDER BY WORKSHOPalias0.VENUE ;"
List the authors who do not have submission to any workshop .,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.SUBMISSION_ID NOT IN ( SELECT ACCEPTANCEalias0.SUBMISSION_ID FROM ACCEPTANCE AS ACCEPTANCEalias0 ) ;
Which authors did not submit to any workshop ?,spider,SELECT SUBMISSIONalias0.AUTHOR FROM SUBMISSION AS SUBMISSIONalias0 WHERE SUBMISSIONalias0.SUBMISSION_ID NOT IN ( SELECT ACCEPTANCEalias0.SUBMISSION_ID FROM ACCEPTANCE AS ACCEPTANCEalias0 ) ;
Find the number of investors in total .,spider,SELECT COUNT( * ) FROM INVESTORS AS INVESTORSalias0 ;
Show all investor details .,spider,SELECT INVESTORSalias0.INVESTOR_DETAILS FROM INVESTORS AS INVESTORSalias0 ;
Show all distinct lot details .,spider,SELECT DISTINCT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 ;
Show the maximum amount of transaction .,spider,SELECT MAX( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
Show all date and share count of transactions .,spider,"SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION , TRANSACTIONSalias0.SHARE_COUNT FROM TRANSACTIONS AS TRANSACTIONSalias0 ;"
What is the total share of transactions ?,spider,SELECT SUM( TRANSACTIONSalias0.SHARE_COUNT ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
Show all transaction ids with transaction code ' var0 ' .,spider,"SELECT TRANSACTIONSalias0.TRANSACTION_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var0"" ;"
"Show all dates of transactions whose type code is "" var0 "" .",spider,"SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var0"" ;"
"Show the average amount of transactions with type code "" var0 "" .",spider,"SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var0"" ;"
"Show the description of transaction type with code "" var0 "" .",spider,"SELECT TRANSACTION_TYPE_DESCRIPTION FROM REF_TRANSACTION_TYPES WHERE TRANSACTION_TYPE_CODE = ""var0"" ;"
"Show the minimum amount of transactions whose type code is "" var0 "" and whose share count is bigger than var1 .",spider,"SELECT MIN( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.SHARE_COUNT > var1 AND TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var0"" ;"
Show the maximum share count of transactions where the amount is smaller than var0,spider,SELECT MAX( TRANSACTIONSalias0.SHARE_COUNT ) FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION < var0 ;
Show the dates of transactions if the share count is bigger than var0 or the amount is bigger than var00 .,spider,SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION > var1 OR TRANSACTIONSalias0.SHARE_COUNT > var0 ;
Show the transaction type descriptions and dates if the share count is smaller than var0 .,spider,"SELECT DERIVED_TABLEalias0.TRANSACTION_TYPE_DESCRIPTION , TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM REF_TRANSACTION_TYPES AS DERIVED_TABLEalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE WHERE TRANSACTIONSalias0.SHARE_COUNT < var0 ;"
Show details of all investors if they make any transaction with share count greater than var0 .,spider,SELECT INVESTORSalias0.INVESTOR_DETAILS FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE TRANSACTIONSalias0.SHARE_COUNT > var0 ;
How many distinct transaction types are used in the transactions ?,spider,SELECT COUNT( DISTINCT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ) FROM TRANSACTIONS AS TRANSACTIONSalias0 ;
Return the lot details and investor ids .,spider,"SELECT LOTSalias0.INVESTOR_ID , LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 ;"
"Return the var0ot detaivar0s of var0ots that bevar0ong to investors with detaivar0s "" var0 "" ?",spider,"SELECT LOTSalias0.LOT_DETAILS FROM INVESTORS AS INVESTORSalias0 JOIN LOTS AS LOTSalias0 ON LOTSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE INVESTORSalias0.INVESTOR_DETAILS = ""var0"" ;"
What are the purchase details of transactions with amount bigger than var0 ?,spider,SELECT PURCHASESalias0.PURCHASE_DETAILS FROM PURCHASES AS PURCHASESalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = PURCHASESalias0.PURCHASE_TRANSACTION_ID WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION > var0 ;
What are the sale details and dates of transactions with amount smaller than var0 ?,spider,"SELECT SALESalias0.SALES_DETAILS , TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM SALES AS SALESalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = SALESalias0.SALES_TRANSACTION_ID WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION < var0 ;"
What are the lot details of lots associated with transactions with share count smaller than var0 ?,spider,SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.TRANSACTION_ID = LOTSalias0.LOT_ID JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID WHERE TRANSACTIONSalias0.SHARE_COUNT < var0 ;
"What are the lot details of lots associated with transactions whose share count is bigger than var0 and whose type code is "" var1 "" ?",spider,"SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.TRANSACTION_ID = LOTSalias0.LOT_ID JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID WHERE TRANSACTIONSalias0.SHARE_COUNT > var0 AND TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var1"" ;"
Show the average transaction amount for different transaction types .,spider,"SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ;"
Show the maximum and minimum share count of different transaction types .,spider,"SELECT MAX( TRANSACTIONSalias0.SHARE_COUNT ) , MIN( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.TRANSACTION_TYPE_CODE ;"
Show the average share count of transactions for different investors .,spider,"SELECT AVG( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;"
"Show the average share count of transactions each each investor , ordered by average share count .",spider,"SELECT AVG( TRANSACTIONSalias0.SHARE_COUNT ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY INVESTOR_ID ORDER BY AVG( TRANSACTIONSalias0.SHARE_COUNT ) ;"
Show the average amount of transactions for different investors .,spider,"SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;"
Show the average amount of transactions for different lots .,spider,"SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONS_LOTSalias0.LOT_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID GROUP BY TRANSACTIONS_LOTSalias0.LOT_ID ;"
"Show the average amount of transactions for different lots , ordered by average amount of transactions .",spider,"SELECT AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) , TRANSACTIONS_LOTSalias0.LOT_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONSalias0.TRANSACTION_ID = TRANSACTIONS_LOTSalias0.TRANSACTION_ID GROUP BY TRANSACTIONS_LOTSalias0.LOT_ID ORDER BY AVG( TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION ) ;"
"Show the number of transactions with transaction type code "" var0 "" for different investors if it is larger than 0 .",spider,"SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTION_TYPE_CODE = ""var0"" GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;"
Show the number of transactions for different investors .,spider,"SELECT COUNT( * ) , TRANSACTIONSalias0.INVESTOR_ID FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTIONSalias0.INVESTOR_ID ;"
Show the transaction type code that occurs the fewest times .,spider,SELECT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
Show the transaction type code that occurs the most frequently .,spider,SELECT TRANSACTIONSalias0.TRANSACTION_TYPE_CODE FROM TRANSACTIONS AS TRANSACTIONSalias0 GROUP BY TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the description of the transaction type that occurs most frequently .,spider,SELECT DERIVED_TABLEalias0.TRANSACTION_TYPE_DESCRIPTION FROM REF_TRANSACTION_TYPES AS DERIVED_TABLEalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE GROUP BY DERIVED_TABLEalias0.TRANSACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the id and details of the investor that has the largest number of transactions .,spider,"SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show the id and details for the investors who have the top var0 number of transactions .,spider,"SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
Show the ids of the investors who have at least two transactions .,spider,SELECT TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID GROUP BY TRANSACTIONSalias0.INVESTOR_ID HAVING COUNT( * ) >= var0 ;
"Show the ids and details of the investors who have at least two transactions with type code "" var0 "" .",spider,"SELECT INVESTORSalias0.INVESTOR_DETAILS , TRANSACTIONSalias0.INVESTOR_ID FROM INVESTORS AS INVESTORSalias0 JOIN TRANSACTIONS AS TRANSACTIONSalias0 ON TRANSACTIONSalias0.INVESTOR_ID = INVESTORSalias0.INVESTOR_ID WHERE TRANSACTIONSalias0.TRANSACTION_TYPE_CODE = ""var0"" GROUP BY TRANSACTIONSalias0.INVESTOR_ID HAVING COUNT( * ) >= var1 ;"
What are the dates of transactions with at least var0 share count or amount bigger than var0 ?,spider,SELECT TRANSACTIONSalias0.DATE_OF_TRANSACTION FROM TRANSACTIONS AS TRANSACTIONSalias0 WHERE TRANSACTIONSalias0.AMOUNT_OF_TRANSACTION >= var1 OR TRANSACTIONSalias0.SHARE_COUNT >= var0 ;
What are the details of all sales and purchases ?,spider,SELECT SALESalias0.SALES_DETAILS FROM SALES AS SALESalias0 UNION SELECT PURCHASESalias0.PURCHASE_DETAILS FROM PURCHASES AS PURCHASESalias0 ;
What are the details of the lots which are not used in any transactions ?,spider,SELECT LOTSalias0.LOT_DETAILS FROM LOTS AS LOTSalias0 EXCEPT SELECT LOTSalias1.LOT_DETAILS FROM LOTS AS LOTSalias1 JOIN TRANSACTIONS_LOTS AS TRANSACTIONS_LOTSalias0 ON TRANSACTIONS_LOTSalias0.LOT_ID = LOTSalias1.LOT_ID ;
How many available hotels are there in total ?,spider,SELECT COUNT( * ) FROM HOTELS AS HOTELSalias0 ;
Find the total number of available hotels .,spider,SELECT COUNT( * ) FROM HOTELS AS HOTELSalias0 ;
What are the price ranges of hotels ?,spider,SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 ;
Tell me the price ranges for all the hotels .,spider,SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 ;
Show all distinct location names .,spider,SELECT DISTINCT LOCATIONSalias0.LOCATION_NAME FROM LOCATIONS AS LOCATIONSalias0 ;
What are the distinct location names ?,spider,SELECT DISTINCT LOCATIONSalias0.LOCATION_NAME FROM LOCATIONS AS LOCATIONSalias0 ;
Show the names and details of all the staff members .,spider,"SELECT STAFFalias0.NAME , STAFFalias0.OTHER_DETAILS FROM STAFF AS STAFFalias0 ;"
What is the name and detail of each staff member ?,spider,"SELECT STAFFalias0.NAME , STAFFalias0.OTHER_DETAILS FROM STAFF AS STAFFalias0 ;"
Show details of all visitors .,spider,SELECT VISITORSalias0.TOURIST_DETAILS FROM VISITORS AS VISITORSalias0 ;
What is the detail of each visitor ?,spider,SELECT VISITORSalias0.TOURIST_DETAILS FROM VISITORS AS VISITORSalias0 ;
Show the price ranges of hotels with var0 star ratings .,spider,"SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.STAR_RATING_CODE = ""var0"" ;"
What are the price ranges of five star hotels ?,spider,"SELECT HOTELSalias0.PRICE_RANGE FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.STAR_RATING_CODE = ""var0"" ;"
Show the average price range of hotels that have var0 star ratings and allow pets .,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.PETS_ALLOWED_YN = var1 AND HOTELSalias0.STAR_RATING_CODE = ""var0"" ;"
What is the average price range of five star hotels that allow pets ?,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) FROM HOTELS AS HOTELSalias0 WHERE HOTELSalias0.PETS_ALLOWED_YN = var1 AND HOTELSalias0.STAR_RATING_CODE = ""var0"" ;"
"What is the address of the location "" var0 "" ?",spider,"SELECT LOCATIONSalias0.ADDRESS FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME = ""var0"" ;"
"Find the address of the location named "" var0 "" .",spider,"SELECT LOCATIONSalias0.ADDRESS FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME = ""var0"" ;"
What is the detail of the location var0 ?,spider,"SELECT LOCATIONSalias0.OTHER_DETAILS FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME = ""var0"" ;"
"Return the detail of the location named "" var0 "" .",spider,"SELECT LOCATIONSalias0.OTHER_DETAILS FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME = ""var0"" ;"
"Which location names contain the word "" var0 "" ?",spider,"SELECT LOCATIONSalias0.LOCATION_NAME FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME LIKE ""var0"" ;"
"Find all the locations whose names contain the word "" var0 "" .",spider,"SELECT LOCATIONSalias0.LOCATION_NAME FROM LOCATIONS AS LOCATIONSalias0 WHERE LOCATIONSalias0.LOCATION_NAME LIKE ""var0"" ;"
How many distinct names are associated with all the photos ?,spider,SELECT COUNT( DISTINCT PHOTOSalias0.NAME ) FROM PHOTOS AS PHOTOSalias0 ;
Count the number of distinct names associated with the photos .,spider,SELECT COUNT( DISTINCT PHOTOSalias0.NAME ) FROM PHOTOS AS PHOTOSalias0 ;
What are the distinct visit dates ?,spider,SELECT DISTINCT VISITSalias0.VISIT_DATE FROM VISITS AS VISITSalias0 ;
Find all the distinct visit dates .,spider,SELECT DISTINCT VISITSalias0.VISIT_DATE FROM VISITS AS VISITSalias0 ;
What are the names of the tourist attractions that can be accessed by var0 ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" ;"
Which tourist attractions can we get to by var0 ? Tell me the names of the attractions .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" ;"
What are the names and opening hours of the tourist attractions that can be accessed by var0 or var1 ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.OPENING_HOURS FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
Find the names and opening hours of the tourist attractions that we get to by var0 or var1 .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.OPENING_HOURS FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
What are the star rating descriptions of the hotels with price above var0 ?,spider,SELECT REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_DESCRIPTION FROM HOTELS AS HOTELSalias0 JOIN REF_HOTEL_STAR_RATINGS AS REF_HOTEL_STAR_RATINGSalias0 ON REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_CODE = HOTELSalias0.STAR_RATING_CODE WHERE HOTELSalias0.PRICE_RANGE > var0 ;
Give me the star rating descriptions of the hotels that cost more than var0 .,spider,SELECT REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_DESCRIPTION FROM HOTELS AS HOTELSalias0 JOIN REF_HOTEL_STAR_RATINGS AS REF_HOTEL_STAR_RATINGSalias0 ON REF_HOTEL_STAR_RATINGSalias0.STAR_RATING_CODE = HOTELSalias0.STAR_RATING_CODE WHERE HOTELSalias0.PRICE_RANGE > var0 ;
What are the details and opening hours of the museums ?,spider,"SELECT MUSEUMSalias0.MUSEUM_DETAILS , TOURIST_ATTRACTIONSalias0.OPENING_HOURS FROM MUSEUMS AS MUSEUMSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = MUSEUMSalias0.MUSEUM_ID ;"
Give me the detail and opening hour for each museum .,spider,"SELECT MUSEUMSalias0.MUSEUM_DETAILS , TOURIST_ATTRACTIONSalias0.OPENING_HOURS FROM MUSEUMS AS MUSEUMSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = MUSEUMSalias0.MUSEUM_ID ;"
"What is the name of the tourist attraction that is associated with the photo "" var0 "" ?",spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = PHOTOSalias0.TOURIST_ATTRACTION_ID WHERE PHOTOSalias0.NAME = ""var0"" ;"
"Which tourist attraction is associated with the photo "" var0 "" ? Return its name .",spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = PHOTOSalias0.TOURIST_ATTRACTION_ID WHERE PHOTOSalias0.NAME = ""var0"" ;"
"What are the names and descriptions of the photos taken at the tourist attraction "" var0 "" ?",spider,"SELECT PHOTOSalias0.DESCRIPTION , PHOTOSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = PHOTOSalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = ""var0"" ;"
"Find the names and descriptions of the photos taken at the tourist attraction called "" var0 "" .",spider,"SELECT PHOTOSalias0.DESCRIPTION , PHOTOSalias0.NAME FROM PHOTOS AS PHOTOSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = PHOTOSalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = ""var0"" ;"
What are the details and ways to get to tourist attractions related to royal family ?,spider,"SELECT ROYAL_FAMILYalias0.ROYAL_FAMILY_DETAILS , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM ROYAL_FAMILY AS ROYAL_FAMILYalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = ROYAL_FAMILYalias0.ROYAL_FAMILY_ID ;"
Which tourist attractions are related to royal family ? Tell me their details and how we can get there .,spider,"SELECT ROYAL_FAMILYalias0.ROYAL_FAMILY_DETAILS , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM ROYAL_FAMILY AS ROYAL_FAMILYalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = ROYAL_FAMILYalias0.ROYAL_FAMILY_ID ;"
What are the details of the shops that can be accessed by var0 ?,spider,"SELECT SHOPSalias0.SHOP_DETAILS FROM SHOPS AS SHOPSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = SHOPSalias0.SHOP_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" ;"
Find the details of the shops that can be reached by var0 .,spider,"SELECT SHOPSalias0.SHOP_DETAILS FROM SHOPS AS SHOPSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = SHOPSalias0.SHOP_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" ;"
"What is the name of the staff that is in charge of the attraction named "" var0 "" ?",spider,"SELECT STAFFalias0.NAME FROM STAFF AS STAFFalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STAFFalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = ""var0"" ;"
"Tell me the name of the staff in charge of the attraction called "" var0 "" .",spider,"SELECT STAFFalias0.NAME FROM STAFF AS STAFFalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STAFFalias0.TOURIST_ATTRACTION_ID WHERE TOURIST_ATTRACTIONSalias0.NAME = ""var0"" ;"
What are the details of the markets that can be accessed by var0 or var1 ?,spider,"SELECT STREET_MARKETSalias0.MARKET_DETAILS FROM STREET_MARKETS AS STREET_MARKETSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STREET_MARKETSalias0.MARKET_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
Find the details of all the markets that are accessible by var0 or var1 .,spider,"SELECT STREET_MARKETSalias0.MARKET_DETAILS FROM STREET_MARKETS AS STREET_MARKETSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID = STREET_MARKETSalias0.MARKET_ID WHERE TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
What are the visit date and details of the visitor whose detail is ' var0 ' ?,spider,"SELECT VISITSalias0.VISIT_DATE , VISITSalias0.VISIT_DETAILS FROM VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" ;"
Find the visit date and details of the tourist whose detail is ' var0 ',spider,"SELECT VISITSalias0.VISIT_DATE , VISITSalias0.VISIT_DETAILS FROM VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" ;"
Which tourist attractions does the visitor with detail ' var0 ' visit ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN VISITORS AS VISITORSalias0 ON VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" ;"
Show the tourist attractions visited by the tourist whose detail is ' var0 ' .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN VISITORS AS VISITORSalias0 ON VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" ;"
What are the names of the tourist attractions and the dates when the tourists named var0 or var1 visited there ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.VISIT_DATE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" OR VISITORSalias0.TOURIST_DETAILS = ""var1"" ;"
"For each tourist attraction , return its name and the date when the tourists named var0 or var1 visited there .",spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.VISIT_DATE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" OR VISITORSalias0.TOURIST_DETAILS = ""var1"" ;"
Show the average price of hotels for each star rating code .,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.STAR_RATING_CODE ;"
What is the average price range of hotels for each each star rating code ?,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.STAR_RATING_CODE ;"
Show the average price of hotels for different pet policy .,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.PETS_ALLOWED_YN FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.PETS_ALLOWED_YN ;"
What are the average prices of hotels grouped by their pet policy .,spider,"SELECT AVG( HOTELSalias0.PRICE_RANGE ) , HOTELSalias0.PETS_ALLOWED_YN FROM HOTELS AS HOTELSalias0 GROUP BY HOTELSalias0.PETS_ALLOWED_YN ;"
"Show the id and star rating of each hotel , ordered by its price from low to high .",spider,"SELECT HOTELSalias0.HOTEL_ID , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC ;"
Find the id and star rating of each hotel and sort them in increasing order of price .,spider,"SELECT HOTELSalias0.HOTEL_ID , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC ;"
Show the details of the top var0 most expensive hotels .,spider,SELECT HOTELSalias0.OTHER_HOTEL_DETAILS FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE DESC LIMIT var0 ;
What are the details of the three most expensive hotels ?,spider,SELECT HOTELSalias0.OTHER_HOTEL_DETAILS FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE DESC LIMIT var0 ;
Show the details and star ratings of the var0 least expensive hotels .,spider,"SELECT HOTELSalias0.OTHER_HOTEL_DETAILS , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC LIMIT var0 ;"
What are the details and star ratings of the three hotels with the lowest price ranges ?,spider,"SELECT HOTELSalias0.OTHER_HOTEL_DETAILS , HOTELSalias0.STAR_RATING_CODE FROM HOTELS AS HOTELSalias0 ORDER BY HOTELSalias0.PRICE_RANGE ASC LIMIT var0 ;"
Show the transportation method most people choose to get to tourist attractions .,spider,SELECT TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY HOW_TO_GET_THERE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which transportation method is used the most often to get to tourist attractions ?,spider,SELECT TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY HOW_TO_GET_THERE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the description and code of the attraction type most tourist attractions belong to .,spider,"SELECT REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_DESCRIPTION , TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE FROM REF_ATTRACTION_TYPES AS REF_ATTRACTION_TYPESalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE = REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_CODE GROUP BY TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which attraction type does the most tourist attractions belong to ? Tell me its attraction type description and code .,spider,"SELECT REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_DESCRIPTION , TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE FROM REF_ATTRACTION_TYPES AS REF_ATTRACTION_TYPESalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE = REF_ATTRACTION_TYPESalias0.ATTRACTION_TYPE_CODE GROUP BY TOURIST_ATTRACTIONSalias0.ATTRACTION_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way .,spider,"SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE ;"
"List all the possible ways to get to attractions , together with the number of attractions accessible by these methods .",spider,"SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 GROUP BY TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE ;"
"Show different tourist attractions ' names , ids , and the corresponding number of visits .",spider,"SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID ;"
"What are the name , id and the corresponding number of visits for each tourist attraction ?",spider,"SELECT COUNT( * ) , TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID ;"
Show the names and ids of tourist attractions that are visited at least two times .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) >= var0 ;"
Which tourist attractions are visited at least twice ? Give me their names and ids .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , VISITSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) >= var0 ;"
Show the names and ids of tourist attractions that are visited at most once .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) <= var0 ;"
What are the names and ids of the tourist attractions that are visited at most once ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME , TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID GROUP BY VISITSalias0.TOURIST_ATTRACTION_ID HAVING COUNT( * ) <= var0 ;"
What are the names of tourist attractions that can be reached by var1 or is at address var0 ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
Find the names of the tourist attractions that is either accessible by var1 or at address var0 .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
What are the names of tourist attractions that can be reached by var1 or is at address var0 ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
Find the names of the tourist attractions that is either accessible by var1 or at address var0 .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM LOCATIONS AS LOCATIONSalias0 JOIN TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 ON TOURIST_ATTRACTIONSalias0.LOCATION_ID = LOCATIONSalias0.LOCATION_ID WHERE LOCATIONSalias0.ADDRESS = ""var0"" OR TOURIST_ATTRACTIONSalias0.HOW_TO_GET_THERE = ""var1"" ;"
What are the names of the tourist attractions that have var0ing or var1 as their feature details ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.FEATURE_ID = FEATURESalias0.FEATURE_ID WHERE FEATURESalias0.FEATURE_DETAILS = ""var0"" UNION SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.FEATURE_ID = FEATURESalias1.FEATURE_ID WHERE FEATURESalias1.FEATURE_DETAILS = ""var1"" ;"
Find the tourist attractions that have var0ing or var1 as their feature details . What are the names of the attractions ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias0 ON TOURIST_ATTRACTION_FEATURESalias0.FEATURE_ID = FEATURESalias0.FEATURE_ID WHERE FEATURESalias0.FEATURE_DETAILS = ""var0"" UNION SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN TOURIST_ATTRACTION_FEATURES AS TOURIST_ATTRACTION_FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID JOIN FEATURES AS FEATURESalias1 ON TOURIST_ATTRACTION_FEATURESalias1.FEATURE_ID = FEATURESalias1.FEATURE_ID WHERE FEATURESalias1.FEATURE_DETAILS = ""var1"" ;"
What are the names of the tourist attractions var0 and var1 visit ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" INTERSECT SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN VISITORS AS VISITORSalias1 JOIN VISITS AS VISITSalias1 ON VISITSalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID AND VISITSalias1.TOURIST_ID = VISITORSalias1.TOURIST_ID WHERE VISITORSalias1.TOURIST_DETAILS = ""var1"" ;"
Which tourist attractions do the tourists var0 and var1 visit ? Tell me the names of the attractions .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" INTERSECT SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN VISITORS AS VISITORSalias1 JOIN VISITS AS VISITSalias1 ON VISITSalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID AND VISITSalias1.TOURIST_ID = VISITORSalias1.TOURIST_ID WHERE VISITORSalias1.TOURIST_DETAILS = ""var1"" ;"
What are the names of tourist attraction that var0 visited but var1 did not visit ?,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" EXCEPT SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN VISITORS AS VISITORSalias1 JOIN VISITS AS VISITSalias1 ON VISITSalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID AND VISITSalias1.TOURIST_ID = VISITORSalias1.TOURIST_ID WHERE VISITORSalias1.TOURIST_DETAILS = ""var1"" ;"
Find the the names of the tourist attractions that the tourist named var0 visited but var1 did not visit .,spider,"SELECT TOURIST_ATTRACTIONSalias0.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias0 JOIN VISITORS AS VISITORSalias0 JOIN VISITS AS VISITSalias0 ON VISITSalias0.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias0.TOURIST_ATTRACTION_ID AND VISITSalias0.TOURIST_ID = VISITORSalias0.TOURIST_ID WHERE VISITORSalias0.TOURIST_DETAILS = ""var0"" EXCEPT SELECT TOURIST_ATTRACTIONSalias1.NAME FROM TOURIST_ATTRACTIONS AS TOURIST_ATTRACTIONSalias1 JOIN VISITORS AS VISITORSalias1 JOIN VISITS AS VISITSalias1 ON VISITSalias1.TOURIST_ATTRACTION_ID = TOURIST_ATTRACTIONSalias1.TOURIST_ATTRACTION_ID AND VISITSalias1.TOURIST_ID = VISITORSalias1.TOURIST_ID WHERE VISITORSalias1.TOURIST_DETAILS = ""var1"" ;"
How many tourists did not make any visit ?,spider,SELECT COUNT( * ) FROM VISITORS AS VISITORSalias0 WHERE VISITORSalias0.TOURIST_ID NOT IN ( SELECT VISITSalias0.TOURIST_ID FROM VISITS AS VISITSalias0 ) ;
Count the number of tourists who did not visit any place .,spider,SELECT COUNT( * ) FROM VISITORS AS VISITORSalias0 WHERE VISITORSalias0.TOURIST_ID NOT IN ( SELECT VISITSalias0.TOURIST_ID FROM VISITS AS VISITSalias0 ) ;
How many video games exist ?,spider,SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
How many video games do you have ?,spider,SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
How many video game types exist ?,spider,SELECT COUNT( DISTINCT GTYPE ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
What is the count of different game types ?,spider,SELECT COUNT( DISTINCT GTYPE ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
Show all video game types .,spider,SELECT DISTINCT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
What are the different types of video games ?,spider,SELECT DISTINCT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ;
Show all video games and their types in the order of their names .,spider,"SELECT GNAME , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ORDER BY GNAME ;"
What are the names of all the video games and their types in alphabetical order ?,spider,"SELECT GNAME , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 ORDER BY GNAME ;"
Show all video games with type var0 .,spider,"SELECT GNAME FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = ""var0"" ;"
What are the names of all video games that are collectible cards ?,spider,"SELECT GNAME FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = ""var0"" ;"
What is the type of video game var0 .,spider,"SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GNAME = ""var0"" ;"
What type of game is var0 ?,spider,"SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GNAME = ""var0"" ;"
How many video games have type var0 ?,spider,"SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = ""var0"" ;"
Count the number of video games with var0 type .,spider,"SELECT COUNT( * ) FROM VIDEO_GAMES AS VIDEO_GAMESalias0 WHERE GTYPE = ""var0"" ;"
Show all video game types and the number of video games in each type .,spider,"SELECT COUNT( * ) , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ;"
What are the types of video games and how many are in each type ?,spider,"SELECT COUNT( * ) , GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ;"
Which game type has most number of games ?,spider,SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What type has the most games ?,spider,SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which game type has least number of games ?,spider,SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) LIMIT 1 ;
What is the type with the fewest games ?,spider,SELECT GTYPE FROM VIDEO_GAMES AS VIDEO_GAMESalias0 GROUP BY GTYPE ORDER BY COUNT( * ) LIMIT 1 ;
Show ids for all students who live in var0 .,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
What are the ids of all students who live in var0 ?,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.CITY_CODE = ""var0"" ;"
Show ids for all students who have advisor var0 .,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ADVISOR = var0 ;
What are the ids of all students who have advisor number var0 ?,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.ADVISOR = var0 ;
Show first name for all students with major var0 .,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
What are the first names for all students who are from the major numbered var0 ?,spider,SELECT FNAME FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 ;
"Show the average , minimum , and maximum age for different majors .",spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
"What are the average , minimum , and max ages for each of the different majors ?",spider,"SELECT AVG( STUDENTalias0.AGE ) , MAX( STUDENTalias0.AGE ) , MIN( STUDENTalias0.AGE ) , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.MAJOR ;"
Show all advisors who have at least two students .,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) >= var0 ;
What are the advisors,spider,SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 GROUP BY STUDENTalias0.ADVISOR HAVING COUNT( * ) >= var0 ;
How many sports do we have ?,spider,SELECT COUNT( DISTINCT SPORTNAME ) FROM SPORTSINFO ;
How many different types of sports do we offer ?,spider,SELECT COUNT( DISTINCT SPORTNAME ) FROM SPORTSINFO ;
How many students play sports ?,spider,SELECT COUNT( DISTINCT STUID ) FROM SPORTSINFO ;
How many different students are involved in sports ?,spider,SELECT COUNT( DISTINCT STUID ) FROM SPORTSINFO ;
List ids for all student who are on scholarship .,spider,"SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var0"" ;"
What are the ids for all sporty students who are on scholarship ?,spider,"SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var0"" ;"
Show last names for all student who are on scholarship .,spider,"SELECT STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.ONSCHOLARSHIP = ""var0"" ;"
What are the last names for all scholarship students ?,spider,"SELECT STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.ONSCHOLARSHIP = ""var0"" ;"
How many games are played for all students ?,spider,SELECT SUM( GAMESPLAYED ) FROM SPORTSINFO ;
What is the total number of games played ?,spider,SELECT SUM( GAMESPLAYED ) FROM SPORTSINFO ;
How many games are played for all football games by students on scholarship ?,spider,"SELECT SUM( GAMESPLAYED ) FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var1"" AND SPORTNAME = ""var0"" ;"
What is the total number of all football games played by scholarship students ?,spider,"SELECT SUM( GAMESPLAYED ) FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var1"" AND SPORTNAME = ""var0"" ;"
Show all sport name and the number of students .,spider,"SELECT COUNT( * ) , SPORTNAME FROM SPORTSINFO GROUP BY SPORTNAME ;"
How many students play each sport ?,spider,"SELECT COUNT( * ) , SPORTNAME FROM SPORTSINFO GROUP BY SPORTNAME ;"
Show all student IDs with the number of sports and total number of games played,spider,"SELECT COUNT( * ) , STUID , SUM( GAMESPLAYED ) FROM SPORTSINFO GROUP BY STUID ;"
What are the ids of all students along with how many sports and games did they play ?,spider,"SELECT COUNT( * ) , STUID , SUM( GAMESPLAYED ) FROM SPORTSINFO GROUP BY STUID ;"
Show all student IDs with more than total var0 hours per week on all sports played .,spider,SELECT STUID FROM SPORTSINFO GROUP BY STUID HAVING SUM( HOURSPERWEEK ) > var0 ;
What are the student IDs for everybody who worked for more than var0 hours per week on all sports ?,spider,SELECT STUID FROM SPORTSINFO GROUP BY STUID HAVING SUM( HOURSPERWEEK ) > var0 ;
What is the first name and last name of the student who have most number of sports ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID GROUP BY DERIVED_TABLEalias0.STUID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the first and last name of the student who played the most sports ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID GROUP BY DERIVED_TABLEalias0.STUID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which sport has most number of students on scholarship ?,spider,"SELECT SPORTNAME FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var0"" GROUP BY SPORTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the sport with the most scholarship students ?,spider,"SELECT SPORTNAME FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var0"" GROUP BY SPORTNAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show student ids who don't have any sports .,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM SPORTSINFO ;
What are the ids of all students who don't play sports ?,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM SPORTSINFO ;
Show student ids who are on scholarship and have major var0 .,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 INTERSECT SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var1"" ;"
What are the student ids for those on scholarship in major number var0 ?,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.MAJOR = var0 INTERSECT SELECT STUID FROM SPORTSINFO WHERE ONSCHOLARSHIP = ""var1"" ;"
Show student ids who are female and play football .,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ;"
What are the ids of all female students who play football ?,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ;"
Show all male student ids who don't play football .,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" EXCEPT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ;"
What are the ids of all male students who do not play football ?,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.SEX = ""var0"" EXCEPT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ;"
Show total hours per week and number of games played for student var0 var1 .,spider,"SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
What is the total number of hours per work and number of games played by var0 var1 ?,spider,"SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
Show total hours per week and number of games played for students under var0 .,spider,"SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.AGE < var0 ;"
What is the total number of hours per week and number of games played by students under var0 ?,spider,"SELECT SUM( GAMESPLAYED ) , SUM( HOURSPERWEEK ) FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE STUDENTalias0.AGE < var0 ;"
How many students play video games ?,spider,SELECT COUNT( DISTINCT STUID ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
How many different students play games ?,spider,SELECT COUNT( DISTINCT STUID ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
Show ids of students who don't play video game .,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
What are the ids of all students who are not video game players ?,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
Show ids of students who play video game and play sports .,spider,SELECT STUID FROM SPORTSINFO INTERSECT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
What are the ids of all students who played video games and sports ?,spider,SELECT STUID FROM SPORTSINFO INTERSECT SELECT STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 ;
Show all game ids and the number of hours played .,spider,"SELECT GAMEID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY GAMEID ;"
What are ids and total number of hours played for each game ?,spider,"SELECT GAMEID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY GAMEID ;"
Show all student ids and the number of hours played .,spider,"SELECT STUID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY STUID ;"
What are the ids of all students and number of hours played ?,spider,"SELECT STUID , SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) FROM PLAYS_GAMES AS PLAYS_GAMESalias0 GROUP BY STUID ;"
Show the game name that has most number of hours played .,spider,SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID ORDER BY SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) DESC LIMIT 1 ;
What is the name of the game that has been played the most ?,spider,SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID ORDER BY SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) DESC LIMIT 1 ;
Show all game names played by at least var0 hours .,spider,SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID HAVING SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) >= var0 ;
What are the names of all the games that have been played for at least var0 hours ?,spider,SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID GROUP BY PLAYS_GAMESalias0.GAMEID HAVING SUM( PLAYS_GAMESalias0.HOURS_PLAYED ) >= var0 ;
Show all game names played by var1 var0,spider,"SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = PLAYS_GAMESalias0.STUID WHERE STUDENTalias0.FNAME = ""var1"" AND STUDENTalias0.LNAME = ""var0"" ;"
What are the names of all games played by var1 var0 ?,spider,"SELECT GNAME FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = PLAYS_GAMESalias0.STUID WHERE STUDENTalias0.FNAME = ""var1"" AND STUDENTalias0.LNAME = ""var0"" ;"
Find the last and first name of students who are playing var0 or var1 .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.SPORTNAME = ""var0"" OR DERIVED_TABLEalias0.SPORTNAME = ""var1"" ;"
What is the first and last name of all students who play var0 or var1 ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM SPORTSINFO AS DERIVED_TABLEalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.STUID = DERIVED_TABLEalias0.STUID WHERE DERIVED_TABLEalias0.SPORTNAME = ""var0"" OR DERIVED_TABLEalias0.SPORTNAME = ""var1"" ;"
Find the first name and age of the students who are playing both var0 and var1 .,spider,"SELECT FNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var0"" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ) ;"
What are the first names and ages of all students who are playing both var0 and var1 ?,spider,"SELECT FNAME , STUDENTalias0.AGE FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var0"" INTERSECT SELECT STUID FROM SPORTSINFO WHERE SPORTNAME = ""var1"" ) ;"
Find the last name and gender of the students who are playing both var0 and var1 games .,spider,"SELECT LNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT PLAYS_GAMESalias0.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID WHERE VIDEO_GAMESalias0.GNAME = ""var0"" INTERSECT SELECT PLAYS_GAMESalias1.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias1 JOIN VIDEO_GAMES AS VIDEO_GAMESalias1 ON VIDEO_GAMESalias1.GAMEID = PLAYS_GAMESalias1.GAMEID WHERE VIDEO_GAMESalias1.GNAME = ""var1"" ) ;"
what is the last name and gender of all students who played both var0 and var1 ?,spider,"SELECT LNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 WHERE STUID IN ( SELECT PLAYS_GAMESalias0.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias0 JOIN VIDEO_GAMES AS VIDEO_GAMESalias0 ON VIDEO_GAMESalias0.GAMEID = PLAYS_GAMESalias0.GAMEID WHERE VIDEO_GAMESalias0.GNAME = ""var0"" INTERSECT SELECT PLAYS_GAMESalias1.STUID FROM PLAYS_GAMES AS PLAYS_GAMESalias1 JOIN VIDEO_GAMES AS VIDEO_GAMESalias1 ON VIDEO_GAMESalias1.GAMEID = PLAYS_GAMESalias1.GAMEID WHERE VIDEO_GAMESalias1.GNAME = ""var1"" ) ;"
Find the name of all customers .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ;
What are the names of all the customers ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ;
What is the average amount of items ordered in each order ?,spider,SELECT AVG( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ;
Find the average order quantity per order .,spider,SELECT AVG( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias0 ;
"What are the names of customers who use payment method "" var0 "" ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ""var0"" ;"
"Which customers use "" var0 "" for payment method ? Return the customer names .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ""var0"" ;"
"Find the "" date became customers "" of the customers whose ID is between var0 and var1 .",spider,SELECT CUSTOMERSalias0.DATE_BECAME_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID BETWEEN var0 AND var1 ;
What are the dates when customers with ids between var0 and var1 became customers ?,spider,SELECT CUSTOMERSalias0.DATE_BECAME_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID BETWEEN var0 AND var1 ;
What are the names of customers using the most popular payment method ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ( SELECT CUSTOMERSalias1.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias1 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
Find the name of the customers who use the most frequently used payment method .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD = ( SELECT CUSTOMERSalias1.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias1 GROUP BY PAYMENT_METHOD ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What are all the payment methods ?,spider,SELECT DISTINCT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 ;
Return all the distinct payment methods used by customers .,spider,SELECT DISTINCT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 ;
What are the details of all products ?,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 ;
Return the the details of all products .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 ;
"Find the name of all customers whose name contains "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
"Which customer's name contains "" var0 "" ? Find the full name .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_NAME LIKE ""var0"" ;"
"Find the detail of products whose detail contains the word "" var0 "" or the word "" var1 """,spider,"SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_DETAILS LIKE ""var0"" OR PRODUCTSalias0.PRODUCT_DETAILS LIKE ""var1"" ;"
"Which product's detail contains the word "" var0 "" or "" var1 "" ? Return the full detail .",spider,"SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM PRODUCTS AS PRODUCTSalias0 WHERE PRODUCTSalias0.PRODUCT_DETAILS LIKE ""var0"" OR PRODUCTSalias0.PRODUCT_DETAILS LIKE ""var1"" ;"
"What is the address content of the customer named "" var0 "" ?",spider,"SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Return the address content for the customer whose name is "" var0 "" .",spider,"SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"How many customers are living in city "" var0 "" ?",spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
Find the number of customers who live in the city called var0 .,spider,"SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
Find the name of customers who are living in var0 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
What are the names of customers who live in var0 state ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
Find the list of cities that no customer is living in .,spider,SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY NOT IN ( SELECT DISTINCT ADDRESSESalias1.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias1 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ) ;
What are the cities no customers live in ?,spider,SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY NOT IN ( SELECT DISTINCT ADDRESSESalias1.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias1 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias1.ADDRESS_ID ) ;
Which city has the most customers living in ?,spider,SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the city where the most customers live .,spider,SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ADDRESSES AS CUSTOMER_ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMER_ADDRESSESalias0.ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the city with post code var0 .,spider,SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE = var0 ;
Which city is post code var0 located in ?,spider,SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE = var0 ;
Find the state and country of all cities with post code starting with 4 .,spider,"SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE LIKE ""var0"" ;"
What are the state and country of all the cities that have post codes starting with 4.\,spider,"SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.ZIP_POSTCODE LIKE ""var0"" ;"
List the countries having more than var0 addresses listed .,spider,SELECT ADDRESSESalias0.COUNTRY FROM ADDRESSES AS ADDRESSESalias0 GROUP BY ADDRESSESalias0.COUNTRY HAVING COUNT( ADDRESSESalias0.ADDRESS_ID ) > var0 ;
For which countries are there more than four distinct addresses listed ?,spider,SELECT ADDRESSESalias0.COUNTRY FROM ADDRESSES AS ADDRESSESalias0 GROUP BY ADDRESSESalias0.COUNTRY HAVING COUNT( ADDRESSESalias0.ADDRESS_ID ) > var0 ;
List all the contact channel codes that were used less than var0 times .,spider,SELECT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 GROUP BY CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE HAVING COUNT( CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID ) < var0 ;
Which contact channel codes were used less than var0 times ?,spider,SELECT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 GROUP BY CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE HAVING COUNT( CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID ) < var0 ;
"Which contact channel has been used by the customer with name "" var0 "" ?",spider,"SELECT DISTINCT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Find the contact channel code that was used by the customer named "" var0 "" .",spider,"SELECT DISTINCT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"What is the "" active to date "" of the latest contact channel used by "" var0 "" ?",spider,"SELECT MAX( CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Return the the "" active to date "" of the latest contact channel used by the customer named "" var0 "" .",spider,"SELECT MAX( CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
What is the average time span of contact channels in the database ?,spider,SELECT AVG( CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE ) FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ;
Compute the average active time span of contact channels .,spider,SELECT AVG( CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE ) FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ;
What is the channel code and contact number of the customer contact channel that was active for the longest time ?,spider,"SELECT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE , CUSTOMER_CONTACT_CHANNELSalias0.CONTACT_NUMBER FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 WHERE CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE = ( SELECT CUSTOMER_CONTACT_CHANNELSalias1.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias1.ACTIVE_FROM_DATE FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias1 ORDER BY ( ACTIVE_TO_DATE - ACTIVE_FROM_DATE ) DESC LIMIT 1 ) ;"
Return the channel code and contact number of the customer contact channel whose active duration was the longest .,spider,"SELECT CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE , CUSTOMER_CONTACT_CHANNELSalias0.CONTACT_NUMBER FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 WHERE CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE = ( SELECT CUSTOMER_CONTACT_CHANNELSalias1.ACTIVE_TO_DATE - CUSTOMER_CONTACT_CHANNELSalias1.ACTIVE_FROM_DATE FROM CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias1 ORDER BY ( ACTIVE_TO_DATE - ACTIVE_FROM_DATE ) DESC LIMIT 1 ) ;"
Find the name and active date of the customer that use email as the contact channel .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE = ""var0"" ;"
What are the name and active date of the customers whose contact channel code is email ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_CONTACT_CHANNELSalias0.ACTIVE_FROM_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_CONTACT_CHANNELS AS CUSTOMER_CONTACT_CHANNELSalias0 ON CUSTOMER_CONTACT_CHANNELSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_CONTACT_CHANNELSalias0.CHANNEL_CODE = ""var0"" ;"
What is the name of the customer that made the order with the largest quantity ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE ORDER_ITEMSalias0.ORDER_QUANTITY = ( SELECT MAX( ORDER_ITEMSalias1.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias1 ) ;
Find the name of the customer who made the order of the largest amount of goods .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE ORDER_ITEMSalias0.ORDER_QUANTITY = ( SELECT MAX( ORDER_ITEMSalias1.ORDER_QUANTITY ) FROM ORDER_ITEMS AS ORDER_ITEMSalias1 ) ;
What is the name of the customer that has purchased the most items ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) DESC LIMIT 1 ;
Give me the name of the customer who ordered the most items in total .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) DESC LIMIT 1 ;
What is the payment method of the customer that has purchased the least quantity of items ?,spider,SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;
Tell me the payment method used by the customer who ordered the least amount of goods in total .,spider,SELECT CUSTOMERSalias0.PAYMENT_METHOD FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_NAME ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;
How many types of products have var0 bought in total ?,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
Find the number of distinct products var0 has bought so far .,spider,"SELECT COUNT( DISTINCT ORDER_ITEMSalias0.PRODUCT_ID ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"What is the total quantity of products purchased by "" var0 "" ?",spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Tell me the total quantity of products bought by the customer called "" var0 "" .",spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"How many customers have at least one order with status "" var0 "" ?",spider,"SELECT COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"Return the number of customers who have at least one order with "" var0 "" status .",spider,"SELECT COUNT( DISTINCT CUSTOMER_ORDERSalias0.CUSTOMER_ID ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"How many orders have detail "" var0 "" ?",spider,"SELECT COUNT( * ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DETAILS = ""var0"" ;"
"Tell me the number of orders with "" var0 "" as order detail .",spider,"SELECT COUNT( * ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 WHERE CUSTOMER_ORDERSalias0.ORDER_DETAILS = ""var0"" ;"
"Find the customer name and date of the orders that have the status "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"What are the customer name and date of the orders whose status is "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME , CUSTOMER_ORDERSalias0.ORDER_DATE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"What is the total number of products that are in orders with status "" var0 "" ?",spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"Find the total quantity of products associated with the orders in the "" var0 "" status .",spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_STATUS = ""var0"" ;"
Find the total amount of products ordered before var0 .,spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_DATE < ""var0"" ;"
What is the total amount of products purchased before var0 ?,spider,"SELECT SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) FROM CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID WHERE CUSTOMER_ORDERSalias0.ORDER_DATE < ""var0"" ;"
Who made the latest order ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE DESC LIMIT 1 ;
Find the name of the customer who made an order most recently .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID ORDER BY CUSTOMER_ORDERSalias0.ORDER_DATE DESC LIMIT 1 ;
Which product has been ordered most number of times ?,spider,SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY COUNT( ORDER_ITEMSalias0.* ) DESC LIMIT 1 ;
What is the most frequently ordered product ? Tell me the detail of the product,spider,SELECT PRODUCTSalias0.PRODUCT_DETAILS FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY COUNT( ORDER_ITEMSalias0.* ) DESC LIMIT 1 ;
Find the name and ID of the product whose total order quantity is the largest .,spider,"SELECT PRODUCTSalias0.PRODUCT_DETAILS , PRODUCTSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;"
What are the name and ID of the product bought the most .,spider,"SELECT PRODUCTSalias0.PRODUCT_DETAILS , PRODUCTSalias0.PRODUCT_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY ORDER_ITEMSalias0.PRODUCT_ID ORDER BY SUM( ORDER_ITEMSalias0.ORDER_QUANTITY ) LIMIT 1 ;"
"Find all the addresses in var0 , var1 or in var2 , var3 .",spider,"SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = ""var0"" AND ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var1"" UNION SELECT ADDRESSESalias1.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias1 WHERE ADDRESSESalias1.CITY = ""var2"" AND ADDRESSESalias1.STATE_PROVINCE_COUNTY = ""var3"" ;"
"What are all the addresses in var0 , var1 or in var2 , var3 .",spider,"SELECT ADDRESSESalias0.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = ""var0"" AND ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var1"" UNION SELECT ADDRESSESalias1.ADDRESS_CONTENT FROM ADDRESSES AS ADDRESSESalias1 WHERE ADDRESSESalias1.CITY = ""var2"" AND ADDRESSESalias1.STATE_PROVINCE_COUNTY = ""var3"" ;"
Find the name of customers who did not pay with var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD != ""var0"" ;"
What is the name of customers who do not use var0 as payment method .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.PAYMENT_METHOD != ""var0"" ;"
Find the names of customers who never ordered product var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = ""var0"" ;"
What are names of customers who never ordered product var0 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = ""var0"" ;"
Find the names of customers who never placed an order .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
What are the names of customers who never made an order .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 EXCEPT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID ;
Find the names of customers who ordered both products var0 and var1 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias1 ON ORDER_ITEMSalias1.ORDER_ID = CUSTOMER_ORDERSalias1.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias1 ON PRODUCTSalias1.PRODUCT_ID = ORDER_ITEMSalias1.PRODUCT_ID WHERE PRODUCTSalias1.PRODUCT_DETAILS = ""var1"" ;"
What are the names of customers who have purchased both products var0 and var1 ?,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias0 ON CUSTOMER_ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = CUSTOMER_ORDERSalias0.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias0 ON PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_DETAILS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN CUSTOMER_ORDERS AS CUSTOMER_ORDERSalias1 ON CUSTOMER_ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID JOIN ORDER_ITEMS AS ORDER_ITEMSalias1 ON ORDER_ITEMSalias1.ORDER_ID = CUSTOMER_ORDERSalias1.ORDER_ID JOIN PRODUCTS AS PRODUCTSalias1 ON PRODUCTSalias1.PRODUCT_ID = ORDER_ITEMSalias1.PRODUCT_ID WHERE PRODUCTSalias1.PRODUCT_DETAILS = ""var1"" ;"
List the age of all music artists .,spider,SELECT ARTISTalias0.AGE FROM ARTIST AS ARTISTalias0 ;
What are the ages of all music artists ?,spider,SELECT ARTISTalias0.AGE FROM ARTIST AS ARTISTalias0 ;
What is the average age of all artists ?,spider,SELECT AVG( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 ;
Return the average age across all artists .,spider,SELECT AVG( ARTISTalias0.AGE ) FROM ARTIST AS ARTISTalias0 ;
"What are the famous titles of the artist "" var0 "" ?",spider,"SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST = ""var0"" ;"
"Return the famous titles of the artist called "" var0 "" .",spider,"SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST = ""var0"" ;"
What are the var0 Famous release dates ?,spider,SELECT var0 ( FAMOUS_RELEASE_DATE ) FROM ARTIST AS ARTISTalias0 ;
Give the var0 famous release dates for all artists .,spider,SELECT var0 ( FAMOUS_RELEASE_DATE ) FROM ARTIST AS ARTISTalias0 ;
Return the dates of ceremony and the results of all music festivals,spider,"SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 ;"
What are the dates of ceremony and results for each music festival ?,spider,"SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 ;"
"What are the category of music festivals with result "" var0 "" ?",spider,"SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.RESULT = ""var0"" ;"
"Return the categories of music festivals that have the result "" var0 "" .",spider,"SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.RESULT = ""var0"" ;"
What are the maximum and minimum week on top of all volumes ?,spider,"SELECT MAX( VOLUMEalias0.WEEKS_ON_TOP ) , MIN( VOLUMEalias0.WEEKS_ON_TOP ) FROM VOLUME AS VOLUMEalias0 ;"
Give the maximum and minimum weeks on top across all volumes .,spider,"SELECT MAX( VOLUMEalias0.WEEKS_ON_TOP ) , MIN( VOLUMEalias0.WEEKS_ON_TOP ) FROM VOLUME AS VOLUMEalias0 ;"
What are the songs in volumes with more than var0 week on top ?,spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
Give the songs included in volumes that have more than var0 week on top .,spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
Please list all songs in volumes in ascending alphabetical order .,spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.SONG ;
"What are the the songs in volumes , listed in ascending order ?",spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.SONG ;
How many distinct artists do the volumes associate to ?,spider,SELECT COUNT( DISTINCT VOLUMEalias0.ARTIST_ID ) FROM VOLUME AS VOLUMEalias0 ;
Count the number of distinct artists who have volumes .,spider,SELECT COUNT( DISTINCT VOLUMEalias0.ARTIST_ID ) FROM VOLUME AS VOLUMEalias0 ;
How many distinct artists have volumes ?,spider,SELECT COUNT( DISTINCT VOLUMEalias0.ARTIST_ID ) FROM VOLUME AS VOLUMEalias0 ;
Count the number of artists who have had volumes .,spider,SELECT COUNT( DISTINCT VOLUMEalias0.ARTIST_ID ) FROM VOLUME AS VOLUMEalias0 ;
Please show the date of ceremony of the volumes that last more than var0 weeks on top .,spider,SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
What are the dates of ceremony at music festivals corresponding to volumes that lasted more than var0 weeks on top ?,spider,SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
"Please show the songs that have result "" nominated "" at music festivals .",spider,"SELECT VOLUMEalias0.SONG FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE MUSIC_FESTIVALalias0.RESULT = ""var0"" ;"
What are the songs in volumes that have resulted in a nomination at music festivals ?,spider,"SELECT VOLUMEalias0.SONG FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.VOLUME_ID = MUSIC_FESTIVALalias0.VOLUME WHERE MUSIC_FESTIVALalias0.RESULT = ""var0"" ;"
"What are the issue dates of volumes associated with the artist "" var0 "" ?",spider,"SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.ARTIST = ""var0"" ;"
Return the issue dates of volumes that are by the artist named var0 .,spider,"SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.ARTIST = ""var0"" ;"
What are the songs in volumes associated with the artist aged var0 or older ?,spider,SELECT VOLUMEalias0.SONG FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE >= var0 ;
Return names of songs in volumes that are by artists that are at least var0 years old .,spider,SELECT VOLUMEalias0.SONG FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE >= var0 ;
What is the average weeks on top of volumes associated with the artist aged var0 or younger ?,spider,SELECT AVG( VOLUMEalias0.WEEKS_ON_TOP ) FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
Return the average number of weeks on top for volumes by artists that are at most var0 years old .,spider,SELECT AVG( VOLUMEalias0.WEEKS_ON_TOP ) FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
What are the famous title of the artists associated with volumes with more than var0 weeks on top ?,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
Return the famous titles for artists that have volumes that lasted more than var0 weeks on top .,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 ;
Please list the age and famous title of artists in descending order of age .,spider,"SELECT ARTISTalias0.AGE , ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC ;"
"What are the famous titles and ages of each artist , listed in descending order by age ?",spider,"SELECT ARTISTalias0.AGE , ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC ;"
What is the famous release date of the artist with the oldest age ?,spider,SELECT ARTISTalias0.FAMOUS_RELEASE_DATE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC LIMIT 1 ;
Return the famous release date for the oldest artist .,spider,SELECT ARTISTalias0.FAMOUS_RELEASE_DATE FROM ARTIST AS ARTISTalias0 ORDER BY ARTISTalias0.AGE DESC LIMIT 1 ;
Please show the categories of the music festivals and the count .,spider,"SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY ;"
Return the number of music festivals of each category .,spider,"SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY ;"
What is the most common result of the music festival ?,spider,SELECT MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC LIMIT 1 ;
Return the result that is most frequent at music festivals .,spider,SELECT MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC LIMIT 1 ;
Please show the categories of the music festivals with count more than var0 .,spider,SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY HAVING COUNT( MUSIC_FESTIVALalias0.* ) > var0 ;
What are the categories of music festivals for which there have been more than var0 music festival ?,spider,SELECT MUSIC_FESTIVALalias0.CATEGORY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY MUSIC_FESTIVALalias0.CATEGORY HAVING COUNT( MUSIC_FESTIVALalias0.* ) > var0 ;
What is the song in the volume with the maximum weeks on top ?,spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP DESC LIMIT 1 ;
Return the song in the volume that has spent the most weeks on top ?,spider,SELECT VOLUMEalias0.SONG FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP DESC LIMIT 1 ;
Find the famous titles of artists that do not have any volume .,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT VOLUMEalias0.ARTIST_ID FROM VOLUME AS VOLUMEalias0 ) ;
What are the famous titles of artists who do not have any volumes ?,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 WHERE ARTISTalias0.ARTIST_ID NOT IN ( SELECT VOLUMEalias0.ARTIST_ID FROM VOLUME AS VOLUMEalias0 ) ;
Show the famous titles of the artists with both volumes that lasted more than var0 weeks on top and volumes that lasted less than var0 weeks on top .,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 INTERSECT SELECT ARTISTalias1.FAMOUS_TITLE FROM ARTIST AS ARTISTalias1 JOIN VOLUME AS VOLUMEalias1 ON VOLUMEalias1.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE VOLUMEalias1.WEEKS_ON_TOP < var1 ;
What are the famous titles of artists who have not only had volumes that spent more than var0 weeks on top but also volumes that spent less than var0 weeks on top ?,spider,SELECT ARTISTalias0.FAMOUS_TITLE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE VOLUMEalias0.WEEKS_ON_TOP > var0 INTERSECT SELECT ARTISTalias1.FAMOUS_TITLE FROM ARTIST AS ARTISTalias1 JOIN VOLUME AS VOLUMEalias1 ON VOLUMEalias1.ARTIST_ID = ARTISTalias1.ARTIST_ID WHERE VOLUMEalias1.WEEKS_ON_TOP < var1 ;
"What are the date of ceremony of music festivals with category "" var0 "" and result "" var1 "" ?",spider,"SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.CATEGORY = ""var0"" AND MUSIC_FESTIVALalias0.RESULT = ""var1"" ;"
"Return the dates of ceremony corresponding to music festivals that had the category "" var0 "" and result "" var1 "" .",spider,"SELECT MUSIC_FESTIVALalias0.DATE_OF_CEREMONY FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 WHERE MUSIC_FESTIVALalias0.CATEGORY = ""var0"" AND MUSIC_FESTIVALalias0.RESULT = ""var1"" ;"
What is the issue date of the volume with the minimum weeks on top ?,spider,SELECT VOLUMEalias0.ISSUE_DATE FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP ASC LIMIT 1 ;
Return the issue date of the volume that has spent the fewest weeks on top .,spider,SELECT VOLUMEalias0.ISSUE_DATE FROM VOLUME AS VOLUMEalias0 ORDER BY VOLUMEalias0.WEEKS_ON_TOP ASC LIMIT 1 ;
"Please show the results of music festivals and the number of music festivals that have had each , ordered by this count .",spider,"SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC ;"
"How many music festivals have had each kind of result , ordered descending by count ?",spider,"SELECT COUNT( MUSIC_FESTIVALalias0.* ) , MUSIC_FESTIVALalias0.RESULT FROM MUSIC_FESTIVAL AS MUSIC_FESTIVALalias0 GROUP BY RESULT ORDER BY COUNT( MUSIC_FESTIVALalias0.* ) DESC ;"
What are the issue dates of volumes associated with the artist aged var0 or younger ?,spider,SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
Return the issue dates of volumes by artists who are at most var0 years old ?,spider,SELECT VOLUMEalias0.ISSUE_DATE FROM ARTIST AS ARTISTalias0 JOIN VOLUME AS VOLUMEalias0 ON VOLUMEalias0.ARTIST_ID = ARTISTalias0.ARTIST_ID WHERE ARTISTalias0.AGE <= var0 ;
How many roller coasters are there ?,spider,SELECT COUNT( * ) FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ;
List the names of roller coasters by ascending order of length .,spider,SELECT ROLLER_COASTERalias0.NAME FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.LENGTH ASC ;
What are the lengths and heights of roller coasters ?,spider,"SELECT ROLLER_COASTERalias0.HEIGHT , ROLLER_COASTERalias0.LENGTH FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ;"
"List the names of countries whose language is not "" var0 "" .",spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.LANGUAGES != ""var0"" ;"
Show the statuses of roller coasters longer than var0 or higher than var1 .,spider,SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.HEIGHT > var1 OR ROLLER_COASTERalias0.LENGTH > var0 ;
What are the speeds of the longest roller coaster ?,spider,SELECT ROLLER_COASTERalias0.SPEED FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.LENGTH DESC LIMIT 1 ;
What is the average speed of roller coasters ?,spider,SELECT AVG( ROLLER_COASTERalias0.SPEED ) FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ;
Show the different statuses and the numbers of roller coasters for each status .,spider,"SELECT COUNT( * ) , ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY ROLLER_COASTERalias0.STATUS ;"
Please show the most common status of roller coasters .,spider,SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY STATUS ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the status shared by more than two roller coaster .,spider,SELECT ROLLER_COASTERalias0.STATUS FROM ROLLER_COASTER AS ROLLER_COASTERalias0 GROUP BY ROLLER_COASTERalias0.STATUS HAVING COUNT( * ) > var0 ;
Show the park of the roller coaster with the highest speed .,spider,SELECT ROLLER_COASTERalias0.PARK FROM ROLLER_COASTER AS ROLLER_COASTERalias0 ORDER BY ROLLER_COASTERalias0.SPEED DESC LIMIT 1 ;
Show the names of roller coasters and names of country they are in .,spider,"SELECT COUNTRYalias0.NAME , ROLLER_COASTERalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID ;"
Show the names of countries that have more than one roller coaster .,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.NAME HAVING COUNT( COUNTRYalias0.* ) > var0 ;
Show the name and population of the country that has the highest roller coaster .,spider,"SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID ORDER BY ROLLER_COASTERalias0.HEIGHT DESC LIMIT 1 ;"
Show the names of countries and the average speed of roller coasters from each country .,spider,"SELECT AVG( ROLLER_COASTERalias0.SPEED ) , COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID GROUP BY COUNTRYalias0.NAME ;"
How many countries do not have an roller coaster longer than var0 ?,spider,SELECT COUNT( COUNTRYalias0.* ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.COUNTRY_ID NOT IN ( SELECT ROLLER_COASTERalias0.COUNTRY_ID FROM ROLLER_COASTER AS ROLLER_COASTERalias0 WHERE ROLLER_COASTERalias0.LENGTH > var0 ) ;
"What are the country names , area and population which has both roller coasters with speed higher",spider,"SELECT COUNTRYalias0.AREA , COUNTRYalias0.NAME , COUNTRYalias0.POPULATION FROM COUNTRY AS COUNTRYalias0 JOIN ROLLER_COASTER AS ROLLER_COASTERalias0 ON ROLLER_COASTERalias0.COUNTRY_ID = COUNTRYalias0.COUNTRY_ID WHERE ROLLER_COASTERalias0.SPEED > var0 INTERSECT SELECT COUNTRYalias1.AREA , COUNTRYalias1.NAME , COUNTRYalias1.POPULATION FROM COUNTRY AS COUNTRYalias1 JOIN ROLLER_COASTER AS ROLLER_COASTERalias1 ON ROLLER_COASTERalias1.COUNTRY_ID = COUNTRYalias1.COUNTRY_ID WHERE ROLLER_COASTERalias1.SPEED < var1 ;"
How many different captain ranks are there ?,spider,SELECT COUNT( DISTINCT CAPTAINalias0.RANK ) FROM CAPTAIN AS CAPTAINalias0 ;
Count the number of different ranks of captain .,spider,SELECT COUNT( DISTINCT CAPTAINalias0.RANK ) FROM CAPTAIN AS CAPTAINalias0 ;
How many captains are in each rank ?,spider,"SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.RANK ;"
Count the number of captains that have each rank .,spider,"SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.RANK ;"
How many captains with younger than var0 are in each rank ?,spider,"SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 WHERE AGE < var0 GROUP BY CAPTAINalias0.RANK ;"
Count the number of captains younger than var0 of each rank .,spider,"SELECT CAPTAINalias0.RANK , COUNT( * ) FROM CAPTAIN AS CAPTAINalias0 WHERE AGE < var0 GROUP BY CAPTAINalias0.RANK ;"
Sort all captain names by their ages from old to young .,spider,SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 ORDER BY CAPTAINalias0.AGE DESC ;
"What are the names of captains , sorted by age descending ?",spider,SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 ORDER BY CAPTAINalias0.AGE DESC ;
"Find the name , class and rank of all captains .",spider,"SELECT CAPTAINalias0.CLASS , CAPTAINalias0.NAME , CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 ;"
"What are the names , classes , and ranks of all captains ?",spider,"SELECT CAPTAINalias0.CLASS , CAPTAINalias0.NAME , CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 ;"
Which rank is the most common among captains ?,spider,SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 GROUP BY RANK ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the rank for which there are the fewest captains .,spider,SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 GROUP BY RANK ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which classes have more than two captains ?,spider,SELECT CAPTAINalias0.CLASS FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.CLASS HAVING COUNT( * ) > var0 ;
Give the classes that have more than two captains .,spider,SELECT CAPTAINalias0.CLASS FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.CLASS HAVING COUNT( * ) > var0 ;
Find the name of captains whose rank are either var0 or var1 .,spider,"SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = ""var0"" OR CAPTAINalias0.RANK = ""var1"" ;"
What are the names of captains that have either the rank var0 or var1 ?,spider,"SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = ""var0"" OR CAPTAINalias0.RANK = ""var1"" ;"
What are the average and minimum age of captains in different class ?,spider,"SELECT AVG( CAPTAINalias0.AGE ) , CAPTAINalias0.CLASS , MIN( CAPTAINalias0.AGE ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.CLASS ;"
Return the average and minimum age of captains in each class .,spider,"SELECT AVG( CAPTAINalias0.AGE ) , CAPTAINalias0.CLASS , MIN( CAPTAINalias0.AGE ) FROM CAPTAIN AS CAPTAINalias0 GROUP BY CAPTAINalias0.CLASS ;"
Find the captain rank that has some captains in both var0 and var1 classes .,spider,"SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.CLASS = ""var0"" INTERSECT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = ""var1"" ;"
What are the ranks of captains that are both in the var0 and var1 classes ?,spider,"SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.CLASS = ""var0"" INTERSECT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = ""var1"" ;"
Find the captain rank that has no captain in var0 class .,spider,"SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 EXCEPT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = ""var0"" ;"
What are the ranks of captains that have no captain that are in the var0 class ?,spider,"SELECT CAPTAINalias0.RANK FROM CAPTAIN AS CAPTAINalias0 EXCEPT SELECT CAPTAINalias1.RANK FROM CAPTAIN AS CAPTAINalias1 WHERE CAPTAINalias1.CLASS = ""var0"" ;"
What is the name of the youngest captain ?,spider,SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
Return the name of the youngest captain .,spider,SELECT CAPTAINalias0.NAME FROM CAPTAIN AS CAPTAINalias0 ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
"Find the name , type , and flag of the ship that is built in the most recent year .",spider,"SELECT SHIPalias0.FLAG , SHIPalias0.NAME , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR DESC LIMIT 1 ;"
"What is the name , type , and flag of the ship that was built in the most recent year ?",spider,"SELECT SHIPalias0.FLAG , SHIPalias0.NAME , SHIPalias0.TYPE FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR DESC LIMIT 1 ;"
"Group by ships by flag , and return number of ships that have each flag .",spider,"SELECT COUNT( SHIPalias0.* ) , SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.FLAG ;"
"What are the different ship flags , and how many ships have each ?",spider,"SELECT COUNT( SHIPalias0.* ) , SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY SHIPalias0.FLAG ;"
Which flag is most widely used among all ships ?,spider,SELECT SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY FLAG ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
Return the flag that is most common among all ships .,spider,SELECT SHIPalias0.FLAG FROM SHIP AS SHIPalias0 GROUP BY FLAG ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
List all ship names in the order of built year and class .,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR , SHIPalias0.CLASS ;"
"What are the names of ships , ordered by year they were built and their class ?",spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.BUILT_YEAR , SHIPalias0.CLASS ;"
Find the ship type that are used by both ships with var0 and var1 flags .,spider,"SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.FLAG = ""var0"" INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.FLAG = ""var1"" ;"
What types of ships have both ships that have var0 Flags and var1 flags ?,spider,"SELECT SHIPalias0.TYPE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.FLAG = ""var0"" INTERSECT SELECT SHIPalias1.TYPE FROM SHIP AS SHIPalias1 WHERE SHIPalias1.FLAG = ""var1"" ;"
In which year were most of ships built ?,spider,SELECT SHIPalias0.BUILT_YEAR FROM SHIP AS SHIPalias0 GROUP BY BUILT_YEAR ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
What is the year in which most ships were built ?,spider,SELECT SHIPalias0.BUILT_YEAR FROM SHIP AS SHIPalias0 GROUP BY BUILT_YEAR ORDER BY COUNT( SHIPalias0.* ) DESC LIMIT 1 ;
Find the name of the ships that have more than one captain .,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID GROUP BY CAPTAINalias0.SHIP_ID HAVING COUNT( SHIPalias0.* ) > var0 ;
What are the names of ships that have more than one captain ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID GROUP BY CAPTAINalias0.SHIP_ID HAVING COUNT( SHIPalias0.* ) > var0 ;
what are the names and classes of the ships that do not have any captain yet ?,spider,"SELECT SHIPalias0.CLASS , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 ) ;"
Return the names and classes of ships that do not have a captain ?,spider,"SELECT SHIPalias0.CLASS , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 ) ;"
Find the name of the ship that is steered by the youngest captain .,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
What is the name of the ship that is commanded by the youngest captain ?,spider,SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID ORDER BY CAPTAINalias0.AGE LIMIT 1 ;
Find the name and flag of ships that are not steered by any captain with var0 rank .,spider,"SELECT SHIPalias0.FLAG , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = ""var0"" ) ;"
What are the names and flags of ships that do not have a captain with the rank of var0 ?,spider,"SELECT SHIPalias0.FLAG , SHIPalias0.NAME FROM SHIP AS SHIPalias0 WHERE SHIPalias0.SHIP_ID NOT IN ( SELECT CAPTAINalias0.SHIP_ID FROM CAPTAIN AS CAPTAINalias0 WHERE CAPTAINalias0.RANK = ""var0"" ) ;"
Find the name of the ships that are steered by both a captain with var0 rank and a captain with var1 rank .,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID WHERE CAPTAINalias0.RANK = ""var0"" INTERSECT SELECT SHIPalias1.NAME FROM SHIP AS SHIPalias1 JOIN CAPTAIN AS CAPTAINalias1 ON SHIPalias1.SHIP_ID = CAPTAINalias1.SHIP_ID WHERE CAPTAINalias1.RANK = ""var1"" ;"
What are the names of ships that are commanded by both captains with the rank of var0 and captains with the rank of var1 ?,spider,"SELECT SHIPalias0.NAME FROM SHIP AS SHIPalias0 JOIN CAPTAIN AS CAPTAINalias0 ON SHIPalias0.SHIP_ID = CAPTAINalias0.SHIP_ID WHERE CAPTAINalias0.RANK = ""var0"" INTERSECT SELECT SHIPalias1.NAME FROM SHIP AS SHIPalias1 JOIN CAPTAIN AS CAPTAINalias1 ON SHIPalias1.SHIP_ID = CAPTAINalias1.SHIP_ID WHERE CAPTAINalias1.RANK = ""var1"" ;"
What is id of the city that hosted events in the most recent year ?,spider,SELECT HOSTING_CITYalias0.HOST_CITY FROM HOSTING_CITY AS HOSTING_CITYalias0 ORDER BY HOSTING_CITYalias0.YEAR DESC LIMIT 1 ;
Find the city that hosted some events in the most recent year . What is the id of this city ?,spider,SELECT HOSTING_CITYalias0.HOST_CITY FROM HOSTING_CITY AS HOSTING_CITYalias0 ORDER BY HOSTING_CITYalias0.YEAR DESC LIMIT 1 ;
"Find the match ids of the cities that hosted competition "" var0 "" ?",spider,"SELECT MATCHalias0.MATCH_ID FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COMPETITION = ""var0"" ;"
"What is the match id of the competition called "" var0 "" ?",spider,"SELECT MATCHalias0.MATCH_ID FROM MATCH AS MATCHalias0 WHERE MATCHalias0.COMPETITION = ""var0"" ;"
Find the cities which were once a host city after var0 ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID WHERE HOSTING_CITYalias0.YEAR > var0 ;
Which cities served as a host city after var0 ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID WHERE HOSTING_CITYalias0.YEAR > var0 ;
Which city has hosted the most events ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY ORDER BY COUNT( HOSTING_CITYalias0.* ) DESC LIMIT 1 ;
Find the city that hosted the most events .,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY ORDER BY COUNT( HOSTING_CITYalias0.* ) DESC LIMIT 1 ;
"What is the venue of the competition "" var1 "" hosted by "" var0 "" ?",spider,"SELECT MATCHalias0.VENUE FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID JOIN MATCH AS MATCHalias0 ON MATCHalias0.MATCH_ID = HOSTING_CITYalias0.MATCH_ID WHERE CITYalias0.CITY = ""var0"" AND MATCHalias0.COMPETITION = ""var1"" ;"
"Find the venue of the competition "" var1 "" which was hosted by "" var0 "" .",spider,"SELECT MATCHalias0.VENUE FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID JOIN MATCH AS MATCHalias0 ON MATCHalias0.MATCH_ID = HOSTING_CITYalias0.MATCH_ID WHERE CITYalias0.CITY = ""var0"" AND MATCHalias0.COMPETITION = ""var1"" ;"
Give me the temperature of var0 in January .,spider,"SELECT TEMPERATUREalias0.JAN FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.CITY = ""var0"" ;"
"What is the temperature of "" var0 "" city in January ?",spider,"SELECT TEMPERATUREalias0.JAN FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE CITYalias0.CITY = ""var0"" ;"
"What is the host year of city "" var0 "" ?",spider,"SELECT HOSTING_CITYalias0.YEAR FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID WHERE CITYalias0.CITY = ""var0"" ;"
"IN which year did city "" var0 "" serve as a host city ?",spider,"SELECT HOSTING_CITYalias0.YEAR FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID WHERE CITYalias0.CITY = ""var0"" ;"
Which three cities have the largest regional population ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT var0 ;
What are the three largest cities in terms of regional population ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT var0 ;
Which city has the lowest GDP ? Please list the city name and its GDP .,spider,"SELECT CITYalias0.CITY , CITYalias0.GDP FROM CITY AS CITYalias0 ORDER BY CITYalias0.GDP LIMIT 1 ;"
What is the city with the smallest GDP ? Return the city and its GDP .,spider,"SELECT CITYalias0.CITY , CITYalias0.GDP FROM CITY AS CITYalias0 ORDER BY CITYalias0.GDP LIMIT 1 ;"
Which city has the highest temperature in February ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID ORDER BY TEMPERATUREalias0.FEB DESC LIMIT 1 ;
"In February , which city marks the highest temperature ?",spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID ORDER BY TEMPERATUREalias0.FEB DESC LIMIT 1 ;
Give me a list of cities whose temperature in March is lower than that in July or higher than that in Oct ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL OR TEMPERATUREalias0.MAR > TEMPERATUREalias0.OCT ;
Which cities ' temperature in March is lower than that in July or higher than that in Oct ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL OR TEMPERATUREalias0.MAR > TEMPERATUREalias0.OCT ;
Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL INTERSECT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Which cities have lower temperature in March than in July and have been once host cities ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.JUL INTERSECT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Give me a list of cities whose temperature in Mar is lower than that in Dec and which have never been host cities .,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.DEC EXCEPT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Which cities have lower temperature in March than in Dec and have never served as host cities ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.MAR < TEMPERATUREalias0.DEC EXCEPT SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Give me a list of cities whose temperature in Feb is higher than that in Jun or cities that were once host cities ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.FEB > TEMPERATUREalias0.JUN UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Which cities have higher temperature in Feb than in Jun or have once served as host cities ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 JOIN TEMPERATURE AS TEMPERATUREalias0 ON TEMPERATUREalias0.CITY_ID = CITYalias0.CITY_ID WHERE TEMPERATUREalias0.FEB > TEMPERATUREalias0.JUN UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias1.CITY_ID ;
Please give me a list of cities whose regional population is over var0 .,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 ;
Which cities have regional population above var0 ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 ;
Please give me a list of cities whose regional population is over 8000000 or under var1 .,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 WHERE CITYalias1.REGIONAL_POPULATION < var1 ;
Which cities have regional population above 8000000 or below var1 ?,spider,SELECT CITYalias0.CITY FROM CITY AS CITYalias0 WHERE CITYalias0.REGIONAL_POPULATION > var0 UNION SELECT CITYalias1.CITY FROM CITY AS CITYalias1 WHERE CITYalias1.REGIONAL_POPULATION < var1 ;
Find the number of matches in different competitions .,spider,"SELECT COUNT( * ) , MATCHalias0.COMPETITION FROM MATCH AS MATCHalias0 GROUP BY MATCHalias0.COMPETITION ;"
"For each competition , count the number of matches .",spider,"SELECT COUNT( * ) , MATCHalias0.COMPETITION FROM MATCH AS MATCHalias0 GROUP BY MATCHalias0.COMPETITION ;"
List venues of all matches in the order of their dates starting from the most recent one .,spider,SELECT MATCHalias0.VENUE FROM MATCH AS MATCHalias0 ORDER BY MATCHalias0.DATE DESC ;
What are the venues of all the matches ? Sort them in the descending order of match date .,spider,SELECT MATCHalias0.VENUE FROM MATCH AS MATCHalias0 ORDER BY MATCHalias0.DATE DESC ;
what is the GDP of the city with the largest population .,spider,SELECT CITYalias0.GDP FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT 1 ;
Find the GDP of the city with the largest regional population .,spider,SELECT CITYalias0.GDP FROM CITY AS CITYalias0 ORDER BY CITYalias0.REGIONAL_POPULATION DESC LIMIT 1 ;
What are the GDP and population of the city that already served as a host more than once ?,spider,"SELECT CITYalias0.GDP , CITYalias0.REGIONAL_POPULATION FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY HAVING COUNT( HOSTING_CITYalias0.* ) > var0 ;"
Which cities have served as host cities more than once ? Return me their GDP and population .,spider,"SELECT CITYalias0.GDP , CITYalias0.REGIONAL_POPULATION FROM CITY AS CITYalias0 JOIN HOSTING_CITY AS HOSTING_CITYalias0 ON HOSTING_CITYalias0.HOST_CITY = CITYalias0.CITY_ID GROUP BY HOSTING_CITYalias0.HOST_CITY HAVING COUNT( HOSTING_CITYalias0.* ) > var0 ;"
"List every individual's first name , middle name and last name in alphabetical order by last name .",spider,"SELECT INDIVIDUALSalias0.INDIVIDUAL_FIRST_NAME , INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME , INDIVIDUALSalias0.INDIVIDUAL_MIDDLE_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 ORDER BY INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME ;"
"What are the first , middle , and last names of all individuals , ordered by last name ?",spider,"SELECT INDIVIDUALSalias0.INDIVIDUAL_FIRST_NAME , INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME , INDIVIDUALSalias0.INDIVIDUAL_MIDDLE_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 ORDER BY INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME ;"
List all the types of forms .,spider,SELECT DISTINCT FORMSalias0.FORM_TYPE_CODE FROM FORMS AS FORMSalias0 ;
What are the different types of forms ?,spider,SELECT DISTINCT FORMSalias0.FORM_TYPE_CODE FROM FORMS AS FORMSalias0 ;
Find the name of the most popular party form .,spider,SELECT FORMSalias0.FORM_NAME FROM FORMS AS FORMSalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.FORM_ID = FORMSalias0.FORM_ID GROUP BY PARTY_FORMSalias0.FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the party form that is most common ?,spider,SELECT FORMSalias0.FORM_NAME FROM FORMS AS FORMSalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.FORM_ID = FORMSalias0.FORM_ID GROUP BY PARTY_FORMSalias0.FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Find the payment method and phone of the party with email "" var0 "" .",spider,"SELECT PARTIESalias0.PARTY_PHONE , PARTIESalias0.PAYMENT_METHOD_CODE FROM PARTIES AS PARTIESalias0 WHERE PARTIESalias0.PARTY_EMAIL = ""var0"" ;"
What is the payment method code and party phone of the party with the email ' var0 ' ?,spider,"SELECT PARTIESalias0.PARTY_PHONE , PARTIESalias0.PAYMENT_METHOD_CODE FROM PARTIES AS PARTIESalias0 WHERE PARTIESalias0.PARTY_EMAIL = ""var0"" ;"
Find the emails of parties with the most popular party form .,spider,SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.PARTY_ID = PARTIESalias0.PARTY_ID WHERE PARTY_FORMSalias0.FORM_ID = ( SELECT PARTY_FORMSalias1.FORM_ID FROM PARTY_FORMS AS PARTY_FORMSalias1 GROUP BY FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
What are the party emails associated with parties that used the party form that is the most common ?,spider,SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_FORMS AS PARTY_FORMSalias0 ON PARTY_FORMSalias0.PARTY_ID = PARTIESalias0.PARTY_ID WHERE PARTY_FORMSalias0.FORM_ID = ( SELECT PARTY_FORMSalias1.FORM_ID FROM PARTY_FORMS AS PARTY_FORMSalias1 GROUP BY FORM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ) ;
List all the name of organizations in order of the date formed .,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 ORDER BY ORGANIZATIONSalias0.DATE_FORMED ASC ;
"What are the names of organizations , ordered by the date they were formed , ascending ?",spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 ORDER BY ORGANIZATIONSalias0.DATE_FORMED ASC ;
Find the name of the youngest organization .,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 ORDER BY ORGANIZATIONSalias0.DATE_FORMED DESC LIMIT 1 ;
What is the name of the organization that was formed most recently ?,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 ORDER BY ORGANIZATIONSalias0.DATE_FORMED DESC LIMIT 1 ;
"Find the last name of the latest contact individual of the organization "" var0 "" .",spider,"SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME = ""var0"" ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO DESC LIMIT 1 ;"
What is the last name of the contact individual from the Labour party organization who was contacted most recently ?,spider,"SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME = ""var0"" ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO DESC LIMIT 1 ;"
Find the last name of the first ever contact person of the organization with the highest UK Vat number .,spider,SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.UK_VAT_NUMBER = ( SELECT MAX( ORGANIZATIONSalias1.UK_VAT_NUMBER ) FROM ORGANIZATIONS AS ORGANIZATIONSalias1 ) ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO ASC LIMIT 1 ;
What is the last name of the first individual contacted from the organization with the maximum UK Vat number across all organizations ?,spider,SELECT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID JOIN INDIVIDUALS AS INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID WHERE ORGANIZATIONSalias0.UK_VAT_NUMBER = ( SELECT MAX( ORGANIZATIONSalias1.UK_VAT_NUMBER ) FROM ORGANIZATIONS AS ORGANIZATIONSalias1 ) ORDER BY ORGANIZATION_CONTACT_INDIVIDUALSalias0.DATE_CONTACT_TO ASC LIMIT 1 ;
Find name of the services that has never been used .,spider,SELECT SERVICESalias0.SERVICE_NAME FROM SERVICES AS SERVICESalias0 EXCEPT SELECT SERVICESalias1.SERVICE_NAME FROM SERVICES AS SERVICESalias1 JOIN PARTY_SERVICES AS PARTY_SERVICESalias0 ON SERVICESalias1.SERVICE_ID = PARTY_SERVICESalias0.SERVICE_ID ;
What are the names of the services that have never been used ?,spider,SELECT SERVICESalias0.SERVICE_NAME FROM SERVICES AS SERVICESalias0 EXCEPT SELECT SERVICESalias1.SERVICE_NAME FROM SERVICES AS SERVICESalias1 JOIN PARTY_SERVICES AS PARTY_SERVICESalias0 ON SERVICESalias1.SERVICE_ID = PARTY_SERVICESalias0.SERVICE_ID ;
Find the name of all the cities and states .,spider,SELECT ADDRESSESalias0.TOWN_CITY FROM ADDRESSES AS ADDRESSESalias0 UNION SELECT ADDRESSESalias1.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias1 ;
What are the names of all cities and states ?,spider,SELECT ADDRESSESalias0.TOWN_CITY FROM ADDRESSES AS ADDRESSESalias0 UNION SELECT ADDRESSESalias1.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias1 ;
"How many cities are there in state "" var0 "" ?",spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
Count the number of cities in the state of var0 .,spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
How many staff live in state var0 ?,spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
How many employees live in var0 ?,spider,"SELECT COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" ;"
Find the payment method code used by more than var0 parties .,spider,SELECT PARTIESalias0.PAYMENT_METHOD_CODE FROM PARTIES AS PARTIESalias0 GROUP BY PARTIESalias0.PAYMENT_METHOD_CODE HAVING COUNT( * ) > var0 ;
What are the payment method codes that have been used by more than var0 parties ?,spider,SELECT PARTIESalias0.PAYMENT_METHOD_CODE FROM PARTIES AS PARTIESalias0 GROUP BY PARTIESalias0.PAYMENT_METHOD_CODE HAVING COUNT( * ) > var0 ;
"Find the name of organizations whose names contain "" var0 "" .",spider,"SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME LIKE ""var0"" ;"
"What are the names of organizations that contain the word "" var0 "" ?",spider,"SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 WHERE ORGANIZATIONSalias0.ORGANIZATION_NAME LIKE ""var0"" ;"
How many distinct payment methods are used by parties ?,spider,SELECT COUNT( DISTINCT PARTIESalias0.PAYMENT_METHOD_CODE ) FROM PARTIES AS PARTIESalias0 ;
Count the number of different payment method codes used by parties .,spider,SELECT COUNT( DISTINCT PARTIESalias0.PAYMENT_METHOD_CODE ) FROM PARTIES AS PARTIESalias0 ;
Which is the email of the party that has used the services the most number of times ?,spider,SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_SERVICES AS PARTY_SERVICESalias0 ON PARTY_SERVICESalias0.CUSTOMER_ID = PARTIESalias0.PARTY_ID GROUP BY PARTIESalias0.PARTY_EMAIL ORDER BY COUNT( PARTY_SERVICESalias0.* ) DESC LIMIT 1 ;
Return the party email that has used party services the greatest number of times .,spider,SELECT PARTIESalias0.PARTY_EMAIL FROM PARTIES AS PARTIESalias0 JOIN PARTY_SERVICES AS PARTY_SERVICESalias0 ON PARTY_SERVICESalias0.CUSTOMER_ID = PARTIESalias0.PARTY_ID GROUP BY PARTIESalias0.PARTY_EMAIL ORDER BY COUNT( PARTY_SERVICESalias0.* ) DESC LIMIT 1 ;
"Which state can address "" var0 "" possibly be in ?",spider,"SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.LINE_1_NUMBER_BUILDING LIKE ""var0"" ;"
"Give the state corresponding to the line number building "" var0 "" .",spider,"SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.LINE_1_NUMBER_BUILDING LIKE ""var0"" ;"
What is the name of organization that has the greatest number of contact individuals ?,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID GROUP BY ORGANIZATIONSalias0.ORGANIZATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the name of the organization which has the most contact individuals .,spider,SELECT ORGANIZATIONSalias0.ORGANIZATION_NAME FROM ORGANIZATIONS AS ORGANIZATIONSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.ORGANIZATION_ID = ORGANIZATIONSalias0.ORGANIZATION_ID GROUP BY ORGANIZATIONSalias0.ORGANIZATION_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the last name of the individuals that have been contact individuals of an organization .,spider,SELECT DISTINCT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID ;
What are the last names of individuals who have been contact individuals for an organization ?,spider,SELECT DISTINCT INDIVIDUALSalias0.INDIVIDUAL_LAST_NAME FROM INDIVIDUALS AS INDIVIDUALSalias0 JOIN ORGANIZATION_CONTACT_INDIVIDUALS AS ORGANIZATION_CONTACT_INDIVIDUALSalias0 ON ORGANIZATION_CONTACT_INDIVIDUALSalias0.INDIVIDUAL_ID = INDIVIDUALSalias0.INDIVIDUAL_ID ;
How many drivers are there ?,spider,SELECT COUNT( * ) FROM DRIVER AS DRIVERalias0 ;
"Show the name , home city , and age for all drivers .",spider,"SELECT DRIVERalias0.AGE , DRIVERalias0.HOME_CITY , DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 ;"
Show the party and the number of drivers in each party .,spider,"SELECT COUNT( * ) , DRIVERalias0.PARTY FROM DRIVER AS DRIVERalias0 GROUP BY DRIVERalias0.PARTY ;"
Show the name of drivers in descending order of age .,spider,SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 ORDER BY DRIVERalias0.AGE DESC ;
Show all different home cities .,spider,SELECT DISTINCT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 ;
Show the home city with the most number of drivers .,spider,SELECT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 GROUP BY HOME_CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the party with drivers from var0 and drivers older than var1 .,spider,"SELECT DRIVERalias0.PARTY FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE > var1 AND DRIVERalias0.HOME_CITY = ""var0"" ;"
Show home city where at least two drivers older than var0 are from .,spider,SELECT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 WHERE AGE > var0 GROUP BY DRIVERalias0.HOME_CITY HAVING COUNT( * ) >= var1 ;
Show all home cities except for those having a driver older than var0 .,spider,SELECT DRIVERalias0.HOME_CITY FROM DRIVER AS DRIVERalias0 EXCEPT SELECT DRIVERalias1.HOME_CITY FROM DRIVER AS DRIVERalias1 WHERE DRIVERalias1.AGE > var0 ;
Show the names of the drivers without a school bus .,spider,SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.DRIVER_ID NOT IN ( SELECT SCHOOL_BUSalias0.DRIVER_ID FROM SCHOOL_BUS AS SCHOOL_BUSalias0 ) ;
Show the types of schools that have two schools .,spider,SELECT SCHOOLalias0.TYPE FROM SCHOOL AS SCHOOLalias0 GROUP BY SCHOOLalias0.TYPE HAVING COUNT( * ) = var0 ;
Show the school name and driver name for all school buses .,spider,"SELECT DRIVERalias0.NAME , SCHOOLalias0.SCHOOL FROM SCHOOL_BUS AS SCHOOL_BUSalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_BUSalias0.SCHOOL_ID JOIN DRIVER AS DRIVERalias0 ON SCHOOL_BUSalias0.DRIVER_ID = DRIVERalias0.DRIVER_ID ;"
"What is the maximum , minimum and average years spent working on a school bus ?",spider,"SELECT AVG( SCHOOL_BUSalias0.YEARS_WORKING ) , MAX( SCHOOL_BUSalias0.YEARS_WORKING ) , MIN( SCHOOL_BUSalias0.YEARS_WORKING ) FROM SCHOOL_BUS AS SCHOOL_BUSalias0 ;"
Show the school name and type for schools without a school bus .,spider,"SELECT SCHOOLalias0.SCHOOL , SCHOOLalias0.TYPE FROM SCHOOL AS SCHOOLalias0 WHERE SCHOOLalias0.SCHOOL_ID NOT IN ( SELECT SCHOOL_BUSalias0.SCHOOL_ID FROM SCHOOL_BUS AS SCHOOL_BUSalias0 ) ;"
Show the type of school and the number of buses for each type .,spider,"SELECT COUNT( SCHOOL_BUSalias0.* ) , SCHOOLalias0.TYPE FROM SCHOOL_BUS AS SCHOOL_BUSalias0 JOIN SCHOOL AS SCHOOLalias0 ON SCHOOLalias0.SCHOOL_ID = SCHOOL_BUSalias0.SCHOOL_ID GROUP BY SCHOOLalias0.TYPE ;"
How many drivers are from var0 city or younger than var1 ?,spider,"SELECT COUNT( * ) FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE < var1 OR DRIVERalias0.HOME_CITY = ""var0"" ;"
List names for drivers from var0 city and younger than var1 .,spider,"SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 WHERE DRIVERalias0.AGE < var1 AND DRIVERalias0.HOME_CITY = ""var0"" ;"
find the name of driver who is driving the school bus with the longest working history .,spider,SELECT DRIVERalias0.NAME FROM DRIVER AS DRIVERalias0 JOIN SCHOOL_BUS AS SCHOOL_BUSalias0 ON SCHOOL_BUSalias0.DRIVER_ID = DRIVERalias0.DRIVER_ID ORDER BY SCHOOL_BUSalias0.YEARS_WORKING DESC LIMIT 1 ;
How many flights have a velocity larger than var0 ?,spider,SELECT COUNT( FLIGHTalias0.* ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.VELOCITY > var0 ;
"List the vehicle flight number , date and pilot of all the flights , ordered by altitude .",spider,"SELECT FLIGHTalias0.DATE , FLIGHTalias0.PILOT , FLIGHTalias0.VEHICLE_FLIGHT_NUMBER FROM FLIGHT AS FLIGHTalias0 ORDER BY FLIGHTalias0.ALTITUDE ASC ;"
"List the id , country , city and name of the airports ordered alphabetically by the name .",spider,"SELECT AIRPORTalias0.CITY , AIRPORTalias0.COUNTRY , AIRPORTalias0.ID , AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 ORDER BY AIRPORTalias0.NAME ;"
What is maximum group equity shareholding of the companies ?,spider,SELECT MAX( OPERATE_COMPANYalias0.GROUP_EQUITY_SHAREHOLDING ) FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 ;
What is the velocity of the pilot named ' var0 ' ?,spider,"SELECT AVG( FLIGHTalias0.VELOCITY ) FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PILOT = ""var0"" ;"
What are the names and types of the companies that have ever operated a flight ?,spider,"SELECT OPERATE_COMPANYalias0.NAME , OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID ;"
What are the names of the airports which are not in the country ' var0 ' ?,spider,"SELECT AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.COUNTRY != ""var0"" ;"
What are the distinct types of the companies that have operated any flights with velocity less than var0 ?,spider,SELECT DISTINCT OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID WHERE FLIGHTalias0.VELOCITY < var0 ;
What are the ids and names of the companies that operated more than one flight ?,spider,"SELECT OPERATE_COMPANYalias0.ID , OPERATE_COMPANYalias0.NAME FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID GROUP BY OPERATE_COMPANYalias0.ID HAVING COUNT( FLIGHTalias0.* ) > var0 ;"
"What is the id , name and IATA code of the airport that had most number of flights ?",spider,"SELECT AIRPORTalias0.IATA , AIRPORTalias0.ID , AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 JOIN FLIGHT AS FLIGHTalias0 ON FLIGHTalias0.AIRPORT_ID = AIRPORTalias0.ID GROUP BY FLIGHTalias0.ID ORDER BY COUNT( FLIGHTalias0.* ) DESC LIMIT 1 ;"
What are the different pilot names who had piloted a flight in the country ' var0 ' or in the airport named ' var1 ' ?,spider,"SELECT DISTINCT FLIGHTalias0.PILOT FROM AIRPORT AS AIRPORTalias0 JOIN FLIGHT AS FLIGHTalias0 ON FLIGHTalias0.AIRPORT_ID = AIRPORTalias0.ID WHERE AIRPORTalias0.COUNTRY = ""var0"" OR AIRPORTalias0.NAME = ""var1"" ;"
"What is the most common company type , and how many are there ?",spider,"SELECT COUNT( * ) , OPERATE_COMPANYalias0.TYPE FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 GROUP BY TYPE ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many airports haven't the pilot ' var0 ' driven an aircraft ?,spider,"SELECT COUNT( * ) FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.ID NOT IN ( SELECT FLIGHTalias0.AIRPORT_ID FROM FLIGHT AS FLIGHTalias0 WHERE FLIGHTalias0.PILOT = ""var0"" ) ;"
List the name of the pilots who have flied for both a company that mainly provide ' var0 ' services and a company that runs ' var1 ' activities .,spider,"SELECT FLIGHTalias0.PILOT FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID WHERE OPERATE_COMPANYalias0.PRINCIPAL_ACTIVITIES = ""var0"" INTERSECT SELECT FLIGHTalias1.PILOT FROM OPERATE_COMPANY AS OPERATE_COMPANYalias1 JOIN FLIGHT AS FLIGHTalias1 ON OPERATE_COMPANYalias1.ID = FLIGHTalias1.COMPANY_ID WHERE OPERATE_COMPANYalias1.PRINCIPAL_ACTIVITIES = ""var1"" ;"
Which of the airport names contains the word ' var0 ' ?,spider,"SELECT AIRPORTalias0.NAME FROM AIRPORT AS AIRPORTalias0 WHERE AIRPORTalias0.NAME LIKE ""var0"" ;"
How many companies operates airlines in each airport ?,spider,"SELECT AIRPORTalias0.ID , COUNT( FLIGHTalias0.* ) FROM OPERATE_COMPANY AS OPERATE_COMPANYalias0 JOIN FLIGHT AS FLIGHTalias0 ON OPERATE_COMPANYalias0.ID = FLIGHTalias0.COMPANY_ID JOIN AIRPORT AS AIRPORTalias0 ON FLIGHTalias0.AIRPORT_ID = AIRPORTalias0.ID GROUP BY AIRPORTalias0.ID ;"
how many airports are there in each country ?,spider,"SELECT AIRPORTalias0.COUNTRY , COUNT( * ) FROM AIRPORT AS AIRPORTalias0 GROUP BY AIRPORTalias0.COUNTRY ;"
which countries have more than var0 airports ?,spider,SELECT AIRPORTalias0.COUNTRY FROM AIRPORT AS AIRPORTalias0 GROUP BY AIRPORTalias0.COUNTRY HAVING COUNT( * ) > var0 ;
which pilot is in charge of the most number of flights ?,spider,SELECT FLIGHTalias0.PILOT FROM FLIGHT AS FLIGHTalias0 GROUP BY PILOT ORDER BY COUNT( FLIGHTalias0.* ) DESC LIMIT 1 ;
How many accounts do we have ?,spider,SELECT COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Count the number of accounts .,spider,SELECT COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 ;
Show all account ids and account details .,spider,"SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.ACCOUNT_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;"
What are the ids and details of all accounts ?,spider,"SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.ACCOUNT_ID FROM ACCOUNTS AS ACCOUNTSalias0 ;"
How many statements do we have ?,spider,SELECT COUNT( * ) FROM STATEMENTS AS STATEMENTSalias0 ;
Count the number of statements .,spider,SELECT COUNT( * ) FROM STATEMENTS AS STATEMENTSalias0 ;
List all statement ids and statement details .,spider,"SELECT STATEMENTSalias0.STATEMENT_DETAILS , STATEMENTSalias0.STATEMENT_ID FROM STATEMENTS AS STATEMENTSalias0 ;"
What are the ids and details of all statements ?,spider,"SELECT STATEMENTSalias0.STATEMENT_DETAILS , STATEMENTSalias0.STATEMENT_ID FROM STATEMENTS AS STATEMENTSalias0 ;"
"Show statement id , statement detail , account detail for accounts .",spider,"SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID ;"
"What are the statement ids , statement details , and account details , for all accounts ?",spider,"SELECT ACCOUNTSalias0.ACCOUNT_DETAILS , ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID ;"
Show all statement id and the number of accounts for each statement .,spider,"SELECT ACCOUNTSalias0.STATEMENT_ID , COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.STATEMENT_ID ;"
"What are the different statement ids on accounts , and the number of accounts for each ?",spider,"SELECT ACCOUNTSalias0.STATEMENT_ID , COUNT( ACCOUNTSalias0.* ) FROM ACCOUNTS AS ACCOUNTSalias0 GROUP BY ACCOUNTSalias0.STATEMENT_ID ;"
Show the statement id and the statement detail for the statement with most number of accounts .,spider,"SELECT ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID GROUP BY ACCOUNTSalias0.STATEMENT_ID ORDER BY COUNT( ACCOUNTSalias0.* ) DESC LIMIT 1 ;"
What are the statement id and statement detail for the statement that has the most corresponding accounts ?,spider,"SELECT ACCOUNTSalias0.STATEMENT_ID , STATEMENTSalias0.STATEMENT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias0 JOIN STATEMENTS AS STATEMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = ACCOUNTSalias0.STATEMENT_ID GROUP BY ACCOUNTSalias0.STATEMENT_ID ORDER BY COUNT( ACCOUNTSalias0.* ) DESC LIMIT 1 ;"
Show the number of documents .,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
Count the number of documents .,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
How many documents do we have ?,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
Count the number of documents .,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
"List the document type code , document name , and document description for the document with name ' var0 ' or name ' var1 ' .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_NAME , DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" OR DOCUMENTSalias0.DOCUMENT_NAME = ""var1"" ;"
"What are the type come , name , and description of the document that has either the name ' var0 ' or ' var1 ' ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_NAME , DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" OR DOCUMENTSalias0.DOCUMENT_NAME = ""var1"" ;"
Show the ids and names of all documents .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ;"
What are the ids and names for each of the documents ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ;"
Find names and ids of all documents with document type code var0 .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" ;"
What are the names and ids of documents that have the type code var0 ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" ;"
How many documents are with document type code var0 for each product id ?,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENT_TYPE_CODE = ""var0"" GROUP BY DOCUMENTSalias0.PROJECT_ID ;"
Count the number of documents with the type code var0 that correspond to each product id .,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENT_TYPE_CODE = ""var0"" GROUP BY DOCUMENTSalias0.PROJECT_ID ;"
Show the document name and the document date for all documents on project with details ' var0 ' .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_DATE , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" ;"
What are the names and dates for documents corresponding to project that has the details ' var0 ' ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_DATE , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE PROJECTSalias0.PROJECT_DETAILS = ""var0"" ;"
Show project ids and the number of documents in each project .,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID ;"
How many documents correspond with each project id ?,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID ;"
What is the id of the project with least number of documents ?,spider,SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY PROJECT_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
Return the id of the project that has the fewest corresponding documents .,spider,SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY PROJECT_ID ORDER BY COUNT( * ) ASC LIMIT 1 ;
Show the ids for projects with at least var0 documents .,spider,SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID HAVING COUNT( * ) >= var0 ;
What are project ids of projects that have var0 or more corresponding documents ?,spider,SELECT DOCUMENTSalias0.PROJECT_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.PROJECT_ID HAVING COUNT( * ) >= var0 ;
List document type codes and the number of documents in each code .,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE ;"
How many documents are there of each type ?,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE ;"
What is the document type code with most number of documents ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the code of the document type that is most common .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENT_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the document type code with fewer than var0 documents .,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) < var0 ;
What are the codes corresponding to document types for which there are less than var0 documents ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.DOCUMENT_TYPE_CODE HAVING COUNT( * ) < var0 ;
Show the statement detail and the corresponding document name for the statement with detail ' var0 ' .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , STATEMENTSalias0.STATEMENT_DETAILS FROM STATEMENTS AS STATEMENTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE STATEMENTSalias0.STATEMENT_DETAILS = ""var0"" ;"
"What are the details for statements with the details ' var0 ' , and what are the names of the corresponding documents ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , STATEMENTSalias0.STATEMENT_DETAILS FROM STATEMENTS AS STATEMENTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON STATEMENTSalias0.STATEMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE STATEMENTSalias0.STATEMENT_DETAILS = ""var0"" ;"
"Show all document type codes , document type names , document type descriptions .",spider,"SELECT DOCUMENT_TYPE_CODE , DOCUMENT_TYPE_DESCRIPTION , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES ;"
"What are the codes , names , and descriptions of the different document types ?",spider,"SELECT DOCUMENT_TYPE_CODE , DOCUMENT_TYPE_DESCRIPTION , DOCUMENT_TYPE_NAME FROM REF_DOCUMENT_TYPES ;"
What is the document type description for document type named var0 ?,spider,"SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = ""var0"" ;"
Return the description of the document type name ' var0 ' .,spider,"SELECT DOCUMENT_TYPE_DESCRIPTION FROM REF_DOCUMENT_TYPES WHERE DOCUMENT_TYPE_NAME = ""var0"" ;"
What is the document type name and the document type description and creation date for all the documents ?,spider,"SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_DESCRIPTION , DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME , DOCUMENTSalias0.DOCUMENT_DATE FROM REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON DOCUMENTSalias0.DOCUMENT_TYPE_CODE = DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE ;"
"Return the type name , type description , and date of creation for each document .",spider,"SELECT DERIVED_TABLEalias0.DOCUMENT_TYPE_DESCRIPTION , DERIVED_TABLEalias0.DOCUMENT_TYPE_NAME , DOCUMENTSalias0.DOCUMENT_DATE FROM REF_DOCUMENT_TYPES AS DERIVED_TABLEalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON DOCUMENTSalias0.DOCUMENT_TYPE_CODE = DERIVED_TABLEalias0.DOCUMENT_TYPE_CODE ;"
Show the number of projects .,spider,SELECT COUNT( * ) FROM PROJECTS AS PROJECTSalias0 ;
How many projects are there ?,spider,SELECT COUNT( * ) FROM PROJECTS AS PROJECTSalias0 ;
List ids and details for all projects .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 ;"
What are the ids and details for each project ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 ;"
What is the project id and detail for the project with at least two documents ?,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID HAVING COUNT( * ) > var0 ;"
Return the ids and details corresponding to projects for which there are more than two documents .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS , PROJECTSalias0.PROJECT_ID FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID GROUP BY PROJECTSalias0.PROJECT_ID HAVING COUNT( * ) > var0 ;"
"What is the project detail for the project with document "" var0 "" ?",spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Give the details of the project with the document name ' var0 ' .,spider,"SELECT PROJECTSalias0.PROJECT_DETAILS FROM PROJECTS AS PROJECTSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PROJECTSalias0.PROJECT_ID = DOCUMENTSalias0.PROJECT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
How many budget types do we have ?,spider,SELECT COUNT( * ) FROM REF_BUDGET_CODES ;
Count the number of budget codes .,spider,SELECT COUNT( * ) FROM REF_BUDGET_CODES ;
List all budget type codes and descriptions .,spider,"SELECT BUDGET_TYPE_CODE , BUDGET_TYPE_DESCRIPTION FROM REF_BUDGET_CODES ;"
What are the type codes and descriptions of each budget type ?,spider,"SELECT BUDGET_TYPE_CODE , BUDGET_TYPE_DESCRIPTION FROM REF_BUDGET_CODES ;"
What is the description for the budget type with code var0 ?,spider,"SELECT BUDGET_TYPE_DESCRIPTION FROM REF_BUDGET_CODES WHERE BUDGET_TYPE_CODE = ""var0"" ;"
Return the description of the budget type that has the code var0 .,spider,"SELECT BUDGET_TYPE_DESCRIPTION FROM REF_BUDGET_CODES WHERE BUDGET_TYPE_CODE = ""var0"" ;"
How many documents have expenses ?,spider,SELECT COUNT( * ) FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
Count the number of documents with expenses .,spider,SELECT COUNT( * ) FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
What are the document ids for the budget type code ' var0 ' ?,spider,"SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 WHERE DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = ""var0"" ;"
Give the ids of documents with expenses that have the budget code ' var0 ' .,spider,"SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 WHERE DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = ""var0"" ;"
Show the budget type code and description and the corresponding document id .,spider,"SELECT DERIVED_TABLEalias0.BUDGET_TYPE_CODE , DERIVED_TABLEalias0.BUDGET_TYPE_DESCRIPTION , DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 JOIN REF_BUDGET_CODES AS DERIVED_TABLEalias0 ON DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = DERIVED_TABLEalias0.BUDGET_TYPE_CODE ;"
"Return the budget type codes , budget type descriptions and document ids for documents with expenses .",spider,"SELECT DERIVED_TABLEalias0.BUDGET_TYPE_CODE , DERIVED_TABLEalias0.BUDGET_TYPE_DESCRIPTION , DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 JOIN REF_BUDGET_CODES AS DERIVED_TABLEalias0 ON DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = DERIVED_TABLEalias0.BUDGET_TYPE_CODE ;"
Show ids for all documents with budget types described as ' var0 ' .,spider,"SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 JOIN REF_BUDGET_CODES AS DERIVED_TABLEalias0 ON DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = DERIVED_TABLEalias0.BUDGET_TYPE_CODE WHERE DERIVED_TABLEalias0.BUDGET_TYPE_DESCRIPTION = ""var0"" ;"
Give the ids for documents that have the budget description ' var0 ' .,spider,"SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 JOIN REF_BUDGET_CODES AS DERIVED_TABLEalias0 ON DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = DERIVED_TABLEalias0.BUDGET_TYPE_CODE WHERE DERIVED_TABLEalias0.BUDGET_TYPE_DESCRIPTION = ""var0"" ;"
Show budget type codes and the number of documents in each budget type .,spider,"SELECT COUNT( * ) , DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE ;"
"What are the different budget type codes , and how many documents are there for each ?",spider,"SELECT COUNT( * ) , DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE ;"
What is the budget type code with most number of documents .,spider,SELECT DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY BUDGET_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Give the budget type code that is most common among documents with expenses .,spider,SELECT DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 GROUP BY BUDGET_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What are the ids of documents which don't have expense budgets ?,spider,SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
Return the ids of documents that do not have expenses .,spider,SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;
Show ids for all documents in type var0 without expense budgets .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;"
What are the ids of documents with the type code var0 that do not have expenses .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_TYPE_CODE = ""var0"" EXCEPT SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ;"
What are the idvar0 of documentvar0 with letter ' var0 ' in the name with any expenvar0e budgetvar0 .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE ""var0"" ;"
Give the idvar0 of documentvar0 that have expenvar0evar0 and contain the letter var0 in their namevar0 .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_ID FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME LIKE ""var0"" ;"
How many documents do not have any expense ?,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID NOT IN ( SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ) ;
Count the number of documents that do not have expenses .,spider,SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_ID NOT IN ( SELECT DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID FROM DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ) ;
What are the dates for the documents with both ' var0 ' type and ' var1 ' type expenses ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = ""var0"" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias1 ON DOCUMENTSalias1.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias1.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias1.BUDGET_TYPE_CODE = ""var1"" ;"
Give the dates of creation for documents that have both budget type codes ' var0 ' and ' var1 ' .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias0 ON DOCUMENTSalias0.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias0.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias0.BUDGET_TYPE_CODE = ""var0"" INTERSECT SELECT DOCUMENTSalias1.DOCUMENT_DATE FROM DOCUMENTS AS DOCUMENTSalias1 JOIN DOCUMENTS_WITH_EXPENSES AS DOCUMENTS_WITH_EXPENSESalias1 ON DOCUMENTSalias1.DOCUMENT_ID = DOCUMENTS_WITH_EXPENSESalias1.DOCUMENT_ID WHERE DOCUMENTS_WITH_EXPENSESalias1.BUDGET_TYPE_CODE = ""var1"" ;"
What are the account details with the largest value or with value having char ' var0 ' in it ?,spider,"SELECT MAX( ACCOUNTSalias0.ACCOUNT_DETAILS ) FROM ACCOUNTS AS ACCOUNTSalias0 UNION SELECT ACCOUNTSalias1.ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias1 WHERE ACCOUNTSalias1.ACCOUNT_DETAILS LIKE ""var0"" ;"
"Return the account details with the greatest value , as well as those that include the character var0 .",spider,"SELECT MAX( ACCOUNTSalias0.ACCOUNT_DETAILS ) FROM ACCOUNTS AS ACCOUNTSalias0 UNION SELECT ACCOUNTSalias1.ACCOUNT_DETAILS FROM ACCOUNTS AS ACCOUNTSalias1 WHERE ACCOUNTSalias1.ACCOUNT_DETAILS LIKE ""var0"" ;"
Find the total number of scientists .,spider,SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 ;
How many scientists are there ?,spider,SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 ;
Find the total hours of all projects .,spider,SELECT SUM( PROJECTSalias0.HOURS ) FROM PROJECTS AS PROJECTSalias0 ;
What is the total number of hours for all projects ?,spider,SELECT SUM( PROJECTSalias0.HOURS ) FROM PROJECTS AS PROJECTSalias0 ;
How many different scientists are assigned to any project ?,spider,SELECT COUNT( DISTINCT SCIENTIST ) FROM ASSIGNEDTO ;
Count the number of different scientists assigned to any project .,spider,SELECT COUNT( DISTINCT SCIENTIST ) FROM ASSIGNEDTO ;
Find the number of distinct projects .,spider,SELECT COUNT( DISTINCT PROJECTSalias0.NAME ) FROM PROJECTS AS PROJECTSalias0 ;
How many different projects are there ?,spider,SELECT COUNT( DISTINCT PROJECTSalias0.NAME ) FROM PROJECTS AS PROJECTSalias0 ;
Find the average hours of all projects .,spider,SELECT AVG( PROJECTSalias0.HOURS ) FROM PROJECTS AS PROJECTSalias0 ;
What is the average hours across all projects ?,spider,SELECT AVG( PROJECTSalias0.HOURS ) FROM PROJECTS AS PROJECTSalias0 ;
Find the name of project that continues for the longest time .,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 ORDER BY PROJECTSalias0.HOURS DESC LIMIT 1 ;
What is the name of the project with the most hours ?,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 ORDER BY PROJECTSalias0.HOURS DESC LIMIT 1 ;
List the name of all projects that are operated longer than the average working hours of all projects .,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS > ( SELECT AVG( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
What are the names of projects that have taken longer than the average number of hours for all projects ?,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS > ( SELECT AVG( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
Find the name and hours of project that has the most number of scientists .,spider,"SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY DERIVED_TABLEalias0.PROJECT ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and hours for the project which has the most scientists assigned to it ?,spider,"SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY DERIVED_TABLEalias0.PROJECT ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the name of the project for which a scientist whose name contains ' var0 ' is assigned to .,spider,"SELECT PROJECTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME LIKE ""var0"" ;"
What is the name of the project that has a scientist assigned to it whose name contains ' var0 ' ?,spider,"SELECT PROJECTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME LIKE ""var0"" ;"
Find the total hours of the projects that scientists named var0 or var1 are assigned to .,spider,"SELECT SUM( PROJECTSalias0.HOURS ) FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME = ""var0"" OR SCIENTISTSalias0.NAME = ""var1"" ;"
What is the sum of hours for projects that scientists with the name var0 or var1 are assigned to ?,spider,"SELECT SUM( PROJECTSalias0.HOURS ) FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE SCIENTISTSalias0.NAME = ""var0"" OR SCIENTISTSalias0.NAME = ""var1"" ;"
Find the name of projects that require between var0 and var1 hours of work .,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS BETWEEN var0 AND var1 ;
What are the names of projects that require between var0 and var1 hours ?,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.HOURS BETWEEN var0 AND var1 ;
Find the name of the scientist who worked on both a project named ' var0 ' and a project named ' var1 ' .,spider,"SELECT SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.NAME = ""var0"" INTERSECT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias1 JOIN PROJECTS AS PROJECTSalias1 ON PROJECTSalias1.CODE = DERIVED_TABLEalias1.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias1.SCIENTIST WHERE PROJECTSalias1.NAME = ""var1"" ;"
What are the names of any scientists who worked on projects named ' var0 ' and ' A Puzzling Pattern ' ?,spider,"SELECT SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.NAME = ""var0"" INTERSECT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias1 JOIN PROJECTS AS PROJECTSalias1 ON PROJECTSalias1.CODE = DERIVED_TABLEalias1.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias1.SCIENTIST WHERE PROJECTSalias1.NAME = ""var1"" ;"
List the names of all scientists sorted in alphabetical order .,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 ORDER BY SCIENTISTSalias0.NAME ;
What are the names of all the scientists in alphabetical order ?,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 ORDER BY SCIENTISTSalias0.NAME ;
Find the number of scientists involved for each project name .,spider,"SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY PROJECTSalias0.NAME ;"
"What are the naems of all the projects , and how many scientists were assigned to each of them ?",spider,"SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT GROUP BY PROJECTSalias0.NAME ;"
Find the number of scientists involved for the projects that require more than var0 hours .,spider,"SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT WHERE PROJECTSalias0.HOURS > var0 GROUP BY PROJECTSalias0.NAME ;"
"What are the names of projects that require more than var0 hours , and how many scientists are assigned to each ?",spider,"SELECT COUNT( * ) , PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT WHERE PROJECTSalias0.HOURS > var0 GROUP BY PROJECTSalias0.NAME ;"
Find the number of projects which each scientist is working on and scientist's name .,spider,"SELECT COUNT( * ) , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST GROUP BY SCIENTISTSalias0.NAME ;"
"What are the names of the scientists , and how many projects are each of them working on ?",spider,"SELECT COUNT( * ) , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST GROUP BY SCIENTISTSalias0.NAME ;"
Find the SSN and name of scientists who are assigned to the project with the longest hours .,spider,"SELECT SCIENTISTSalias0.NAME , SCIENTISTSalias0.SSN FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;"
What are the SSN and names of scientists working on the project with the most hours ?,spider,"SELECT SCIENTISTSalias0.NAME , SCIENTISTSalias0.SSN FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;"
Find the name of scientists who are assigned to some project .,spider,SELECT SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST ;
What are the names of scientists who are assigned to any project ?,spider,SELECT SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST ;
Select the project names which are not assigned yet .,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.CODE NOT IN ( SELECT PROJECT FROM ASSIGNEDTO ) ;
What are the names of projects that have not been assigned ?,spider,SELECT PROJECTSalias0.NAME FROM PROJECTS AS PROJECTSalias0 WHERE PROJECTSalias0.CODE NOT IN ( SELECT PROJECT FROM ASSIGNEDTO ) ;
Find the name of scientists who are not assigned to any project .,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
What are the names of scientists who have not been assigned a project ?,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
Find the number of scientists who are not assigned to any project .,spider,SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
How many scientists do not have any projects assigned to them ?,spider,SELECT COUNT( * ) FROM SCIENTISTS AS SCIENTISTSalias0 WHERE SCIENTISTSalias0.SSN NOT IN ( SELECT SCIENTIST FROM ASSIGNEDTO ) ;
Find the names of scientists who are not working on the project with the highest hours .,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 EXCEPT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
What are the names of scientists who are not working on the project with the most hours ?,spider,SELECT SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 EXCEPT SELECT SCIENTISTSalias1.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias1 ON SCIENTISTSalias1.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MAX( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;
"List all the scientists ' names , their projects ' names , and the hours worked by that scientist on each project , in alphabetical order of project name , and then scientist name .",spider,"SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT ORDER BY PROJECTSalias0.NAME , SCIENTISTSalias0.NAME ;"
"What are the names of each scientist , the names of the projects that they work on , and the hours for each of those projects , listed in alphabetical order by project name , then scientist name .",spider,"SELECT PROJECTSalias0.HOURS , PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM SCIENTISTS AS SCIENTISTSalias0 JOIN ASSIGNEDTO AS DERIVED_TABLEalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT ORDER BY PROJECTSalias0.NAME , SCIENTISTSalias0.NAME ;"
Find name of the project that needs the least amount of time to finish and the name of scientists who worked on it .,spider,"SELECT PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MIN( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;"
"What is the name of the project that requires the fewest number of hours , and the names of the scientists assigned to it ?",spider,"SELECT PROJECTSalias0.NAME , SCIENTISTSalias0.NAME FROM ASSIGNEDTO AS DERIVED_TABLEalias0 JOIN PROJECTS AS PROJECTSalias0 ON PROJECTSalias0.CODE = DERIVED_TABLEalias0.PROJECT JOIN SCIENTISTS AS SCIENTISTSalias0 ON SCIENTISTSalias0.SSN = DERIVED_TABLEalias0.SCIENTIST WHERE PROJECTSalias0.HOURS = ( SELECT MIN( PROJECTSalias1.HOURS ) FROM PROJECTS AS PROJECTSalias1 ) ;"
What is the name of the highest rated wine ?,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
Give the name of the wine with the highest score .,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
Which winery is the wine that has the highest score from ?,spider,SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
What is the winery at which the wine with the highest score was made ?,spider,SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 ORDER BY WINEalias0.SCORE LIMIT 1 ;
Find the names of all wines produced in var0 .,spider,"SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR = ""var0"" ;"
What are the names of all wines produced in var0 ?,spider,"SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR = ""var0"" ;"
List the grapes and appelations of all wines .,spider,"SELECT WINEalias0.APPELATION , WINEalias0.GRAPE FROM WINE AS WINEalias0 ;"
What are the grapes and appelations of each wine ?,spider,"SELECT WINEalias0.APPELATION , WINEalias0.GRAPE FROM WINE AS WINEalias0 ;"
List the names and scores of all wines .,spider,"SELECT WINEalias0.NAME , WINEalias0.SCORE FROM WINE AS WINEalias0 ;"
What are the names and scores of all wines ?,spider,"SELECT WINEalias0.NAME , WINEalias0.SCORE FROM WINE AS WINEalias0 ;"
List the area and county of all appelations .,spider,"SELECT APPELLATIONSalias0.AREA , APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 ;"
What are the areas and counties for all appelations ?,spider,"SELECT APPELLATIONSalias0.AREA , APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 ;"
What are the prices of wines produced before the year of var0 ?,spider,SELECT WINEalias0.PRICE FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 ;
Return the prices of wines produced before var0 .,spider,SELECT WINEalias0.PRICE FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 ;
List the names of all distinct wines that have scores higher than var0 .,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.SCORE > var0 ;
What are the names of wines with scores higher than var0 ?,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.SCORE > var0 ;
List the names of all distinct wines that are made of red color grape .,spider,"SELECT DISTINCT WINEalias0.NAME FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" ;"
What are the names of wines made from red grapes ?,spider,"SELECT DISTINCT WINEalias0.NAME FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" ;"
Find the names of all distinct wines that have appellations in var0 area .,spider,"SELECT DISTINCT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = ""var0"" ;"
What are the distinct names of wines that have appellations in the var0 area ?,spider,"SELECT DISTINCT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = ""var0"" ;"
How many wines are produced at var0 winery ?,spider,"SELECT COUNT( WINEalias0.* ) FROM WINE AS WINEalias0 WHERE WINEalias0.WINERY = ""var0"" ;"
Count the number of wines produced at var0 winery .,spider,"SELECT COUNT( WINEalias0.* ) FROM WINE AS WINEalias0 WHERE WINEalias0.WINERY = ""var0"" ;"
How many appelations are in var0 Country ?,spider,"SELECT COUNT( * ) FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.COUNTY = ""var0"" ;"
Count the number of appelations in var0 County .,spider,"SELECT COUNT( * ) FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.COUNTY = ""var0"" ;"
Give me the average prices of wines that are produced by appelations in var0 County .,spider,"SELECT AVG( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" ;"
What is the average price of wines produced in appelations in var0 County ?,spider,"SELECT AVG( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" ;"
What are the names and scores of wines that are made of white color grapes ?,spider,"SELECT WINEalias0.NAME , WINEalias0.SCORE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" ;"
Give the names and scores of wines made from white grapes .,spider,"SELECT WINEalias0.NAME , WINEalias0.SCORE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" ;"
Find the maximum price of wins from the appelations in var0 area and produced before the year of var1 .,spider,"SELECT MAX( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = ""var0"" AND WINEalias0.YEAR < var1 ;"
"What is the maximum price of wines from the appelation in the var0 area , which was produced before var1 ?",spider,"SELECT MAX( WINEalias0.PRICE ) FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.AREA = ""var0"" AND WINEalias0.YEAR < var1 ;"
Find the the grape whose white color grapes are used to produce wines with scores higher than var1 .,spider,"SELECT DISTINCT GRAPESalias0.GRAPE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" AND WINEalias0.SCORE > var1 ;"
Find the white grape used to produce wines with scores above var1 .,spider,"SELECT DISTINCT GRAPESalias0.GRAPE FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" AND WINEalias0.SCORE > var1 ;"
What are the wines that have prices higher than var1 and made of var0 color grapes ?,spider,"SELECT WINEalias0.NAME FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" AND WINEalias0.PRICE > var1 ;"
What are the names of wines made from red grapes and with prices above var1 ?,spider,"SELECT WINEalias0.NAME FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" AND WINEalias0.PRICE > var1 ;"
What are the wines that have prices lower than var1 and have appelations in var0 county ?,spider,"SELECT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" AND WINEalias0.PRICE < var1 ;"
Give the neames of wines with prices below var1 and with appelations in var0 county .,spider,"SELECT WINEalias0.NAME FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" AND WINEalias0.PRICE < var1 ;"
What are the numbers of wines for different grapes ?,spider,"SELECT COUNT( WINEalias0.* ) , WINEalias0.GRAPE FROM WINE AS WINEalias0 GROUP BY WINEalias0.GRAPE ;"
How many wines are there for each grape ?,spider,"SELECT COUNT( WINEalias0.* ) , WINEalias0.GRAPE FROM WINE AS WINEalias0 GROUP BY WINEalias0.GRAPE ;"
What are the average prices of wines for different years ?,spider,"SELECT AVG( WINEalias0.PRICE ) , WINEalias0.YEAR FROM WINE AS WINEalias0 GROUP BY WINEalias0.YEAR ;"
What is the average prices of wines for each each ?,spider,"SELECT AVG( WINEalias0.PRICE ) , WINEalias0.YEAR FROM WINE AS WINEalias0 GROUP BY WINEalias0.YEAR ;"
Find the distinct names of all wines that have prices higher than some wines from var0 winery .,spider,"SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MIN( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = ""var0"" ) ;"
What are the distinct names of wines with prices higher than any wine from var0 winery .,spider,"SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MIN( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = ""var0"" ) ;"
List the names of all distinct wines in alphabetical order .,spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.NAME ;
"What are the names of wines , sorted in alphabetical order ?",spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.NAME ;
List the names of all distinct wines ordered by price .,spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.PRICE ;
"What are the names of wines , sorted by price ascending ?",spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 ORDER BY WINEalias0.PRICE ;
What is the area of the appelation that produces the highest number of wines before the year of var0 ?,spider,SELECT APPELLATIONSalias0.AREA FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING WINEalias0.YEAR < var0 ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
What is the area for the appelation which produced the most wines prior to var0 ?,spider,SELECT APPELLATIONSalias0.AREA FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING WINEalias0.YEAR < var0 ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
What is the color of the grape whose wine products has the highest average price ?,spider,SELECT GRAPESalias0.COLOR FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE GROUP BY WINEalias0.GRAPE ORDER BY AVG( WINEalias0.PRICE ) DESC LIMIT 1 ;
Give the color of the grape whose wine products have the highest average price ?,spider,SELECT GRAPESalias0.COLOR FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE GROUP BY WINEalias0.GRAPE ORDER BY AVG( WINEalias0.PRICE ) DESC LIMIT 1 ;
Find the distinct names of wines produced before the year of var0 or after the year of var1 .,spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 OR WINEalias0.YEAR > var1 ;
Give the distinct names of wines made before var0 or after var1 .,spider,SELECT DISTINCT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < var0 OR WINEalias0.YEAR > var1 ;
Find the distinct winery of wines having price between var0 and var1 .,spider,SELECT DISTINCT WINEalias0.WINERY FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE BETWEEN var0 AND var1 ;
What are the distinct wineries which produce wines costing between var0 and var1 ?,spider,SELECT DISTINCT WINEalias0.WINERY FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE BETWEEN var0 AND var1 ;
What are the average prices and cases of wines produced in the year of var0 and made of var1 grape ?,spider,"SELECT AVG( WINEalias0.CASES ) , AVG( WINEalias0.PRICE ) FROM WINE AS WINEalias0 WHERE WINEalias0.GRAPE = ""var1"" AND WINEalias0.YEAR = var0 ;"
Give the average price and case of wines made from var1 grapes in the year var0 .,spider,"SELECT AVG( WINEalias0.CASES ) , AVG( WINEalias0.PRICE ) FROM WINE AS WINEalias0 WHERE WINEalias0.GRAPE = ""var1"" AND WINEalias0.YEAR = var0 ;"
What are the maximum price and score of wines produced by St . Helena appelation ?,spider,"SELECT MAX( WINEalias0.PRICE ) , MAX( WINEalias0.SCORE ) FROM WINE AS WINEalias0 WHERE WINEalias0.APPELATION = ""var0"" ;"
Give the maximum price and score for wines produced in the appelation St . Helena .,spider,"SELECT MAX( WINEalias0.PRICE ) , MAX( WINEalias0.SCORE ) FROM WINE AS WINEalias0 WHERE WINEalias0.APPELATION = ""var0"" ;"
What are the maximum price and score of wines in each year ?,spider,"SELECT MAX( WINEalias0.PRICE ) , MAX( WINEalias0.SCORE ) , WINEalias0.YEAR FROM WINE AS WINEalias0 GROUP BY WINEalias0.YEAR ;"
What are the maximum price and score of wines for each year ?,spider,"SELECT MAX( WINEalias0.PRICE ) , MAX( WINEalias0.SCORE ) , WINEalias0.YEAR FROM WINE AS WINEalias0 GROUP BY WINEalias0.YEAR ;"
What are the average price and score of wines grouped by appelation ?,spider,"SELECT AVG( WINEalias0.PRICE ) , AVG( WINEalias0.SCORE ) , WINEalias0.APPELATION FROM WINE AS WINEalias0 GROUP BY WINEalias0.APPELATION ;"
What are the average price and score of wines for each appelation ?,spider,"SELECT AVG( WINEalias0.PRICE ) , AVG( WINEalias0.SCORE ) , WINEalias0.APPELATION FROM WINE AS WINEalias0 GROUP BY WINEalias0.APPELATION ;"
Find the wineries that have at least four wines .,spider,SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 GROUP BY WINEalias0.WINERY HAVING COUNT( WINEalias0.* ) >= var0 ;
Which wineries produce at least four wines ?,spider,SELECT WINEalias0.WINERY FROM WINE AS WINEalias0 GROUP BY WINEalias0.WINERY HAVING COUNT( WINEalias0.* ) >= var0 ;
Find the country of all appelations who have at most three wines .,spider,SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING COUNT( WINEalias0.* ) <= var0 ;
What are the countries for appelations with at most var0 wines ?,spider,SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION GROUP BY WINEalias0.APPELATION HAVING COUNT( WINEalias0.* ) <= var0 ;
What are the names of wines whose production year are before the year of all wines by var0 winery ?,spider,"SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < ( SELECT MIN( WINEalias1.YEAR ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = ""var0"" ) ;"
What are the names of wines produced before any wine from the var0 winery ?,spider,"SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR < ( SELECT MIN( WINEalias1.YEAR ) FROM WINE AS WINEalias1 WHERE WINEalias1.WINERY = ""var0"" ) ;"
What are the names of wines that are more expensive then all wines made in the year var0 ?,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MAX( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.YEAR = var0 ) ;
Give the names of wines with prices above any wine produced in var0 .,spider,SELECT WINEalias0.NAME FROM WINE AS WINEalias0 WHERE WINEalias0.PRICE > ( SELECT MAX( WINEalias1.PRICE ) FROM WINE AS WINEalias1 WHERE WINEalias1.YEAR = var0 ) ;
Find the top var1 wineries with the greatest number of wines made of white color grapes .,spider,"SELECT WINEalias0.WINERY FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" GROUP BY WINEalias0.WINERY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT var1 ;"
Which var1 wineries produce the most wines made from white grapes ?,spider,"SELECT WINEalias0.WINERY FROM GRAPES AS GRAPESalias0 JOIN WINE AS WINEalias0 ON WINEalias0.GRAPE = GRAPESalias0.GRAPE WHERE GRAPESalias0.COLOR = ""var0"" GROUP BY WINEalias0.WINERY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT var1 ;"
"List the grape , winery and year of the wines whose price is bigger than var0 ordered by year .",spider,"SELECT WINEalias0.GRAPE , WINEalias0.WINERY , WINEalias0.YEAR FROM WINE AS WINEalias0 WHERE PRICE > var0 ORDER BY WINEalias0.YEAR ;"
"What are the grapes , wineries and years for wines with price higher than var0 , sorted by year ?",spider,"SELECT WINEalias0.GRAPE , WINEalias0.WINERY , WINEalias0.YEAR FROM WINE AS WINEalias0 WHERE PRICE > var0 ORDER BY WINEalias0.YEAR ;"
"List the grape , appelation and name of wines whose score is higher than var0 ordered by Name .",spider,"SELECT WINEalias0.APPELATION , WINEalias0.GRAPE , WINEalias0.NAME FROM WINE AS WINEalias0 WHERE SCORE > var0 ORDER BY WINEalias0.NAME ;"
"What are the grapes , appelations , and wines with scores above var0 , sorted by Name ?",spider,"SELECT WINEalias0.APPELATION , WINEalias0.GRAPE , WINEalias0.NAME FROM WINE AS WINEalias0 WHERE SCORE > var0 ORDER BY WINEalias0.NAME ;"
Find the appelations that produce wines after the year of var0 but not in var1 area .,spider,"SELECT WINEalias0.APPELATION FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR > var0 EXCEPT SELECT APPELLATIONSalias0.APPELATION FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.AREA = ""var1"" ;"
What are the appelations for wines produced after var0 but not in the var1 area ?,spider,"SELECT WINEalias0.APPELATION FROM WINE AS WINEalias0 WHERE WINEalias0.YEAR > var0 EXCEPT SELECT APPELLATIONSalias0.APPELATION FROM APPELLATIONS AS APPELLATIONSalias0 WHERE APPELLATIONSalias0.AREA = ""var1"" ;"
Find the average price of wines that are not produced from var0 county .,spider,"SELECT AVG( WINEalias0.PRICE ) FROM WINE AS WINEalias0 WHERE WINEalias0.APPELATION NOT IN ( SELECT APPELLATIONSalias0.APPELATION FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias1 ON WINEalias1.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" ) ;"
What is the average price for wines not produced in var0 county ?,spider,"SELECT AVG( WINEalias0.PRICE ) FROM WINE AS WINEalias0 WHERE WINEalias0.APPELATION NOT IN ( SELECT APPELLATIONSalias0.APPELATION FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias1 ON WINEalias1.APPELATION = APPELLATIONSalias0.APPELATION WHERE APPELLATIONSalias0.COUNTY = ""var0"" ) ;"
Find the county where produces the most number of wines with score higher than var0 .,spider,SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE WINEalias0.SCORE > var0 GROUP BY APPELLATIONSalias0.COUNTY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
What is the county that produces the most wines scoring higher than var0 ?,spider,SELECT APPELLATIONSalias0.COUNTY FROM APPELLATIONS AS APPELLATIONSalias0 JOIN WINE AS WINEalias0 ON WINEalias0.APPELATION = APPELLATIONSalias0.APPELATION WHERE WINEalias0.SCORE > var0 GROUP BY APPELLATIONSalias0.COUNTY ORDER BY COUNT( WINEalias0.* ) DESC LIMIT 1 ;
How many train stations are there ?,spider,SELECT COUNT( * ) FROM STATION AS STATIONalias0 ;
"Show the name , location , and number of platforms for all stations .",spider,"SELECT STATIONalias0.LOCATION , STATIONalias0.NAME , STATIONalias0.NUMBER_OF_PLATFORMS FROM STATION AS STATIONalias0 ;"
What are all locations of train stations ?,spider,SELECT DISTINCT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 ;
Show the names and total passengers for all train stations not in var0 .,spider,"SELECT STATIONalias0.NAME , STATIONalias0.TOTAL_PASSENGERS FROM STATION AS STATIONalias0 WHERE STATIONalias0.LOCATION != ""var0"" ;"
Show the names and main services for train stations that have the top three total number of passengers .,spider,"SELECT STATIONalias0.MAIN_SERVICES , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY STATIONalias0.TOTAL_PASSENGERS DESC LIMIT var0 ;"
What is the average and maximum number of total passengers for train stations in var0 or var1 ?,spider,"SELECT AVG( STATIONalias0.TOTAL_PASSENGERS ) , MAX( STATIONalias0.TOTAL_PASSENGERS ) FROM STATION AS STATIONalias0 WHERE STATIONalias0.LOCATION = ""var0"" OR STATIONalias0.LOCATION = ""var1"" ;"
Show all locations and the total number of platforms and passengers for all train stations in each location .,spider,"SELECT STATIONalias0.LOCATION , SUM( STATIONalias0.NUMBER_OF_PLATFORMS ) , SUM( STATIONalias0.TOTAL_PASSENGERS ) FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.LOCATION ;"
Show all locations that have train stations with at least var0 platforms and train stations with more than var1 total passengers .,spider,SELECT DISTINCT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 WHERE STATIONalias0.NUMBER_OF_PLATFORMS >= var0 AND STATIONalias0.TOTAL_PASSENGERS > var1 ;
Show all locations which don't have a train station with at least var0 platforms .,spider,SELECT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 EXCEPT SELECT STATIONalias1.LOCATION FROM STATION AS STATIONalias1 WHERE STATIONalias1.NUMBER_OF_PLATFORMS >= var0 ;
Show the location with most number of train stations .,spider,SELECT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 GROUP BY LOCATION ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Show the name , time , and service for all trains .",spider,"SELECT TRAINalias0.NAME , TRAINalias0.SERVICE , TRAINalias0.TIME FROM TRAIN AS TRAINalias0 ;"
Show the number of trains,spider,SELECT COUNT( * ) FROM TRAIN AS TRAINalias0 ;
Show the name and service for all trains in order by time .,spider,"SELECT TRAINalias0.NAME , TRAINalias0.SERVICE FROM TRAIN AS TRAINalias0 ORDER BY TRAINalias0.TIME ;"
Show the station name and number of trains in each station .,spider,"SELECT COUNT( TRAIN_STATIONalias0.* ) , STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID GROUP BY TRAIN_STATIONalias0.STATION_ID ;"
show the train name and station name for each train .,spider,"SELECT STATIONalias0.NAME , TRAINalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID ;"
Show all train names and times in stations in var0 in descending order by train time .,spider,"SELECT TRAINalias0.NAME , TRAINalias0.TIME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE STATIONalias0.LOCATION = ""var0"" ORDER BY TRAINalias0.TIME DESC ;"
Show the station name with greatest number of trains .,spider,SELECT STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID GROUP BY TRAIN_STATIONalias0.STATION_ID ORDER BY COUNT( TRAIN_STATIONalias0.* ) DESC LIMIT 1 ;
Show the station name with at least two trains .,spider,SELECT STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID GROUP BY TRAIN_STATIONalias0.STATION_ID HAVING COUNT( TRAIN_STATIONalias0.* ) >= var0 ;
Show all locations with only var0 station .,spider,SELECT STATIONalias0.LOCATION FROM STATION AS STATIONalias0 GROUP BY STATIONalias0.LOCATION HAVING COUNT( * ) = var0 ;
Show station names without any trains .,spider,SELECT STATIONalias0.NAME FROM STATION AS STATIONalias0 WHERE STATIONalias0.STATION_ID NOT IN ( SELECT TRAIN_STATIONalias0.STATION_ID FROM TRAIN_STATION AS TRAIN_STATIONalias0 ) ;
"What are the names of the stations which serve both "" var0 "" and "" var1 "" trains ?",spider,"SELECT STATIONalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias0.STATION_ID = STATIONalias0.STATION_ID JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE TRAINalias0.NAME = ""var0"" INTERSECT SELECT STATIONalias1.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias1 JOIN STATION AS STATIONalias1 ON TRAIN_STATIONalias1.STATION_ID = STATIONalias1.STATION_ID JOIN TRAIN AS TRAINalias1 ON TRAINalias1.TRAIN_ID = TRAIN_STATIONalias1.TRAIN_ID WHERE TRAINalias1.NAME = ""var1"" ;"
Find the names of the trains that do not pass any station located in var0 .,spider,"SELECT TRAINalias0.NAME FROM TRAIN_STATION AS TRAIN_STATIONalias0 JOIN TRAIN AS TRAINalias0 ON TRAINalias0.TRAIN_ID = TRAIN_STATIONalias0.TRAIN_ID WHERE TRAIN_STATIONalias0.STATION_ID NOT IN ( SELECT STATIONalias0.STATION_ID FROM TRAIN_STATION AS TRAIN_STATIONalias1 JOIN STATION AS STATIONalias0 ON TRAIN_STATIONalias1.STATION_ID = STATIONalias0.STATION_ID WHERE STATIONalias0.LOCATION = ""var0"" ) ;"
List the names and locations of all stations ordered by their yearly entry exit and interchange amounts .,spider,"SELECT STATIONalias0.LOCATION , STATIONalias0.NAME FROM STATION AS STATIONalias0 ORDER BY STATIONalias0.ANNUAL_ENTRY_EXIT , STATIONalias0.ANNUAL_INTERCHANGES ;"
List all vehicle id,spider,SELECT VEHICLESalias0.VEHICLE_ID FROM VEHICLES AS VEHICLESalias0 ;
What are the ids of all vehicles ?,spider,SELECT VEHICLESalias0.VEHICLE_ID FROM VEHICLES AS VEHICLESalias0 ;
How many vehicle in total ?,spider,SELECT COUNT( * ) FROM VEHICLES AS VEHICLESalias0 ;
How many vehicles exist ?,spider,SELECT COUNT( * ) FROM VEHICLES AS VEHICLESalias0 ;
Show the detail of vehicle with id var0 .,spider,SELECT VEHICLESalias0.VEHICLE_DETAILS FROM VEHICLES AS VEHICLESalias0 WHERE VEHICLESalias0.VEHICLE_ID = var0 ;
What are the details of the car with id var0 ?,spider,SELECT VEHICLESalias0.VEHICLE_DETAILS FROM VEHICLES AS VEHICLESalias0 WHERE VEHICLESalias0.VEHICLE_ID = var0 ;
List the first name middle name and last name of all staff .,spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.MIDDLE_NAME FROM STAFF AS STAFFalias0 ;"
"What are the first , middle , and last names of all staff ?",spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME , STAFFalias0.MIDDLE_NAME FROM STAFF AS STAFFalias0 ;"
What is the birthday of the staff member with first name as var0 and last name as var1 ?,spider,"SELECT STAFFalias0.DATE_OF_BIRTH FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is the date of birth for the staff member named var0 var1 ?,spider,"SELECT STAFFalias0.DATE_OF_BIRTH FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
When did the staff member with first name as var0 and last name as var1 join the company ?,spider,"SELECT STAFFalias0.DATE_JOINED_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
When did the staff member named var0 var1 join the company ?,spider,"SELECT STAFFalias0.DATE_JOINED_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
When did the staff member with first name as var0 and last name as var1 leave the company ?,spider,"SELECT STAFFalias0.DATE_LEFT_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
When did the staff member var0 var1 leave the company ?,spider,"SELECT STAFFalias0.DATE_LEFT_STAFF FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
How many staff have the first name var0 ?,spider,"SELECT COUNT( * ) FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" ;"
How many employees have a first name of var0 ?,spider,"SELECT COUNT( * ) FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" ;"
What is the nickname of staff with first name as var0 and last name as var1 ?,spider,"SELECT STAFFalias0.NICKNAME FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is the nickname of the employee named var0 var1 ?,spider,"SELECT STAFFalias0.NICKNAME FROM STAFF AS STAFFalias0 WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
How many staff in total ?,spider,SELECT COUNT( * ) FROM STAFF AS STAFFalias0 ;
How many employees are there ?,spider,SELECT COUNT( * ) FROM STAFF AS STAFFalias0 ;
Which city does staff with first name as var0 and last name as var1 live ?,spider,"SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
In what city does var0 var1 live ?,spider,"SELECT ADDRESSESalias0.CITY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
Which country and state does staff with first name as var0 and last name as var1 lived ?,spider,"SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
In which country and state does var0 var1 live ?,spider,"SELECT ADDRESSESalias0.COUNTRY , ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
How long is the total lesson time took by customer with first name as var0 and last name as var1 ?,spider,"SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
How long is the total lesson time took by the customer named var0 var1 ?,spider,"SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the zip code of staff with first name as var0 and last name as var1 lived ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is the zip code of the hosue of the employee named var0 var1 ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
Find out the first name and last name of staff lived in city var0 .,spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
What is the first and last name of all employees who live in the city var0 ?,spider,"SELECT STAFFalias0.FIRST_NAME , STAFFalias0.LAST_NAME FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
Which city lives most of staffs ? List the city name and number of staffs .,spider,"SELECT ADDRESSESalias0.CITY , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
In which city do the most employees live and how many of them live there ?,spider,"SELECT ADDRESSESalias0.CITY , COUNT( * ) FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
List the states which have between var0 to var1 staffs living there .,spider,SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY HAVING COUNT( * ) BETWEEN var0 AND var1 ;
What are the names of the states that have var0 to var1 employees living there ?,spider,SELECT ADDRESSESalias0.STATE_PROVINCE_COUNTY FROM ADDRESSES AS ADDRESSESalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.STATE_PROVINCE_COUNTY HAVING COUNT( * ) BETWEEN var0 AND var1 ;
List the first name and last name of all customers .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ;"
What are the first and last names for all customers ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 ;"
List email address and birthday of customer whose first name as var0 .,spider,"SELECT CUSTOMERSalias0.DATE_OF_BIRTH , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" ;"
What are the email addresses and date of births for all customers who have a first name of var0 ?,spider,"SELECT CUSTOMERSalias0.DATE_OF_BIRTH , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" ;"
List phone number and email address of customer with more than var0 outstanding balance .,spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.AMOUNT_OUTSTANDING > var0 ;"
What are the phone numbers and email addresses of all customers who have an outstanding balance of more than var0 ?,spider,"SELECT CUSTOMERSalias0.EMAIL_ADDRESS , CUSTOMERSalias0.PHONE_NUMBER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.AMOUNT_OUTSTANDING > var0 ;"
"What is the status code , mobile phone number and email address of customer with last name as var1 or first name as var0 ?",spider,"SELECT CUSTOMERSalias0.CELL_MOBILE_PHONE_NUMBER , CUSTOMERSalias0.CUSTOMER_STATUS_CODE , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" OR CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
"What is the status code , phone number , and email address of the customer whose last name is var1 or whose first name is var0 ?",spider,"SELECT CUSTOMERSalias0.CELL_MOBILE_PHONE_NUMBER , CUSTOMERSalias0.CUSTOMER_STATUS_CODE , CUSTOMERSalias0.EMAIL_ADDRESS FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" OR CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
When are the birthdays of customer who are classified as ' var0 ' status ?,spider,"SELECT CUSTOMERSalias0.DATE_OF_BIRTH FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_STATUS_CODE = ""var0"" ;"
What is the date of birth of every customer whose status code is ' var0 ' ?,spider,"SELECT CUSTOMERSalias0.DATE_OF_BIRTH FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_STATUS_CODE = ""var0"" ;"
When did customer with first name as var0 and last name as var1 became a customer ?,spider,"SELECT CUSTOMERSalias0.DATE_BECAME_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
When did var0 var1 first become a customer ?,spider,"SELECT CUSTOMERSalias0.DATE_BECAME_CUSTOMER FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
List all customer status codes and the number of customers having each status code .,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_STATUS_CODE ;"
"For each customer status code , how many customers are classified that way ?",spider,"SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMERSalias0.CUSTOMER_STATUS_CODE ;"
Which customer status code has least number of customers ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_STATUS_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
What is the status code with the least number of customers ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_STATUS_CODE FROM CUSTOMERS AS CUSTOMERSalias0 GROUP BY CUSTOMER_STATUS_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ;
How many lessons taken by customer with first name as var0 and last name as var1 were completed ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" AND LESSONSalias0.LESSON_STATUS_CODE = ""var2"" ;"
How many lessons did the customer Ryan var1 complete ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" AND LESSONSalias0.LESSON_STATUS_CODE = ""var2"" ;"
"What is maximum , minimum and average amount of outstanding of customer ?",spider,"SELECT AVG( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MAX( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MIN( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) FROM CUSTOMERS AS CUSTOMERSalias0 ;"
"What is the maximum , minimum , and average amount of money outsanding for all customers ?",spider,"SELECT AVG( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MAX( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) , MIN( CUSTOMERSalias0.AMOUNT_OUTSTANDING ) FROM CUSTOMERS AS CUSTOMERSalias0 ;"
List the first name and last name of customers have the amount of outstanding between var0 and var1 .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.AMOUNT_OUTSTANDING BETWEEN var0 AND var1 ;"
What are the first and last names of all customers with between var0 and var1 dollars outstanding ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.AMOUNT_OUTSTANDING BETWEEN var0 AND var1 ;"
List first name and last name of customers lived in city var0 .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
What are the first and last names of all customers who lived in var0 ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.CITY = ""var0"" ;"
Which country does customer with first name as var0 and last name as var1 lived in ?,spider,"SELECT ADDRESSESalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the country in which the customer var0 var1 lived ?,spider,"SELECT ADDRESSESalias0.COUNTRY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is zip code of customer with first name as var0 and last name as var1 ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the zip code of the customer var0 var1 ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
Which city does has most number of customers ?,spider,SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the city with the most customers ?,spider,SELECT ADDRESSESalias0.CITY FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON CUSTOMERSalias0.CUSTOMER_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.CITY ORDER BY COUNT( * ) DESC LIMIT 1 ;
How much in total does customer with first name as var0 and last name as var1 paid ?,spider,"SELECT SUM( CUSTOMER_PAYMENTSalias0.AMOUNT_PAYMENT ) FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
What is the total amount of moeny paid by the customer var0 var1 ?,spider,"SELECT SUM( CUSTOMER_PAYMENTSalias0.AMOUNT_PAYMENT ) FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" AND CUSTOMERSalias0.LAST_NAME = ""var1"" ;"
List the number of customers that did not have any payment history .,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_PAYMENTSalias0.CUSTOMER_ID FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 ) ;
How many customers have no payment histories ?,spider,SELECT COUNT( * ) FROM CUSTOMERS AS CUSTOMERSalias0 WHERE CUSTOMERSalias0.CUSTOMER_ID NOT IN ( SELECT CUSTOMER_PAYMENTSalias0.CUSTOMER_ID FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 ) ;
List first name and last name of customers that have more than var0 payments .,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_PAYMENTSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;"
What are the first and last names of all customers with more than var0 payments ?,spider,"SELECT CUSTOMERSalias0.FIRST_NAME , CUSTOMERSalias0.LAST_NAME FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON CUSTOMER_PAYMENTSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMER_PAYMENTSalias0.CUSTOMER_ID HAVING COUNT( * ) > var0 ;"
List all payment methods and number of payments using each payment methods .,spider,"SELECT COUNT( * ) , CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 GROUP BY CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE ;"
"For each payment method , how many payments were made ?",spider,"SELECT COUNT( * ) , CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE FROM CUSTOMER_PAYMENTS AS CUSTOMER_PAYMENTSalias0 GROUP BY CUSTOMER_PAYMENTSalias0.PAYMENT_METHOD_CODE ;"
How many lessons were in cancelled state ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 WHERE LESSONSalias0.LESSON_STATUS_CODE = ""var0"" ;"
How many lessons have been cancelled ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 WHERE LESSONSalias0.LESSON_STATUS_CODE = ""var0"" ;"
"Livar2t levar2var2on id of all levar2var2onvar2 taught by var2taff with firvar2t name avar2 var0 , lavar2t name avar2 var1 and nickname containing letter ' var2 ' .",spider,"SELECT LESSONSalias0.LESSON_ID FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" AND STAFFalias0.NICKNAME LIKE ""var2"" ;"
What are the the levar2var2on idvar2 of all var2taff taught by var0 var1 whovar2e nickname havar2 the letter var2 ?,spider,"SELECT LESSONSalias0.LESSON_ID FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" AND STAFFalias0.NICKNAME LIKE ""var2"" ;"
How mvar0ny lessons tvar0ught by stvar0ff whose first nvar0me hvar0s letter ' var0 ' in it ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME LIKE ""var0"" ;"
How mvar0ny lessons were tvar0ught by var0 stvar0ff member whose first nvar0me hvar0s the letter ' var0 ' in it ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME LIKE ""var0"" ;"
How long is the total lesson time taught by staff with first name as var0 and last name as var1 ?,spider,"SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is the total time for all lessons taught by var0 var1 ?,spider,"SELECT SUM( LESSONSalias0.LESSON_TIME ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is average lesson price taught by staff with first name as var0 and last name as var1 ?,spider,"SELECT AVG( LESSONSalias0.PRICE ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
What is the average price for a lesson taught by var0 var1 ?,spider,"SELECT AVG( LESSONSalias0.PRICE ) FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias0 ON STAFFalias0.STAFF_ID = LESSONSalias0.STAFF_ID WHERE STAFFalias0.FIRST_NAME = ""var0"" AND STAFFalias0.LAST_NAME = ""var1"" ;"
How many lesson does customer with first name var0 took ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" ;"
How many lessons did the customer with the first name var0 take ?,spider,"SELECT COUNT( LESSONSalias0.* ) FROM LESSONS AS LESSONSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON LESSONSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.FIRST_NAME = ""var0"" ;"
Which last names are both used by customers and by staff ?,spider,SELECT CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 INTERSECT SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 ;
What are the last names that are used by customers and staff ?,spider,SELECT CUSTOMERSalias0.LAST_NAME FROM CUSTOMERS AS CUSTOMERSalias0 INTERSECT SELECT STAFFalias0.LAST_NAME FROM STAFF AS STAFFalias0 ;
What is the first name of the staff who did not give any lesson ?,spider,SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 EXCEPT SELECT STAFFalias1.FIRST_NAME FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = LESSONSalias0.STAFF_ID ;
What is the first name of all employees who do not give any lessons ?,spider,SELECT STAFFalias0.FIRST_NAME FROM STAFF AS STAFFalias0 EXCEPT SELECT STAFFalias1.FIRST_NAME FROM LESSONS AS LESSONSalias0 JOIN STAFF AS STAFFalias1 ON STAFFalias1.STAFF_ID = LESSONSalias0.STAFF_ID ;
What is the id and detail of the vehicle used in lessons for most of the times ?,spider,"SELECT VEHICLESalias0.VEHICLE_DETAILS , VEHICLESalias0.VEHICLE_ID FROM VEHICLES AS VEHICLESalias0 JOIN LESSONS AS LESSONSalias0 ON VEHICLESalias0.VEHICLE_ID = LESSONSalias0.VEHICLE_ID GROUP BY VEHICLESalias0.VEHICLE_ID ORDER BY COUNT( LESSONSalias0.* ) DESC LIMIT 1 ;"
How many faculty do we have ?,spider,SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 ;
What is the total number of faculty members ?,spider,SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 ;
What ranks do we have for faculty ?,spider,SELECT DISTINCT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 ;
Find the list of distinct ranks for faculty .,spider,SELECT DISTINCT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 ;
Show all the distinct buildings that have faculty rooms .,spider,SELECT DISTINCT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 ;
What buildings have faculty offices ?,spider,SELECT DISTINCT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 ;
"Show the rank , first name , and last name for all the faculty .",spider,"SELECT FACULTYalias0.RANK , FNAME , LNAME FROM FACULTY AS FACULTYalias0 ;"
"What are the rank , first name , and last name of the faculty members ?",spider,"SELECT FACULTYalias0.RANK , FNAME , LNAME FROM FACULTY AS FACULTYalias0 ;"
"Show the first name , last name , and phone number for all female faculty members .",spider,"SELECT FACULTYalias0.PHONE , FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.SEX = ""var0"" ;"
"What are the first name , last name , and phone number of all the female faculty members ?",spider,"SELECT FACULTYalias0.PHONE , FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.SEX = ""var0"" ;"
Show ids for all the male faculty .,spider,"SELECT FACID FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.SEX = ""var0"" ;"
What are the faculty ids of all the male faculty members ?,spider,"SELECT FACID FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.SEX = ""var0"" ;"
How many female var1s do we have ?,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = ""var1"" AND FACULTYalias0.SEX = ""var0"" ;"
Count the number of female var1s we have .,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = ""var1"" AND FACULTYalias0.SEX = ""var0"" ;"
"Show the phone , room , and building for the faculty named var0 var1 .",spider,"SELECT FACULTYalias0.BUILDING , FACULTYalias0.PHONE , FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FNAME = ""var0"" AND LNAME = ""var1"" ;"
"What are the phone , room , and building of the faculty member called var0 var1 ?",spider,"SELECT FACULTYalias0.BUILDING , FACULTYalias0.PHONE , FACULTYalias0.ROOM FROM FACULTY AS FACULTYalias0 WHERE FNAME = ""var0"" AND LNAME = ""var1"" ;"
How many var0s are in building var1 ?,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.RANK = ""var0"" ;"
Count the number of var0s who have office in building var1 .,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.BUILDING = ""var1"" AND FACULTYalias0.RANK = ""var0"" ;"
Show the first name and last name for all the instructors .,spider,"SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = ""var0"" ;"
What are the first name and last name of all the instructors ?,spider,"SELECT FNAME , LNAME FROM FACULTY AS FACULTYalias0 WHERE FACULTYalias0.RANK = ""var0"" ;"
Show all the buildings along with the number of faculty members the buildings have .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.BUILDING ;"
How many faculty members does each building have ? List the result with the name of the building .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.BUILDING ;"
Which building has most faculty members ?,spider,SELECT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 GROUP BY BUILDING ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
Find the building that has the largest number of faculty members .,spider,SELECT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 GROUP BY BUILDING ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;
Show all the buildings that have at least var1 professors .,spider,"SELECT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" GROUP BY FACULTYalias0.BUILDING HAVING COUNT( FACULTYalias0.* ) >= var1 ;"
In which buildings are there at least ten professors ?,spider,"SELECT FACULTYalias0.BUILDING FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" GROUP BY FACULTYalias0.BUILDING HAVING COUNT( FACULTYalias0.* ) >= var1 ;"
"For each faculty rank , show the number of faculty members who have it .",spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.RANK ;"
How many faculty members do we have for each faculty rank ?,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.RANK ;"
Show all the ranks and the number of male and female faculty for each rank .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.RANK , FACULTYalias0.SEX ;"
How many faculty members do we have for each rank and gender ?,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 GROUP BY FACULTYalias0.RANK , FACULTYalias0.SEX ;"
Which rank has the smallest number of faculty members ?,spider,SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( FACULTYalias0.* ) ASC LIMIT 1 ;
Find the faculty rank that has the least members .,spider,SELECT FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 GROUP BY RANK ORDER BY COUNT( FACULTYalias0.* ) ASC LIMIT 1 ;
Show the number of male and female assistant professors .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" GROUP BY FACULTYalias0.SEX ;"
How many male and female assistant professors do we have ?,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.SEX FROM FACULTY AS FACULTYalias0 WHERE RANK = ""var0"" GROUP BY FACULTYalias0.SEX ;"
What are the first name and last name of var0 var1's advisor ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
Who is the advisor of var0 var1 ? Give me the first name and last name .,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE STUDENTalias0.FNAME = ""var0"" AND STUDENTalias0.LNAME = ""var1"" ;"
Show the ids of students whose advisors are professors .,spider,"SELECT STUDENTalias0.STUID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.RANK = ""var0"" ;"
Which students have professors as their advisors ? Find their student ids .,spider,"SELECT STUDENTalias0.STUID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.RANK = ""var0"" ;"
Show first name and last name for all the students advised by var0 var1 .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
Which students are advised by var0 var1 ? Give me their first and last names .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
"Show the faculty id of each faculty member , along with the number of students he or she advises .",spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.FACID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ;"
What are the faculty id and the number of students each faculty has ?,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.FACID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ;"
Show all the faculty ranks and the number of students advised by each rank .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.RANK ;"
How many students are advised by each rank of faculty ? List the rank and the number of students .,spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.RANK FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.RANK ;"
What are the first and last name of the faculty who has the most students ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;"
Give me the the first and last name of the faculty who advises the most students .,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;"
Show the ids for all the faculty members who have at least var0 students .,spider,SELECT FACULTYalias0.FACID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID HAVING COUNT( FACULTYalias0.* ) >= var0 ;
Which faculty members advise two ore more students ? Give me their faculty ids .,spider,SELECT FACULTYalias0.FACID FROM FACULTY AS FACULTYalias0 JOIN STUDENT AS STUDENTalias0 ON STUDENTalias0.ADVISOR = FACULTYalias0.FACID GROUP BY FACULTYalias0.FACID HAVING COUNT( FACULTYalias0.* ) >= var0 ;
Show ids for the faculty members who don't advise any student .,spider,SELECT FACID FROM FACULTY AS FACULTYalias0 EXCEPT SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 ;
What are the ids of the faculty members who do not advise any student .,spider,SELECT FACID FROM FACULTY AS FACULTYalias0 EXCEPT SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 ;
What activities do we have ?,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 ;
List all the activities we have .,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 ;
How many activities do we have ?,spider,SELECT COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 ;
Find the number of activities available .,spider,SELECT COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 ;
How many faculty members participate in an activity ?,spider,SELECT COUNT( DISTINCT FACID ) FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ;
Give me the number of faculty members who participate in an activity,spider,SELECT COUNT( DISTINCT FACID ) FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ;
Show the ids of the faculty who don't participate in any activity .,spider,SELECT FACID FROM FACULTY AS FACULTYalias0 EXCEPT SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ;
Which faculty do not participate in any activity ? Find their faculty ids .,spider,SELECT FACID FROM FACULTY AS FACULTYalias0 EXCEPT SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ;
Show the ids of all the faculty members who participate in an activity and advise a student .,spider,SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 INTERSECT SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 ;
What are ids of the faculty members who not only participate in an activity but also advise a student .,spider,SELECT FACID FROM FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 INTERSECT SELECT STUDENTalias0.ADVISOR FROM STUDENT AS STUDENTalias0 ;
How many activities does var0 var1 participate in ?,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
Find the number of activities var0 var1 is involved in .,spider,"SELECT COUNT( FACULTYalias0.* ) FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
Show the names of all the activities var0 var1 participates in .,spider,"SELECT ACTIVITYalias0.ACTIVITY_NAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
What are the names of the activities var0 var1 is involved in,spider,"SELECT ACTIVITYalias0.ACTIVITY_NAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID WHERE FACULTYalias0.FNAME = ""var0"" AND FACULTYalias0.LNAME = ""var1"" ;"
"Show the first and last name of all the faculty members who participated in some activity , together with the number of activities they participated in .",spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.FACID , FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ;"
"What is the first and last name of the faculty members who participated in at least one activity ? For each of them , also show the number of activities they participated in .",spider,"SELECT COUNT( FACULTYalias0.* ) , FACULTYalias0.FACID , FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ;"
Show all the activity names and the number of faculty involved in each activity .,spider,"SELECT ACTIVITYalias0.ACTIVITY_NAME , COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ;"
How many faculty members participate in each activity ? Return the activity names and the number of faculty members .,spider,"SELECT ACTIVITYalias0.ACTIVITY_NAME , COUNT( * ) FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ;"
What is the first and last name of the faculty participating in the most activities ?,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;"
Find the first and last name of the faculty who is involved in the largest number of activities .,spider,"SELECT FACULTYalias0.FNAME , FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID GROUP BY FACULTYalias0.FACID ORDER BY COUNT( FACULTYalias0.* ) DESC LIMIT 1 ;"
What is the name of the activity that has the most faculty members involved in ?,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which activity has the most faculty members participating in ? Find the activity name .,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the ids of the students who don't participate in any activity .,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 ;
What are the ids of the students who are not involved in any activity,spider,SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 ;
Show the ids for all the students who participate in an activity and are under var0 .,spider,SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 INTERSECT SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var0 ;
What are the ids of the students who are under var0 years old and are involved in at least one activity .,spider,SELECT STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 INTERSECT SELECT STUID FROM STUDENT AS STUDENTalias0 WHERE STUDENTalias0.AGE < var0 ;
What is the first and last name of the student participating in the most activities ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON STUDENTalias0.STUID = PARTICIPATES_INalias0.STUID GROUP BY STUDENTalias0.STUID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Tell me the first and last name of the student who has the most activities .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON STUDENTalias0.STUID = PARTICIPATES_INalias0.STUID GROUP BY STUDENTalias0.STUID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name of the activity with the most students ?,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the activity that has the largest number of student participants .,spider,SELECT ACTIVITYalias0.ACTIVITY_NAME FROM ACTIVITY AS ACTIVITYalias0 JOIN PARTICIPATES_IN AS PARTICIPATES_INalias0 ON PARTICIPATES_INalias0.ACTID = ACTIVITYalias0.ACTID GROUP BY ACTIVITYalias0.ACTID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the first names of the faculty members who are playing var0 or var1 .,spider,"SELECT DISTINCT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" OR ACTIVITYalias0.ACTIVITY_NAME = ""var1"" ;"
Which faculty members are playing either var0 or var1 ? Tell me their first names .,spider,"SELECT DISTINCT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" OR ACTIVITYalias0.ACTIVITY_NAME = ""var1"" ;"
Find the first names of professors who are not playing var1 or var2 .,spider,"SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var2"" OR FACULTYalias0.RANK = ""var0"" EXCEPT SELECT DISTINCT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var1"" ;"
What are the first names of the professors who do not play var1 or var2 as activities ?,spider,"SELECT LNAME FROM FACULTY AS FACULTYalias0 WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var2"" OR FACULTYalias0.RANK = ""var0"" EXCEPT SELECT DISTINCT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var1"" ;"
Find the first names of the faculty members who participate in var0 and var1 .,spider,"SELECT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" INTERSECT SELECT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias1 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias1.FACID JOIN ACTIVITY AS ACTIVITYalias1 ON FACULTY_PARTICIPATES_INalias1.ACTID = FACULTY_PARTICIPATES_INalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = ""var1"" ;"
What are the first names of the faculty members playing both var0 and var1 ?,spider,"SELECT FACULTYalias0.LNAME FROM FACULTY AS FACULTYalias0 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias0 ON FACULTYalias0.FACID = FACULTY_PARTICIPATES_INalias0.FACID JOIN ACTIVITY AS ACTIVITYalias0 ON FACULTY_PARTICIPATES_INalias0.ACTID = FACULTY_PARTICIPATES_INalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" INTERSECT SELECT FACULTYalias1.LNAME FROM FACULTY AS FACULTYalias1 JOIN FACULTY_PARTICIPATES_IN AS FACULTY_PARTICIPATES_INalias1 ON FACULTYalias1.FACID = FACULTY_PARTICIPATES_INalias1.FACID JOIN ACTIVITY AS ACTIVITYalias1 ON FACULTY_PARTICIPATES_INalias1.ACTID = FACULTY_PARTICIPATES_INalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = ""var1"" ;"
Find the ids of the students who participate in var0 and var1 .,spider,"SELECT PARTICIPATES_INalias0.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 JOIN ACTIVITY AS ACTIVITYalias0 ON ACTIVITYalias0.ACTID = ACTIVITYalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" INTERSECT SELECT PARTICIPATES_INalias1.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias1 JOIN ACTIVITY AS ACTIVITYalias1 ON ACTIVITYalias1.ACTID = ACTIVITYalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = ""var1"" ;"
Which students participate in both var0 and var1 as their activities ? Tell me their student ids .,spider,"SELECT PARTICIPATES_INalias0.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias0 JOIN ACTIVITY AS ACTIVITYalias0 ON ACTIVITYalias0.ACTID = ACTIVITYalias0.ACTID WHERE ACTIVITYalias0.ACTIVITY_NAME = ""var0"" INTERSECT SELECT PARTICIPATES_INalias1.STUID FROM PARTICIPATES_IN AS PARTICIPATES_INalias1 JOIN ACTIVITY AS ACTIVITYalias1 ON ACTIVITYalias1.ACTID = ACTIVITYalias1.ACTID WHERE ACTIVITYalias1.ACTIVITY_NAME = ""var1"" ;"
Find the name of the airport in the city of var0 .,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
What are the names of the airports in the city of var0 ?,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
"Find the name , city , country , and altitude (or elevation) of the airports in the city of var0 .",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.ELEVATION , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
"What is the name , city , country , and elevation for every airport in the city of var0 ?",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.ELEVATION , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
How many airlines are there ?,spider,SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 ;
What is the total number of airlines ?,spider,SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 ;
How many airlines does var0 has ?,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
What is the number of airlines based in var0 ?,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
What is the maximum elevation of all airports in the country of var0 ?,spider,"SELECT MAX( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
What is the highest elevation of an airport in the country of var0 ?,spider,"SELECT MAX( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
Find the name of the airports located in var0 or var1 .,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" OR AIRPORTSalias0.COUNTRY = ""var1"" ;"
What are the names of all airports in var0 or var1 ?,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" OR AIRPORTSalias0.COUNTRY = ""var1"" ;"
Find the country of the airlines whose name starts with ' Orbit ' .,spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.NAME LIKE ""var0"" ;"
What are the countries of all airlines whose names start with Orbit ?,spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.NAME LIKE ""var0"" ;"
Find the name of airports whose altitude is between var0 and var1 .,spider,SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.ELEVATION BETWEEN var0 AND var1 ;
What are the names of all airports whose elevation is between var0 and var1 ?,spider,SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.ELEVATION BETWEEN var0 AND var1 ;
Which country is the airport that has the highest altitude located in ?,spider,SELECT AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;
What is the country of the airport with the highest elevation ?,spider,SELECT AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;
Find the number of airports whose name contain the word ' var0 ' .,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.NAME LIKE ""var0"" ;"
How many airports ' names have the word Interanation in them ?,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.NAME LIKE ""var0"" ;"
How many different cities do have some airport in the country of var0 ?,spider,"SELECT COUNT( DISTINCT AIRPORTSalias0.CITY ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
In how many cities are there airports in the country of var0 ?,spider,"SELECT COUNT( DISTINCT AIRPORTSalias0.CITY ) FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
Find the number of routes operated by var0 .,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var0"" ;"
How many routes does var0 operate ?,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var0"" ;"
Find the number of routes whose destination airports are in var0 .,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
How many routes end in a Canadian airport ?,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
"Find the name , city , and country of the airport that has the lowest altitude .",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION LIMIT 1 ;"
"What is the name , city , and country of the airport with the lowest altitude ?",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION LIMIT 1 ;"
"Find the name , city , and country of the airport that has the highest latitude .",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;"
"What is the name , city , and country of the airport with the highest elevation ?",spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY , AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 ORDER BY AIRPORTSalias0.ELEVATION DESC LIMIT 1 ;"
Find the name and city of the airport which is the destination of the most number of routes .,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.DST_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.DST_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and city of the airport that the most routes end at ?,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.DST_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.DST_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the names of the top var0 airlines that operate the most number of routes .,spider,"SELECT AIRLINESalias0.NAME , ROUTESalias0.ALID FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY ROUTESalias0.ALID ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT var0 ;"
"For the airline ids with the top var0 most routes operated , what are their names ?",spider,"SELECT AIRLINESalias0.NAME , ROUTESalias0.ALID FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY ROUTESalias0.ALID ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT var0 ;"
Find the name and city of the airport which is the source for the most number of flight routes .,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.SRC_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.SRC_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and city of the airport from most of the routes start ?,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.NAME , ROUTESalias0.SRC_APID FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY ROUTESalias0.SRC_APID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the number of different airports which are the destinations of the var0 .,spider,"SELECT COUNT( DISTINCT DST_APID ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var0"" ;"
What is the number of different different airports that are destinations for var0 ?,spider,"SELECT COUNT( DISTINCT DST_APID ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var0"" ;"
Which countries has the most number of airlines ?,spider,SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
What is the name of the country with the most number of home airlines ?,spider,SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
Which countries has the most number of airlines whose active status is ' var0 ' ?,spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE ACTIVE = ""var0"" GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;"
What are the countries with the most airlines whose active status is var0 ?,spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE ACTIVE = ""var0"" GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;"
List all countries and their number of airlines in the descending order of number of airlines .,spider,"SELECT AIRLINESalias0.COUNTRY , COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC ;"
How many airlines operate out of each country in descending order ?,spider,"SELECT AIRLINESalias0.COUNTRY , COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 GROUP BY COUNTRY ORDER BY COUNT( AIRLINESalias0.* ) DESC ;"
How many airports are there per country ? Order the countries by decreasing number of airports .,spider,"SELECT AIRPORTSalias0.COUNTRY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC ;"
"What is the number of airports per country , ordered from most to least ?",spider,"SELECT AIRPORTSalias0.COUNTRY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC ;"
How many airports are there per city in the var0 ? Order the cities by decreasing number of airports .,spider,"SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = ""var0"" GROUP BY CITY ORDER BY COUNT( * ) DESC ;"
How many airports are there per city in the US ordered from most to least ?,spider,"SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = ""var0"" GROUP BY CITY ORDER BY COUNT( * ) DESC ;"
Return the cities with more than var1 airports in the var0 .,spider,"SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var1 ;"
What is the number of cities in the var0 with more than var1 airports ?,spider,"SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 WHERE COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var1 ;"
How many cities are there that have more than var0 airports ?,spider,SELECT COUNT( * ) FROM ( SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ) ;
What is the count of cities with more than var0 airports ?,spider,SELECT COUNT( * ) FROM ( SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ) ;
List the cities which have more than one airport and number of airports .,spider,"SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ;"
What are the names of all cities with more than one airport and how many airports do they have ?,spider,"SELECT AIRPORTSalias0.CITY , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) > var0 ;"
List the cities which have more than var0 airports sorted by the number of airports .,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY CITY HAVING COUNT( * ) > var0 ORDER BY COUNT( * ) ;
What are the cities that have more than var0 airports sorted by number of airports ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY CITY HAVING COUNT( * ) > var0 ORDER BY COUNT( * ) ;
Find the number of routes for each source airport and the airport name .,spider,"SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ;"
"For each airport name , how many routes start at that airport ?",spider,"SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ;"
"Find the number of routes and airport name for each source airport , order the results by decreasing number of routes .",spider,"SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC ;"
"For each airport name , how many routes start at that airport , ordered from most to least ?",spider,"SELECT AIRPORTSalias0.NAME , COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC ;"
Find the average elevation of all airports for each country .,spider,"SELECT AIRPORTSalias0.COUNTRY , AVG( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.COUNTRY ;"
"For each country , what is the average elevation of that country's airports ?",spider,"SELECT AIRPORTSalias0.COUNTRY , AVG( AIRPORTSalias0.ELEVATION ) FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.COUNTRY ;"
Find the cities which have exactly two airports .,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) = var0 ;
What are the cities with exactly two airports ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 GROUP BY AIRPORTSalias0.CITY HAVING COUNT( * ) = var0 ;
"For each country and airline name , how many routes are there ?",spider,"SELECT AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME , COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME ;"
What is the total number of routes for each country and airline in that country ?,spider,"SELECT AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME , COUNT( AIRLINESalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.COUNTRY , AIRLINESalias0.NAME ;"
Find the number of routes with destination airports in var0 .,spider,"SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
What is the number of routes whose destinations are Italian airports ?,spider,"SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" ;"
Return the number of routes with destination airport in var0 operated by the airline with name ' var1 ' .,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID JOIN AIRLINES AS AIRLINESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var1"" AND AIRPORTSalias0.COUNTRY = ""var0"" ;"
What is the number of routes operated by the airline var1 whose destinations are in var0 ?,spider,"SELECT COUNT( AIRLINESalias0.* ) FROM ROUTES AS ROUTESalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID JOIN AIRLINES AS AIRLINESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID WHERE AIRLINESalias0.NAME = ""var1"" AND AIRPORTSalias0.COUNTRY = ""var0"" ;"
Find the number of routes that have destination var0 .,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.NAME = ""var0"" ;"
What is the number of routes that end at var0 ?,spider,"SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.NAME = ""var0"" ;"
Find the number of routes from the var1 to var0 .,spider,"SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 WHERE DST_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ) AND SRC_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias1 WHERE AIRPORTSalias1.COUNTRY = ""var1"" ) ;"
How many routes go from the var1 to var0 ?,spider,"SELECT COUNT( * ) FROM ROUTES AS ROUTESalias0 WHERE DST_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ) AND SRC_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias1 WHERE AIRPORTSalias1.COUNTRY = ""var1"" ) ;"
Find the id of routes whose source and destination airports are in the var0 .,spider,"SELECT RID FROM ROUTES AS ROUTESalias0 WHERE DST_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ) AND SRC_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias1 WHERE AIRPORTSalias1.COUNTRY = ""var1"" ) ;"
What is the id of the routes whose source and destination airports are in the var0 ?,spider,"SELECT RID FROM ROUTES AS ROUTESalias0 WHERE DST_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.COUNTRY = ""var0"" ) AND SRC_APID IN ( SELECT APID FROM AIRPORTS AS AIRPORTSalias1 WHERE AIRPORTSalias1.COUNTRY = ""var1"" ) ;"
Find the name of airline which runs the most number of routes .,spider,SELECT AIRLINESalias0.NAME FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.NAME ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
What is the name of the airline with the most routes ?,spider,SELECT AIRLINESalias0.NAME FROM AIRLINES AS AIRLINESalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.ALID = AIRLINESalias0.ALID GROUP BY AIRLINESalias0.NAME ORDER BY COUNT( AIRLINESalias0.* ) DESC LIMIT 1 ;
Find the busiest source airport that runs most number of routes in var0 .,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name of the airport with the most number of routes that start in var0 ?,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.SRC_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the busiest destination airport that runs most number of routes in var0 .,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name of the airport that is the destination of the most number of routes that start in var0 ?,spider,"SELECT AIRPORTSalias0.NAME FROM AIRPORTS AS AIRPORTSalias0 JOIN ROUTES AS ROUTESalias0 ON ROUTESalias0.DST_APID = AIRPORTSalias0.APID WHERE AIRPORTSalias0.COUNTRY = ""var0"" GROUP BY AIRPORTSalias0.NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the id of the most recent order ?,spider,SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED DESC LIMIT 1 ;
Find the id of the order made most recently .,spider,SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED DESC LIMIT 1 ;
what are the order id and customer id of the oldest order ?,spider,"SELECT ORDERSalias0.CUSTOMER_ID , ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED LIMIT 1 ;"
Find the order id and customer id associated with the oldest order .,spider,"SELECT ORDERSalias0.CUSTOMER_ID , ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED LIMIT 1 ;"
"Find the id of the order whose shipment tracking number is "" var0 "" .",spider,"SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_TRACKING_NUMBER = ""var0"" ;"
"Which order's shipment tracking number is "" var0 "" ? Give me the id of the order .",spider,"SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_TRACKING_NUMBER = ""var0"" ;"
Find the ids of all the order items whose product id is var0 .,spider,SELECT ORDER_ITEMSalias0.ORDER_ITEM_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 WHERE ORDER_ITEMSalias0.PRODUCT_ID = var0 ;
Find all the order items whose product id is var0 . What are the order item ids ?,spider,SELECT ORDER_ITEMSalias0.ORDER_ITEM_ID FROM ORDER_ITEMS AS ORDER_ITEMSalias0 WHERE ORDER_ITEMSalias0.PRODUCT_ID = var0 ;
"List the name of all the distinct customers who have orders with status "" var0 "" .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"Which customers have orders with status "" var0 "" ? Give me the customer names .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"Find the details of all the distinct customers who have orders with status "" var0 "" .",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" ;"
"What are the distinct customers who have orders with status "" var0 "" ? Give me the customer details ?",spider,"SELECT DISTINCT CUSTOMERSalias0.CUSTOMER_DETAILS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" ;"
What is the name of the customer who has the most orders ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which customer made the most orders ? Find the customer name .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the customer who has the largest number of orders ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the customer who made the most orders .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the customer id of the customer who has the most orders ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the id of the customer who made the most orders .,spider,SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
"Give me a list of id and status of orders which belong to the customer named "" var0 "" .",spider,"SELECT ORDERSalias0.ORDER_ID , ORDERSalias0.ORDER_STATUS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Which orders are made by the customer named "" var0 "" ? Give me the order ids and status .",spider,"SELECT ORDERSalias0.ORDER_ID , ORDERSalias0.ORDER_STATUS FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"Find the dates of orders which belong to the customer named "" var0 "" .",spider,"SELECT ORDERSalias0.DATE_ORDER_PLACED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
"What are the dates of the orders made by the customer named "" var0 "" ?",spider,"SELECT ORDERSalias0.DATE_ORDER_PLACED FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE CUSTOMERSalias0.CUSTOMER_NAME = ""var0"" ;"
Give me the names of customers who have placed orders between var0 and var1 .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= ""var1"" AND ORDERSalias0.DATE_ORDER_PLACED >= ""var0"" ;"
Which customers made orders between var0 and var1 ? Find their names .,spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= ""var1"" AND ORDERSalias0.DATE_ORDER_PLACED >= ""var0"" ;"
Give me a list of distinct product ids from orders placed between var0 and var1 ?,spider,"SELECT DISTINCT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= ""var1"" AND ORDERSalias0.DATE_ORDER_PLACED >= ""var0"" ;"
What are the distinct ids of products ordered between var0 and var1 ? ?,spider,"SELECT DISTINCT ORDER_ITEMSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE ORDERSalias0.DATE_ORDER_PLACED <= ""var1"" AND ORDERSalias0.DATE_ORDER_PLACED >= ""var0"" ;"
"Find the names of the customers who have order status both "" var0 "" and "" var1 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = ""var1"" ;"
"Which customers have both "" var0 "" and "" var1 "" as order status ? List the customer names .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = ""var1"" ;"
"Find the id of the customers who have order status both "" var0 "" and "" var1 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = ""var1"" ;"
"Which customers have both "" var0 "" and "" var1 "" as order status ? List the customer ids .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID WHERE ORDERSalias0.ORDER_STATUS = ""var0"" INTERSECT SELECT CUSTOMERSalias1.CUSTOMER_ID FROM CUSTOMERS AS CUSTOMERSalias1 JOIN ORDERS AS ORDERSalias1 ON ORDERSalias1.CUSTOMER_ID = CUSTOMERSalias1.CUSTOMER_ID WHERE ORDERSalias1.ORDER_STATUS = ""var1"" ;"
When was the order placed whose shipment tracking number is var0 ? Give me the date .,spider,SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.SHIPMENT_TRACKING_NUMBER = var0 ;
On which day was the order placed whose shipment tracking number is var0 ?,spider,SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.SHIPMENT_TRACKING_NUMBER = var0 ;
What is the placement date of the order whose invoice number is var0 ?,spider,SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.INVOICE_NUMBER = var0 ;
On what day was the order with invoice number var0 placed ?,spider,SELECT ORDERSalias0.DATE_ORDER_PLACED FROM ORDERS AS ORDERSalias0 JOIN SHIPMENTS AS SHIPMENTSalias0 ON SHIPMENTSalias0.ORDER_ID = ORDERSalias0.ORDER_ID WHERE SHIPMENTSalias0.INVOICE_NUMBER = var0 ;
List the count and id of each product in all the orders .,spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;"
"For each product , return its id and the number of times it was ordered .",spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;"
List the name and count of each product in all orders .,spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;"
"For each product , show its name and the number of times it was ordered .",spider,"SELECT COUNT( * ) , PRODUCTSalias0.PRODUCT_NAME FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID GROUP BY PRODUCTSalias0.PRODUCT_ID ;"
Find the ids of orders which are shipped after var0 .,spider,"SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE > ""var0"" ;"
Which orders have shipment after var0 ? Give me the order ids .,spider,"SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE > ""var0"" ;"
Find the id of the order which is shipped most recently .,spider,SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE = ( SELECT MAX( SHIPMENTSalias1.SHIPMENT_DATE ) FROM SHIPMENTS AS SHIPMENTSalias1 ) ;
Which order has the most recent shipment ? Give me the order id .,spider,SELECT SHIPMENTSalias0.ORDER_ID FROM SHIPMENTS AS SHIPMENTSalias0 WHERE SHIPMENTSalias0.SHIPMENT_DATE = ( SELECT MAX( SHIPMENTSalias1.SHIPMENT_DATE ) FROM SHIPMENTS AS SHIPMENTSalias1 ) ;
List the names of all distinct products in alphabetical order .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_NAME ;
Sort all the distinct products in alphabetical order .,spider,SELECT DISTINCT PRODUCTSalias0.PRODUCT_NAME FROM PRODUCTS AS PRODUCTSalias0 ORDER BY PRODUCTSalias0.PRODUCT_NAME ;
List the ids of all distinct orders ordered by placed date .,spider,SELECT DISTINCT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED ;
"What are ids of the all distinct orders , sorted by placement date ?",spider,SELECT DISTINCT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 ORDER BY ORDERSalias0.DATE_ORDER_PLACED ;
What is the id of the order which has the most items ?,spider,SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID GROUP BY ORDERSalias0.ORDER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which order deals with the most items ? Return the order id .,spider,SELECT ORDERSalias0.ORDER_ID FROM ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 ON ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID GROUP BY ORDERSalias0.ORDER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the invoice numbers which are created before var0 or after var1 .,spider,"SELECT INVOICESalias0.INVOICE_NUMBER FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.INVOICE_DATE < ""var0"" OR INVOICESalias0.INVOICE_DATE > ""var1"" ;"
What are the invoice numbers created before var0 or after var1 ?,spider,"SELECT INVOICESalias0.INVOICE_NUMBER FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.INVOICE_DATE < ""var0"" OR INVOICESalias0.INVOICE_DATE > ""var1"" ;"
Find the distinct details of invoices which are created before var0 or after var1 .,spider,"SELECT DISTINCT INVOICESalias0.INVOICE_DETAILS FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.INVOICE_DATE < ""var0"" OR INVOICESalias0.INVOICE_DATE > ""var1"" ;"
What are the distinct details of invoices created before var0 or after var1 ?,spider,"SELECT DISTINCT INVOICESalias0.INVOICE_DETAILS FROM INVOICES AS INVOICESalias0 WHERE INVOICESalias0.INVOICE_DATE < ""var0"" OR INVOICESalias0.INVOICE_DATE > ""var1"" ;"
"For each customer who has at least two orders , find the customer name and number of orders made .",spider,"SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
Which customers have made at least two orders ? Give me each customer name and number of orders made .,spider,"SELECT COUNT( * ) , CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var0 ;"
Find the name of the customers who have at most two orders .,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) <= var0 ;
What are the names of the customers who have made two or less orders ?,spider,SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM ORDERS AS ORDERSalias0 JOIN CUSTOMERS AS CUSTOMERSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) <= var0 ;
"List the names of the customers who have once bought product "" var0 "" .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var1 ;"
"What are the names of the customers who bought product "" var0 "" at least once ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE PRODUCTSalias0.PRODUCT_NAME = ""var0"" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var1 ;"
"List the names of customers who have once canceled the purchase of the product "" varvar2 "" (the item status is "" var0"") .",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE ORDER_ITEMSalias0.ORDER_ITEM_STATUS = ""var0"" AND PRODUCTSalias0.PRODUCT_NAME = ""var1"" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var2 ;"
"Which customers have ever canceled the purchase of the product "" varvar2 "" (the item status is "" var0"") ?",spider,"SELECT CUSTOMERSalias0.CUSTOMER_NAME FROM CUSTOMERS AS CUSTOMERSalias0 JOIN ORDERS AS ORDERSalias0 JOIN ORDER_ITEMS AS ORDER_ITEMSalias0 JOIN PRODUCTS AS PRODUCTSalias0 ON ORDERSalias0.CUSTOMER_ID = CUSTOMERSalias0.CUSTOMER_ID AND ORDER_ITEMSalias0.ORDER_ID = ORDERSalias0.ORDER_ID AND PRODUCTSalias0.PRODUCT_ID = ORDER_ITEMSalias0.PRODUCT_ID WHERE ORDER_ITEMSalias0.ORDER_ITEM_STATUS = ""var0"" AND PRODUCTSalias0.PRODUCT_NAME = ""var1"" GROUP BY CUSTOMERSalias0.CUSTOMER_ID HAVING COUNT( * ) >= var2 ;"
How many architects are var0 ?,spider,"SELECT COUNT( * ) FROM ARCHITECT AS ARCHITECTalias0 WHERE ARCHITECTalias0.GENDER = ""var0"" ;"
"List the name , nationality and id of all var0 architects ordered by their names lexicographically .",spider,"SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 WHERE GENDER = ""var0"" ORDER BY ARCHITECTalias0.NAME ;"
What is the maximum length in meters for the bridges and what are the architects ' names ?,spider,"SELECT ARCHITECTalias0.NAME , MAX( BRIDGEalias0.LENGTH_METERS ) FROM BRIDGE AS BRIDGEalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID ;"
What is the average length in feet of the bridges ?,spider,SELECT AVG( BRIDGEalias0.LENGTH_FEET ) FROM BRIDGE AS BRIDGEalias0 ;
What are the names and year of construction for the mills of ' var0 ' type ?,spider,"SELECT MILLalias0.BUILT_YEAR , MILLalias0.NAME FROM MILL AS MILLalias0 WHERE MILLalias0.TYPE = ""var0"" ;"
What are the distinct names and nationalities of the architects who have ever built a mill ?,spider,"SELECT DISTINCT ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 JOIN MILL AS MILLalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID ;"
What are the names of the mills which are not located in ' var0 ' ?,spider,"SELECT MILLalias0.NAME FROM MILL AS MILLalias0 WHERE MILLalias0.LOCATION != ""var0"" ;"
What are the distinct types of mills that are built by var0 or var1 architects ?,spider,"SELECT DISTINCT MILLalias0.TYPE FROM MILL AS MILLalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID WHERE ARCHITECTalias0.NATIONALITY = ""var0"" OR ARCHITECTalias0.NATIONALITY = ""var1"" ;"
What are the ids and names of the architects who built at least var0 bridges ?,spider,"SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME FROM ARCHITECT AS ARCHITECTalias0 JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID HAVING COUNT( * ) >= var0 ;"
"What is the id , name and nationality of the architect who built most mills ?",spider,"SELECT ARCHITECTalias0.ID , ARCHITECTalias0.NAME , ARCHITECTalias0.NATIONALITY FROM ARCHITECT AS ARCHITECTalias0 JOIN MILL AS MILLalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID ORDER BY COUNT( MILLalias0.* ) DESC LIMIT 1 ;"
"What are the ids , names and genders of the architects who built two bridges or one mill ?",spider,"SELECT ARCHITECTalias0.GENDER , ARCHITECTalias0.ID , ARCHITECTalias0.NAME FROM ARCHITECT AS ARCHITECTalias0 JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID GROUP BY ARCHITECTalias0.ID HAVING COUNT( * ) = var0 UNION SELECT ARCHITECTalias1.GENDER , ARCHITECTalias1.ID , ARCHITECTalias1.NAME FROM ARCHITECT AS ARCHITECTalias1 JOIN MILL AS MILLalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias1.ID GROUP BY ARCHITECTalias1.ID HAVING COUNT( MILLalias0.* ) = var1 ;"
What is the location of the bridge named ' var0 ' or ' var1 ' ?,spider,"SELECT BRIDGEalias0.LOCATION FROM BRIDGE AS BRIDGEalias0 WHERE BRIDGEalias0.NAME = ""var0"" OR BRIDGEalias0.NAME = ""var1"" ;"
Which of the mill names contains the french word ' var0 ' ?,spider,"SELECT MILLalias0.NAME FROM MILL AS MILLalias0 WHERE MILLalias0.NAME LIKE ""var0"" ;"
What are the distinct name of the mills built by the architects who have also built a bridge longer than var0 meters ?,spider,SELECT DISTINCT MILLalias0.NAME FROM MILL AS MILLalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON MILLalias0.ARCHITECT_ID = ARCHITECTalias0.ID JOIN BRIDGE AS BRIDGEalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID WHERE BRIDGEalias0.LENGTH_METERS > var0 ;
"What is the most common mill type , and how many are there ?",spider,"SELECT COUNT( MILLalias0.* ) , MILLalias0.TYPE FROM MILL AS MILLalias0 GROUP BY TYPE ORDER BY COUNT( MILLalias0.* ) DESC LIMIT 1 ;"
How many architects haven't built a mill before year var0 ?,spider,SELECT COUNT( * ) FROM ARCHITECT AS ARCHITECTalias0 WHERE ARCHITECTalias0.ID NOT IN ( SELECT MILLalias0.ARCHITECT_ID FROM MILL AS MILLalias0 WHERE MILLalias0.BUILT_YEAR < var0 ) ;
"show the name of all bridges that was designed by american archtect , and sort the result by the bridge feet length .",spider,"SELECT BRIDGEalias0.NAME FROM BRIDGE AS BRIDGEalias0 JOIN ARCHITECT AS ARCHITECTalias0 ON BRIDGEalias0.ARCHITECT_ID = ARCHITECTalias0.ID WHERE ARCHITECTalias0.NATIONALITY = ""var0"" ORDER BY BRIDGEalias0.LENGTH_FEET ;"
How many book clubs are there ?,spider,SELECT COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
Count the number of book clubs .,spider,SELECT COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
"show the titles , and authors or editors for all books made after the year var0 .",spider,"SELECT BOOK_CLUBalias0.AUTHOR_OR_EDITOR , BOOK_CLUBalias0.BOOK_TITLE FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR > var0 ;"
What are the titles and authors or editors that correspond to books made after var0 ?,spider,"SELECT BOOK_CLUBalias0.AUTHOR_OR_EDITOR , BOOK_CLUBalias0.BOOK_TITLE FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR > var0 ;"
Show all distinct publishers for books .,spider,SELECT DISTINCT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
What are all the different book publishers ?,spider,SELECT DISTINCT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 ;
"Show the years , book titles , and publishers for all books , in descending order by year .",spider,"SELECT BOOK_CLUBalias0.BOOK_TITLE , BOOK_CLUBalias0.PUBLISHER , BOOK_CLUBalias0.YEAR FROM BOOK_CLUB AS BOOK_CLUBalias0 ORDER BY BOOK_CLUBalias0.YEAR DESC ;"
"What are the years , titles , and publishers for all books , ordered by year descending ?",spider,"SELECT BOOK_CLUBalias0.BOOK_TITLE , BOOK_CLUBalias0.PUBLISHER , BOOK_CLUBalias0.YEAR FROM BOOK_CLUB AS BOOK_CLUBalias0 ORDER BY BOOK_CLUBalias0.YEAR DESC ;"
Show all publishers and the number of books for each publisher .,spider,"SELECT BOOK_CLUBalias0.PUBLISHER , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.PUBLISHER ;"
How many books are there for each publisher ?,spider,"SELECT BOOK_CLUBalias0.PUBLISHER , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.PUBLISHER ;"
What is the publisher with most number of books ?,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the publisher that has published the most books .,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY PUBLISHER ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all book categories and the number of books in each category .,spider,"SELECT BOOK_CLUBalias0.CATEGORY , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.CATEGORY ;"
How many books fall into each category ?,spider,"SELECT BOOK_CLUBalias0.CATEGORY , COUNT( * ) FROM BOOK_CLUB AS BOOK_CLUBalias0 GROUP BY BOOK_CLUBalias0.CATEGORY ;"
List categories that have at least two books after year var0 .,spider,SELECT BOOK_CLUBalias0.CATEGORY FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE YEAR > var0 GROUP BY BOOK_CLUBalias0.CATEGORY HAVING COUNT( * ) >= var1 ;
What categories have two or more corresponding books that were made after var0 ?,spider,SELECT BOOK_CLUBalias0.CATEGORY FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE YEAR > var0 GROUP BY BOOK_CLUBalias0.CATEGORY HAVING COUNT( * ) >= var1 ;
Show publishers with a book published in var0 and a book in var1 .,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR = var0 INTERSECT SELECT BOOK_CLUBalias1.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias1 WHERE BOOK_CLUBalias1.YEAR = var1 ;
What are the publishers who have published a book in both var0 and var1 ?,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 WHERE BOOK_CLUBalias0.YEAR = var0 INTERSECT SELECT BOOK_CLUBalias1.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias1 WHERE BOOK_CLUBalias1.YEAR = var1 ;
Show all publishers which do not have a book in var0 .,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 EXCEPT SELECT BOOK_CLUBalias1.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias1 WHERE BOOK_CLUBalias1.YEAR = var0 ;
Which publishers did not publish a book in var0 ?,spider,SELECT BOOK_CLUBalias0.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias0 EXCEPT SELECT BOOK_CLUBalias1.PUBLISHER FROM BOOK_CLUB AS BOOK_CLUBalias1 WHERE BOOK_CLUBalias1.YEAR = var0 ;
"Show all movie titles , years , and directors , ordered by budget .",spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 ORDER BY MOVIEalias0.BUDGET_MILLION ;"
"What are the titles , years , and directors of all movies , ordered by budget in millions ?",spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE , MOVIEalias0.YEAR FROM MOVIE AS MOVIEalias0 ORDER BY MOVIEalias0.BUDGET_MILLION ;"
How many movie directors are there ?,spider,SELECT COUNT( DISTINCT MOVIEalias0.DIRECTOR ) FROM MOVIE AS MOVIEalias0 ;
Count the number of different directors .,spider,SELECT COUNT( DISTINCT MOVIEalias0.DIRECTOR ) FROM MOVIE AS MOVIEalias0 ;
What is the title and director for the movie with highest worldwide gross in the year var0 or before ?,spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE YEAR <= var0 ORDER BY MOVIEalias0.GROSS_WORLDWIDE DESC LIMIT 1 ;"
Return the title and director of the movie released in the year var0 or earlier that had the highest worldwide gross .,spider,"SELECT MOVIEalias0.DIRECTOR , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE YEAR <= var0 ORDER BY MOVIEalias0.GROSS_WORLDWIDE DESC LIMIT 1 ;"
Show all director names who have a movie in both year var1 and var0 .,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = var0 INTERSECT SELECT MOVIEalias1.DIRECTOR FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.YEAR = var1 ;
Which directors had a movie both in the year var1 and var0 ?,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = var0 INTERSECT SELECT MOVIEalias1.DIRECTOR FROM MOVIE AS MOVIEalias1 WHERE MOVIEalias1.YEAR = var1 ;
Show all director names who have a movie in the year var0 or var1 .,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = var0 OR MOVIEalias0.YEAR = var1 ;
Which directors had a movie in either var0 or var1 ?,spider,SELECT MOVIEalias0.DIRECTOR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR = var0 OR MOVIEalias0.YEAR = var1 ;
"What is the average , maximum , and minimum budget for all movies before var0 .",spider,"SELECT AVG( MOVIEalias0.BUDGET_MILLION ) , MAX( MOVIEalias0.BUDGET_MILLION ) , MIN( MOVIEalias0.BUDGET_MILLION ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;"
"Return the average , maximum , and minimum budgets in millions for movies made before the year var0 .",spider,"SELECT AVG( MOVIEalias0.BUDGET_MILLION ) , MAX( MOVIEalias0.BUDGET_MILLION ) , MIN( MOVIEalias0.BUDGET_MILLION ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.YEAR < var0 ;"
List all company names with a book published by var0 .,spider,"SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM CULTURE_COMPANY AS CULTURE_COMPANYalias0 JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE BOOK_CLUBalias0.PUBLISHER = ""var0"" ;"
What are all the company names that have a book published by var0 ?,spider,"SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM CULTURE_COMPANY AS CULTURE_COMPANYalias0 JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE BOOK_CLUBalias0.PUBLISHER = ""var0"" ;"
Show the movie titles and book titles for all companies in var0 .,spider,"SELECT BOOK_CLUBalias0.BOOK_TITLE , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE CULTURE_COMPANYalias0.INCORPORATED_IN = ""var0"" ;"
What are the titles of movies and books corresponding to companies incorporated in var0 ?,spider,"SELECT BOOK_CLUBalias0.BOOK_TITLE , MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID JOIN BOOK_CLUB AS BOOK_CLUBalias0 ON CULTURE_COMPANYalias0.BOOK_CLUB_ID = BOOK_CLUBalias0.BOOK_CLUB_ID WHERE CULTURE_COMPANYalias0.INCORPORATED_IN = ""var0"" ;"
Show all company names with a movie directed in year var0 .,spider,SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID WHERE MOVIEalias0.YEAR = var0 ;
What are all company names that have a corresponding movie directed in the year var0 ?,spider,SELECT CULTURE_COMPANYalias0.COMPANY_NAME FROM MOVIE AS MOVIEalias0 JOIN CULTURE_COMPANY AS CULTURE_COMPANYalias0 ON MOVIEalias0.MOVIE_ID = CULTURE_COMPANYalias0.MOVIE_ID WHERE MOVIEalias0.YEAR = var0 ;
what is the biggest city in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what var0 city has the largest population,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the largest city in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
where is the most populated area of var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
which city in var0 has the largest population,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what cities in var0 have the highest number of citizens,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what cities in var0 have the highest populations,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the most populous city in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the largest city in var0 by population,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the largest city of var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the city in var0 with the largest population,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
which rivers run through the state with the largest city in the us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ;
how big is var0,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the area of var0,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how large is var0,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the area of the var0 state,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the size of var0,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the area of var0 in square kilometers,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many people live in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many people reside in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many residents live in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how much population does var0 have,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what are the population of var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the population of var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many people are in the state of var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what can you tell me about the population of var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many people are there in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many citizens in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many people stay in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many citizens live in var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what state has the smallest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the least populous state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the state with the lowest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
give me the cities in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
tell me what cities are in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
what cities are located in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
what are the cities in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
what cities in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
give me the cities which are in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
what is the area of the state with the capital var0,spider,"SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
give me the lakes in var0,spider,"SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME = ""var0"" ;"
name the major lakes in var1,spider,"SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > var0 AND LAKEalias0.STATE_NAME = ""var1"" ;"
what are the states,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;
list the states,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;
give me all the states of usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 ;
which states do var0 river flow through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states does the var0 river run through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states border the var0 river,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
which states border the var0 river,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states does the var0 run through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
where is the var0 river,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
which states does the var0 river run through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
which states does the var0 run through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
which states does the var0 river pass through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what are the states that the var0 run through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
which state has the var0 river,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states have rivers named var0,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
through which states does the var0 flow,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states are next to the var0,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
through which states does the var0 run,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what states does the var0 river go through,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what state has the largest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the most populous state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what state is the largest in population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
which state has the biggest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
which state has the greatest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
which state has the most population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what state has the most people,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
which state has the most people,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the most populous state in the us,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what state has the highest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the lowest elevation in var0,spider,"SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the highest point in each state whose lowest point is sea level,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT , HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = var0 ;"
what is the length of the longest river in the usa,spider,SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
how long is the longest river in the usa,spider,SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the longest river flowing through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the largest river in var0 state,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the longest river in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the biggest river in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the longest river that flows through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what are the biggest rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
how many rivers are in var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
give me the number of rivers in var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
how many rivers does var0 have,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
how many rivers are there in var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
how many rivers run through var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
how many rivers are found in var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
how many rivers in var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what states neighbor var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
which states border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what states border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
give me the states that border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what state borders var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what states are next to var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what states surround var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
which state borders var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the neighboring states for var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
which states adjoin var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
states bordering var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
which state border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what is the adjacent state of var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
name all the rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what are all the rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what are the rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what rivers are in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what rivers are there in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what rivers run through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what rivers flow through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what river flows through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what are the rivers in the state of var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
name the rivers in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what are the rivers of var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
which rivers are in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
which rivers flow through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what is the river that cross over var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what river runs through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE = ""var0"" ;"
what state is var0 in,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
where is var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
var0 is in what state,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what states have cities named var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
which states have cities named var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
which state is var0 in,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what states have a city named var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what state has the city var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what states have towns named var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what state is var0 located in,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
in which state is var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
which state is the city var0 located in,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what states in the united states have a city of var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the population of the state with the largest area,spider,SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the population of the largest state,spider,SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
how many people live in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the population of var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many people lived in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
number of people in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the population of var0 city,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how big is the city of var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
population of var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the population in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
people in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many people in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many inhabitants does var0 have,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
number of citizens in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many citizens in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the smallest city in var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
which states lie on the largest river in the united states,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
which states does the longest river run through,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
which state has the longest river,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what are the states through which the longest river runs,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
which states does the longest river cross,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the population density of the state with the smallest area,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the population density of the smallest state,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
which states have points higher than the highest point in var0,spider,"SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ""var0"" ) ;"
which states have points that are higher than the highest point in var0,spider,"SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ""var0"" ) ;"
what states high point are higher than that of var0,spider,"SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ""var0"" ) ;"
what is the highest elevation in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
how high is the highest point of var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
how tall is the highest point in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the highest point in var0 in meters,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
how high is the highest point in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
give me the longest river that passes through the us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
which is the longest river in usa,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the longest river in america,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
name the longest river in us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what river is the longest one in the united states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the longest river in the us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the longest river,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the longest river in the united states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what state has the city with the largest population,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what state has the largest city,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
which state has the largest city,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what state has the city with the most population,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the smallest city in the largest state,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what state is the biggest,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the state with the largest area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what state has the largest area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the biggest state in continental us,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
state the state with the largest area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the largest state in usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the biggest state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the biggest state in the usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
give me the largest state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the largest state in the us,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the largest state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what are the highest points of states surrounding var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
what are the high points of states surrounding var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
what is the highest point in states bordering var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY HIGHLOWalias0.HIGHEST_ELEVATION DESC LIMIT 1 ;"
what is the highest point in the states bordering var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY HIGHLOWalias0.HIGHEST_ELEVATION DESC LIMIT 1 ;"
what is the state with the lowest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the lowest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the lowest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the smallest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the sparsest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the sparsest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the least population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the least population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the smallest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
where is the highest point in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the highest point in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the high point of var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the highest mountain in var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
could you tell me what is the highest point in the state of var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what states have no bordering state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
name the states which have no surrounding states,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
which states border no other states,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 ) ;
what is the area of the state with the smallest population density,spider,SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
count the states which have elevations lower than what var0 has,spider,"SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION < ( SELECT HIGHLOWalias1.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ""var0"" ) ;"
how high is var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = ""var0"" ;"
how tall is var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = ""var0"" ;"
what is the maximum elevation of var0,spider,"SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_POINT = ""var0"" ;"
how high is the highest point in america,spider,SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
what is the highest elevation in the united states,spider,SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
what is the elevation of the highest point in the usa,spider,SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
what is the height of the highest point in the usa,spider,SELECT MAX( HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 ;
how long is the var0 river,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what is the length of the var0 river,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what length is the var0,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how long is the var0,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how long is the var0 river in miles,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how long is var0,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how long is the longest river in var0,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the length of the longest river that runs through var0,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
how many capitals does var0 have,spider,"SELECT COUNT( STATEalias0.CAPITAL ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
how many cities are there in the united states,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;
how many cities does the usa have,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;
how many cities are there in the us,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;
how many cities are there in usa,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;
how many cities are there in us,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 ;
how many major cities are there,spider,SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 ;
how many citizens does the biggest city have in the usa,spider,SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
how many var0 rivers are there,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how many rivers are called var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what is the population of var0 var1,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" AND CITYalias0.STATE_NAME = ""var1"" ;"
how many people live in var0 var1,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" AND CITYalias0.STATE_NAME = ""var1"" ;"
how many people live in the biggest city in var0 state,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
how large is the largest city in var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
how many people live in the capital of var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ) ;"
what is the size of the capital of var0,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ) ;"
how many people live in the united states,spider,SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
what is the combined population of all 50 states,spider,SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
how many states are in the usa,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states are there,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states are there in the usa,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states does usa have,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states are in the united states,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states are there in united states,spider,SELECT COUNT( STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 ;
how many states border var0,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
how many states does var0 border,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
var0 borders how many states,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
number of states bordering var0,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what is the number of neighboring states for var0,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
how many states border the state with the largest population,spider,SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
how many states do not have rivers,spider,SELECT COUNT( DISTINCT STATEalias0.STATE_NAME ) FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
how many states have a higher point than the highest point of the state with the largest capital city in the us,spider,SELECT COUNT( HIGHLOWalias0.STATE_NAME ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION > ( SELECT HIGHLOWalias1.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ( SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ) ) ) ;
name the major rivers in var1,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = ""var1"" ;"
what are the major rivers in var1,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = ""var1"" ;"
what are major rivers in var1,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = ""var1"" ;"
what major rivers run through var1,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = ""var1"" ;"
through which states does the longest river in var0 run,spider,"SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) ;"
what are the capital city in var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the capital of var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the capital of the var0 state,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is capital of var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the capital of the state var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
can you tell me the capital of var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what are the capitals of states that border var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the capital cities of the states which border var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the capitals of the states that border var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
which capitals are in the states that border var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the cities in states through which the var0 runs,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the cities of the state with the highest point,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
what are the highest points of all the states,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 ;
what are the major cities in var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what are the major cities in the state of var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what major cities are located in var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
show major cities in var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what are the names of the major cities in var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what are the major cities of var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the major cities in var1,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what are the major cities in states through which the var2 runs,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var1 AND RIVERalias0.RIVER_NAME = ""var2"" ) ;"
what are the major cities in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 ;
what are the major cities of the united states,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 ;
what are the major cities of the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 ;
what are the population densities of each us state,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 ;
what are the populations of states through which the var0 river run,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of states through which the var0 runs,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of the states through which the var0 runs,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of states through which the var0 river runs,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of the states through which the var0 run,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of the states through which the var0 river run,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of states through which the var0 run,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of the states through which the var0 river runs,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what are the populations of states which border var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the populations of the major cities of var1,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what are the populations of all the major cities in var1,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what is the population of the major cities in var1,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
what city has the most people,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what city in the united states has the highest population density,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the most populous city,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
which us city has the highest population density,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the biggest city in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
whats the largest city,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what city has the largest population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the biggest city in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the biggest city in usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the biggest capital city in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is the largest capital city in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is the largest state capital in population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is the largest capital,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is the most populated capital in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what capital is the largest in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what capital has the largest population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is largest capital,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what is the capital of states that have cities named var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN CITY AS CITYalias0 ON STATEalias0.STATE_NAME = CITYalias0.STATE_NAME WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what is the capital of the smallest state,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the capital of the state with the largest population density,spider,SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what is the capital of the state with the largest population,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the capital of the state with the most inhabitants,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
what is the capital of the state with the longest river,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
what is the combined area of all 50 states,spider,SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
what is the area of all the states combined,spider,SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
how many square kilometers in the us,spider,SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
what is the total area of the usa,spider,SELECT SUM( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
what is the density of the var0,spider,"SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the population density of var0,spider,"SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the density of var0,spider,"SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what is the highest mountain in the us,spider,SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
what is the highest mountain in us,spider,SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
what is the tallest mountain in america,spider,SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
what is the tallest mountain in the united states,spider,SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
what is the highest point in the state with capital var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ;"
what is the highest point in the state with the capital var0,spider,"SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ;"
what is the highest point in the usa,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point of the usa,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point in the country,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point in the us,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point in the united states,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point of the state with the smallest population density,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MIN( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ) ;
what is the largest city in smallest state through which the var0 runs,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"
what is the largest city in the smallest state in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the biggest city in the smallest state,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the largest state bordering var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the largest state that borders var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what state that borders var0 is the largest,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the longest river in the largest state,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the longest river in the states that border var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the longest river that flows through a state that borders var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the longest river that runs through a state that borders var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the longest river in the state with the most major cities,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE TRAVERSE = ( SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE POPULATION > var0 GROUP BY STATE_NAME ORDER BY COUNT( CITYalias0.CITY_NAME ) DESC LIMIT 1 ) ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;
what is the lowest point in var0,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the lowest point in var0 in meters,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the lowest point in the state of var0,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
where is the lowest point in var0,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the lowest point of var0,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
where is the lowest spot in var0,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
what is the lowest point in usa,spider,SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the lowest point in the united states,spider,SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
where is the lowest point in the us,spider,SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the lowest point of the us,spider,SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the lowest point of all states through which the var0 river runs through,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ORDER BY HIGHLOWalias0.LOWEST_ELEVATION LIMIT 1 ;"
which is the lowest point of the states that the var0 runs through,spider,"SELECT HIGHLOWalias0.LOWEST_POINT FROM HIGHLOW AS HIGHLOWalias0 WHERE STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ORDER BY HIGHLOWalias0.LOWEST_ELEVATION LIMIT 1 ;"
what is the most dense state in the usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the highest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the greatest density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the highest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the greatest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what state has the largest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what is the state with the largest density in usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what is the state with the largest population density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
which state has the largest density,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what is the most populous state through which the var0 runs,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ;"
what state which the var0 runs through has the largest population,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ;"
what is the population density of the largest state,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the population of the largest city in the state with the largest area,spider,SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MAX( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the population of the smallest state,spider,SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the population of the state with the highest population density,spider,SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
how many people live in the state with the largest population density,spider,SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.DENSITY = ( SELECT MAX( STATEalias1.DENSITY ) FROM STATE AS STATEalias1 ) ;
what is the smallest city in the usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the smallest city in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what city has the least population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the city with the smallest population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
what is the smallest state bordering var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the smallest state that borders var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
which state has the smallest area that borders var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the smallest state that the var0 river runs through,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ;"
what is the state with the smallest area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
which is the smallest state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
which state is the smallest,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the smallest state in the usa,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the smallest state by area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what state has the smallest area,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the total length of all rivers in the usa,spider,SELECT SUM( RIVERalias0.LENGTH ) FROM RIVER AS RIVERalias0 ;
what river flows through the most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
which river goes through the most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
which river runs through most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
which river traverses most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
what river traverses the most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
which river runs through the most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
what river runs through the most states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 GROUP BY ( RIVER_NAME ) ORDER BY COUNT( DISTINCT RIVERalias0.TRAVERSE ) DESC LIMIT 1 ;
what rivers are in states that border var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
which rivers run through states bordering var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
what rivers flow through states that var0 borders,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
what state bordering var0 has the largest population,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;"
which of the states bordering var0 has the largest population,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;"
what state that borders var0 has the highest population,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;"
what is the most populated state bordering var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ORDER BY STATEalias0.POPULATION DESC LIMIT 1 ;"
what state contains the highest point of those the var0 river traverses,spider,"SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) ;"
what state has the largest capital,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
which state ' s capital city is the largest,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
what state has the longest river,spider,SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what state has the smallest urban population,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) LIMIT 1 ;
what states border states that border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var0"" ) ;"
what states border states that the var0 runs through,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
which states border states through which the var0 traverses,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what states border states which the var0 runs through,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what states border var0 and have a major river,spider,"SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER = ""var0"" AND BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var1 ) ;"
what states border the most populous state,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
what are the states that border the state with the greatest population,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
what states border the state with the smallest area,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
which states border the state with the smallest area,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what states contain at least one major rivers,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
where are mountains,spider,SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 ;
where is the highest mountain of the united states,spider,SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
which state has the highest peak in the country,spider,SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 ) ;
where is the smallest city,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) ;
which is the density of the state that the largest river in the united states runs through,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
which is the highest peak not in var0,spider,"SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_ALTITUDE = ( SELECT MAX( MOUNTAINalias1.MOUNTAIN_ALTITUDE ) FROM MOUNTAIN AS MOUNTAINalias1 WHERE MOUNTAINalias1.STATE_NAME != ""var0"" ) ;"
which rivers do not run through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) ;"
what rivers do not run through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME NOT IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) ;"
which rivers do not run through var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.COUNTRY_NAME != ""var0"" ;"
which rivers run through states that border the state with the capital var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ) ;"
what rivers run through the states that border the state with the capital var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ) ;"
which state capital has the smallest population,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM STATE AS STATEalias0 JOIN CITY AS CITYalias1 ON STATEalias0.CAPITAL = CITYalias1.CITY_NAME ) ;
which state has the highest elevation,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
which state has the highest point,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what state has the highest elevation,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
in which state does the highest point in usa exist,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what state has highest elevation,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the state with the highest elevation in the united states,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the state that contains the highest point,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what state contains the highest point in the us,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
which state has the lowest elevation,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the name of the state with the lowest point,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the state with the lowest point,spider,SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
which state has the lowest point that borders var0,spider,"SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 WHERE HIGHLOWalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND HIGHLOWalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
which state has the smallest average urban population,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY STATE_NAME ORDER BY AVG( CITYalias0.POPULATION ) LIMIT 1 ;
which state is mount var0 in,spider,"SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = ""var0"" ;"
in what state is mount var0,spider,"SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = ""var0"" ;"
where is mount var0,spider,"SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = ""var0"" ;"
where is mount var0 located,spider,"SELECT MOUNTAINalias0.STATE_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = ""var0"" ;"
which states have a river,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ;
what states have rivers running through them,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ;
which states have a major city named var0,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" AND CITYalias0.POPULATION > var1 ;"
what is the largest city in a state that borders var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the largest city in states that border var0,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
how many rivers do not traverse the state with the capital var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE NOT IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ;"
what is the shortest river in var0,spider,"SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE = ""var0"" ) AND RIVERalias0.TRAVERSE = ""var1"" ;"
what are the major cities in the smallest state in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what is the population of the capital of the largest state through which the var0 runs,spider,"SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 JOIN RIVER AS RIVERalias0 ON STATEalias1.STATE_NAME = RIVERalias0.TRAVERSE WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) ;"
what is the shortest river in the usa,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the shortest river,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the shortest river in the us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the shortest river in the united states,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
which is the shortest river,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the capital of the state that borders the state that borders var0,spider,"SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var0"" ) ) ;"
what is the smallest city of the smallest state in the us,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MIN( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND CITYalias0.STATE_NAME IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the population of the largest state that borders var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what state is var0 the capital of,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
what states capital is var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
var0 is the capital of which state,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
what state has the capital var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
what rivers flow through the state with the largest population,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
what is the largest state that borders the state with the highest population,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.POPULATION = ( SELECT MAX( STATEalias3.POPULATION ) FROM STATE AS STATEalias3 ) ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.STATE_NAME FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.BORDER IN ( SELECT STATEalias4.STATE_NAME FROM STATE AS STATEalias4 WHERE STATEalias4.POPULATION = ( SELECT MAX( STATEalias5.POPULATION ) FROM STATE AS STATEalias5 ) ) ) ;
how many rivers are there in us,spider,SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 ;
name the 50 capitals in the usa,spider,SELECT DISTINCT STATEalias0.CAPITAL FROM STATE AS STATEalias0 ;
how many states have a city named var0,spider,"SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many states have a city called var0,spider,"SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many states have cities named var0,spider,"SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many states have cities or towns named var0,spider,"SELECT COUNT( CITYalias0.STATE_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
what state borders the state with the smallest population,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
what are the lakes in states bordering var0,spider,"SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
how many major cities are in var1,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
how many big cities are in var1,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
how many major cities are there in var1,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ""var1"" ;"
how high are the highest points of all the states,spider,SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 ;
how many states does the var0 run through,spider,"SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how many states does the var0 river flow through,spider,"SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
how many states does the var0 river run through,spider,"SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ;"
what is the longest river in the smallest state in the usa,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 WHERE RIVERalias1.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ) AND RIVERalias0.TRAVERSE IN ( SELECT STATEalias2.STATE_NAME FROM STATE AS STATEalias2 WHERE STATEalias2.AREA = ( SELECT MIN( STATEalias3.AREA ) FROM STATE AS STATEalias3 ) ) ;
what is the average population per square km in var0,spider,"SELECT STATEalias0.POPULATION / STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what states border states that border states that border var0,spider,"SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME IN ( SELECT BORDER_INFOalias2.BORDER FROM BORDER_INFO AS BORDER_INFOalias2 WHERE BORDER_INFOalias2.STATE_NAME = ""var0"" ) ) ;"
how many states border at least one other state,spider,SELECT COUNT( DISTINCT BORDER_INFOalias0.STATE_NAME ) FROM BORDER_INFO AS BORDER_INFOalias0 ;
what is the height of the highest mountain in var0,spider,"SELECT MAX( DISTINCT HIGHLOWalias0.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.STATE_NAME = ""var0"" ;"
how many states border var1 and border var0,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.BORDER IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var0"" ) AND BORDER_INFOalias0.STATE_NAME = ""var1"" ;"
how many major cities are in states bordering var1,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var1"" ) ;"
what is the total population of the states that border var0,spider,"SELECT SUM( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ;"
what are the major lakes in united states,spider,SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > var0 ;
show me all the major lakes in the us,spider,SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 WHERE LAKEalias0.AREA > var0 ;
name all the lakes of us,spider,SELECT LAKEalias0.LAKE_NAME FROM LAKE AS LAKEalias0 ;
how many major rivers cross var1,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 AND RIVERalias0.TRAVERSE = ""var1"" ;"
what state has the shortest river,spider,SELECT DISTINCT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
how many states are next to major rivers,spider,SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
what is the height of mount var0,spider,"SELECT MOUNTAINalias0.MOUNTAIN_ALTITUDE FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.MOUNTAIN_NAME = ""var0"" ;"
what states does the shortest river run through,spider,SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the highest point in the state with the smallest population,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MIN( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
which rivers run through the state with the lowest elevation in the usa,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
what rivers run through the state with the lowest point in the usa,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT HIGHLOWalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ) ;
what mountains are in var0,spider,"SELECT MOUNTAINalias0.MOUNTAIN_NAME FROM MOUNTAIN AS MOUNTAINalias0 WHERE MOUNTAINalias0.STATE_NAME = ""var0"" ;"
how many states have major rivers,spider,SELECT COUNT( RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH > var0 ;
what is the smallest state through which the longest river runs,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias2.TRAVERSE FROM RIVER AS RIVERalias2 WHERE RIVERalias2.LENGTH = ( SELECT MAX( RIVERalias3.LENGTH ) FROM RIVER AS RIVERalias3 ) ) ;
what is the largest state traversed by the var0 river,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ;"
what is the largest of the state that the var0 runs through,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT RIVERalias1.TRAVERSE FROM RIVER AS RIVERalias1 WHERE RIVERalias1.RIVER_NAME = ""var1"" ) ;"
how many rivers run through the states bordering var0,spider,"SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
what state has no rivers,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 ) ;
what is the capital of the largest state,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the capital city of the largest state in the us,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
how many cities are in var0,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
how many cities does var0 have,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.STATE_NAME = ""var0"" ;"
what is the area of the states,spider,SELECT STATEalias0.AREA FROM STATE AS STATEalias0 ;
how many states in the us does the shortest river run through,spider,SELECT COUNT( DISTINCT RIVERalias0.TRAVERSE ) FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( DISTINCT RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what rivers flow through states that border the state with the largest population,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ) ;
what are the major cities in the largest state,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what is the area of the smallest state,spider,SELECT STATEalias0.AREA FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
which states border the longest river in the usa,spider,SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MAX( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ) ;
what is the population density of the state with the smallest population,spider,SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MIN( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ;
how many states border the var0 river,spider,"SELECT COUNT( DISTINCT BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" ) ;"
what states have a capital that is the highest point in the state,spider,SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.CAPITAL = HIGHLOWalias0.HIGHEST_POINT ;
what is the population of the capital of the smallest state,spider,SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what is the population of the capital of the largest state,spider,SELECT CITYalias0.POPULATION FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ( SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what is the lowest point of the state with the largest area,spider,SELECT HIGHLOWalias0.LOWEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;
what states border states that border the state with the largest population,spider,SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 JOIN BORDER_INFO AS BORDER_INFOalias1 ON BORDER_INFOalias1.STATE_NAME = BORDER_INFOalias0.BORDER WHERE BORDER_INFOalias0.STATE_NAME IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 ) ) ;
what is the size of the largest state in the usa,spider,SELECT MAX( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
what is the area of the largest state,spider,SELECT MAX( STATEalias0.AREA ) FROM STATE AS STATEalias0 ;
which capitals are not major cities,spider,SELECT STATEalias0.CAPITAL FROM STATE AS STATEalias0 JOIN CITY AS CITYalias0 ON STATEalias0.CAPITAL = CITYalias0.CITY_NAME WHERE CITYalias0.POPULATION <= var0 ;
give me the cities in usa,spider,SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 ;
what is the highest point of the state with the largest area,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM STATE AS STATEalias0 JOIN HIGHLOW AS HIGHLOWalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.STATE_NAME IN ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.AREA = ( SELECT MAX( STATEalias2.AREA ) FROM STATE AS STATEalias2 ) ) ;
where is var0,spider,"SELECT STATEalias0.COUNTRY_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME = ""var0"" ;"
what state has the largest urban population,spider,SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 GROUP BY STATE_NAME ORDER BY SUM( CITYalias0.POPULATION ) DESC LIMIT 1 ;
what are the major rivers in the us,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 ;
how many cities named var0 are there in the usa,spider,"SELECT COUNT( CITYalias0.CITY_NAME ) FROM CITY AS CITYalias0 WHERE CITYalias0.CITY_NAME = ""var0"" ;"
how many people live in the smallest state bordering var0,spider,"SELECT STATEalias0.POPULATION FROM STATE AS STATEalias0 WHERE STATEalias0.POPULATION = ( SELECT MAX( STATEalias1.POPULATION ) FROM STATE AS STATEalias1 WHERE STATEalias1.STATE_NAME IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ) AND STATEalias0.STATE_NAME IN ( SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias1 WHERE BORDER_INFOalias1.STATE_NAME = ""var1"" ) ;"
what is the length of the var0 river in var1,spider,"SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME = ""var0"" AND RIVERalias0.TRAVERSE = ""var1"" ;"
what is the population density in the state with capital var0,spider,"SELECT STATEalias0.DENSITY FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ;"
how long is the shortest river in the usa,spider,SELECT RIVERalias0.LENGTH FROM RIVER AS RIVERalias0 WHERE RIVERalias0.LENGTH = ( SELECT MIN( RIVERalias1.LENGTH ) FROM RIVER AS RIVERalias1 ) ;
what is the elevation of var0,spider,"SELECT HIGHLOWalias0.LOWEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 WHERE HIGHLOWalias0.LOWEST_POINT = ""var0"" ;"
what is the average population of the us by state,spider,SELECT AVG( STATEalias0.POPULATION ) FROM STATE AS STATEalias0 ;
what rivers flow through the largest state,spider,SELECT RIVERalias0.RIVER_NAME FROM RIVER AS RIVERalias0 WHERE RIVERalias0.TRAVERSE IN ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
what states border states that border states that border states that border var0,spider,"SELECT BORDER_INFOalias1.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 JOIN BORDER_INFO AS BORDER_INFOalias1 ON BORDER_INFOalias1.STATE_NAME = BORDER_INFOalias0.BORDER JOIN BORDER_INFO AS BORDER_INFOalias2 ON BORDER_INFOalias2.BORDER = BORDER_INFOalias0.STATE_NAME JOIN BORDER_INFO AS BORDER_INFOalias3 ON BORDER_INFOalias3.BORDER = BORDER_INFOalias2.STATE_NAME WHERE BORDER_INFOalias3.STATE_NAME = ""var0"" ;"
how many states border on the state whose capital is var0,spider,"SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.CAPITAL = ""var0"" ) ;"
what are the major cities in the states through which the major river in var2 runs,spider,"SELECT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION > var0 AND CITYalias0.STATE_NAME IN ( SELECT RIVERalias0.TRAVERSE FROM RIVER AS RIVERalias0 WHERE RIVERalias0.RIVER_NAME IN ( SELECT RIVERalias1.RIVER_NAME FROM RIVER AS RIVERalias1 WHERE RIVERalias1.LENGTH > var1 AND RIVERalias1.TRAVERSE = ""var2"" ) ) ;"
which states does not border var0,spider,"SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.STATE_NAME NOT IN ( SELECT BORDER_INFOalias0.BORDER FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ""var0"" ) ;"
how many states border the largest state,spider,SELECT COUNT( BORDER_INFOalias0.BORDER ) FROM BORDER_INFO AS BORDER_INFOalias0 WHERE BORDER_INFOalias0.STATE_NAME = ( SELECT STATEalias0.STATE_NAME FROM STATE AS STATEalias0 WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ) ;
which state is the largest city in var0 in,spider,"SELECT CITYalias0.STATE_NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 WHERE CITYalias1.STATE_NAME = ""var0"" ) AND CITYalias0.STATE_NAME = ""var1"" ;"
what is capital of the state with the lowest point,spider,SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the biggest american city in a state with a river,spider,SELECT DISTINCT CITYalias0.CITY_NAME FROM CITY AS CITYalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = CITYalias0.STATE_NAME WHERE CITYalias0.POPULATION = ( SELECT MAX( CITYalias1.POPULATION ) FROM RIVER AS RIVERalias1 JOIN CITY AS CITYalias1 ON RIVERalias1.TRAVERSE = CITYalias1.STATE_NAME ) ;
how many rivers are in the state with the largest population,spider,SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM RIVER AS RIVERalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = RIVERalias0.TRAVERSE WHERE STATEalias0.STATE_NAME = ( SELECT STATEalias1.STATE_NAME FROM STATE AS STATEalias1 WHERE STATEalias1.POPULATION = ( SELECT MAX( STATEalias2.POPULATION ) FROM STATE AS STATEalias2 ) ) ;
what is the largest state that borders the state with the lowest point in the usa,spider,SELECT BORDER_INFOalias0.STATE_NAME FROM HIGHLOW AS HIGHLOWalias0 JOIN BORDER_INFO AS BORDER_INFOalias0 ON HIGHLOWalias0.STATE_NAME = BORDER_INFOalias0.BORDER JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = BORDER_INFOalias0.BORDER WHERE HIGHLOWalias0.LOWEST_ELEVATION = ( SELECT MIN( HIGHLOWalias1.LOWEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ORDER BY STATEalias0.AREA DESC LIMIT 1 ;
what is the capital of the state with the highest point,spider,SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the capital of the state with the highest elevation,spider,SELECT STATEalias0.CAPITAL FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
what is the highest point in the smallest state,spider,SELECT HIGHLOWalias0.HIGHEST_POINT FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.AREA = ( SELECT MIN( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
how many rivers are in the state with the highest point .,spider,SELECT COUNT( RIVERalias0.RIVER_NAME ) FROM HIGHLOW AS HIGHLOWalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ;
how high is the highest point in the largest state,spider,SELECT HIGHLOWalias0.HIGHEST_ELEVATION FROM HIGHLOW AS HIGHLOWalias0 JOIN STATE AS STATEalias0 ON STATEalias0.STATE_NAME = HIGHLOWalias0.STATE_NAME WHERE STATEalias0.AREA = ( SELECT MAX( STATEalias1.AREA ) FROM STATE AS STATEalias1 ) ;
what is the longest river in the state with the highest point,spider,SELECT RIVERalias0.RIVER_NAME FROM HIGHLOW AS HIGHLOWalias0 JOIN RIVER AS RIVERalias0 ON RIVERalias0.TRAVERSE = HIGHLOWalias0.STATE_NAME WHERE HIGHLOWalias0.HIGHEST_ELEVATION = ( SELECT MAX( HIGHLOWalias1.HIGHEST_ELEVATION ) FROM HIGHLOW AS HIGHLOWalias1 ) ORDER BY RIVERalias0.LENGTH DESC LIMIT 1 ;
papers that are coauthored by var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
papers written by var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
what are the papers that have var0 and var1 as co-authors,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
What papers have var0 and var1 written ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
what paper did var0 and var1 write together ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
Has var0 and var1 written a paper together ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
Papers by var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
papers by authors var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
What papers were written by authors var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
papers by var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
papers written by authors var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
When did var0 and var1 collaborate ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
what are the collaborations of var0 and var1 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
Have var0 and var1 written a paper together ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
var0 and var1 as co-authors,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
Does var0 ever collaborated with var1 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
Which papers have var0 and var1 as co-authors ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
papers coauthored by var0 and var1,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
What papers have been written by var0 and var1 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
What papers have been written by both var0 and var1 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
What papers have been written by var0 and var1 .,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
who has written the most var0 papers ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who is the most published author in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who has the most publications in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who has written the most papers on var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
List prominent scholars in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who wrote the most papers on var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
Who are the authors with the most published papers in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
top var0 author,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
top author in var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who published the most in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who published the most papers in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
How many citation var0 has ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0 citation count,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many citations does var0 have ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many citations does var0 have ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
number of citations of var0,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many citations does var0 have,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many times was var0 cited ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many citations does var0 has ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
papers at var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
papers in var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
Papers about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
Show me var0 papers .,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
what papers did var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
list papers published in var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
Papers on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
Has var0 written any papers in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 GROUP BY WRITESalias0.AUTHORID ;"
What papers has var0 written ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What papers has written by var0 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what did var0 write ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers where var0 is an author,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Papers authored by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0 papers,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Papers by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Papers written by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
which papers has var0 written ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers written by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What has var0 published ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Does var0 have any papers published ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0 ' s papers,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
show me papers by var0 .,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What papers are authored by var0 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers by var0 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What was var0 ' s latest paper ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
Latest paper by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What is the latest paper by var0 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What is var0 ' s latest paper ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What are the latest papers by var0 ?,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
most recent papers by var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
are there any var0 papers since var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 ;"
var0 papers later than var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 ;"
var0 later than var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 ;"
var0 papers published after var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 ;"
var0 papers since var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 ;"
does var0 publish a lot ?,spider,"SELECT COUNT( PAPERalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers did David M . Blei publish at var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers does David M . Blei have in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers has David M . Blei published in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
how many papers does David M . Blei have at var1,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
how many papers does David M . Blei have in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
how many David M . Blei papers are in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers David M . Blei has in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers does David M . Blei have in var1,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
List all academic papers on var0,spider,"SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = ""var0"" ;"
var0,spider,"SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = ""var0"" ;"
which var1 var0 papers have the most citations ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
Which paper from var1 var0 was cited most ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
most cited var1 var0 papers,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
which var1 var0 papers have been cited the most ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What papers were published at var3 in var2 about var1 applied to var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.TITLE = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
What papers were published at var3 ' 16 about var1 applied to var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.TITLE = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
How many papers are in var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
How many papers are about var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
how many papers about var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
How many papers are related to var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
How many papers has Christopher D . Manning written ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers does Christopher D . Manning have ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers has Christopher D . Manning ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers has Christopher D . Manning published ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers has Christopher D . Manning written ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Has Christopher D . Manning published any papers ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers has Christopher D . Manning published ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers does Christopher D . Manning have ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many paper does Christopher D . Manning have ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many publications does Christopher D . Manning have ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers does Christopher D . Manning have,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
number of papers written by Christopher D . Manning,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what kind of papers does var0 publish,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Keyphrases used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What keywords are in papers by var0 ?,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
keywords used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what keywords are used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
keyphrases used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
keyphrases by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
give me the keywords used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What topic does var0 write about ?,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what topics does var0 publish in,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
keywords in the papers written by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
keyphrases used by var0 .,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
topics used by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What conference does var0 publish in ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
conferences that var0 has published in,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
In which conferences does var0 typically publish ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
in what conferences does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What conferences does var0 publish in ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
At which conferences does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What conferences does var0 submit to ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
How many papers are there ?,spider,SELECT DISTINCT COUNT( DISTINCT PAPERID ) FROM PAPER AS PAPERalias0 ;
How many papers by var0 contain the keyphrases var1 ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
How many papers does var0 have in var1 area ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
How many var1 papers has var0 written ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
How many paper has var0 written about var1 ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What conferences did var0 submit to in var1 ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Where did var0 publish in var1,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What conferences did var0 publish in in var1 ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Where did var0 publish in var1 ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
var2 papers in var1 on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
What papers were published in var2 in var1 about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
papers on var0 appeared at var2 last year,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var0 papers from var2 var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
papers about var0 in var2 var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var2 papers in var1 in var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var2 papers in var1 about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
What papers were published at var2 in var1 were about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
papers on var0 appeared at var2 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
how many var0 papers did var2 var1 have ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
who published var0 papers at var2 var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
which papers in var2 var1 had var0 in them ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
what were some var0 based papers in var2 var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
List the popular publications on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Which paper should I read about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
top var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
List papers that has a keyword var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
var0 research papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers related to var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Papers about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers published in the area of var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
var0 experiments,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Show me the papers on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers that used var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers that mention var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Show me var0 papers .,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
var0 publications,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Fetch me some papers on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers on var0 experiments,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
What papers talk about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
What is the paper about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
Which papers are about about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
list papers that used var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers for var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
List papers that has keyword var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers with var0 in keyphrases,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
keyphrases used by var0 for each year,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR , DERIVED_TABLEalias0.KEYPHRASEID ;"
recent research interests of var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
recent papers by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
recent papers written by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
list papers published by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
citation count of var0 ' s papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
list papers by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
List of papers by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
conference papers of var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many var0 papers in var2 var1,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
how many var0 papers appeared in the proceeeding of var2 var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
how many var0 papers were published at var2 var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var0 var1 paper,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var1 by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
papers by var0 about var1,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var0 ' s paper about var1,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What are the papers of var0 in var1 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
papers var0 wrote about var1,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var0 ' s papers on var1,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What is the paper about var1 from var0 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
papers by var0 in var1 topic,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
I want the papers on keyphrase0 by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var1 papers by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What papers has var0 written on var1 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What papers has var0 written about var1 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var1 paper by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
Does var0 do var1 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
What papers has var0 written in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
papers by var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What did var0 published in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Papers written by var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What are the papers of var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
papers by var0 from var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Papers published in var1 by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
what has var0 done in the past year,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What papers did var0 publish last year ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
papers published in var1 by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
var0 ' s papers in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
var0 ' s papers in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
var0 publication var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Papers authored by var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Papers from var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
what papers are published by var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What var0 paper published in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
List the papers on var0 that were published in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
what are the papers in var1 about var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
Papers about var0 in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
papers at var1 related to var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
papers about var0 published at var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
var0 papers in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
papers on var0 var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
var0 papers used in var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
How many co-authors has var0 had ?,spider,"SELECT DISTINCT COUNT( DISTINCT AUTHORalias0.AUTHORID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND WRITESalias0.PAPERID IN ( SELECT WRITESalias1.PAPERID FROM WRITES AS WRITESalias1 JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME = ""var1"" ) ;"
keyphrases used by var0 in var1,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Keyphrases used by var0 in var1,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
keyphrases var0 used in papers written last year,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What are keyphrases by var0 in var1 ?,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
what author is most cited ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME , COUNT( CITEalias0.CITINGPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
journal articles by varvar1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.JOURNALID >= var1 ;"
Journal Papers by varvar1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.JOURNALID >= var1 ;"
best paper in var1 var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY PAPERalias0.PAPERID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
What was the best paper at var1 var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY PAPERalias0.PAPERID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
who published at var1 var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 var0 authors,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
authors of var1 var0 papers,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
List of authors var1 var0,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
author published var1 var0,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
who had papers at var1 var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
List of authors in var1 var0,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers were written on var0 this year ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 GROUP BY PAPERalias0.PAPERID HAVING COUNT( DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME ) > var2 ;"
How many papers run experiments on var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE ""var0"" ;"
How many papers used var0 dataset ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE ""var0"" ;"
How many papers written on var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE ""var0"" ;"
how many papers are based on var0,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE ""var0"" ;"
how many papers use var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME LIKE ""var0"" ;"
How many papers did var0 cite ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers does var0 cite,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers has var0 cited ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
When does var0 publish the first var1 paper ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ORDER BY PAPERalias0.YEAR ;"
var0 dataset,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
data sets for var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
list datasets for var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets for var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
Datasets with var0 information,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets used by var0 papers,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets in var0 papers,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
var0 datasets,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets in papers about var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets used for var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
large-scale datasets used in var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets with var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
datasets used for evaluating var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ;"
where does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID , VENUEalias0.VENUEID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
in what venues does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID , VENUEalias0.VENUEID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Where does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID , VENUEalias0.VENUEID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
how many papers appeared at var1 last year,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers were at var1 var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
how many papers accepted in var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers were published in var1 in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers on var1 in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
how many papers in var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers were accepted at var1 var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers are presented in var1 var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers published in var1 in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
how many papers published in var1 var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers were published in var1 var0 conference ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
How many papers was published in var1 in var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
what was the first var0 paper ?,spider,"SELECT DISTINCT DATASETalias0.DATASETID , PAPERalias0.YEAR FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR ASC ;"
what year was the first var0 paper published ?,spider,"SELECT DISTINCT DATASETalias0.DATASETID , PAPERalias0.YEAR FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DERIVED_TABLEalias2.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR ASC ;"
datasets mentioned at var0,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
what datasets do papers at var0 use most ?,spider,"SELECT DISTINCT DATASETalias0.DATASETID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
the papers on var1 by var0 at var3 in var2,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
How many papers were written on var0 in the past year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many papers were published on var0 in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many papers were written on var0 in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many papers were written on the var0 this year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
how many papers on var0 have been published in the past year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What papers were written on var0 this year ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
var0 var1 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What papers were written on var0 in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
which year had the most var0 papers ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
what year had the most var0 papers ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
what year had the most number of var0 papers ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
when were most var0 papers published ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who writes papers with var0 ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Who is a coauthor with var0 ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Who are var0 ' s co-authors,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Who has coauthored with var0 ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
co-authors of var0,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
author who wrote papers with var0,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
authors who collaborated with var0,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
who does var0 author with ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Who are var0 ' s coauthors,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
who are all the co-authors of var0 ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
who does var0 work with ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
who does var0 collaborate with ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Who are var0 ' s coauthors ?,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
coauthors of var0,spider,"SELECT DISTINCT AUTHORalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what datasets did var0 use ?,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what datasets are used in papers by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what datasets did var0 use in his papers ?,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what datasets were used by var0 ?,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
datasets used in papers written by var0 ?,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Datasets by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What datasets have var0 used,spider,"SELECT DISTINCT DERIVED_TABLEalias0.DATASETID FROM PAPER AS PAPERalias0 JOIN PAPERDATASET AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
recent var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
new var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What are the latest publications on var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
Most recent var0 conference ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
Show me some recent papers on var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What are some recent papers written in var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What is the most recent paper of var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What are recent papers on var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
Current research on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
latest var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
newest var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC ;"
What years did var0 publish papers in ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
In what years did var0 publish a paper ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
var0 ' s publications by year,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR ;"
How many papers does var0 publish each year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
number of papers by year from var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
how many papers var0 published each year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
who does var0 cite,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
what papers does var0 cite,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers citing var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
What papers cite var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Which papers cite var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
citations for var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
journal papers for varvar1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.JOURNALID >= var1 ;"
who has the most papers in var0 after var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who has written the most papers on var0 since var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who published the most in var0 after var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR > var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
How many citations does var0 ' s var1 paper have ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var0 papers earlier than var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
papers before var1 about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
var0 papers from before var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
papers about var0 from before var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
var0 papers before var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
what topics does var0 write about most ?,spider,"SELECT DISTINCT COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) , DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY DERIVED_TABLEalias0.KEYPHRASEID ORDER BY COUNT( DERIVED_TABLEalias0.KEYPHRASEID ) DESC ;"
How many papers related to var1 cited the dataset var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON PAPERalias0.PAPERID = DERIVED_TABLEalias1.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" ;"
most cited papers on var0,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
var0 top papers,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
List top papers for var0,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
var0 papers that have the most citations,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What is the paper about var0 of the most citation ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
Paper on var0 with most citations,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
var0 papers with most citations,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
most cited var0 papers,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
what are the var0 papers that have the most citations ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
highly cited var0 papers,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
most cited papers for var0,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
Most cited papers on var0,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What paper did var0 wrote in the 90s ?,spider,"SELECT DISTINCT PAPERalias0.YEAR , WRITESalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME LIKE ""var0"" AND PAPERalias0.YEAR LIKE ""var1"" ;"
What is the most cited paper by var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What is the highest cited paper by var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What is the most cited paper of var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What is var0 ' s highest cited paper ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
What paper by var0 has the most citation ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
what is the most cited paper of var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
what is var0 ' s most cited paper ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITEDPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITEDPAPERID ) DESC ;"
How many papers did michael i . jordan publish in var1 ?,spider,"SELECT DISTINCT COUNT( WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many papers does michael i . jordan have in var1 ?,spider,"SELECT DISTINCT COUNT( WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many papers did michael i . jordan publish in var1,spider,"SELECT DISTINCT COUNT( WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
count of var0 papers by author,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ;"
how many var0 papers by author,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ;"
number of var0 papers by author,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ;"
who wrote the most papers for var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who published papers in var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who wrote the most var1 papers in var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
most published author at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
who published the most papers in var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
Who published the most papers in var0 at var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
How many papers in var1 var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
number of papers published in var1 var0,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
papers from var0,spider,SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = var0 ;
var0 papers,spider,SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = var0 ;
What papers does var0 have in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
what paper has var0 published in var1 journal ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
what paper has var0 published in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
papers by var0 published at var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
Does var0 publish in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
What has var0 published at var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
What papers has var0 written at var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
Which paper did var0 present at var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
What is the paper with the most citation about var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
Fetch me the most cited publications for var0,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
topics at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
most common topics at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
most popular topics at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
hot topics at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
popular topics at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
which topics were most popular at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
topics popular at var1 var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
How many papers related to var0 in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
Papers on var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
which papers used var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
papers about var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
List the papers that used var0 dataset,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
papers using var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
papers that use var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
var0 papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
papers that used var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
Papers that use the var0 dataset,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
conferences in var0,spider,SELECT DISTINCT VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = var0 ;
how is the most cited author in var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
who is the most cited author at var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
what are some var1 papers that var0 did not write ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
are there any var1 papers not written by var0 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
what are var1 papers not written by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
var1 papers not written by var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME , PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
papers published in the last year,spider,SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR = ( SELECT MAX( PAPERalias1.YEAR ) FROM PAPER AS PAPERalias1 ) ;
When was var0 ' s first publication ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ;"
When was var0 ' s first paper written ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ;"
When did var0 publish ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ;"
Who cites var0 the most,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , WRITESalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY WRITESalias1.AUTHORID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
Who cites var0 most ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , WRITESalias1.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY WRITESalias1.AUTHORID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
how many papers are in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
how many papers does var0 have ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
how many papers are published in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
number of papers in var0 conference,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
what papers have fewer than var1 citations by var0 papers ?,spider,"SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < var1 ;"
var0 papers with less than var1 citations,spider,"SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < var1 ;"
what var0 papers have less than var1 citations ?,spider,"SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < var1 ;"
what papers have fewer than var1 citations by var0 papers,spider,"SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) < var1 ;"
What are the var1 most recent papers of var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR DESC LIMIT var1 ;"
What were the papers published at var1 var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
Papers from var1 var0 conference,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
papers published at var1 var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
What are the papers from var1 var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
Papers from var1 var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
Which papers were accepted in var1 var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
What papers were published during the conference var1 var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
papers in var1 var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
List of papers in var1 var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 papers in var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
what papers are published in var1 var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
papers from var1 var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 papers var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 var0 conference,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 best paper award var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
var1 var0 list of papers,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
List today ' s journals,spider,SELECT DISTINCT JOURNALID FROM PAPER AS PAPERalias0 WHERE YEAR = var0 GROUP BY JOURNALID ;
"List the journals published in March , var0",spider,SELECT DISTINCT JOURNALID FROM PAPER AS PAPERalias0 WHERE YEAR = var0 GROUP BY JOURNALID ;
var2 papers in var1 with var0 in the title,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.TITLE LIKE ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
Who writes a lot of papers in var0 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY AUTHORalias0.AUTHORNAME ORDER BY COUNT( DISTINCT WRITESalias0.PAPERID ) DESC ;"
Who wrote var0 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE ""var0"" ;"
Authors of papers on var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE ""var0"" ;"
people working on var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE ""var0"" ;"
Who publishes in var0 ?,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE ""var0"" ;"
who publishes papers about var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORNAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME LIKE ""var0"" ;"
how many papers by var1 are cited by michael i . jordan,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
how many of var1 ' s papers cite michael i . jordan,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN CITE AS CITEalias0 ON WRITESalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = CITEalias0.CITINGPAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
who else was on the paper with var0 and var1 ?,spider,"SELECT DISTINCT WRITESalias2.AUTHORID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PAPERID = WRITESalias1.PAPERID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND AUTHORalias1.AUTHORNAME = ""var1"" ;"
var1 papers using var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What journals are var0 ' s articles published in ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.JOURNALID ;"
What journals has var0 published in ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.JOURNALID ;"
In what scholarly journals does var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.JOURNALID ;"
What authors wrote papers about var0 in var1 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
Who wrote on the topic of var0 in var1 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
When did var0 publish ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ORDER BY PAPERalias0.YEAR ;"
what keyphrases get most citations ?,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) , DERIVED_TABLEalias1.KEYPHRASENAME FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN CITE AS CITEalias0 ON DERIVED_TABLEalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
Find journals about var0 .,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.JOURNALID ;"
List the journals related to var0,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.JOURNALID ;"
which var3 var2 papers about var1 used Jeopardy ! Questions ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
var1 papers using Jeopardy ! Questions published at var3 var2,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
var1 papers from var3 var2 using Jeopardy ! Questions,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
var1 papers from var3 var2 that used Jeopardy ! Questions,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
papers about var1 that used Jeopardy ! Questions and were published at var3 var2,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" AND PAPERalias0.YEAR = var2 AND VENUEalias0.VENUENAME = ""var3"" ;"
in what journals does var0 publish ?,spider,"SELECT DISTINCT JOURNALalias0.JOURNALID FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
Which journals did var0 submit papers to ?,spider,"SELECT DISTINCT JOURNALalias0.JOURNALID FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
var0 authors,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
who are the authors at var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
who authored papers at var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
who publishes in var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
who has papers at var0 ?,spider,"SELECT DISTINCT WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
which venue publishes the most papers about var0,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , VENUEalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY VENUEalias0.VENUEID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
How many publications were added to the var0 journal this year ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE JOURNALalias0.JOURNALNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
How many articles were published in the var0 journal in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE JOURNALalias0.JOURNALNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
What are all the publication titles by var0 ?,spider,"SELECT DISTINCT PAPERalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
papers published in var2 var1 by var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
Does var0 have a paper in var2 in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
papers of var0 in var2 var1,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
What are some papers dealing with var1 in var0 ?,spider,"SELECT DISTINCT DERIVED_TABLEalias1.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN KEYPHRASE AS DERIVED_TABLEalias2 ON DERIVED_TABLEalias2.KEYPHRASEID = DERIVED_TABLEalias1.KEYPHRASEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND DERIVED_TABLEalias2.KEYPHRASENAME = ""var1"" ;"
Who has published more papers in var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
Who has written the most papers at var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
how is the most prolific author in var0 ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
who published the most at var0,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
In what year did var0 publish the most papers,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME LIKE ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
What year did var0 publish the most papers,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME LIKE ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY COUNT( DISTINCT PAPERalias0.PAPERID ) DESC ;"
conferences that mention var0,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" ;"
first var0 paper,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ASC ;"
What was the first paper on var0 written ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ASC ;"
When was var0 proposed ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ASC ;"
when was the first var0 paper published ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR ASC ;"
what papers were published in var0 in var1 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN JOURNAL AS JOURNALalias0 ON PAPERalias0.JOURNALID = JOURNALalias0.JOURNALID WHERE JOURNALalias0.JOURNALNAME = ""var0"" AND PAPERalias0.YEAR = var1 ;"
what papers do var0 papers typically cite ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
papers typically cited by var0 papers,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITINGPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
venue for var0,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
conferences for var0,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
what conferences are related to var0,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
What was the conference name that approved var0 ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" ;"
How many papers were written on var0 in var1 through 2016 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR >= var1 ;"
What are the best var0 conferences ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , PAPERalias0.VENUEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.VENUEID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
var0 papers by author,spider,"SELECT DISTINCT PAPERalias0.PAPERID , WRITESalias0.AUTHORID FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
papers with more than var0 citations,spider,SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > var0 ;
Which authors published papers in var0 ?,spider,SELECT DISTINCT WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 ;
who wrote papers in var0,spider,SELECT DISTINCT WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 ;
what var0 does var1 write about that gets most citations ?,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , SUM( PAPERalias0.NUMCITEDBY ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN var0 AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var1"" GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY SUM( PAPERalias0.NUMCITEDBY ) DESC ;"
main topics of work by var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASENAME , SUM( PAPERalias0.NUMCITEDBY ) FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY DERIVED_TABLEalias1.KEYPHRASENAME ORDER BY SUM( PAPERalias0.NUMCITEDBY ) DESC ;"
authors with at least var0 papers,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM WRITES AS WRITESalias0 JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID GROUP BY WRITESalias0.AUTHORID HAVING COUNT( PAPERalias0.PAPERID ) >= var0 ;"
papers that were not published in the last year,spider,SELECT DISTINCT PAPERID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.YEAR != var0 ;
When was var0 var1 published ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
When did var0 publish his var1 paper ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
When does var0 publish the var1 paper ?,spider,"SELECT DISTINCT PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
In var1 what journal published an article about var0 ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 GROUP BY PAPERalias0.JOURNALID ;"
What is the most popular paper this year in var1 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
How many citations does var0 have per year,spider,"SELECT DISTINCT COUNT( CITEalias0.CITEDPAPERID ) , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.YEAR ;"
authors working on var0,spider,"SELECT DISTINCT WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" GROUP BY WRITESalias0.PAPERID ;"
What articles have been published since var1 about var0 ?,spider,"SELECT DISTINCT PAPERID , PAPERalias0.TITLE FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE LIKE ""var0"" AND PAPERalias0.YEAR > var1 ;"
Eric C . Kerrigan ' s var1 var2 paper,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" AND VENUEalias0.VENUENAME = ""var2"" ;"
Where did var0 publish his last paper ?,spider,"SELECT DISTINCT PAPERalias0.VENUEID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.VENUEID , PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;"
keyphrases used by var0 in his var1 papers,spider,"SELECT DISTINCT DERIVED_TABLEalias0.KEYPHRASEID FROM PAPER AS PAPERalias0 JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
Who are the prominent researchers in var0 in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND PAPERalias0.YEAR = var1 GROUP BY WRITESalias0.AUTHORID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
the papers at var2 in var1 using var0 dataset,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
which papers in var2 var1 use var0 ?,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var2 var1 papers using var0,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND PAPERalias0.YEAR = var1 AND VENUEalias0.VENUENAME = ""var2"" ;"
var0 papers citing var1 papers,spider,"SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN CITE AS CITEalias0 ON DERIVED_TABLEalias0.PAPERID = CITEalias0.CITINGPAPERID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
top authors working on var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , WRITESalias0.PAPERID FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE DATASETalias0.DATASETNAME = ""var0"" GROUP BY WRITESalias0.PAPERID ORDER BY COUNT( PAPERalias0.PAPERID ) DESC ;"
how many var1 var0 papers have more than var2 citations ?,spider,"SELECT DISTINCT ( PAPERalias0.PAPERID ) , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY PAPERalias0.PAPERID HAVING COUNT( CITEalias0.CITINGPAPERID ) > var2 ;"
What was the topic of best paper in var0 var1 ?,spider,"SELECT DISTINCT COUNT( DISTINCT CITEalias0.CITINGPAPERID ) , DERIVED_TABLEalias0.KEYPHRASEID , PAPERalias0.PAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN PAPERKEYPHRASE AS DERIVED_TABLEalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" GROUP BY PAPERalias0.PAPERID , DERIVED_TABLEalias0.KEYPHRASEID ORDER BY COUNT( DISTINCT CITEalias0.CITINGPAPERID ) DESC ;"
How many papers has var0 co-authored since var1 ?,spider,"SELECT DISTINCT COUNT( DISTINCT WRITESalias0.PAPERID ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME != ""var0"" AND PAPERalias0.YEAR > var1 AND WRITESalias0.PAPERID IN ( SELECT WRITESalias1.PAPERID FROM WRITES AS WRITESalias1 JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME LIKE ""var2"" ) ;"
Number of var0 papers with more than var1 citations,spider,"SELECT DISTINCT COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) > var1 ;"
What is the name of Eric C . Kerrigan ' s var1 var2 paper ?,spider,"SELECT DISTINCT PAPERalias0.TITLE FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE AUTHORalias0.AUTHORNAME LIKE ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" AND VENUEalias0.VENUENAME = ""var2"" ;"
How many papers used var0 datasets in var1 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM PAPERDATASET AS DERIVED_TABLEalias0 JOIN DATASET AS DATASETalias0 ON DERIVED_TABLEalias0.DATASETID = DATASETalias0.DATASETID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE DATASETalias0.DATASETNAME = ""var0"" AND VENUEalias0.VENUENAME = ""var1"" ;"
What venues are for var0 ?,spider,"SELECT DISTINCT VENUEID FROM VENUE AS VENUEalias0 WHERE VENUENAME = ""var0"" ;"
When was the last time var0 published a paper ?,spider,"SELECT DISTINCT MAX( PAPERalias0.YEAR ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" ;"
I want the co-authors of papers on var1 with var0,spider,"SELECT DISTINCT AUTHORalias0.AUTHORID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PAPERID = WRITESalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AUTHORID = AUTHORalias0.AUTHORID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AUTHORID = AUTHORalias1.AUTHORID WHERE AUTHORalias1.AUTHORNAME = ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
How many papers does var0 publish outside of var1 area ?,spider,"SELECT DISTINCT COUNT( DISTINCT PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND VENUEalias0.VENUENAME != ""var1"" ;"
which journal did var0 publish his last paper ?,spider,"SELECT DISTINCT PAPERalias0.JOURNALID , PAPERalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" GROUP BY PAPERalias0.JOURNALID , PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;"
What is the venue of var0 ?,spider,"SELECT DISTINCT VENUEID FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = ""var0"" ;"
How many authors published at var1 in var0 ?,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) FROM VENUE AS VENUEalias0 JOIN PAPER AS PAPERalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE PAPERalias0.YEAR = var0 AND VENUEalias0.VENUENAME = ""var1"" ;"
"What is the year of publication of "" var0 "" ?",spider,"SELECT DISTINCT PAPERalias0.TITLE , PAPERalias0.YEAR FROM PAPER AS PAPERalias0 WHERE PAPERalias0.TITLE = ""var0"" ;"
what keywords are used by papers at var0,spider,"SELECT DISTINCT DERIVED_TABLEalias1.KEYPHRASEID FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" ;"
Give me the papers written by var0 before var1 .,spider,"SELECT DISTINCT PAPERalias0.PAPERID FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID WHERE AUTHORalias0.AUTHORNAME = ""var0"" AND PAPERalias0.YEAR < var1 ;"
papers in var0 for each year,spider,"SELECT DISTINCT COUNT( PAPERalias0.PAPERID ) , PAPERalias0.YEAR FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN PAPER AS PAPERalias0 ON PAPERalias0.PAPERID = DERIVED_TABLEalias0.PAPERID WHERE DERIVED_TABLEalias1.KEYPHRASENAME = ""var0"" GROUP BY PAPERalias0.YEAR ORDER BY PAPERalias0.YEAR DESC ;"
papers with at least var0 citations,spider,SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) >= var0 ;
papers cited by at least var0 papers,spider,SELECT DISTINCT CITEalias0.CITINGPAPERID FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID GROUP BY CITEalias0.CITINGPAPERID HAVING COUNT( DISTINCT CITEalias0.CITEDPAPERID ) >= var0 ;
What is the most cited paper at var0 ?,spider,"SELECT DISTINCT CITEalias0.CITEDPAPERID , COUNT( CITEalias0.CITINGPAPERID ) FROM PAPER AS PAPERalias0 JOIN CITE AS CITEalias0 ON PAPERalias0.PAPERID = CITEalias0.CITEDPAPERID JOIN VENUE AS VENUEalias0 ON VENUEalias0.VENUEID = PAPERalias0.VENUEID WHERE VENUEalias0.VENUENAME = ""var0"" GROUP BY CITEalias0.CITEDPAPERID ORDER BY COUNT( CITEalias0.CITINGPAPERID ) DESC ;"
What is the name of var0 ' s var1 paper ?,spider,"SELECT DISTINCT PAPERalias0.TITLE FROM PAPERKEYPHRASE AS DERIVED_TABLEalias0 JOIN KEYPHRASE AS DERIVED_TABLEalias1 ON DERIVED_TABLEalias1.KEYPHRASEID = DERIVED_TABLEalias0.KEYPHRASEID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PAPERID = DERIVED_TABLEalias0.PAPERID JOIN PAPER AS PAPERalias0 ON WRITESalias0.PAPERID = PAPERalias0.PAPERID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AUTHORID = AUTHORalias0.AUTHORID WHERE AUTHORalias0.AUTHORNAME LIKE ""var0"" AND DERIVED_TABLEalias1.KEYPHRASENAME = ""var1"" ;"
List all the businesses with more than var0 stars,spider,SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING > var0 ;
List all businesses with rating var0,spider,SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING = var0 ;
List all user ids with name var0,spider,"SELECT USERalias0.USER_ID FROM USER AS USERalias0 WHERE USERalias0.NAME = ""var0"" ;"
Find all states in which there is a var0,spider,"SELECT BUSINESSalias0.STATE FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = ""var0"" ;"
"Find all cities in which there is a restaurant called "" var0 """,spider,"SELECT BUSINESSalias0.CITY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"find all cities which has a "" var0 "" var1",spider,"SELECT BUSINESSalias0.CITY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
Find the cities of businesses rated below var0,spider,SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < var0 ;
"Find all cities which has a "" var0 "" .",spider,"SELECT BUSINESSalias0.CITY FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = ""var0"" ;"
List all the reviews which rated a business less than var0,spider,SELECT REVIEWalias0.TEXT FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.RATING < var0 ;
List all the var1 rated more than var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING > var0 AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
list all the reviews by var0,spider,"SELECT REVIEWalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
list all the businesses which have a review by var0,spider,"SELECT BUSINESSalias0.NAME FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
list all the businesses which var1 rated var0,spider,"SELECT BUSINESSalias0.NAME FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.RATING = var0 AND USERalias0.NAME = ""var1"" ;"
List all the reviews by var2 for var0 restaurant,spider,"SELECT REVIEWalias0.TEXT FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" AND CATEGORYalias1.CATEGORY_NAME = ""var1"" AND USERalias0.NAME = ""var2"" ;"
"find the number of reviews written for "" var0 "" var2 in var1",spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND BUSINESSalias0.STATE = ""var1"" AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
List all var0 star var1 var2,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING = var0 AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
List all the neighbourhoods with var1 var2 in var0,spider,"SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
List all the neighbourhoods with var2 var3 rated less than var1 in var0,spider,"SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING < var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" AND CATEGORYalias1.CATEGORY_NAME = ""var3"" ;"
find all the var1 in var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
List all businesses that are var1 in var0 .,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
Find all the reviews for all var1 with more than var0 reviews,spider,"SELECT REVIEWalias0.TEXT FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.REVIEW_COUNT > var0 AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"What are all the var1 in "" var0 "" ?",spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
Find all var1 in var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"Find all var1 in "" var0 """,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"Find all users who reviewed var1 "" var0 """,spider,"SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"List the addresses of all var1 in "" var0 """,spider,"SELECT BUSINESSalias0.FULL_ADDRESS FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" ;"
"Find all var1 reviewed by var2 in "" var0 """,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND USERalias0.NAME = ""var2"" ;"
Which var1 in var0 were reviewed by user var2 ?,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND USERalias0.NAME = ""var2"" ;"
Find all var0 reviewed by var1,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" AND USERalias0.NAME = ""var1"" ;"
Find all var1 reviewed by var2 with at least var0 stars,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.RATING >= var0 AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND USERalias0.NAME = ""var2"" ;"
"Find all users who have written tips for "" var0 "" in var1",spider,"SELECT USERalias0.NAME FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.NAME = ""var0"" AND TIPalias0.YEAR = var1 ;"
Find all businesses in var1 with a rating below var0,spider,"SELECT BUSINESSalias0.NAME FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.RATING < var0 AND BUSINESSalias0.STATE = ""var1"" ;"
Find all var2 var1 in var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
"List all the var1 var2 in "" var0 """,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
"Find all var2 that serve var1 in "" var0 """,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
Find all reviews by var1 with a rating above var0,spider,"SELECT REVIEWalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.RATING > var0 AND USERalias0.NAME = ""var1"" ;"
"Find all var1 in "" var0 """,spider,"SELECT BUSINESSalias0.BUSINESS_ID FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" ;"
Find all var0 var2 with a rating above var1,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
"What neighbourhood is restaurant "" var0 "" in ?",spider,"SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"Find all tips about "" var0 "" that received more than var1 likes",spider,"SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND TIPalias0.LIKES > var1 ;"
"Find all reviews about "" var0 "" in year var1",spider,"SELECT REVIEWalias0.TEXT FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND REVIEWalias0.YEAR = var1 ;"
Find all users who have written tips about businesses in var0,spider,"SELECT USERalias0.NAME FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" ;"
"Find all cities in var1 in which there is a var2 called "" var0 """,spider,"SELECT BUSINESSalias0.CITY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND BUSINESSalias0.STATE = ""var1"" AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
Find the users who have given tips on var0,spider,"SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN TIP AS TIPalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" ;"
"Find all tips for "" var0 "" in var1 .",spider,"SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND BUSINESSalias0.STATE = ""var1"" ;"
List all users who reviewed businesses that are var0 .,spider,"SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" ;"
"List all tips for "" var0 "" in var1 in var2 .",spider,"SELECT TIPalias0.TEXT FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND BUSINESSalias0.STATE = ""var1"" AND TIPalias0.YEAR = var2 ;"
List all users who reviewed businesses that are var0 in var1 .,spider,"SELECT USERalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" AND REVIEWalias0.YEAR = var1 ;"
Find all the tips from a user who has written a review in var0,spider,SELECT TIPalias0.TEXT FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 ;
Find all reviews for businesses rated var0,spider,SELECT REVIEWalias0.TEXT FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING = var0 ;
find the number of var1 in var0,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
What is the number of var1 in var0,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
How many var1 exist in var0,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"What is the number of var1 in "" var0 "" ?",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
How many var1 are there in var0 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
find the number of var1 rated more than var0,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.RATING > var0 AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"find the total checkins in var2 var1 in "" var0 """,spider,"SELECT SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
"find the total checkins in var1 var2 in "" var0 "" on var3",spider,"SELECT SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" AND CHECKINalias0.DAY = ""var3"" ;"
"find the total checkins in var1 var2 in "" var0 "" per day",spider,"SELECT CHECKINalias0.DAY , SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" GROUP BY CHECKINalias0.DAY ;"
find the total checkins in var0 var1 in each state on var2,spider,"SELECT BUSINESSalias0.STATE , SUM( CHECKINalias0.COUNT ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" AND CATEGORYalias1.CATEGORY_NAME = ""var1"" AND CHECKINalias0.DAY = ""var2"" GROUP BY BUSINESSalias0.STATE ;"
How many reviews has var1 written in var0,spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = ""var1"" ;"
what is the average rating given in var0 reviews,spider,"SELECT AVG( REVIEWalias0.RATING ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
"What is the number of checkins for "" var0 "" on var1",spider,"SELECT CHECKINalias0.COUNT FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CHECKINalias0.DAY = ""var1"" ;"
"how many users reviewed "" var1 "" in var0",spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" ;"
What is the number of var2 in var0 rated var1,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING = var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
How many tips have been written in var0,spider,SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM TIP AS TIPalias0 WHERE TIPalias0.YEAR = var0 ;
What is the total likes on tips from var0,spider,"SELECT SUM( TIPalias0.LIKES ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
"What is the total likes on tips about "" var0 """,spider,"SELECT SUM( TIPalias0.LIKES ) FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" ;"
"What is the total likes on tips from var1 about "" var0 """,spider,"SELECT SUM( TIPalias0.LIKES ) FROM TIP AS TIPalias0 JOIN BUSINESS AS BUSINESSalias0 ON TIPalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE BUSINESSalias0.NAME = ""var0"" AND USERalias0.NAME = ""var1"" ;"
How many tips has var1 written in var0,spider,"SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE TIPalias0.YEAR = var0 AND USERalias0.NAME = ""var1"" ;"
Return me the number of tips that are written by var1 in var0 .,spider,"SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE TIPalias0.YEAR = var0 AND USERalias0.NAME = ""var1"" ;"
How many tips has var1 written in var0,spider,"SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE TIPalias0.MONTH = ""var0"" AND USERalias0.NAME = ""var1"" ;"
what is the number of var1 in var0,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
"How many var2 in "" var0 "" have a rating above var1 ?",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
How many var2 in var0 have a rating above var1 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" ;"
"How many people reviewed the var3 "" var1 "" in var0 var2 ?",spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" AND BUSINESSalias0.STATE = ""var2"" AND CATEGORYalias0.CATEGORY_NAME = ""var3"" ;"
"How many people reviewed "" var0 "" in var1 ?",spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.NAME = ""var0"" AND REVIEWalias0.YEAR = var1 ;"
How many var1 are there in the var2 district of var0 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = ""var2"" ;"
How many var1 are there in var0 var2 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.BUSINESS_ID ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" AND BUSINESSalias0.STATE = ""var2"" ;"
"How many reviews does "" var0 "" have ?",spider,"SELECT BUSINESSalias0.REVIEW_COUNT FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = ""var0"" ;"
"Find the average number of checkins in var1 "" var0 "" per day",spider,"SELECT AVG( CHECKINalias0.COUNT ) , CHECKINalias0.DAY FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CHECKIN AS CHECKINalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" GROUP BY CHECKINalias0.DAY ;"
"How many businesses are there in the "" var1 "" neighbourhood in var0 ?",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = ""var1"" ;"
How many reviews has var0 written ?,spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
How many reviews has var2 written in var0 var1 ?,spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.MONTH = ""var0"" AND REVIEWalias0.YEAR = var1 AND USERalias0.NAME = ""var2"" ;"
How many businesses has var1 reviewed in var0 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE REVIEWalias0.YEAR = var0 AND USERalias0.NAME = ""var1"" ;"
"How many businesses in "" var0 "" has var2 reviewed in var1 ?",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND REVIEWalias0.YEAR = var1 AND USERalias0.NAME = ""var2"" ;"
"How many var1 are there in "" var0 "" ?",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.BUSINESS_ID ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.NAME = ""var1"" ;"
How many users have reviewed var1 in var0 ?,spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" ;"
What is the average rating of reviews written in year var0 ?,spider,SELECT AVG( REVIEWalias0.RATING ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.YEAR = var0 ;
"How many people reviewed restaurant "" var0 "" in var2 ?",spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN USER AS USERalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID WHERE BUSINESSalias0.NAME = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND REVIEWalias0.YEAR = var2 ;"
"Find the number of reviews on businesses located in "" var0 "" neighbourhood",spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN REVIEW AS REVIEWalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = ""var0"" ;"
Find the number of users called var0,spider,"SELECT COUNT( DISTINCT USERalias0.NAME ) FROM USER AS USERalias0 WHERE USERalias0.NAME = ""var0"" ;"
Return me the number of businesses that are var0 .,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE CATEGORYalias0.CATEGORY_NAME = ""var0"" ;"
"Return me the number of cities that has "" var0 "" .",spider,"SELECT COUNT( DISTINCT BUSINESSalias0.CITY ) FROM BUSINESS AS BUSINESSalias0 WHERE BUSINESSalias0.NAME = ""var0"" ;"
Return me the number of tips that are written by var0 .,spider,"SELECT COUNT( DISTINCT TIPalias0.TEXT ) FROM USER AS USERalias0 JOIN TIP AS TIPalias0 ON USERalias0.USER_ID = TIPalias0.USER_ID WHERE USERalias0.NAME = ""var0"" ;"
"Find the total checkins in "" var0 "" neighbourhood",spider,"SELECT SUM( CHECKINalias0.COUNT ) FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = ""var0"" ;"
Find the total number of reviews written in var0,spider,"SELECT COUNT( DISTINCT REVIEWalias0.TEXT ) FROM REVIEW AS REVIEWalias0 WHERE REVIEWalias0.MONTH = ""var0"" ;"
Find the number of tips written in each month,spider,"SELECT COUNT( DISTINCT TIPalias0.TEXT ) , TIPalias0.MONTH FROM TIP AS TIPalias0 GROUP BY TIPalias0.MONTH ;"
How many neighbourhoods have a business with rating var1 in var0 ?,spider,"SELECT COUNT( DISTINCT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME ) FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING = var1 ;"
Give me all the var1 var2 in var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.STATE = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
which business has the most number of checkins,spider,SELECT BUSINESSalias0.NAME FROM CHECKIN AS CHECKINalias0 JOIN BUSINESS AS BUSINESSalias0 ON CHECKINalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY BUSINESSalias0.NAME ORDER BY SUM( CHECKINalias0.COUNT ) DESC LIMIT 1 ;
which neighbourhood has the most number of businesses in var0,spider,"SELECT NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME FROM NEIGHBOURHOOD AS NEIGHBOURHOODalias0 JOIN BUSINESS AS BUSINESSalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" GROUP BY NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME ORDER BY COUNT( DISTINCT BUSINESSalias0.NAME ) DESC LIMIT 1 ;"
Find all var2 var3 in var0 with at least var1 stars,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" AND CATEGORYalias1.CATEGORY_NAME = ""var3"" ;"
Find all var2 var3 in var0 with a rating above var1,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND CATEGORYalias0.CATEGORY_NAME = ""var2"" AND CATEGORYalias1.CATEGORY_NAME = ""var3"" ;"
Find all var3 with var2 in var0 var1,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.STATE = ""var1"" AND CATEGORYalias0.CATEGORY_NAME = ""var2"" AND CATEGORYalias1.CATEGORY_NAME = ""var3"" ;"
Find all var1 var2 in the var3 neighbourhood of var0,spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN NEIGHBOURHOOD AS NEIGHBOURHOODalias0 ON NEIGHBOURHOODalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" AND NEIGHBOURHOODalias0.NEIGHBOURHOOD_NAME = ""var3"" ;"
"Find all var3 in "" var0 "" with at least var10 reviews and average rating above var1 stars",spider,"SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND BUSINESSalias0.RATING > var1 AND BUSINESSalias0.REVIEW_COUNT > var2 AND CATEGORYalias0.CATEGORY_NAME = ""var3"" ;"
How many var2 var1 are there in var0 ?,spider,"SELECT COUNT( DISTINCT BUSINESSalias0.NAME ) FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID JOIN CATEGORY AS CATEGORYalias1 ON CATEGORYalias1.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE BUSINESSalias0.CITY = ""var0"" AND CATEGORYalias0.CATEGORY_NAME = ""var1"" AND CATEGORYalias1.CATEGORY_NAME = ""var2"" ;"
Find users whose average review rating is below var0,spider,SELECT USERalias0.NAME FROM USER AS USERalias0 JOIN REVIEW AS REVIEWalias0 ON USERalias0.USER_ID = REVIEWalias0.USER_ID GROUP BY USERalias0.NAME HAVING AVG( REVIEWalias0.RATING ) < var0 ;
Find the business with the most number of reviews in var0,spider,"SELECT BUSINESSalias0.NAME FROM REVIEW AS REVIEWalias0 JOIN BUSINESS AS BUSINESSalias0 ON REVIEWalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID WHERE REVIEWalias0.MONTH = ""var0"" GROUP BY BUSINESSalias0.NAME ORDER BY COUNT( DISTINCT REVIEWalias0.TEXT ) DESC LIMIT 1 ;"
Find the business which has the most number of categories,spider,SELECT BUSINESSalias0.NAME FROM CATEGORY AS CATEGORYalias0 JOIN BUSINESS AS BUSINESSalias0 ON CATEGORYalias0.BUSINESS_ID = BUSINESSalias0.BUSINESS_ID GROUP BY BUSINESSalias0.NAME ORDER BY COUNT( DISTINCT CATEGORYalias0.CATEGORY_NAME ) DESC LIMIT 1 ;
return me the homepage of var0 .,spider,"SELECT JOURNALalias0.HOMEPAGE FROM JOURNAL AS JOURNALalias0 WHERE JOURNALalias0.NAME = ""var0"" ;"
"return me the homepage of "" H . V . Jagadish "" .",spider,"SELECT AUTHORalias0.HOMEPAGE FROM AUTHOR AS AUTHORalias0 WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the abstract of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.ABSTRACT FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the year of "" var0 """,spider,"SELECT PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the year of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
return me the papers after var0 .,spider,SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.YEAR > var0 ;
return me the homepage of the var0 conference .,spider,"SELECT CONFERENCEalias0.HOMEPAGE FROM CONFERENCE AS CONFERENCEalias0 WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me all the keywords .,spider,SELECT KEYWORDalias0.KEYWORD FROM KEYWORD AS KEYWORDalias0 ;
return me all the organizations .,spider,SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 ;
"return me all the organizations in "" var0 "" .",spider,"SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.CONTINENT = ""var0"" ;"
"return me the homepage of "" var0 "" .",spider,"SELECT ORGANIZATIONalias0.HOMEPAGE FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the number of references of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.REFERENCE_NUM FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the references of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.REFERENCE_NUM FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the number of citations of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the citations of "" var0 "" .",spider,"SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
return me the paper with more than var0 citations .,spider,SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.CITATION_NUM > var0 ;
return me the authors who have papers in var0 var1 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR = var1 ;"
return me the authors who have papers in var0 after var1 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
return me the authors who have papers in var0 conference in var1 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR = var1 ;"
return me the authors who have papers in var0 conference before var1 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 ;"
return me the authors who have papers in var0 conference before var1 after var2 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 AND PUBLICATIONalias0.YEAR > var2 ;"
return me the area of var0 .,spider,"SELECT DOMAINalias0.NAME FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_JOURNAL AS DOMAIN_JOURNALalias0 ON DOMAINalias0.DID = DOMAIN_JOURNALalias0.DID JOIN JOURNAL AS JOURNALalias0 ON JOURNALalias0.JID = DOMAIN_JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the authors who have papers in var0 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" ;"
"return me the organization "" H . V . Jagadish "" is in .",spider,"SELECT ORGANIZATIONalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the conferences , which have papers by "" H . V . Jagadish "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the journals , which have papers by "" H . V . Jagadish "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the domain where "" H . V . Jagadish "" is focused .",spider,"SELECT DOMAINalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the authors of "" var0 "" .",spider,"SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the conference , which published "" var0 "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the papers by "" H . V . Jagadish "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" ;"
return me the papers on var0 conference .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the papers on var0 .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the papers on var0 after var1 .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
return me the papers on var0 conference after var1 .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the papers by "" H . V . Jagadish "" on var1 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND JOURNALalias0.NAME = ""var1"" ;"
"return me the papers by "" H . V . Jagadish "" on var1 conference .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND CONFERENCEalias0.NAME = ""var1"" ;"
"return me the papers by "" H . V . Jagadish "" after var1 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the papers by "" H . V . Jagadish "" on var1 after var2 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND JOURNALalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
"return me the papers by "" H . V . Jagadish "" on var1 conference after var2 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND CONFERENCEalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
return me the area of the var0 conference .,spider,"SELECT DOMAINalias0.NAME FROM DOMAIN_CONFERENCE AS DOMAIN_CONFERENCEalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON DOMAIN_CONFERENCEalias0.CID = CONFERENCEalias0.CID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_CONFERENCEalias0.DID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the authors who have papers in the var0 conference .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me all the keywords in var0 area .,spider,"SELECT KEYWORDalias0.KEYWORD FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_KEYWORD AS DOMAIN_KEYWORDalias0 ON DOMAINalias0.DID = DOMAIN_KEYWORDalias0.DID JOIN KEYWORD AS KEYWORDalias0 ON KEYWORDalias0.KID = DOMAIN_KEYWORDalias0.KID WHERE DOMAINalias0.NAME = ""var0"" ;"
"return me all the papers , which contain the keyword "" var0 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
"return me the keywords of "" var0 "" .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the keywords related to "" H . V . Jagadish "" .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
return me the keywords in var0 conference .,spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the keywords in var0 .,spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
"return me the keywords in the papers of "" var0 "" .",spider,"SELECT KEYWORDalias0.KEYWORD FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the papers of "" H . V . Jagadish "" containing keyword "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the papers in var0 containing keyword "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the papers in var0 conference containing keyword "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the authors who have papers containing keyword "" var0 "" .",spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
return me all the organizations in var0 area .,spider,"SELECT ORGANIZATIONalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" ;"
"return me all the organizations in var0 area located in "" var1 "" .",spider,"SELECT ORGANIZATIONalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.CONTINENT = ""var1"" ;"
"return me all the researchers in "" var0 "" .",spider,"SELECT AUTHORalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me all the researchers in var0 area in "" var1 "" .",spider,"SELECT AUTHORalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me all the papers in "" var0 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me all the papers after var1 in "" var0 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me all the papers in var0 conference in "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me all the papers in var0 in "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me all the papers in var0 after var2 in "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
return me the paper in var0 area with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 ;"
return me the paper in var0 with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 ;"
return me the paper in var0 conference with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 ;"
"return me the paper by "" H . V . Jagadish "" with more than var1 citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 ;"
"return me the papers by "" H . V . Jagadish "" on var1 with more than var2 citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND JOURNALalias0.NAME = ""var1"" AND PUBLICATIONalias0.CITATION_NUM > var2 ;"
"return me the papers by "" H . V . Jagadish "" on var1 conference with more than var2 citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND CONFERENCEalias0.NAME = ""var1"" AND PUBLICATIONalias0.CITATION_NUM > var2 ;"
return me the paper after var00 with more than var0 citations .,spider,SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.CITATION_NUM > var0 AND PUBLICATIONalias0.YEAR > var1 ;
return me the paper after var10 in var0 area with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 AND PUBLICATIONalias0.YEAR > var2 ;"
return me the paper after var10 in var0 with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 AND PUBLICATIONalias0.YEAR > var2 ;"
return me the paper after var10 in var0 conference with more than var1 citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.CITATION_NUM > var1 AND PUBLICATIONalias0.YEAR > var2 ;"
"return me the number of conferences which have papers by "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT CONFERENCEalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the number of journals which have papers by "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT JOURNALalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
"return me the number of papers written by "" H . V . Jagadish "" in each year .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) , PUBLICATIONalias0.YEAR FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
"return me the number of authors of "" var0 "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the number of citations of "" var0 "" in each year .",spider,"SELECT PUBLICATIONalias0.YEAR , SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 WHERE TITLE = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
"return me the number of citations of "" var0 "" before var1 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias1.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CITE AS CITEalias0 ON PUBLICATIONalias0.PID = CITEalias0.CITED JOIN PUBLICATION AS PUBLICATIONalias1 ON PUBLICATIONalias1.PID = CITEalias0.CITING WHERE PUBLICATIONalias0.TITLE = ""var0"" AND PUBLICATIONalias1.YEAR < var1 ;"
"return me the number of papers by "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" ;"
return me the number of papers on var0 conference .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the number of papers on var0 .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the number of papers after var0 .,spider,SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 WHERE PUBLICATIONalias0.YEAR > var0 ;
return me the number of papers on var0 after var1 .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
return me the number of papers on var0 conference after var1 .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the number of papers by "" H . V . Jagadish "" on var1 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND JOURNALalias0.NAME = ""var1"" ;"
"return me the number of papers by "" H . V . Jagadish "" on var1 conference .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND CONFERENCEalias0.NAME = ""var1"" ;"
"return me the number of papers by "" H . V . Jagadish "" after var1 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the number of papers by "" H . V . Jagadish "" on var1 after var2 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND JOURNALalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
"return me the number of papers by "" H . V . Jagadish "" on var1 conference after var2 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND CONFERENCEalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
return me the number of keywords .,spider,SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM KEYWORD AS KEYWORDalias0 ;
return me the number of keywords in var0 area .,spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_KEYWORD AS DOMAIN_KEYWORDalias0 ON DOMAINalias0.DID = DOMAIN_KEYWORDalias0.DID JOIN KEYWORD AS KEYWORDalias0 ON KEYWORDalias0.KID = DOMAIN_KEYWORDalias0.KID WHERE DOMAINalias0.NAME = ""var0"" ;"
"return me the number of papers which contain the keyword "" var0 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
"return me the number of the keywords of "" var0 "" .",spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE PUBLICATIONalias0.TITLE = ""var0"" ;"
"return me the number of the keywords related to "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" ;"
return me the number of keywords in var0 conference .,spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the number of keywords in var0 .,spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
"return me the number of keywords in the papers of "" var0 "" .",spider,"SELECT COUNT( DISTINCT KEYWORDalias0.KEYWORD ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the number of the papers of "" H . V . Jagadish "" containing keyword "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the number of papers in var0 containing keyword "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the number of papers in var0 conference containing keyword "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND KEYWORDalias0.KEYWORD = ""var1"" ;"
"return me the number of authors who have papers containing keyword "" var0 "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
"return me the total citations of the papers containing keyword "" var0 """,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
return me the number of the organizations .,spider,SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 ;
"return me the number of the organizations in "" var0 "" .",spider,"SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 WHERE ORGANIZATIONalias0.CONTINENT = ""var0"" ;"
return me the number of organizations in var0 area .,spider,"SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" ;"
"return me the number of organizations in var0 area located in "" var1 "" .",spider,"SELECT COUNT( DISTINCT ORGANIZATIONalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.CONTINENT = ""var1"" ;"
"return me the number of papers in "" var0 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the number of papers in "" var1 "" in var0 area .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me the number of papers after var1 in "" var0 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the number of papers in var0 conference in "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me the number of papers in var0 in "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
"return me the number of papers in var0 after var2 in "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
"return me the total citations of the papers in "" var0 "" .",spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the number of researchers in "" var0 "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE ORGANIZATIONalias0.NAME = ""var0"" ;"
"return me the number of researchers in var0 area in "" var1 "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" ;"
return me the number of authors who have papers in var0 .,spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the number of authors who have papers in the var0 conference .,spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the number of papers published on var0 before var1 .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 ;"
return me the number of papers published in the var0 conference before var1 .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 ;"
return me the total citations of all the papers in var0 .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the citations of each paper in var0 .,spider,"SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ;"
return me the total citations of papers in var0 in var1 .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR = var1 ;"
return me the total citations of papers in var0 before var1 .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 ;"
return me the total citations of papers in var0 in each year .,spider,"SELECT PUBLICATIONalias0.YEAR , SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
return me the number of papers published in var0 in each year .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) , PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
return me the total citations of all the papers in the var0 conference .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the citations of each paper in the var0 conference .,spider,"SELECT PUBLICATIONalias0.CITATION_NUM FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ;"
return me the total citations of papers in the var0 conference in var1 .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR = var1 ;"
return me the total citations of papers in the var0 conference before var1 .,spider,"SELECT SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR < var1 ;"
return me the total citations of papers in the var0 conference in each year .,spider,"SELECT PUBLICATIONalias0.YEAR , SUM( PUBLICATIONalias0.CITATION_NUM ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
return me the number of papers published in the var0 conference in each year .,spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) , PUBLICATIONalias0.YEAR FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY PUBLICATIONalias0.YEAR ;"
"return me the authors who have cooperated both with "" H . V . Jagadish "" and "" var1 "" .",spider,"SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID JOIN AUTHOR AS AUTHORalias2 ON WRITESalias2.AID = AUTHORalias2.AID WHERE AUTHORalias1.NAME = ""var0"" AND AUTHORalias2.NAME = ""var1"" ;"
"return me the authors who have cooperated with "" H . V . Jagadish "" after var1 .",spider,"SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" after var2 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" AND PUBLICATIONalias0.YEAR > var2 ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" on var2 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var1"" AND AUTHORalias1.NAME = ""var0"" AND JOURNALalias0.NAME = ""var2"" ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" on var2 after var3 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias1.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias0.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var1"" AND AUTHORalias1.NAME = ""var0"" AND JOURNALalias0.NAME = ""var2"" AND PUBLICATIONalias0.YEAR > var3 ;"
"return me the authors who have cooperated with "" H . V . Jagadish "" .",spider,"SELECT AUTHORalias0.NAME FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = ""var0"" ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" before var2 .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" AND PUBLICATIONalias0.YEAR < var2 ;"
"return me the authors who have cited the papers by "" H . V . Jagadish "" .",spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CITE AS CITEalias0 ON PUBLICATIONalias0.PID = CITEalias0.CITING JOIN PUBLICATION AS PUBLICATIONalias1 ON PUBLICATIONalias1.PID = CITEalias0.CITED JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias1.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = ""var0"" ;"
"return me the number of papers written by "" H . V . Jagadish "" and "" var1 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" ;"
"return me the number of papers written by "" H . V . Jagadish "" and "" var1 "" before var2 .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" AND PUBLICATIONalias0.YEAR < var2 ;"
"return me the number of papers written by "" H . V . Jagadish "" , "" var2 "" , and "" var0 "" .",spider,"SELECT COUNT( DISTINCT PUBLICATIONalias0.TITLE ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias2 ON WRITESalias2.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID JOIN AUTHOR AS AUTHORalias2 ON WRITESalias2.AID = AUTHORalias2.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" AND AUTHORalias2.NAME = ""var2"" ;"
"return me the number of authors who have cooperated with "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = ""var0"" ;"
"return me the number of authors who have cited the papers by "" H . V . Jagadish "" .",spider,"SELECT COUNT( DISTINCT AUTHORalias0.NAME ) FROM PUBLICATION AS PUBLICATIONalias0 JOIN CITE AS CITEalias0 ON PUBLICATIONalias0.PID = CITEalias0.CITING JOIN PUBLICATION AS PUBLICATIONalias1 ON PUBLICATIONalias1.PID = CITEalias0.CITED JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias1.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias1.NAME = ""var0"" ;"
"return me the papers written by "" H . V . Jagadish "" and "" var1 "" with more than var2 citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" AND PUBLICATIONalias0.CITATION_NUM > var2 ;"
"return me the author who has the most number of papers containing keyword "" var0 "" .",spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the conference that has the most number of papers containing keyword "" var0 "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY CONFERENCEalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the conference , which has the most number of papers containing keyword "" var0 "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY CONFERENCEalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the journal that has the most number of papers containing keyword "" var0 "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the journal , which has the most number of papers containing keyword "" var0 "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the keyword , which have been contained by the most number of papers in var0 conference .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the keyword , which have been contained by the most number of papers in var0 .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the keyword , which have been contained by the most number of papers by "" H . V . Jagadish "" .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the author in the "" var0 "" whose papers have the most total citations .",spider,"SELECT AUTHORalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME ORDER BY SUM( PUBLICATIONalias0.CITATION_NUM ) DESC LIMIT 1 ;"
"return me the author in the "" var1 "" whose papers in var0 area have the most total citations .",spider,"SELECT AUTHORalias0.NAME FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" GROUP BY AUTHORalias0.NAME ORDER BY SUM( PUBLICATIONalias0.CITATION_NUM ) DESC LIMIT 1 ;"
"return me the papers written by "" H . V . Jagadish "" and "" var0 "" with the most number of citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN WRITES AS WRITESalias1 ON WRITESalias1.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias1 ON WRITESalias1.AID = AUTHORalias1.AID WHERE AUTHORalias0.NAME = ""var0"" AND AUTHORalias1.NAME = ""var1"" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
"return me the conferences , which have more than var1 papers by "" H . V . Jagadish "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY CONFERENCEalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the conference , which have the most number of papers by "" H . V . Jagadish "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY CONFERENCEalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the journals , which have more than var1 papers by "" H . V . Jagadish "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY JOURNALalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the journal , which have the most number of papers by "" H . V . Jagadish "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY JOURNALalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
return me the paper with the most citations .,spider,SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
return me the paper in var0 area with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the paper in var0 with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the paper in var0 conference with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
"return me the paper by "" H . V . Jagadish "" with the most citations .",spider,"SELECT PUBLICATIONalias0.TITLE FROM WRITES AS WRITESalias0 JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE AUTHORalias0.NAME = ""var0"" ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the paper after var0 with the most citations .,spider,SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 WHERE YEAR > var0 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;
return me the paper after var1 in var0 area with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM DOMAIN AS DOMAINalias0 JOIN DOMAIN_PUBLICATION AS DOMAIN_PUBLICATIONalias0 ON DOMAINalias0.DID = DOMAIN_PUBLICATIONalias0.DID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = DOMAIN_PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the paper after var1 in var0 with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the paper after var1 in var0 conference with the most citations .,spider,"SELECT PUBLICATIONalias0.TITLE FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" AND PUBLICATIONalias0.YEAR > var1 ORDER BY PUBLICATIONalias0.CITATION_NUM DESC LIMIT 1 ;"
return me the authors who have more than var1 papers in var0 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
return me the authors who have the most number of papers in var0 .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the authors who have more than var1 papers containing keyword "" var0 "" .",spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the conferences , which have more than var1 papers containing keyword "" var0 "" .",spider,"SELECT CONFERENCEalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY CONFERENCEalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the journals , which have more than var1 papers containing keyword "" var0 "" .",spider,"SELECT JOURNALalias0.NAME FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE KEYWORDalias0.KEYWORD = ""var0"" GROUP BY JOURNALalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the keywords , which have been contained by more than var1 papers in var0 conference .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the keywords , which have been contained by more than var1 papers in var0 .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN JOURNAL AS JOURNALalias0 ON PUBLICATIONalias0.JID = JOURNALalias0.JID WHERE JOURNALalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
"return me the keywords , which have been contained by more than var1 papers of "" H . V . Jagadish "" .",spider,"SELECT KEYWORDalias0.KEYWORD FROM PUBLICATION_KEYWORD AS PUBLICATION_KEYWORDalias0 JOIN KEYWORD AS KEYWORDalias0 ON PUBLICATION_KEYWORDalias0.KID = KEYWORDalias0.KID JOIN PUBLICATION AS PUBLICATIONalias0 ON PUBLICATIONalias0.PID = PUBLICATION_KEYWORDalias0.PID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE AUTHORalias0.NAME = ""var0"" GROUP BY KEYWORDalias0.KEYWORD HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
return me the authors who have more than var1 papers in the var0 conference .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME HAVING COUNT( DISTINCT PUBLICATIONalias0.TITLE ) > var1 ;"
return me the author who has the most number of papers in the var0 conference .,spider,"SELECT AUTHORalias0.NAME FROM PUBLICATION AS PUBLICATIONalias0 JOIN CONFERENCE AS CONFERENCEalias0 ON PUBLICATIONalias0.CID = CONFERENCEalias0.CID JOIN WRITES AS WRITESalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID JOIN AUTHOR AS AUTHORalias0 ON WRITESalias0.AID = AUTHORalias0.AID WHERE CONFERENCEalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME ORDER BY COUNT( DISTINCT PUBLICATIONalias0.TITLE ) DESC LIMIT 1 ;"
"return me the author in the "" var0 "" whose papers have more than var1 total citations .",spider,"SELECT AUTHORalias0.NAME FROM ORGANIZATION AS ORGANIZATIONalias0 JOIN AUTHOR AS AUTHORalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE ORGANIZATIONalias0.NAME = ""var0"" GROUP BY AUTHORalias0.NAME HAVING SUM( PUBLICATIONalias0.CITATION_NUM ) > var1 ;"
"return me the author in the "" var1 "" in var0 area whose papers have more than var2 total citations .",spider,"SELECT AUTHORalias0.NAME FROM DOMAIN_AUTHOR AS DOMAIN_AUTHORalias0 JOIN AUTHOR AS AUTHORalias0 ON DOMAIN_AUTHORalias0.AID = AUTHORalias0.AID JOIN DOMAIN AS DOMAINalias0 ON DOMAINalias0.DID = DOMAIN_AUTHORalias0.DID JOIN ORGANIZATION AS ORGANIZATIONalias0 ON ORGANIZATIONalias0.OID = AUTHORalias0.OID JOIN WRITES AS WRITESalias0 ON WRITESalias0.AID = AUTHORalias0.AID JOIN PUBLICATION AS PUBLICATIONalias0 ON WRITESalias0.PID = PUBLICATIONalias0.PID WHERE DOMAINalias0.NAME = ""var0"" AND ORGANIZATIONalias0.NAME = ""var1"" GROUP BY AUTHORalias0.NAME HAVING SUM( PUBLICATIONalias0.CITATION_NUM ) > var2 ;"
"What year is the movie "" var0 "" from ?",spider,"SELECT MOVIEalias0.RELEASE_YEAR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = ""var0"" ;"
"What year was the movie "" var0 "" produced",spider,"SELECT MOVIEalias0.RELEASE_YEAR FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = ""var0"" ;"
"What year was "" var0 "" born ?",spider,"SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
"In what year was "" var0 "" born",spider,"SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
"When was "" Kevin Spacey "" born ?",spider,"SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
"In what year was "" Kevin Spacey "" born ?",spider,"SELECT ACTORalias0.BIRTH_YEAR FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
"What is the nationality of the actress "" var0 "" ?",spider,"SELECT ACTORalias0.NATIONALITY FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
"What is the nationality of the actor "" var0 "" ?",spider,"SELECT ACTORalias0.NATIONALITY FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NAME = ""var0"" ;"
Find all movies produced in var0,spider,SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 ;
"Find all actors born in "" var0 """,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" ;"
Find all actors born in var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" ;"
Which actors were born in var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" ;"
Find all actors who are from var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = ""var0"" ;"
Find all actors from var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = ""var0"" ;"
Give me the name of all the actors from var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.NATIONALITY = ""var0"" ;"
Find all actors who were born in var0,spider,SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR = var0 ;
"Where is the birth place of "" Kevin Spacey """,spider,"SELECT DIRECTORalias0.BIRTH_CITY FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NAME = ""var0"" ;"
"In what city was "" Kevin Spacey "" born ?",spider,"SELECT DIRECTORalias0.BIRTH_CITY FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NAME = ""var0"" ;"
"What is the nationality of "" Kevin Spacey "" ?",spider,"SELECT DIRECTORalias0.NATIONALITY FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NAME = ""var0"" ;"
"How much was the budget of "" var0 """,spider,"SELECT MOVIEalias0.BUDGET FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.TITLE = ""var0"" ;"
"Find all movies directed by "" var0 "" after var1",spider,"SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR > var1 ;"
"Who is the director of the movie "" var0 "" ?",spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"Who directed the movie "" var0 "" ?",spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"List "" var0 "" directors",spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"Find the actor who played "" var0 "" in the movie "" var1 """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"Who acted "" var0 "" in the movie "" var1 "" ?",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"Who was the actor that played "" var0 "" in the movie "" var1 "" ?",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"Who acts as "" var0 "" in the movie "" var1 "" ?",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"Who is the actor playing "" var0 "" in "" var1 "" ?",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"What is the genre of the movie "" var0 "" ?",spider,"SELECT GENREalias0.GENRE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
Who was the director of the movie var1 from var0 ?,spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.RELEASE_YEAR = var0 AND MOVIEalias0.TITLE = ""var1"" ;"
"Find all movies written by "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE WRITERalias0.NAME = ""var0"" ;"
"Find all movies written and produced by "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID JOIN WRITTEN_BY AS WRITTEN_BYalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE PRODUCERalias0.NAME = ""var0"" AND WRITERalias0.NAME = ""var1"" ;"
"Find all movies featuring "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"What are all the movies featuring "" var0 "" ?",spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"Find all movies in which "" var0 "" appears",spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
What was the budget of the movie var1 from var0 ?,spider,"SELECT MOVIEalias0.BUDGET FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 AND MOVIEalias0.TITLE = ""var1"" ;"
Find all var0 produced in year var1,spider,"SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID WHERE GENREalias0.GENRE = ""var0"" AND MOVIEalias0.RELEASE_YEAR = var1 ;"
List all the var0 movies which released in var1,spider,"SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID WHERE GENREalias0.GENRE = ""var0"" AND MOVIEalias0.RELEASE_YEAR = var1 ;"
"Find all actors born in "" var0 "" after var1",spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 ;"
"Who are the actors born in "" var0 "" after var1 ?",spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 ;"
Find all actors from var0 born after var1,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 ;"
"Find all movies by directors born in "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.BIRTH_CITY = ""var0"" ;"
"Find all actors who were born in "" var0 "" in var1",spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR = var1 ;"
Find all movies about var0,spider,"SELECT MOVIEalias0.TITLE FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
What are the movies related to var0,spider,"SELECT MOVIEalias0.TITLE FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
"Which movies did "" var0 "" direct ?",spider,"SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" ;"
"Find all movies directed by "" var1 "" and featuring "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = ""var0"" AND DIRECTORalias0.NAME = ""var1"" ;"
"What are all the movies directed by "" var1 "" featuring "" var0 "" ?",spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = ""var0"" AND DIRECTORalias0.NAME = ""var1"" ;"
"How many movies are there that are directed by "" var1 "" and featuring "" var0 "" ?",spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = ""var0"" AND DIRECTORalias0.NAME = ""var1"" ;"
"List all the movies directed by "" var1 "" in which "" var0 "" played",spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = ""var0"" AND DIRECTORalias0.NAME = ""var1"" ;"
"What are all the tv series created by "" var0 "" ?",spider,"SELECT TV_SERIESalias0.TITLE FROM PRODUCER AS PRODUCERalias0 JOIN MADE_BY AS MADE_BYalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = MADE_BYalias0.MSID WHERE PRODUCERalias0.NAME = ""var0"" ;"
"Who acts "" var0 "" in the series var1 ?",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" AND TV_SERIESalias0.TITLE = ""var1"" ;"
"Who is the writer of the movie "" var0 """,spider,"SELECT WRITERalias0.NAME FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"Who is the writer of "" var0 """,spider,"SELECT WRITERalias0.NAME FROM WRITTEN_BY AS WRITTEN_BYalias0 JOIN MOVIE AS MOVIEalias0 ON WRITTEN_BYalias0.MSID = MOVIEalias0.MID JOIN WRITER AS WRITERalias0 ON WRITTEN_BYalias0.WID = WRITERalias0.WID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"What are the series featuring "" var0 "" ?",spider,"SELECT TV_SERIESalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"What are the series in which "" var0 "" is an actor ?",spider,"SELECT TV_SERIESalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"Find the directors of all movies featuring "" var0 """,spider,"SELECT DIRECTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NAME = ""var0"" ;"
"Find the producers of all movies in which "" var0 "" is an actor",spider,"SELECT PRODUCERalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID WHERE ACTORalias0.NAME = ""var0"" ;"
"Who is the director of the tv series "" var1 "" from var0 ?",spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.SID = DIRECTED_BYalias0.MSID WHERE TV_SERIESalias0.RELEASE_YEAR = var0 AND TV_SERIESalias0.TITLE = ""var1"" ;"
Find all the var1 actors from var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.GENDER = ""var1"" ;"
Find all actors from var1 born after var0,spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_YEAR > var0 AND ACTORalias0.NATIONALITY = ""var1"" ;"
"Find all the var2 actors born in "" var0 "" after var1",spider,"SELECT ACTORalias0.NAME FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 AND ACTORalias0.GENDER = ""var2"" ;"
"Find all the var0 actors in the movie "" var1 """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.GENDER = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
Find all the directors who are from var0,spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 WHERE DIRECTORalias0.NATIONALITY = ""var0"" ;"
"Find the actors who played in the movie "" var0 """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"Find all actors from var0 who acted in "" var1 "" movies",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"find all films in which "" var0 "" acted as "" Mr . Bean """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" AND CASTalias0.ROLE = ""var1"" ;"
"where is the director of "" var0 "" from",spider,"SELECT DIRECTORalias0.BIRTH_CITY FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"who acted the role of "" Mr . Bean """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID WHERE CASTalias0.ROLE = ""var0"" ;"
"what are the genres of movies directed by "" var0 """,spider,"SELECT GENREalias0.GENRE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID JOIN GENRE AS GENREalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID WHERE DIRECTORalias0.NAME = ""var0"" ;"
"Which movie had the character "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM MOVIE AS MOVIEalias0 JOIN CAST AS CASTalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE CASTalias0.ROLE = ""var0"" ;"
"What are the major roles in the movie "" var0 """,spider,"SELECT CASTalias0.ROLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
List all the directors of movies about var0,spider,"SELECT DIRECTORalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN TAGS AS TAGSalias0 ON TAGSalias0.MSID = MOVIEalias0.MID JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID WHERE KEYWORDalias0.KEYWORD = ""var0"" ;"
"What is the number of movies in which "" var0 "" acted after var1 ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR > var1 ;"
"What is the number of actors in the movie "" var0 "" ?",spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"How many actors are in the movie "" var0 "" ?",spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
"How many movies did "" var0 "" direct ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" ;"
How many movies were produced in the year var0 ?,spider,SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 ;
What is the number of movies produced in var0 ?,spider,SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM MOVIE AS MOVIEalias0 WHERE MOVIEalias0.RELEASE_YEAR = var0 ;
"What is the number of movies directed by "" var0 "" per year ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) , MOVIEalias0.RELEASE_YEAR FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" GROUP BY MOVIEalias0.RELEASE_YEAR ;"
"How many movies did "" var0 "" act in ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"What is the number of movies in which "" var0 "" acted ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"What is the number of movies featuring "" var0 "" ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"How many movies did "" var0 "" act in",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ;"
"How many actors were born in "" var0 "" after var1 ?",spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 ;"
"How many movies did "" var0 "" act in before var1 ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR < var1 ;"
"What is the number of movies that "" var0 "" acts in per year ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) , MOVIEalias0.RELEASE_YEAR FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" GROUP BY MOVIEalias0.RELEASE_YEAR ;"
How many movies about var0 were produced in var1 ?,spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = ""var0"" AND MOVIEalias0.RELEASE_YEAR = var1 ;"
How many movies about var0 were released after var1 ?,spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM TAGS AS TAGSalias0 JOIN KEYWORD AS KEYWORDalias0 ON TAGSalias0.KID = KEYWORDalias0.ID JOIN MOVIE AS MOVIEalias0 ON TAGSalias0.MSID = MOVIEalias0.MID WHERE KEYWORDalias0.KEYWORD = ""var0"" AND MOVIEalias0.RELEASE_YEAR > var1 ;"
"How many movies did "" var0 "" direct after var1 ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR > var1 ;"
"How many movies did "" var0 "" direct before var1 ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR < var1 ;"
"How many movies did "" var0 "" direct before var2 and after var1 ?",spider,"SELECT COUNT( DISTINCT MOVIEalias0.TITLE ) FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID WHERE DIRECTORalias0.NAME = ""var0"" AND MOVIEalias0.RELEASE_YEAR < var1 AND MOVIEalias0.RELEASE_YEAR > var2 ;"
"How many var2 actors were born in "" var0 "" after var1 ?",spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM ACTOR AS ACTORalias0 WHERE ACTORalias0.BIRTH_CITY = ""var0"" AND ACTORalias0.BIRTH_YEAR > var1 AND ACTORalias0.GENDER = ""var2"" ;"
"find the number of actors from var0 who played in "" var1 "" movies",spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE ACTORalias0.NATIONALITY = ""var0"" AND DIRECTORalias0.NAME = ""var1"" ;"
"How many actors from var0 have acted in "" var1 """,spider,"SELECT COUNT( DISTINCT ACTORalias0.NAME ) FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = ""var0"" AND MOVIEalias0.TITLE = ""var1"" ;"
"Find all movies that star both "" var0 "" and "" var1 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias0.NAME = ""var0"" AND ACTORalias1.NAME = ""var1"" ;"
"Find all movies featuring "" var0 "" and "" var1 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias0.NAME = ""var0"" AND ACTORalias1.NAME = ""var1"" ;"
"Find all movies featuring both "" var0 "" and "" var1 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias0.NAME = ""var0"" AND ACTORalias1.NAME = ""var1"" ;"
"Find all movies featuring "" var1 "" and "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias0.NAME = ""var0"" AND ACTORalias1.NAME = ""var1"" ;"
"Find all actors who acted in the same movie as "" var0 """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN CAST AS CASTalias1 ON MOVIEalias0.MID = CASTalias1.MSID JOIN ACTOR AS ACTORalias1 ON CASTalias1.AID = ACTORalias1.AID WHERE ACTORalias1.NAME = ""var0"" ;"
"What movies have the same director as the movie "" var0 "" ?",spider,"SELECT MOVIEalias1.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN DIRECTED_BY AS DIRECTED_BYalias1 ON DIRECTORalias0.DID = DIRECTED_BYalias1.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MOVIE AS MOVIEalias1 ON MOVIEalias1.MID = DIRECTED_BYalias1.MSID WHERE MOVIEalias0.TITLE = ""var0"" ;"
Find the movie which is classified in the most number of genres,spider,SELECT MOVIEalias0.TITLE FROM GENRE AS GENREalias0 JOIN CLASSIFICATION AS CLASSIFICATIONalias0 ON GENREalias0.GID = CLASSIFICATIONalias0.GID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CLASSIFICATIONalias0.MSID GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT GENREalias0.GENRE ) DESC LIMIT 1 ;
which movie has the most number of actors from var0 ?,spider,"SELECT MOVIEalias0.TITLE FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NATIONALITY = ""var0"" GROUP BY MOVIEalias0.TITLE ORDER BY COUNT( DISTINCT ACTORalias0.NAME ) DESC LIMIT 1 ;"
"Find the actors who played in the latest movie by "" var0 """,spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN DIRECTOR AS DIRECTORalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID WHERE DIRECTORalias0.NAME = ""var0"" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;"
"Find the name and budget of the latest movie by "" var0 """,spider,"SELECT MOVIEalias0.BUDGET , MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;"
"What is the latest movie by "" var0 """,spider,"SELECT MOVIEalias0.TITLE FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID WHERE DIRECTORalias0.NAME = ""var0"" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;"
Which producer has worked with the most number of directors ?,spider,SELECT PRODUCERalias0.NAME FROM DIRECTOR AS DIRECTORalias0 JOIN DIRECTED_BY AS DIRECTED_BYalias0 ON DIRECTORalias0.DID = DIRECTED_BYalias0.DID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = DIRECTED_BYalias0.MSID JOIN MADE_BY AS MADE_BYalias0 ON MOVIEalias0.MID = MADE_BYalias0.MSID JOIN PRODUCER AS PRODUCERalias0 ON PRODUCERalias0.PID = MADE_BYalias0.PID GROUP BY PRODUCERalias0.NAME ORDER BY COUNT( DISTINCT DIRECTORalias0.NAME ) DESC LIMIT 1 ;
"Find the latest movie which "" var0 "" acted in",spider,"SELECT ACTORalias0.NAME FROM CAST AS CASTalias0 JOIN ACTOR AS ACTORalias0 ON CASTalias0.AID = ACTORalias0.AID JOIN MOVIE AS MOVIEalias0 ON MOVIEalias0.MID = CASTalias0.MSID WHERE ACTORalias0.NAME = ""var0"" ORDER BY MOVIEalias0.RELEASE_YEAR DESC LIMIT 1 ;"
how many var1 are there in var0 ?,spider,"SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
how many var1 restaurants are there in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many places for var1 food are there in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 places are there in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many places for var1 are there in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 are there in var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.COUNTY = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
where is var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.NAME = ""var0"" ;"
what is the best var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
What is the best var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
What is the best place in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Give me the best place in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Where is the best var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Give me the best var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Where is the best var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Give me the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Give me the best var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
What is the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
Where is the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN LOCATION AS LOCATIONalias1 ON RESTAURANTalias1.ID = LOCATIONalias1.RESTAURANT_ID WHERE LOCATIONalias1.CITY_NAME = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
where is var1 in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
what are some good restaurants on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me some good restaurants on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good restaurant on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what is a good restaurant on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where can we find a restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" ;"
give me a restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" ;"
where can we find some restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" ;"
where is a restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" ;"
give me some restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" ;"
give me some restaurants good for var0 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.FOOD_TYPE = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
where are some restaurants good for var0 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.FOOD_TYPE = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
how many places for var1 food are there in var0 ?,spider,"SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 restaurants are there in var0 ?,spider,"SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 restaurant are there in var0 ?,spider,"SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many places for var1 are there in var0 ?,spider,"SELECT COUNT( LOCATIONalias0.* ) FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 restaurants are in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.COUNTY = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
where can i eat var1 food in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
how many var1 are there in the var0 ?,spider,"SELECT COUNT( * ) FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
give me a good restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
what are some good restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
what is a good restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
give me some good restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.RATING > var1 ;"
where is a good restaurant on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where are some good var2s on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where is a good var2 restaurant on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
what are some good places for var2 on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me a good var2 on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me some restaurants good for var2 food on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me a good place on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where is a good place on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where can i eat var2 food on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me some good places on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where is a var2 restaurant on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me a restaurant on var1 in var0 that serves good var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me a good restaurant on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where is a restaurant on var1 in var0 that serves good var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me some good restaurants on var1 in var0 for var2 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me some good places for var2 on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where can i eat some good var2 food on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where is a good var2 on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where are some restaurants good for var2 food on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where are some good places for var2 on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me a good var2 restaurant on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
give me some good var2s on var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" AND RESTAURANTalias0.FOOD_TYPE = ""var2"" AND RESTAURANTalias0.RATING > var3 ;"
where can i eat var1 food in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" ;"
give me some restaurants on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" ;"
give me a restaurant on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" ;"
where can we find a restaurant on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" ;"
where can we find some restaurants on var0 rd in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND LOCATIONalias0.STREET_NAME = ""var1"" ;"
where is the best restaurant in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
where is the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
what is the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
what is the best var1 restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
where is the best var1 restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
what is the best var1 in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
give me the best restaurant in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
give me the best restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
what is the best restaurant in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
where is the best var1 in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
give me the best var1 in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
give me the best var1 restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING = ( SELECT MAX( RESTAURANTalias1.RATING ) FROM RESTAURANT AS RESTAURANTalias1 JOIN GEOGRAPHIC AS GEOGRAPHICalias1 ON RESTAURANTalias1.CITY_NAME = GEOGRAPHICalias1.CITY_NAME WHERE GEOGRAPHICalias1.REGION = ""var2"" AND RESTAURANTalias1.FOOD_TYPE = ""var3"" ) ;"
give me some restaurants good for var1 food in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what are some good places in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good restaurant in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good var1 restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good place in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where are some restaurants good for var1 food in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good place in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good restaurant in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what are some good restaurants in the var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good var1 restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where can i eat some good var1 food in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN GEOGRAPHIC AS GEOGRAPHICalias0 ON RESTAURANTalias0.CITY_NAME = GEOGRAPHICalias0.CITY_NAME JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE GEOGRAPHICalias0.REGION = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where are some restaurants good for var1 food in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what are some good places in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where are some good var1 restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
show me a good var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good place in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where are some good var1s in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a restaurant in var0 that serves good var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what are some good restaurants in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me some restaurants good for var1 food in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where can i eat some good var1 food in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me some good places for var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a restaurant in var0 that serves good var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me some good var1 restaurants in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where are some good places for var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me some good var1s in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
give me a good restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good var1 restaurant in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
what are some good places for var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good restaurant in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where is a good place in var0 for var1 food ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.FOOD_TYPE = ""var1"" AND RESTAURANTalias0.RATING > var2 ;"
where can i find a var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
where is var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
where is a var1 in var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM RESTAURANT AS RESTAURANTalias0 JOIN LOCATION AS LOCATIONalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE LOCATIONalias0.CITY_NAME = ""var0"" AND RESTAURANTalias0.NAME = ""var1"" ;"
where can we find some restaurants in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) ;"
give me some restaurants in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) ;"
give me a restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) ;"
where can i find a restaurant in the var0 ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) ;"
give me a good restaurant in the bay area ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) AND RESTAURANTalias0.RATING > var1 ;"
what are some good restaurants in the bay area ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) AND RESTAURANTalias0.RATING > var1 ;"
give me some good restaurants in the bay area ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) AND RESTAURANTalias0.RATING > var1 ;"
what is a good restaurant in the bay area ?,spider,"SELECT LOCATIONalias0.HOUSE_NUMBER , RESTAURANTalias0.NAME FROM LOCATION AS LOCATIONalias0 JOIN RESTAURANT AS RESTAURANTalias0 ON RESTAURANTalias0.ID = LOCATIONalias0.RESTAURANT_ID WHERE RESTAURANTalias0.CITY_NAME IN ( SELECT GEOGRAPHICalias0.CITY_NAME FROM GEOGRAPHIC AS GEOGRAPHICalias0 WHERE GEOGRAPHICalias0.REGION = ""var0"" ) AND RESTAURANTalias0.RATING > var1 ;"
How many singers do we have ?,spider,SELECT COUNT( * ) FROM SINGER AS SINGERalias0 ;
What is the total number of singers ?,spider,SELECT COUNT( * ) FROM SINGER AS SINGERalias0 ;
How many singers are there ?,spider,SELECT COUNT( * ) FROM SINGER AS SINGERalias0 ;
What is the count of singers ?,spider,SELECT COUNT( * ) FROM SINGER AS SINGERalias0 ;
"Show name , country , age for all singers ordered by age from the oldest to the youngest .",spider,"SELECT SINGERalias0.AGE , SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE DESC ;"
"What are the names , countries , and ages for every singer in descending order of age ?",spider,"SELECT SINGERalias0.AGE , SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE DESC ;"
"What is the average , minimum , and maximum age of all singers from var0 ?",spider,"SELECT AVG( SINGERalias0.AGE ) , MAX( SINGERalias0.AGE ) , MIN( SINGERalias0.AGE ) FROM SINGER AS SINGERalias0 WHERE SINGERalias0.COUNTRY = ""var0"" ;"
"What is the average , minimum , and maximum age for all French singers ?",spider,"SELECT AVG( SINGERalias0.AGE ) , MAX( SINGERalias0.AGE ) , MIN( SINGERalias0.AGE ) FROM SINGER AS SINGERalias0 WHERE SINGERalias0.COUNTRY = ""var0"" ;"
Show the name and the release year of the song by the youngest singer .,spider,"SELECT SINGERalias0.SONG_NAME , SINGERalias0.SONG_RELEASE_YEAR FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE LIMIT 1 ;"
What are the names and release years for all the songs of the youngest singer ?,spider,"SELECT SINGERalias0.SONG_NAME , SINGERalias0.SONG_RELEASE_YEAR FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.AGE LIMIT 1 ;"
What are all distinct countries where singers above age var0 are from ?,spider,SELECT DISTINCT SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > var0 ;
What are the different countries with singers above age var0 ?,spider,SELECT DISTINCT SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > var0 ;
Show all countries and the number of singers in each country .,spider,"SELECT COUNT( * ) , SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.COUNTRY ;"
How many singers are from each country ?,spider,"SELECT COUNT( * ) , SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.COUNTRY ;"
List all song names by singers above the average age .,spider,SELECT SINGERalias0.SONG_NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > ( SELECT AVG( SINGERalias1.AGE ) FROM SINGER AS SINGERalias1 ) ;
What are all the song names by singers who are older than average ?,spider,SELECT SINGERalias0.SONG_NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > ( SELECT AVG( SINGERalias1.AGE ) FROM SINGER AS SINGERalias1 ) ;
Show location and name for all stadiums with a capacity between var0 and var1 .,spider,"SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY BETWEEN var0 AND var1 ;"
What are the locations and names of all stations with capacity between var0 and var1 ?,spider,"SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.CAPACITY BETWEEN var0 AND var1 ;"
What is the average and the maximum capacity of all stadiums ?,spider,"SELECT AVG( STADIUMalias0.CAPACITY ) , MAX( STADIUMalias0.CAPACITY ) FROM STADIUM AS STADIUMalias0 ;"
What is the average and maximum capacities for all stations ?,spider,"SELECT AVG( STADIUMalias0.CAPACITY ) , MAX( STADIUMalias0.CAPACITY ) FROM STADIUM AS STADIUMalias0 ;"
What is the name and capacity for the stadium with highest average attendance ?,spider,"SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 ORDER BY STADIUMalias0.AVERAGE DESC LIMIT 1 ;"
What is the name and capacity for the stadium with the highest average attendance ?,spider,"SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 ORDER BY STADIUMalias0.AVERAGE DESC LIMIT 1 ;"
How many concerts are there in year var0 or var1 ?,spider,SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 WHERE CONCERTalias0.YEAR = var0 OR CONCERTalias0.YEAR = var1 ;
How many concerts occurred in var0 or var1 ?,spider,SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 WHERE CONCERTalias0.YEAR = var0 OR CONCERTalias0.YEAR = var1 ;
Show the stadium name and the number of concerts in each stadium .,spider,"SELECT COUNT( * ) , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID GROUP BY CONCERTalias0.STADIUM_ID ;"
"For each stadium , how many concerts play there ?",spider,"SELECT COUNT( * ) , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID GROUP BY CONCERTalias0.STADIUM_ID ;"
Show the stadium name and capacity with most number of concerts in year var0 or after .,spider,"SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR >= var0 GROUP BY STADIUMalias0.STADIUM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the name and capacity of the stadium with the most concerts after 2013 ?,spider,"SELECT STADIUMalias0.CAPACITY , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR >= var0 GROUP BY STADIUMalias0.STADIUM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which year has most number of concerts ?,spider,SELECT CONCERTalias0.YEAR FROM CONCERT AS CONCERTalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the year that had the most concerts ?,spider,SELECT CONCERTalias0.YEAR FROM CONCERT AS CONCERTalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the stadium names without any concert .,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.STADIUM_ID NOT IN ( SELECT CONCERTalias0.STADIUM_ID FROM CONCERT AS CONCERTalias0 ) ;
What are the names of the stadiums without any concerts ?,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 WHERE STADIUMalias0.STADIUM_ID NOT IN ( SELECT CONCERTalias0.STADIUM_ID FROM CONCERT AS CONCERTalias0 ) ;
Show countries where a singer above age var0 and a singer below var1 are from .,spider,SELECT SINGERalias0.COUNTRY FROM SINGER AS SINGERalias0 WHERE SINGERalias0.AGE > var0 INTERSECT SELECT SINGERalias1.COUNTRY FROM SINGER AS SINGERalias1 WHERE SINGERalias1.AGE < var1 ;
Show names for all stadiums except for stadiums having a concert in year var0 .,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR = var0 ;
What are the names of all stadiums that did not have a concert in var0 ?,spider,SELECT STADIUMalias0.NAME FROM STADIUM AS STADIUMalias0 EXCEPT SELECT STADIUMalias1.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR = var0 ;
Show the name and theme for all concerts and the number of singers in each concert .,spider,"SELECT CONCERTalias0.CONCERT_NAME , CONCERTalias0.THEME , COUNT( SINGER_IN_CONCERTalias0.* ) FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID GROUP BY CONCERTalias0.CONCERT_ID ;"
"What are the names , themes , and number of singers for each and every concert ?",spider,"SELECT CONCERTalias0.CONCERT_NAME , CONCERTalias0.THEME , COUNT( SINGER_IN_CONCERTalias0.* ) FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID GROUP BY CONCERTalias0.CONCERT_ID ;"
List singer names and number of concerts for each singer .,spider,"SELECT COUNT( SINGER_IN_CONCERTalias0.* ) , SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID GROUP BY SINGERalias0.SINGER_ID ;"
What are the names of the singers and number of concerts for each person ?,spider,"SELECT COUNT( SINGER_IN_CONCERTalias0.* ) , SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID GROUP BY SINGERalias0.SINGER_ID ;"
List all singer names in concerts in year var0 .,spider,SELECT SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID WHERE CONCERTalias0.YEAR = var0 ;
What are the names of the singers who performed in a concert in var0 ?,spider,SELECT SINGERalias0.NAME FROM SINGER_IN_CONCERT AS SINGER_IN_CONCERTalias0 JOIN SINGER AS SINGERalias0 ON SINGERalias0.SINGER_ID = SINGER_IN_CONCERTalias0.SINGER_ID JOIN CONCERT AS CONCERTalias0 ON SINGER_IN_CONCERTalias0.CONCERT_ID = CONCERTalias0.CONCERT_ID WHERE CONCERTalias0.YEAR = var0 ;
what is the name and nation of the singer who have a song having ' var0 ' in its name ?,spider,"SELECT SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SONG_NAME LIKE ""var0"" ;"
What is the name and country of origin of every singer who has a song with the word ' var0 ' in its title ?,spider,"SELECT SINGERalias0.COUNTRY , SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SONG_NAME LIKE ""var0"" ;"
Find the name and location of the stadiums which some concerts happened in the years of both var0 and var1 .,spider,"SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR = var0 INTERSECT SELECT STADIUMalias1.LOCATION , STADIUMalias1.NAME FROM CONCERT AS CONCERTalias1 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.STADIUM_ID = CONCERTalias1.STADIUM_ID WHERE CONCERTalias1.YEAR = var1 ;"
What are the names and locations of the stadiums that had concerts that occurred in both var0 and var1 ?,spider,"SELECT STADIUMalias0.LOCATION , STADIUMalias0.NAME FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID WHERE CONCERTalias0.YEAR = var0 INTERSECT SELECT STADIUMalias1.LOCATION , STADIUMalias1.NAME FROM CONCERT AS CONCERTalias1 JOIN STADIUM AS STADIUMalias1 ON STADIUMalias1.STADIUM_ID = CONCERTalias1.STADIUM_ID WHERE CONCERTalias1.YEAR = var1 ;"
Find the number of concerts happened in the stadium with the highest capacity .,spider,SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
What are the number of concerts that occurred in the stadium with the largest capacity ?,spider,SELECT COUNT( * ) FROM CONCERT AS CONCERTalias0 JOIN STADIUM AS STADIUMalias0 ON STADIUMalias0.STADIUM_ID = CONCERTalias0.STADIUM_ID ORDER BY STADIUMalias0.CAPACITY DESC LIMIT 1 ;
Find the number of pets whose weight is heavier than var0 .,spider,SELECT COUNT( PETSalias0.* ) FROM PETS AS PETSalias0 WHERE PETSalias0.WEIGHT > var0 ;
How many pets have a greater weight than var0 ?,spider,SELECT COUNT( PETSalias0.* ) FROM PETS AS PETSalias0 WHERE PETSalias0.WEIGHT > var0 ;
Find the weight of the youngest dog .,spider,SELECT PETSalias0.WEIGHT FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;
How much does the youngest dog weigh ?,spider,SELECT PETSalias0.WEIGHT FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;
Find the maximum weight for each type of pet . List the maximum weight and pet type .,spider,"SELECT MAX( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
List the maximum weight and type for each type of pet .,spider,"SELECT MAX( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
Find number of pets owned by students who are older than var0 .,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.AGE > var0 ;
How many pets are owned by students that have an age greater than var0 ?,spider,SELECT COUNT( * ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.AGE > var0 ;
var0ind the number of var1 pets that are raised by female students (with sex var0) .,spider,"SELECT COUNT( PETSalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var1"" AND STUDENTalias0.SEX = ""var0"" ;"
How many var1 pets are raised by female students ?,spider,"SELECT COUNT( PETSalias0.* ) FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var1"" AND STUDENTalias0.SEX = ""var0"" ;"
Find the number of distinct type of pets .,spider,SELECT COUNT( DISTINCT PETTYPE ) FROM PETS AS PETSalias0 ;
How many different types of pet are there ?,spider,SELECT COUNT( DISTINCT PETTYPE ) FROM PETS AS PETSalias0 ;
Find the first name of students who have var0 or var1 pet .,spider,"SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" OR PETSalias0.PETTYPE = ""var1"" ;"
What are the first names of every student who has a var0 or var1 as a pet ?,spider,"SELECT DISTINCT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" OR PETSalias0.PETTYPE = ""var1"" ;"
Find the name of students who have both var0 and var1 pets .,spider,"SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" INTERSECT SELECT STUDENTalias1.FNAME FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = ""var1"" ;"
What are the students ' first names who have both var0s and var1s as pets ?,spider,"SELECT STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" INTERSECT SELECT STUDENTalias1.FNAME FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = ""var1"" ;"
Find the major and age of students who do not have a var0 pet .,spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" ) ;"
"What major is every student who does not own a var0 as a pet , and also how old are they ?",spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.MAJOR FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" ) ;"
Find the id of students who do not have a var0 pet .,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" ;"
What are the ids of the students who do not own var0s as pets ?,spider,"SELECT STUID FROM STUDENT AS STUDENTalias0 EXCEPT SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" ;"
Find the first name and age of students who have a var0 but do not have a var1 as a pet .,spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" AND STUDENTalias0.STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = ""var1"" ) ;"
What is the first name of every student who has a var0 but does not have a var1 ?,spider,"SELECT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var0"" AND STUDENTalias0.STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias1 ON STUDENTalias1.STUID = HAS_PETalias1.STUID JOIN PETS AS PETSalias1 ON PETSalias1.PETID = HAS_PETalias1.PETID WHERE PETSalias1.PETTYPE = ""var1"" ) ;"
Find the type and weight of the youngest pet .,spider,"SELECT PETSalias0.WEIGHT , PETTYPE FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;"
"What type of pet is the youngest animal , and how much does it weigh ?",spider,"SELECT PETSalias0.WEIGHT , PETTYPE FROM PETS AS PETSalias0 ORDER BY PETSalias0.PET_AGE LIMIT 1 ;"
Find the id and weight of all pets whose age is older than var0 .,spider,"SELECT PETID , PETSalias0.WEIGHT FROM PETS AS PETSalias0 WHERE PETSalias0.PET_AGE > var0 ;"
What is the id and weight of every pet who is older than var0 ?,spider,"SELECT PETID , PETSalias0.WEIGHT FROM PETS AS PETSalias0 WHERE PETSalias0.PET_AGE > var0 ;"
Find the average and maximum age for each type of pet .,spider,"SELECT AVG( PETSalias0.PET_AGE ) , MAX( PETSalias0.PET_AGE ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
What is the average and maximum age for each pet type ?,spider,"SELECT AVG( PETSalias0.PET_AGE ) , MAX( PETSalias0.PET_AGE ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
Find the average weight for each pet type .,spider,"SELECT AVG( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
What is the average weight for each type of pet ?,spider,"SELECT AVG( PETSalias0.WEIGHT ) , PETTYPE FROM PETS AS PETSalias0 GROUP BY PETTYPE ;"
Find the first name and age of students who have a pet .,spider,"SELECT DISTINCT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID ;"
What are the different first names and ages of the students who do have pets ?,spider,"SELECT DISTINCT STUDENTalias0.AGE , STUDENTalias0.FNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID ;"
Find the id of the pet owned by student whose last name is ' var0 ' .,spider,"SELECT HAS_PETalias0.PETID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
What is the id of the pet owned by the student whose last name is ' var0 ' ?,spider,"SELECT HAS_PETalias0.PETID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID WHERE STUDENTalias0.LNAME = ""var0"" ;"
Find the number of pets for each student who has any pet and student id .,spider,"SELECT COUNT( * ) , STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID ;"
"For students who have pets , how many pets does each student have ?",spider,"SELECT COUNT( * ) , STUDENTalias0.STUID FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID ;"
Find the first name and gender of student who have more than one pet .,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID HAVING COUNT( * ) > var0 ;"
What is the first name and gender of the all the students who have more than one pet ?,spider,"SELECT STUDENTalias0.FNAME , STUDENTalias0.SEX FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID GROUP BY STUDENTalias0.STUID HAVING COUNT( * ) > var0 ;"
Find the last name of the student who has a var1 that is age var0 .,spider,"SELECT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var1"" AND PETSalias0.PET_AGE = var0 ;"
What is the last name of the student who has a var1 that is var0 years old ?,spider,"SELECT STUDENTalias0.LNAME FROM STUDENT AS STUDENTalias0 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias0.STUID = HAS_PETalias0.STUID JOIN PETS AS PETSalias0 ON PETSalias0.PETID = HAS_PETalias0.PETID WHERE PETSalias0.PETTYPE = ""var1"" AND PETSalias0.PET_AGE = var0 ;"
Find the average age of students who do not have any pet .,spider,SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID ) ;
What is the average age for all students who do not own any pets ?,spider,SELECT AVG( STUDENTalias0.AGE ) FROM STUDENT AS STUDENTalias0 WHERE STUID NOT IN ( SELECT STUDENTalias1.STUID FROM STUDENT AS STUDENTalias1 JOIN HAS_PET AS HAS_PETalias0 ON STUDENTalias1.STUID = HAS_PETalias0.STUID ) ;
How many continents are there ?,spider,SELECT COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 ;
What is the number of continents ?,spider,SELECT COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 ;
"How many countries does each continent have ? List the continent id , continent name and the number of countries .",spider,"SELECT CONTINENTSalias0.CONTID , CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID GROUP BY CONTINENTSalias0.CONTID ;"
"For each continent , list its id , name , and how many countries it has ?",spider,"SELECT CONTINENTSalias0.CONTID , CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID GROUP BY CONTINENTSalias0.CONTID ;"
How many countries are listed ?,spider,SELECT COUNT( * ) FROM COUNTRIES AS COUNTRIESalias0 ;
How many countries exist ?,spider,SELECT COUNT( * ) FROM COUNTRIES AS COUNTRIESalias0 ;
"How many models does each car maker produce ? List maker full name , id and the number .",spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;"
"What is the full name of each car maker , along with its id and how many models it produces ?",spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;"
Which model of the car has the minimum horsepower ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.HORSEPOWER ASC LIMIT 1 ;
What is the model of the car with the smallest amount of horsepower ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.HORSEPOWER ASC LIMIT 1 ;
Find the model of the car whose weight is below the average weight .,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.WEIGHT < ( SELECT AVG( CARS_DATAalias1.WEIGHT ) FROM CARS_DATA AS CARS_DATAalias1 ) ;
What is the model for the car with a weight smaller than the average ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.WEIGHT < ( SELECT AVG( CARS_DATAalias1.WEIGHT ) FROM CARS_DATA AS CARS_DATAalias1 ) ;
Find the name of the makers that produced some cars in the year of var0 ?,spider,"SELECT DISTINCT CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = ""var0"" ;"
What is the name of the different car makers who produced a car in var0 ?,spider,"SELECT DISTINCT CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = ""var0"" ;"
Find the make and production time of the cars that were produced in the earliest year ?,spider,"SELECT CARS_DATAalias0.YEAR , CAR_NAMESalias0.MAKE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = ( SELECT MIN( CARS_DATAalias1.YEAR ) FROM CARS_DATA AS CARS_DATAalias1 ) ;"
What is the maker of the carr produced in the earliest year and what year was it ?,spider,"SELECT CARS_DATAalias0.YEAR , CAR_NAMESalias0.MAKE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR = ( SELECT MIN( CARS_DATAalias1.YEAR ) FROM CARS_DATA AS CARS_DATAalias1 ) ;"
Which distinct car models are the produced after var0 ?,spider,SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR > var0 ;
What are the different models for the cards produced after var0 ?,spider,SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.YEAR > var0 ;
How many car makers are there in each continents ? List the continent name and the count .,spider,"SELECT CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CONTINENTSalias0.CONTINENT ;"
What is the name of each continent and how many car makers are there in each one ?,spider,"SELECT CONTINENTSalias0.CONTINENT , COUNT( * ) FROM CONTINENTS AS CONTINENTSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CONTINENTSalias0.CONTINENT ;"
Which of the countries has the most car makers ? List the country name .,spider,SELECT COUNTRIESalias0.COUNTRYNAME FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CAR_MAKERSalias0.COUNTRY ORDER BY COUNT ( * ) DESC LIMIT 1 ;
What is the name of the country with the most car makers ?,spider,SELECT COUNTRIESalias0.COUNTRYNAME FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY CAR_MAKERSalias0.COUNTRY ORDER BY COUNT ( * ) DESC LIMIT 1 ;
How many car models are produced by each maker ? List the count and the maker full name .,spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT ( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;"
What is the number of car models that are produced by each maker and what is the id and full name of each maker ?,spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID , COUNT ( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID ;"
What is the accelerate of the car make var0 ?,spider,"SELECT CARS_DATAalias0.ACCELERATE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MAKE = ""var0"" ;"
How much does the car accelerate that makes var0 ?,spider,"SELECT CARS_DATAalias0.ACCELERATE FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MAKE = ""var0"" ;"
How many car makers are there in var0 ?,spider,"SELECT COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE COUNTRIESalias0.COUNTRYNAME = ""var0"" ;"
What is the number of makers of care in France ?,spider,"SELECT COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE COUNTRIESalias0.COUNTRYNAME = ""var0"" ;"
How many car models are produced in the var0 ?,spider,"SELECT COUNT( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE COUNTRIESalias0.COUNTRYNAME = ""var0"" ;"
What is the count of the car models produced in the United States ?,spider,"SELECT COUNT( * ) FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN COUNTRIES AS COUNTRIESalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE COUNTRIESalias0.COUNTRYNAME = ""var0"" ;"
What is the average miles per gallon(mpg) of the cars with var0 cylinders ?,spider,SELECT AVG( CARS_DATAalias0.MPG ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS = var0 ;
What is the average miles per gallon of all the cards with var0 cylinders ?,spider,SELECT AVG( CARS_DATAalias0.MPG ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS = var0 ;
What is the smallest weight of the car produced with 8 cylinders on 197var0 ?,spider,SELECT CARS_DATAalias0.WEIGHT FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 AND YEAR = var1 ORDER BY CARS_DATAalias0.WEIGHT ASC LIMIT 1 ;
What is the minimu weight of the car with 8 cylinders produced in 197var0 ?,spider,SELECT CARS_DATAalias0.WEIGHT FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 AND YEAR = var1 ORDER BY CARS_DATAalias0.WEIGHT ASC LIMIT 1 ;
What are all the makers and models ?,spider,"SELECT MODEL_LISTalias0.MAKER , MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 ;"
What are the makers and models ?,spider,"SELECT MODEL_LISTalias0.MAKER , MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 ;"
What are the countries having at least one car maker ? List name and id .,spider,"SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;"
What are the names and ids of all countries with at least one car maker ?,spider,"SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) >= var0 ;"
What is the number of the cars with horsepower more than var0 ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.HORSEPOWER > var0 ;
What is the number of cars with a horsepower greater than var0 ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.HORSEPOWER > var0 ;
What is the average weight of cars each year ?,spider,"SELECT AVG( CARS_DATAalias0.WEIGHT ) , CARS_DATAalias0.YEAR FROM CARS_DATA AS CARS_DATAalias0 GROUP BY CARS_DATAalias0.YEAR ;"
What is the average weight and year for each year ?,spider,"SELECT AVG( CARS_DATAalias0.WEIGHT ) , CARS_DATAalias0.YEAR FROM CARS_DATA AS CARS_DATAalias0 GROUP BY CARS_DATAalias0.YEAR ;"
Which countries in var0 have at least var1 car manufacturers ?,spider,"SELECT COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CONTINENTS AS CONTINENTSalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE CONTINENTSalias0.CONTINENT = ""var0"" GROUP BY COUNTRIESalias0.COUNTRYNAME HAVING COUNT( * ) >= var1 ;"
What are the names of all European countries with at least var1 manufacturers ?,spider,"SELECT COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CONTINENTS AS CONTINENTSalias0 ON COUNTRIESalias0.CONTINENT = CONTINENTSalias0.CONTID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY WHERE CONTINENTSalias0.CONTINENT = ""var0"" GROUP BY COUNTRIESalias0.COUNTRYNAME HAVING COUNT( * ) >= var1 ;"
What is the maximum horsepower and the make of the car models with var0 cylinders ?,spider,"SELECT CARS_DATAalias0.HORSEPOWER , CAR_NAMESalias0.MAKE FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS = var0 ORDER BY CARS_DATAalias0.HORSEPOWER DESC LIMIT 1 ;"
What is the largest amount of horsepower for the models with var0 cylinders and what make is it ?,spider,"SELECT CARS_DATAalias0.HORSEPOWER , CAR_NAMESalias0.MAKE FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS = var0 ORDER BY CARS_DATAalias0.HORSEPOWER DESC LIMIT 1 ;"
"Which model saves the most gasoline ? That is to say , have the maximum miles per gallon .",spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
What is the car wmodel with the highest mpg ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
What is the average horsepower of the cars before var0 ?,spider,SELECT AVG( CARS_DATAalias0.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR < var0 ;
What is the average horsepower for all cards produced before var0 ?,spider,SELECT AVG( CARS_DATAalias0.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR < var0 ;
What is the average edispl of the cars of model var0 ?,spider,"SELECT AVG( CARS_DATAalias0.EDISPL ) FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MODEL = ""var0"" ;"
What is the average edispl for all var0s ?,spider,"SELECT AVG( CARS_DATAalias0.EDISPL ) FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MODEL = ""var0"" ;"
What is the maximum accelerate for different number of cylinders ?,spider,"SELECT CARS_DATAalias0.CYLINDERS , MAX( CARS_DATAalias0.ACCELERATE ) FROM CARS_DATA AS CARS_DATAalias0 GROUP BY CARS_DATAalias0.CYLINDERS ;"
What is the maximum accelerate for all the different cylinders ?,spider,"SELECT CARS_DATAalias0.CYLINDERS , MAX( CARS_DATAalias0.ACCELERATE ) FROM CARS_DATA AS CARS_DATAalias0 GROUP BY CARS_DATAalias0.CYLINDERS ;"
Which model has the most version(make) of cars ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 GROUP BY MODEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
What model has the most different versions ?,spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 GROUP BY MODEL ORDER BY COUNT( * ) DESC LIMIT 1 ;
How many cars have more than var0 cylinders ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS > var0 ;
What is the number of cars with more than var0 cylinders ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS > var0 ;
How many cars has over var0 cylinders ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS > var0 ;
What is the number of carsw ith over var0 cylinders ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.CYLINDERS > var0 ;
how many cars were produced in var0 ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR = var0 ;
"In var0 , how many cars were made ?",spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.YEAR = var0 ;
How many car models were produced by the maker with full name var0 ?,spider,"SELECT COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CAR_MAKERSalias0.FULLNAME = ""var0"" ;"
What is the number of car models created by the car maker var0 ?,spider,"SELECT COUNT( * ) FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CAR_MAKERSalias0.FULLNAME = ""var0"" ;"
Which makers designed more than var0 car models ? List full name and the id .,spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) > var0 ;"
What are the names and ids of all makers with more than var0 models ?,spider,"SELECT CAR_MAKERSalias0.FULLNAME , CAR_MAKERSalias0.ID FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) > var0 ;"
Which distinctive models are produced by maker with the full name var0 or weighing more than var1 ?,spider,"SELECT DISTINCT MODEL_LISTalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.WEIGHT > var1 OR CAR_MAKERSalias0.FULLNAME = ""var0"" ;"
What are the different models created by either the car maker var0 or weighed more than var1 ?,spider,"SELECT DISTINCT MODEL_LISTalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.WEIGHT > var1 OR CAR_MAKERSalias0.FULLNAME = ""var0"" ;"
In which years cars were produced weighing no less than var0 and no more than var1 ?,spider,SELECT DISTINCT CARS_DATAalias0.YEAR FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.WEIGHT < var1 AND CARS_DATAalias0.WEIGHT > var0 ;
What are the different years in which there were cars produced that weighed less than var1 and also cars that weighted more than var0 ?,spider,SELECT DISTINCT CARS_DATAalias0.YEAR FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.WEIGHT < var1 AND CARS_DATAalias0.WEIGHT > var0 ;
What is the horsepower of the car with the largest accelerate ?,spider,SELECT CARS_DATAalias0.HORSEPOWER FROM CARS_DATA AS CARS_DATAalias0 ORDER BY CARS_DATAalias0.ACCELERATE DESC LIMIT 1 ;
What is the horsepower of the car with the greatest accelerate ?,spider,SELECT CARS_DATAalias0.HORSEPOWER FROM CARS_DATA AS CARS_DATAalias0 ORDER BY CARS_DATAalias0.ACCELERATE DESC LIMIT 1 ;
"For model var0 , how many cylinders does the car with the least accelerate have ?",spider,"SELECT CARS_DATAalias0.CYLINDERS FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MODEL = ""var0"" ORDER BY CARS_DATAalias0.ACCELERATE ASC LIMIT 1 ;"
"For a var0 model , how many cylinders does the version with least accelerate have ?",spider,"SELECT CARS_DATAalias0.CYLINDERS FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CAR_NAMESalias0.MODEL = ""var0"" ORDER BY CARS_DATAalias0.ACCELERATE ASC LIMIT 1 ;"
How many cars have a larger accelerate than the car with the largest horsepower ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.ACCELERATE > ( SELECT CARS_DATAalias1.ACCELERATE FROM CARS_DATA AS CARS_DATAalias1 ORDER BY CARS_DATAalias1.HORSEPOWER DESC LIMIT 1 ) ;
What is the number of cars with a greater accelerate than the one with the most horsepower ?,spider,SELECT COUNT( CARS_DATAalias0.* ) FROM CARS_DATA AS CARS_DATAalias0 WHERE CARS_DATAalias0.ACCELERATE > ( SELECT CARS_DATAalias1.ACCELERATE FROM CARS_DATA AS CARS_DATAalias1 ORDER BY CARS_DATAalias1.HORSEPOWER DESC LIMIT 1 ) ;
How many countries has more than var0 car makers ?,spider,"SELECT COUNT( * ) FROM ( SELECT COUNT( * ) , COUNTRIESalias0.COUNTRYID FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 ) ;"
What is the number of countries with more than var0 car makers ?,spider,"SELECT COUNT( * ) FROM ( SELECT COUNT( * ) , COUNTRIESalias0.COUNTRYID FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 ) ;"
"For the cars with var0 cylinders , which model has the largest horsepower ?",spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS = var0 ORDER BY CARS_DATAalias0.HORSEPOWER DESC LIMIT 1 ;
"For all of the var0 cylinder cars , which model has the most horsepower ?",spider,SELECT CAR_NAMESalias0.MODEL FROM CAR_NAMES AS CAR_NAMESalias0 JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS = var0 ORDER BY CARS_DATAalias0.HORSEPOWER DESC LIMIT 1 ;
"Among the cars with more than lowest horsepower , which ones do not have more than var0 cylinders ? List the car makeid and make name .",spider,"SELECT CAR_NAMESalias0.MAKE , CAR_NAMESalias0.MAKEID FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS <= var0 AND CARS_DATAalias0.HORSEPOWER > ( SELECT MIN( CARS_DATAalias1.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias1 ) ;"
"Among the cars that do not have the minimum horsepower , what are the make ids and names of al those with less than 4 cylinders ?",spider,"SELECT CAR_NAMESalias0.MAKE , CAR_NAMESalias0.MAKEID FROM CARS_DATA AS CARS_DATAalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID WHERE CARS_DATAalias0.CYLINDERS <= var0 AND CARS_DATAalias0.HORSEPOWER > ( SELECT MIN( CARS_DATAalias1.HORSEPOWER ) FROM CARS_DATA AS CARS_DATAalias1 ) ;"
What is the maximum miles per gallon of the car with var0 cylinders or produced before 19var00 ?,spider,SELECT CARS_DATAalias0.MPG FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 OR YEAR < var1 ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
What is the maximum mpg of the cars that had var0 cylinders or that were produced before 19var00 ?,spider,SELECT CARS_DATAalias0.MPG FROM CARS_DATA AS CARS_DATAalias0 WHERE CYLINDERS = var0 OR YEAR < var1 ORDER BY CARS_DATAalias0.MPG DESC LIMIT 1 ;
Which models are lighter than var0 but not built by the ' var1 ' ?,spider,"SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CARS_DATAalias0.WEIGHT < var0 AND CAR_MAKERSalias0.FULLNAME != ""var1"" ;"
What are the different models wthat are lighter than var0 but were not built by the var1 ?,spider,"SELECT DISTINCT MODEL_LISTalias0.MODEL FROM MODEL_LIST AS MODEL_LISTalias0 JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias0.MODEL = CAR_NAMESalias0.MODEL JOIN CARS_DATA AS CARS_DATAalias0 ON CAR_NAMESalias0.MAKEID = CARS_DATAalias0.ID JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID WHERE CARS_DATAalias0.WEIGHT < var0 AND CAR_MAKERSalias0.FULLNAME != ""var1"" ;"
What are the name of the countries where there is not a single car maker ?,spider,SELECT COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 EXCEPT SELECT COUNTRIESalias1.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias1 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias1.COUNTRYID = CAR_MAKERSalias0.COUNTRY ;
What are the names of the countries with no car makers ?,spider,SELECT COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 EXCEPT SELECT COUNTRIESalias1.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias1 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias1.COUNTRYID = CAR_MAKERSalias0.COUNTRY ;
Which are the car makers which produce at least var0 models and more than var1 car makes ? List the id and the maker .,spider,"SELECT CAR_MAKERSalias0.ID , CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) >= var0 INTERSECT SELECT CAR_MAKERSalias1.ID , CAR_MAKERSalias1.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias1 JOIN MODEL_LIST AS MODEL_LISTalias1 ON MODEL_LISTalias1.MAKER = CAR_MAKERSalias1.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias1.MODEL = CAR_NAMESalias0.MODEL GROUP BY CAR_MAKERSalias1.ID HAVING COUNT( * ) > var1 ;"
What are the ids and makers of all car makers that produce at least var0 models and make more than var1 cars ?,spider,"SELECT CAR_MAKERSalias0.ID , CAR_MAKERSalias0.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias0 JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias0.ID GROUP BY CAR_MAKERSalias0.ID HAVING COUNT( * ) >= var0 INTERSECT SELECT CAR_MAKERSalias1.ID , CAR_MAKERSalias1.MAKER FROM CAR_MAKERS AS CAR_MAKERSalias1 JOIN MODEL_LIST AS MODEL_LISTalias1 ON MODEL_LISTalias1.MAKER = CAR_MAKERSalias1.ID JOIN CAR_NAMES AS CAR_NAMESalias0 ON MODEL_LISTalias1.MODEL = CAR_NAMESalias0.MODEL GROUP BY CAR_MAKERSalias1.ID HAVING COUNT( * ) > var1 ;"
What are the id and names of the countries which have more than var0 car makers or produce the ' var1 ' model ?,spider,"SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 UNION SELECT COUNTRIESalias1.COUNTRYID , COUNTRIESalias1.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias1 JOIN CAR_MAKERS AS CAR_MAKERSalias1 ON COUNTRIESalias1.COUNTRYID = CAR_MAKERSalias1.COUNTRY JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias1.ID WHERE MODEL_LISTalias0.MODEL = ""var1"" ;"
What are the ids and names of all countries that either have more than var0 car makers or produce var1s ?,spider,"SELECT COUNTRIESalias0.COUNTRYID , COUNTRIESalias0.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias0 JOIN CAR_MAKERS AS CAR_MAKERSalias0 ON COUNTRIESalias0.COUNTRYID = CAR_MAKERSalias0.COUNTRY GROUP BY COUNTRIESalias0.COUNTRYID HAVING COUNT( * ) > var0 UNION SELECT COUNTRIESalias1.COUNTRYID , COUNTRIESalias1.COUNTRYNAME FROM COUNTRIES AS COUNTRIESalias1 JOIN CAR_MAKERS AS CAR_MAKERSalias1 ON COUNTRIESalias1.COUNTRYID = CAR_MAKERSalias1.COUNTRY JOIN MODEL_LIST AS MODEL_LISTalias0 ON MODEL_LISTalias0.MAKER = CAR_MAKERSalias1.ID WHERE MODEL_LISTalias0.MODEL = ""var1"" ;"
"Which country does Airline "" var0 "" belong to ?",spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = ""var0"" ;"
What country is Jetblue Airways affiliated with ?,spider,"SELECT AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = ""var0"" ;"
"What is the abbreviation of Airline "" var0 "" ?",spider,"SELECT AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = ""var0"" ;"
Which abbreviation corresponds to Jetblue Airways ?,spider,"SELECT AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINE = ""var0"" ;"
"List all airline names and their abbreviations in "" var0 "" .",spider,"SELECT AIRLINE , AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
What are the airline names and abbreviations for airlines in the var0 ?,spider,"SELECT AIRLINE , AIRLINESalias0.ABBREVIATION FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
List the airport code and name in the city of var0 .,spider,"SELECT AIRPORTCODE , AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Give the airport code and airport name corresonding to the city var0 .,spider,"SELECT AIRPORTCODE , AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
How many airlines do we have ?,spider,SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 ;
What is the total number of airlines ?,spider,SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 ;
How many airports do we have ?,spider,SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 ;
Return the number of airports .,spider,SELECT COUNT( * ) FROM AIRPORTS AS AIRPORTSalias0 ;
How many flights do we have ?,spider,SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 ;
Return the number of flights .,spider,SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 ;
Which airline has abbreviation ' var0 ' ?,spider,"SELECT AIRLINE FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.ABBREVIATION = ""var0"" ;"
Give the airline with abbreviation ' var0 ' .,spider,"SELECT AIRLINE FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.ABBREVIATION = ""var0"" ;"
How many airlines are from var0 ?,spider,"SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
Return the number of airlines in the var0 .,spider,"SELECT COUNT( * ) FROM AIRLINES AS AIRLINESalias0 WHERE AIRLINESalias0.COUNTRY = ""var0"" ;"
Which city and country is the var0 airport at ?,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTNAME = ""var0"" ;"
Give the city and country for the var0 airport .,spider,"SELECT AIRPORTSalias0.CITY , AIRPORTSalias0.COUNTRY FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTNAME = ""var0"" ;"
What is the airport name for airport ' var0 ' ?,spider,"SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE = ""var0"" ;"
Return the name of the airport with code ' var0 ' .,spider,"SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE = ""var0"" ;"
What are airport names at City ' var0 ' ?,spider,"SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
What are the names of airports in var0 ?,spider,"SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTSalias0.CITY = ""var0"" ;"
How many flights depart from ' var0 ' ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = ""var0"" ;"
Count the number of flights departing from ' var0 ' .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = ""var0"" ;"
How many flights have destination var0 ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = ""var0"" ;"
Count the number of flights into var0 .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = ""var0"" ;"
How many flights depart from City var0 ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Return the number of flights departing from var0 .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
How many flights arriving in var0 city ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Return the number of flights arriving in var0 .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
How many flights depart from City ' var1 ' and have destination City ' var0 ' ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE JOIN AIRPORTS AS AIRPORTSalias1 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias1.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" AND AIRPORTSalias1.CITY = ""var1"" ;"
How many flights fly from var1 to var0 ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE JOIN AIRPORTS AS AIRPORTSalias1 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias1.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" AND AIRPORTSalias1.CITY = ""var1"" ;"
How many flights does airline ' var0 ' have ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" ;"
Give the number of Jetblue Airways flights .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" ;"
How many ' var0 ' flights go to Airport ' var1 ' ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" AND FLIGHTSalias0.DESTAIRPORT = ""var1"" ;"
Count the number of var0 flights arriving in var1 Airport .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" AND FLIGHTSalias0.DESTAIRPORT = ""var1"" ;"
How many ' var0 ' flights depart from Airport ' var1 ' ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" AND FLIGHTSalias0.SOURCEAIRPORT = ""var1"" ;"
Return the number of var0 flights leaving from var1 Airport .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" AND FLIGHTSalias0.SOURCEAIRPORT = ""var1"" ;"
How many var1 flights go to City ' var0 ' ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var1"" AND AIRPORTSalias0.CITY = ""var0"" ;"
Count the number of var1 flights that arrive in var0 .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var1"" AND AIRPORTSalias0.CITY = ""var0"" ;"
Which city has most number of arriving flights ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.CITY ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
Which city has the most frequent destination airport ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.CITY ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
Which city has most number of departing flights ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.CITY ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
Which city is the most frequent source airport ?,spider,SELECT AIRPORTSalias0.CITY FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.CITY ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
What is the code of airport that has the highest number of flights ?,spider,SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
What is the airport code of the airport with the most flights ?,spider,SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
What is the code of airport that has fewest number of flights ?,spider,SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;
Give the code of the airport with the least flights .,spider,SELECT AIRPORTSalias0.AIRPORTCODE FROM AIRPORTS AS AIRPORTSalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE OR FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE GROUP BY AIRPORTSalias0.AIRPORTCODE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;
Which airline has most number of flights ?,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
What airline serves the most flights ?,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) DESC LIMIT 1 ;
Find the abbreviation and country of the airline that has fewest number of flights ?,spider,"SELECT AIRLINESalias0.ABBREVIATION , AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;"
What is the abbreviation of the airilne has the fewest flights and what country is it in ?,spider,"SELECT AIRLINESalias0.ABBREVIATION , AIRLINESalias0.COUNTRY FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE ORDER BY COUNT( FLIGHTSalias0.* ) LIMIT 1 ;"
What are airlines that have some flight departing from airport ' var0 ' ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" ;"
Which airlines have a flight with source airport var0 ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" ;"
What are airlines that have flights arriving at airport ' var0 ' ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.DESTAIRPORT = ""var0"" ;"
Which airlines have a flight with destination airport var0 ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.DESTAIRPORT = ""var0"" ;"
Find all airlines that have flights from both airports ' var0 ' and ' var1 ' .,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" INTERSECT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = ""var1"" ;"
Which airlines have departing flights from both var0 and var1 airports ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" INTERSECT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = ""var1"" ;"
Find all airlines that have flights from airport ' var0 ' but not from ' var1 ' .,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" EXCEPT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = ""var1"" ;"
Which airlines have departures from var0 but not from var1 airports ?,spider,"SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE FLIGHTSalias0.SOURCEAIRPORT = ""var0"" EXCEPT SELECT AIRLINESalias1.AIRLINE FROM AIRLINES AS AIRLINESalias1 JOIN FLIGHTS AS FLIGHTSalias1 ON FLIGHTSalias1.AIRLINE = AIRLINESalias1.UID WHERE FLIGHTSalias1.SOURCEAIRPORT = ""var1"" ;"
Find all airlines that have at least var0 flights .,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) > var0 ;
Which airlines have at least var0 flights ?,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) > var0 ;
Find all airlines that have fewer than var0 flights .,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) < var0 ;
Which airlines have less than var0 flights ?,spider,SELECT AIRLINESalias0.AIRLINE FROM AIRLINES AS AIRLINESalias0 JOIN FLIGHTS AS FLIGHTSalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID GROUP BY AIRLINESalias0.AIRLINE HAVING COUNT( FLIGHTSalias0.* ) < var0 ;
"What are flight numbers of Airline "" var0 "" ?",spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" ;"
Which flight numbers correspond to var0 flights ?,spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRLINES AS AIRLINESalias0 ON FLIGHTSalias0.AIRLINE = AIRLINESalias0.UID WHERE AIRLINESalias0.AIRLINE = ""var0"" ;"
"What are flight numbers of flights departing from Airport "" var0 "" ?",spider,"SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = ""var0"" ;"
Give the flight numbers of flights leaving from var0 .,spider,"SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE SOURCEAIRPORT = ""var0"" ;"
"What are flight numbers of flights arriving at Airport "" var0 "" ?",spider,"SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = ""var0"" ;"
Give the flight numbers of flights landing at var0 .,spider,"SELECT FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 WHERE DESTAIRPORT = ""var0"" ;"
"What are flight numbers of flights departing from City "" var0 "" ?",spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Give the flight numbers of flights leaving from var0 .,spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.SOURCEAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
"What are flight numbers of flights arriving at City "" var0 "" ?",spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Give the flight numbers of flights arriving in var0 .,spider,"SELECT FLIGHTSalias0.FLIGHTNO FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" ;"
Find the number of flights landing in the city of var0 or var1 .,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" OR AIRPORTSalias0.CITY = ""var1"" ;"
How many flights land in var0 or var1 ?,spider,"SELECT COUNT( FLIGHTSalias0.* ) FROM FLIGHTS AS FLIGHTSalias0 JOIN AIRPORTS AS AIRPORTSalias0 ON FLIGHTSalias0.DESTAIRPORT = AIRPORTSalias0.AIRPORTCODE WHERE AIRPORTSalias0.CITY = ""var0"" OR AIRPORTSalias0.CITY = ""var1"" ;"
Find the name of airports which do not have any flight in and out .,spider,SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE NOT IN ( SELECT SOURCEAIRPORT FROM FLIGHTS AS FLIGHTSalias0 UNION SELECT DESTAIRPORT FROM FLIGHTS ) ;
Which airports do not have departing or arriving flights ?,spider,SELECT AIRPORTNAME FROM AIRPORTS AS AIRPORTSalias0 WHERE AIRPORTCODE NOT IN ( SELECT SOURCEAIRPORT FROM FLIGHTS AS FLIGHTSalias0 UNION SELECT DESTAIRPORT FROM FLIGHTS ) ;
Sort employee names by their age in ascending order .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.AGE ;
List the names of employees and sort in ascending order of age .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 ORDER BY EMPLOYEEalias0.AGE ;
What is the number of employees from each city ?,spider,"SELECT COUNT( * ) , EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMPLOYEEalias0.CITY ;"
Count the number of employees for each city .,spider,"SELECT COUNT( * ) , EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 GROUP BY EMPLOYEEalias0.CITY ;"
Which cities do more than one employee under age var0 come from ?,spider,SELECT EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE AGE < var0 GROUP BY EMPLOYEEalias0.CITY HAVING COUNT( * ) > var1 ;
Find the cities that have more than one employee under age var0 .,spider,SELECT EMPLOYEEalias0.CITY FROM EMPLOYEE AS EMPLOYEEalias0 WHERE AGE < var0 GROUP BY EMPLOYEEalias0.CITY HAVING COUNT( * ) > var1 ;
Find the number of shops in each location .,spider,"SELECT COUNT( * ) , SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 GROUP BY SHOPalias0.LOCATION ;"
How many shops are there in each location ?,spider,"SELECT COUNT( * ) , SHOPalias0.LOCATION FROM SHOP AS SHOPalias0 GROUP BY SHOPalias0.LOCATION ;"
Find the manager name and district of the shop whose number of products is the largest .,spider,"SELECT SHOPalias0.DISTRICT , SHOPalias0.MANAGER_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC LIMIT 1 ;"
What are the manager name and district of the shop that sells the largest number of products ?,spider,"SELECT SHOPalias0.DISTRICT , SHOPalias0.MANAGER_NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC LIMIT 1 ;"
find the minimum and maximum number of products of all stores .,spider,"SELECT MAX( SHOPalias0.NUMBER_PRODUCTS ) , MIN( SHOPalias0.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias0 ;"
What are the minimum and maximum number of products across all the shops ?,spider,"SELECT MAX( SHOPalias0.NUMBER_PRODUCTS ) , MIN( SHOPalias0.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias0 ;"
"Return the name , location and district of all shops in descending order of number of products .",spider,"SELECT SHOPalias0.DISTRICT , SHOPalias0.LOCATION , SHOPalias0.NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC ;"
"Sort all the shops by number products in descending order , and return the name , location and district of each shop .",spider,"SELECT SHOPalias0.DISTRICT , SHOPalias0.LOCATION , SHOPalias0.NAME FROM SHOP AS SHOPalias0 ORDER BY SHOPalias0.NUMBER_PRODUCTS DESC ;"
Find the names of stores whose number products is more than the average number of products .,spider,SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS > ( SELECT AVG( SHOPalias1.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias1 ) ;
Which shops ' number products is above the average ? Give me the shop names .,spider,SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS > ( SELECT AVG( SHOPalias1.NUMBER_PRODUCTS ) FROM SHOP AS SHOPalias1 ) ;
find the name of employee who was awarded the most times in the evaluation .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN EVALUATION AS EVALUATIONalias0 ON EVALUATIONalias0.EMPLOYEE_ID = EMPLOYEEalias0.EMPLOYEE_ID GROUP BY EVALUATIONalias0.EMPLOYEE_ID ORDER BY COUNT( EVALUATIONalias0.* ) DESC LIMIT 1 ;
Which employee received the most awards in evaluations ? Give me the employee name .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN EVALUATION AS EVALUATIONalias0 ON EVALUATIONalias0.EMPLOYEE_ID = EMPLOYEEalias0.EMPLOYEE_ID GROUP BY EVALUATIONalias0.EMPLOYEE_ID ORDER BY COUNT( EVALUATIONalias0.* ) DESC LIMIT 1 ;
Find the name of the employee who got the highest one time bonus .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN EVALUATION AS EVALUATIONalias0 ON EVALUATIONalias0.EMPLOYEE_ID = EMPLOYEEalias0.EMPLOYEE_ID ORDER BY EVALUATIONalias0.BONUS DESC LIMIT 1 ;
Which employee received the biggest bonus ? Give me the employee name .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 JOIN EVALUATION AS EVALUATIONalias0 ON EVALUATIONalias0.EMPLOYEE_ID = EMPLOYEEalias0.EMPLOYEE_ID ORDER BY EVALUATIONalias0.BONUS DESC LIMIT 1 ;
Find the names of employees who never won any award in the evaluation .,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.EMPLOYEE_ID NOT IN ( SELECT EVALUATIONalias0.EMPLOYEE_ID FROM EVALUATION AS EVALUATIONalias0 ) ;
What are the names of the employees who never received any evaluation ?,spider,SELECT EMPLOYEEalias0.NAME FROM EMPLOYEE AS EMPLOYEEalias0 WHERE EMPLOYEEalias0.EMPLOYEE_ID NOT IN ( SELECT EVALUATIONalias0.EMPLOYEE_ID FROM EVALUATION AS EVALUATIONalias0 ) ;
What is the name of the shop that is hiring the largest number of employees ?,spider,SELECT SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY HIRINGalias0.SHOP_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which shop has the most employees ? Give me the shop name .,spider,SELECT SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY HIRINGalias0.SHOP_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name of the shops that do not hire any employee .,spider,SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT HIRINGalias0.SHOP_ID FROM HIRING AS HIRINGalias0 ) ;
Which shops run with no employees ? Find the shop names,spider,SELECT SHOPalias0.NAME FROM SHOP AS SHOPalias0 WHERE SHOPalias0.SHOP_ID NOT IN ( SELECT HIRINGalias0.SHOP_ID FROM HIRING AS HIRINGalias0 ) ;
Find the number of employees hired in each shop; show the shop name as well .,spider,"SELECT COUNT( * ) , SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY SHOPalias0.NAME ;"
"For each shop , return the number of employees working there and the name of the shop .",spider,"SELECT COUNT( * ) , SHOPalias0.NAME FROM HIRING AS HIRINGalias0 JOIN SHOP AS SHOPalias0 ON SHOPalias0.SHOP_ID = HIRINGalias0.SHOP_ID GROUP BY SHOPalias0.NAME ;"
What is total bonus given in all evaluations ?,spider,SELECT SUM( EVALUATIONalias0.BONUS ) FROM EVALUATION AS EVALUATIONalias0 ;
Find the total amount of bonus given in all the evaluations .,spider,SELECT SUM( EVALUATIONalias0.BONUS ) FROM EVALUATION AS EVALUATIONalias0 ;
Give me all the information about hiring .,spider,SELECT * FROM HIRING AS HIRINGalias0 ;
What is all the information about hiring ?,spider,SELECT * FROM HIRING AS HIRINGalias0 ;
Which district has both stores with less than var0 products and stores with more than var1 products ?,spider,SELECT SHOPalias0.DISTRICT FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS < var0 INTERSECT SELECT SHOPalias1.DISTRICT FROM SHOP AS SHOPalias1 WHERE SHOPalias1.NUMBER_PRODUCTS > var1 ;
Find the districts in which there are both shops selling less than var0 products and shops selling more than var1 products .,spider,SELECT SHOPalias0.DISTRICT FROM SHOP AS SHOPalias0 WHERE SHOPalias0.NUMBER_PRODUCTS < var0 INTERSECT SELECT SHOPalias1.DISTRICT FROM SHOP AS SHOPalias1 WHERE SHOPalias1.NUMBER_PRODUCTS > var1 ;
How many different store locations are there ?,spider,SELECT COUNT( DISTINCT SHOPalias0.LOCATION ) FROM SHOP AS SHOPalias0 ;
Count the number of distinct store locations .,spider,SELECT COUNT( DISTINCT SHOPalias0.LOCATION ) FROM SHOP AS SHOPalias0 ;
"List document IDs , document names , and document descriptions for all documents .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ;"
"What are the ids , names , and descriptions for all documents ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.DOCUMENT_NAME FROM DOCUMENTS AS DOCUMENTSalias0 ;"
What is the document name and template id for document var0ith description var0ith the letter ' var0 ' in it ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_DESCRIPTION LIKE ""var0"" ;"
Return the names and template ids for documents that contain the letter var0 in their description .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_DESCRIPTION LIKE ""var0"" ;"
"What is the document id , template id and description for document named "" var0 "" ?",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Return the document id , template id , and description for the document with the name var0 .",spider,"SELECT DOCUMENTSalias0.DOCUMENT_DESCRIPTION , DOCUMENTSalias0.DOCUMENT_ID , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
How many different templates do all document use ?,spider,SELECT COUNT( DISTINCT DOCUMENTSalias0.TEMPLATE_ID ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
Count the number of different templates used for documents .,spider,SELECT COUNT( DISTINCT DOCUMENTSalias0.TEMPLATE_ID ) FROM DOCUMENTS AS DOCUMENTSalias0 ;
How many documents are using the template with type code ' var0 ' ?,spider,"SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
Count the number of documents that use the var0 template type .,spider,"SELECT COUNT( * ) FROM DOCUMENTS AS DOCUMENTSalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
Show all template ids and number of documents using each template .,spider,"SELECT COUNT( * ) , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.TEMPLATE_ID ;"
"What are all different template ids used for documents , and how many times were each of them used ?",spider,"SELECT COUNT( * ) , DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.TEMPLATE_ID ;"
What is the id and type code for the template used by the most documents ?,spider,"SELECT DOCUMENTSalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY DOCUMENTSalias0.TEMPLATE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Return the id and type code of the template that is used for the greatest number of documents .,spider,"SELECT DOCUMENTSalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM DOCUMENTS AS DOCUMENTSalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY DOCUMENTSalias0.TEMPLATE_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Show ids for all templates that are used by more than one document .,spider,SELECT DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.TEMPLATE_ID HAVING COUNT( * ) > var0 ;
What are the template ids of any templates used in more than a single document ?,spider,SELECT DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 GROUP BY DOCUMENTSalias0.TEMPLATE_ID HAVING COUNT( * ) > var0 ;
Show ids for all templates not used by any document .,spider,SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 EXCEPT SELECT DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 ;
What are the ids for templates that are not used in any documents ?,spider,SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 EXCEPT SELECT DOCUMENTSalias0.TEMPLATE_ID FROM DOCUMENTS AS DOCUMENTSalias0 ;
How many templates do we have ?,spider,SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 ;
Count the number of templates .,spider,SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 ;
"Show template ids , version numbers , and template type codes for all templates .",spider,"SELECT TEMPLATESalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 ;"
"What are the ids , version numbers , and type codes for each template ?",spider,"SELECT TEMPLATESalias0.TEMPLATE_ID , TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 ;"
Show all distinct template type codes for all templates .,spider,SELECT DISTINCT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;
What are the different template type codes ?,spider,SELECT DISTINCT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;
What are the ids of templates with template type code var0 or var0T ?,spider,"SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" OR TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var1"" ;"
Return the ids of templates that have the code var0 or var0T .,spider,"SELECT TEMPLATESalias0.TEMPLATE_ID FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" OR TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var1"" ;"
How many templates have template type code var0 ?,spider,"SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
Count the number of templates of the type var0 .,spider,"SELECT COUNT( * ) FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
What is the version number and template type code for the template with version number later than var0 ?,spider,"SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.VERSION_NUMBER > var0 ;"
Return the version numbers and template type codes of templates with a version number greater than var0 .,spider,"SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE , TEMPLATESalias0.VERSION_NUMBER FROM TEMPLATES AS TEMPLATESalias0 WHERE TEMPLATESalias0.VERSION_NUMBER > var0 ;"
Show all template type codes and number of templates for each .,spider,"SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;"
"What are the different template type codes , and how many templates correspond to each ?",spider,"SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;"
Which template type code has most number of templates ?,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the type code of the template type that the most templates belong to .,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all template type codes with less than three templates .,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE HAVING COUNT( * ) < var0 ;
What are the codes of template types that have fewer than var0 templates ?,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE HAVING COUNT( * ) < var0 ;
What the smallest version number and its template type code ?,spider,"SELECT MIN( TEMPLATESalias0.VERSION_NUMBER ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;"
"Return the lowest version number , along with its corresponding template type code .",spider,"SELECT MIN( TEMPLATESalias0.VERSION_NUMBER ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 ;"
"What is the template type code of the template used by document with the name "" var0 "" ?",spider,"SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Return the template type code of the template that is used by a document named var0 .,spider,"SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Show all document names using templates with template type code var0 .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
What are the names of documents that use templates with the code var0 ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID WHERE TEMPLATESalias0.TEMPLATE_TYPE_CODE = ""var0"" ;"
Show all template type codes and the number of documents using each type .,spider,"SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;"
"What are the different template type codes , and how many documents use each type ?",spider,"SELECT COUNT( * ) , TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ;"
Which template type code is used by most number of documents ?,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the code of the template type that is most commonly used in documents .,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID GROUP BY TEMPLATESalias0.TEMPLATE_TYPE_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show all template type codes that are not used by any document .,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 EXCEPT SELECT TEMPLATESalias1.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias1 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias1.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
What are the codes of template types that are not used for any document ?,spider,SELECT TEMPLATESalias0.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias0 EXCEPT SELECT TEMPLATESalias1.TEMPLATE_TYPE_CODE FROM TEMPLATES AS TEMPLATESalias1 JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias1.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
Show all template type codes and descriptions .,spider,"SELECT TEMPLATE_TYPE_CODE , TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES ;"
What are the type codes and descriptions for all template types ?,spider,"SELECT TEMPLATE_TYPE_CODE , TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES ;"
"What is the template type descriptions for template type code "" var0 "" .",spider,"SELECT TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_CODE = ""var0"" ;"
Return the template type description of the template type with the code var0 .,spider,"SELECT TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_CODE = ""var0"" ;"
"What is the template type code for template type description "" var0 "" .",spider,"SELECT TEMPLATE_TYPE_CODE FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_DESCRIPTION = ""var0"" ;"
"Return the type code of the template type with the description "" var0 "" .",spider,"SELECT TEMPLATE_TYPE_CODE FROM REF_TEMPLATE_TYPES WHERE TEMPLATE_TYPE_DESCRIPTION = ""var0"" ;"
What are the distinct template type descriptions for the templates ever used by any document ?,spider,SELECT DISTINCT DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
Return the different descriptions for templates that have been used in a document .,spider,SELECT DISTINCT DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE JOIN DOCUMENTS AS DOCUMENTSalias0 ON TEMPLATESalias0.TEMPLATE_ID = DOCUMENTSalias0.TEMPLATE_ID ;
"What are the template ids with template type description "" var0 "" .",spider,"SELECT TEMPLATESalias0.TEMPLATE_ID FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE WHERE DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION = ""var0"" ;"
Return the ids corresponding to templates with the description ' var0 ' .,spider,"SELECT TEMPLATESalias0.TEMPLATE_ID FROM REF_TEMPLATE_TYPES AS DERIVED_TABLEalias0 JOIN TEMPLATES AS TEMPLATESalias0 ON TEMPLATESalias0.TEMPLATE_TYPE_CODE = DERIVED_TABLEalias0.TEMPLATE_TYPE_CODE WHERE DERIVED_TABLEalias0.TEMPLATE_TYPE_DESCRIPTION = ""var0"" ;"
How many paragraphs in total ?,spider,SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 ;
Count the number of paragraphs .,spider,SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 ;
How many paragraphs for the document with name ' var0 ' ?,spider,"SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Count the number of paragraphs in the document named ' var0 ' .,spider,"SELECT COUNT( PARAGRAPHSalias0.* ) FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Show paragraph details for paragraph with text ' var0 ' .,spider,"SELECT PARAGRAPHSalias0.OTHER_DETAILS FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = ""var0"" ;"
What are the details for the paragraph that includes the text ' var0 ' ?,spider,"SELECT PARAGRAPHSalias0.OTHER_DETAILS FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = ""var0"" ;"
Show all paragraph ids and texts for the document with name ' var0 ' .,spider,"SELECT PARAGRAPHSalias0.PARAGRAPH_ID , PARAGRAPHSalias0.PARAGRAPH_TEXT FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
What are the ids and texts of paragraphs in the document titled ' var0 ' ?,spider,"SELECT PARAGRAPHSalias0.PARAGRAPH_ID , PARAGRAPHSalias0.PARAGRAPH_TEXT FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
"Show all paragraph texts for the document "" var0 "" .",spider,"SELECT PARAGRAPHSalias0.PARAGRAPH_TEXT FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
What are the paragraph texts for the document with the name ' var0 ' ?,spider,"SELECT PARAGRAPHSalias0.PARAGRAPH_TEXT FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID WHERE DOCUMENTSalias0.DOCUMENT_NAME = ""var0"" ;"
Show all document ids and the number of paragraphs in each document . Order by document id .,spider,"SELECT COUNT( PARAGRAPHSalias0.* ) , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY DOCUMENT_ID ORDER BY PARAGRAPHSalias0.DOCUMENT_ID ;"
"Return the different document ids along with the number of paragraphs corresponding to each , ordered by id .",spider,"SELECT COUNT( PARAGRAPHSalias0.* ) , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY DOCUMENT_ID ORDER BY PARAGRAPHSalias0.DOCUMENT_ID ;"
"Show all document ids , names and the number of paragraphs in each document .",spider,"SELECT COUNT( PARAGRAPHSalias0.* ) , DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ;"
"What are the ids and names of each document , as well as the number of paragraphs in each ?",spider,"SELECT COUNT( PARAGRAPHSalias0.* ) , DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ;"
List all document ids with at least two paragraphs .,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) >= var0 ;
What are the ids of documents that have var0 or more paragraphs ?,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) >= var0 ;
What is the document id and name with greatest number of paragraphs ?,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ORDER BY COUNT( PARAGRAPHSalias0.* ) DESC LIMIT 1 ;"
Return the id and name of the document with the most paragraphs .,spider,"SELECT DOCUMENTSalias0.DOCUMENT_NAME , PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 JOIN DOCUMENTS AS DOCUMENTSalias0 ON PARAGRAPHSalias0.DOCUMENT_ID = DOCUMENTSalias0.DOCUMENT_ID GROUP BY PARAGRAPHSalias0.DOCUMENT_ID ORDER BY COUNT( PARAGRAPHSalias0.* ) DESC LIMIT 1 ;"
What is the document id with least number of paragraphs ?,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY DOCUMENT_ID ORDER BY COUNT( PARAGRAPHSalias0.* ) ASC LIMIT 1 ;
Return the id of the document with the fewest paragraphs .,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY DOCUMENT_ID ORDER BY COUNT( PARAGRAPHSalias0.* ) ASC LIMIT 1 ;
What is the document id with var0 to var1 paragraphs ?,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) BETWEEN var0 AND var1 ;
Give the ids of documents that have between one and two paragraphs .,spider,SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 GROUP BY PARAGRAPHSalias0.DOCUMENT_ID HAVING COUNT( PARAGRAPHSalias0.* ) BETWEEN var0 AND var1 ;
Show the document id with paragraph text ' var0 ' and ' var1 ' .,spider,"SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = ""var0"" INTERSECT SELECT PARAGRAPHSalias1.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias1 WHERE PARAGRAPHSalias1.PARAGRAPH_TEXT = ""var1"" ;"
What are the ids of documents that contain the paragraph text ' var0 ' and ' var1 ' ?,spider,"SELECT PARAGRAPHSalias0.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias0 WHERE PARAGRAPHSalias0.PARAGRAPH_TEXT = ""var0"" INTERSECT SELECT PARAGRAPHSalias1.DOCUMENT_ID FROM PARAGRAPHS AS PARAGRAPHSalias1 WHERE PARAGRAPHSalias1.PARAGRAPH_TEXT = ""var1"" ;"
How many teachers are there ?,spider,SELECT COUNT( * ) FROM TEACHER AS TEACHERalias0 ;
What is the total count of teachers ?,spider,SELECT COUNT( * ) FROM TEACHER AS TEACHERalias0 ;
List the names of teachers in ascending order of age .,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC ;
What are the names of the teachers ordered by ascending age ?,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC ;
What are the age and hometown of teachers ?,spider,"SELECT TEACHERalias0.AGE , TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 ;"
What is the age and hometown of every teacher ?,spider,"SELECT TEACHERalias0.AGE , TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 ;"
"List the name of teachers whose hometown is not "" var0t "" .",spider,"SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.HOMETOWN != ""var0"" ;"
"What are the names of the teachers whose hometown is not "" var0t "" ?",spider,"SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.HOMETOWN != ""var0"" ;"
Show the name of teachers aged either var0 or var1 ?,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.AGE = var0 OR TEACHERalias0.AGE = var1 ;
What are the names of the teachers who are aged either var0 or var1 ?,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.AGE = var0 OR TEACHERalias0.AGE = var1 ;
What is the hometown of the youngest teacher ?,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC LIMIT 1 ;
Where is the youngest teacher from ?,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 ORDER BY TEACHERalias0.AGE ASC LIMIT 1 ;
Show different hometown of teachers and the number of teachers from each hometown .,spider,"SELECT COUNT( * ) , TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN ;"
"For each hometown , how many teachers are there ?",spider,"SELECT COUNT( * ) , TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN ;"
List the most common hometown of teachers .,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY HOMETOWN ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the most commmon hometowns for teachers ?,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY HOMETOWN ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the hometowns shared by at least two teachers .,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN HAVING COUNT( * ) >= var0 ;
What are the towns from which at least two teachers come from ?,spider,SELECT TEACHERalias0.HOMETOWN FROM TEACHER AS TEACHERalias0 GROUP BY TEACHERalias0.HOMETOWN HAVING COUNT( * ) >= var0 ;
Show names of teachers and the courses they are arranged to teach .,spider,"SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ;"
What is the name of each teacher and what course they teach ?,spider,"SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ;"
Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name .,spider,"SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ORDER BY TEACHERalias0.NAME ;"
What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher ?,spider,"SELECT COURSEalias0.COURSE , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID ORDER BY TEACHERalias0.NAME ;"
Show the name of the teacher for the math course .,spider,"SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID WHERE COURSEalias0.COURSE = ""var0"" ;"
What are the names of the people who teach math courses ?,spider,"SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN COURSE AS COURSEalias0 ON COURSEalias0.COURSE_ID = COURSE_ARRANGEalias0.COURSE_ID JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID WHERE COURSEalias0.COURSE = ""var0"" ;"
Show names of teachers and the number of courses they teach .,spider,"SELECT COUNT( COURSE_ARRANGEalias0.* ) , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME ;"
What are the names of the teachers and how many courses do they teach ?,spider,"SELECT COUNT( COURSE_ARRANGEalias0.* ) , TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME ;"
Show names of teachers that teach at least two courses .,spider,SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME HAVING COUNT( COURSE_ARRANGEalias0.* ) >= var0 ;
What are the names of the teachers who teach at least two courses ?,spider,SELECT TEACHERalias0.NAME FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 JOIN TEACHER AS TEACHERalias0 ON TEACHERalias0.TEACHER_ID = COURSE_ARRANGEalias0.TEACHER_ID GROUP BY TEACHERalias0.NAME HAVING COUNT( COURSE_ARRANGEalias0.* ) >= var0 ;
List the names of teachers who have not been arranged to teach courses .,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.TEACHER_ID NOT IN ( SELECT COURSE_ARRANGEalias0.TEACHER_ID FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 ) ;
What are the names of the teachers whose courses have not been arranged ?,spider,SELECT TEACHERalias0.NAME FROM TEACHER AS TEACHERalias0 WHERE TEACHERalias0.TEACHER_ID NOT IN ( SELECT COURSE_ARRANGEalias0.TEACHER_ID FROM COURSE_ARRANGE AS COURSE_ARRANGEalias0 ) ;
How many visitors below age var0 are there ?,spider,SELECT COUNT( * ) FROM VISITOR WHERE AGE < var0 ;
"Find the names of the visitors whose membership level is higher than var0 , and order the results by the level from high to low .",spider,SELECT NAME FROM VISITOR WHERE LEVEL_OF_MEMBERSHIP > var0 ORDER BY LEVEL_OF_MEMBERSHIP DESC ;
What is the average age of the visitors whose membership level is not higher than var0 ?,spider,SELECT AVG( AGE ) FROM VISITOR WHERE LEVEL_OF_MEMBERSHIP <= var0 ;
"Find the name and membership level of the visitors whose membership level is higher than var0 , and sort by their age from old to young .",spider,"SELECT LEVEL_OF_MEMBERSHIP , NAME FROM VISITOR WHERE LEVEL_OF_MEMBERSHIP > var0 ORDER BY AGE DESC ;"
Find the id and name of the museum that has the most staff members ?,spider,"SELECT MUSEUMalias0.MUSEUM_ID , MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 ORDER BY MUSEUMalias0.NUM_OF_STAFF DESC LIMIT 1 ;"
Find the average number of staff working for the museums that were open before var0 .,spider,SELECT AVG( MUSEUMalias0.NUM_OF_STAFF ) FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.OPEN_YEAR < var0 ;
What are the opening year and staff number of the museum named var0 ?,spider,"SELECT MUSEUMalias0.NUM_OF_STAFF , MUSEUMalias0.OPEN_YEAR FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.NAME = ""var0"" ;"
find the names of museums which have more staff than the minimum staff number of all museums opened after var0 .,spider,SELECT MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.NUM_OF_STAFF > ( SELECT MIN( MUSEUMalias1.NUM_OF_STAFF ) FROM MUSEUM AS MUSEUMalias1 WHERE MUSEUMalias1.OPEN_YEAR > var0 ) ;
"find the id , name and age for visitors who visited some museums more than once .",spider,"SELECT DERIVED_TABLEalias0.AGE , DERIVED_TABLEalias0.ID , DERIVED_TABLEalias0.NAME FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID GROUP BY DERIVED_TABLEalias0.ID HAVING COUNT( VISITalias0.* ) > var0 ;"
"What are the id , name and membership level of visitors who have spent the largest amount of money in total in all museum tickets ?",spider,"SELECT DERIVED_TABLEalias0.LEVEL_OF_MEMBERSHIP , DERIVED_TABLEalias0.NAME , VISITalias0.VISITOR_ID FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID GROUP BY VISITalias0.VISITOR_ID ORDER BY SUM( VISITalias0.TOTAL_SPENT ) DESC LIMIT 1 ;"
What are the id and name of the museum visited most times ?,spider,"SELECT MUSEUMalias0.NAME , VISITalias0.MUSEUM_ID FROM MUSEUM AS MUSEUMalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID GROUP BY VISITalias0.MUSEUM_ID ORDER BY COUNT( VISITalias0.* ) DESC LIMIT 1 ;"
What is the name of the museum that had no visitor yet ?,spider,SELECT MUSEUMalias0.NAME FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.MUSEUM_ID NOT IN ( SELECT VISITalias0.MUSEUM_ID FROM VISIT AS VISITalias0 ) ;
Find the name and age of the var0 who bought the most tickets at once .,spider,"SELECT DERIVED_TABLEalias0.AGE , DERIVED_TABLEalias0.NAME FROM var0 AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID ORDER BY VISITalias0.NUM_OF_TICKET DESC LIMIT 1 ;"
What are the average and maximum number of tickets bought in all visits ?,spider,"SELECT AVG( VISITalias0.NUM_OF_TICKET ) , MAX( VISITalias0.NUM_OF_TICKET ) FROM VISIT AS VISITalias0 ;"
What is the total ticket expense of the visitors whose membership level is var0 ?,spider,SELECT SUM( VISITalias0.TOTAL_SPENT ) FROM VISITOR AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.LEVEL_OF_MEMBERSHIP = var0 ;
What is the name of the var0 who visited both a museum opened before var1 and a museum opened after var3 ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM var0 AS DERIVED_TABLEalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.VISITOR_ID = DERIVED_TABLEalias0.ID JOIN MUSEUM AS MUSEUMalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID WHERE MUSEUMalias0.OPEN_YEAR < var1 INTERSECT SELECT DERIVED_TABLEalias1.NAME FROM var2 AS DERIVED_TABLEalias1 JOIN VISIT AS VISITalias1 ON VISITalias1.VISITOR_ID = DERIVED_TABLEalias1.ID JOIN MUSEUM AS MUSEUMalias1 ON VISITalias1.MUSEUM_ID = MUSEUMalias1.MUSEUM_ID WHERE MUSEUMalias1.OPEN_YEAR > var3 ;
Find the number of visitors who did not visit any museum opened after var0 .,spider,SELECT COUNT( * ) FROM VISITOR WHERE ID NOT IN ( SELECT VISITalias0.VISITOR_ID FROM MUSEUM AS MUSEUMalias0 JOIN VISIT AS VISITalias0 ON VISITalias0.MUSEUM_ID = MUSEUMalias0.MUSEUM_ID WHERE MUSEUMalias0.OPEN_YEAR > var0 ) ;
How many museums were opened after var0 or before var1 ?,spider,SELECT COUNT( * ) FROM MUSEUM AS MUSEUMalias0 WHERE MUSEUMalias0.OPEN_YEAR < var1 OR MUSEUMalias0.OPEN_YEAR > var0 ;
Find the total number of players .,spider,SELECT COUNT( * ) FROM PLAYERS AS PLAYERSalias0 ;
How many players are there ?,spider,SELECT COUNT( * ) FROM PLAYERS AS PLAYERSalias0 ;
Find the total number of matches .,spider,SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 ;
Count the number of matches .,spider,SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 ;
List the first name and birth date of all players from the country with code var0 .,spider,"SELECT PLAYERSalias0.BIRTH_DATE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE PLAYERSalias0.COUNTRY_CODE = ""var0"" ;"
What are the first names and birth dates of players from the var0 ?,spider,"SELECT PLAYERSalias0.BIRTH_DATE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE PLAYERSalias0.COUNTRY_CODE = ""var0"" ;"
Find the average age of losers and winners of all matches .,spider,"SELECT AVG( MATCHESalias0.LOSER_AGE ) , AVG( MATCHESalias0.WINNER_AGE ) FROM MATCHES AS MATCHESalias0 ;"
What are the average ages of losers and winners across matches ?,spider,"SELECT AVG( MATCHESalias0.LOSER_AGE ) , AVG( MATCHESalias0.WINNER_AGE ) FROM MATCHES AS MATCHESalias0 ;"
Find the average rank of winners in all matches .,spider,SELECT AVG( MATCHESalias0.WINNER_RANK ) FROM MATCHES AS MATCHESalias0 ;
What is the average rank for winners in all matches ?,spider,SELECT AVG( MATCHESalias0.WINNER_RANK ) FROM MATCHES AS MATCHESalias0 ;
Find the highest rank of losers in all matches .,spider,SELECT MIN( MATCHESalias0.LOSER_RANK ) FROM MATCHES AS MATCHESalias0 ;
What is the best rank of losers across all matches ?,spider,SELECT MIN( MATCHESalias0.LOSER_RANK ) FROM MATCHES AS MATCHESalias0 ;
find the number of distinct country codes of all players .,spider,SELECT COUNT( DISTINCT PLAYERSalias0.COUNTRY_CODE ) FROM PLAYERS AS PLAYERSalias0 ;
How many distinct countries do players come from ?,spider,SELECT COUNT( DISTINCT PLAYERSalias0.COUNTRY_CODE ) FROM PLAYERS AS PLAYERSalias0 ;
Find the number of distinct name of losers .,spider,SELECT COUNT( DISTINCT MATCHESalias0.LOSER_NAME ) FROM MATCHES AS MATCHESalias0 ;
How many different loser names are there ?,spider,SELECT COUNT( DISTINCT MATCHESalias0.LOSER_NAME ) FROM MATCHES AS MATCHESalias0 ;
Find the name of tourney that has more than var0 matches .,spider,SELECT MATCHESalias0.TOURNEY_NAME FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.TOURNEY_NAME HAVING COUNT( * ) > var0 ;
What are the names of tournaments that have more than var0 matches ?,spider,SELECT MATCHESalias0.TOURNEY_NAME FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.TOURNEY_NAME HAVING COUNT( * ) > var0 ;
List the names of all winners who played in both var0 and var1 .,spider,SELECT MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.YEAR = var0 INTERSECT SELECT MATCHESalias1.WINNER_NAME FROM MATCHES AS MATCHESalias1 WHERE MATCHESalias1.YEAR = var1 ;
What are the names of players who won in both var0 and var1 ?,spider,SELECT MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.YEAR = var0 INTERSECT SELECT MATCHESalias1.WINNER_NAME FROM MATCHES AS MATCHESalias1 WHERE MATCHESalias1.YEAR = var1 ;
List the number of all matches who played in years of var0 or var1 .,spider,SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.YEAR = var0 OR MATCHESalias0.YEAR = var1 ;
How many matches were played in var0 or var1 ?,spider,SELECT COUNT( * ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.YEAR = var0 OR MATCHESalias0.YEAR = var1 ;
What are the country code and first name of the players who won in both tourney var0 and var1 ?,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN MATCHES AS MATCHESalias0 ON PLAYERSalias0.PLAYER_ID = MATCHESalias0.WINNER_ID WHERE MATCHESalias0.TOURNEY_NAME = ""var0"" INTERSECT SELECT PLAYERSalias1.COUNTRY_CODE , PLAYERSalias1.FIRST_NAME FROM PLAYERS AS PLAYERSalias1 JOIN MATCHES AS MATCHESalias1 ON PLAYERSalias1.PLAYER_ID = MATCHESalias1.WINNER_ID WHERE MATCHESalias1.TOURNEY_NAME = ""var1"" ;"
What are the first names and country codes for players who won both the var0 and the var1 ?,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN MATCHES AS MATCHESalias0 ON PLAYERSalias0.PLAYER_ID = MATCHESalias0.WINNER_ID WHERE MATCHESalias0.TOURNEY_NAME = ""var0"" INTERSECT SELECT PLAYERSalias1.COUNTRY_CODE , PLAYERSalias1.FIRST_NAME FROM PLAYERS AS PLAYERSalias1 JOIN MATCHES AS MATCHESalias1 ON PLAYERSalias1.PLAYER_ID = MATCHESalias1.WINNER_ID WHERE MATCHESalias1.TOURNEY_NAME = ""var1"" ;"
Find the first name and country code of the oldest player .,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE LIMIT 1 ;"
What is the first name and country code of the oldest player ?,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE LIMIT 1 ;"
List the first and last name of all players in the order of birth date .,spider,"SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE ;"
"What are the full names of all players , sorted by birth date ?",spider,"SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 ORDER BY PLAYERSalias0.BIRTH_DATE ;"
var0ist the first and last name of all players who are left / var0 hand in the order of birth date .,spider,"SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE HAND = ""var0"" ORDER BY PLAYERSalias0.BIRTH_DATE ;"
"What are the full names of all left handed players , in order of birth date ?",spider,"SELECT PLAYERSalias0.FIRST_NAME , PLAYERSalias0.LAST_NAME FROM PLAYERS AS PLAYERSalias0 WHERE HAND = ""var0"" ORDER BY PLAYERSalias0.BIRTH_DATE ;"
Find the first name and country code of the player who did the most number of tours .,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID ORDER BY RANKINGSalias0.TOURS DESC LIMIT 1 ;"
What is the first name and country code of the player with the most tours ?,spider,"SELECT PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID ORDER BY RANKINGSalias0.TOURS DESC LIMIT 1 ;"
Find the year that has the most number of matches .,spider,SELECT MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which year had the most matches ?,spider,SELECT MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY YEAR ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the name and rank points of the winner who won the most times .,spider,"SELECT MATCHESalias0.WINNER_NAME , MATCHESalias0.WINNER_RANK_POINTS FROM MATCHES AS MATCHESalias0 GROUP BY WINNER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What is the name of the winner who has won the most matches , and how many rank points does this player have ?",spider,"SELECT MATCHESalias0.WINNER_NAME , MATCHESalias0.WINNER_RANK_POINTS FROM MATCHES AS MATCHESalias0 GROUP BY WINNER_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Find the name of the winner who has the highest rank points and participated in the var0 tourney .,spider,"SELECT MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 WHERE TOURNEY_NAME = ""var0"" ORDER BY MATCHESalias0.WINNER_RANK_POINTS DESC LIMIT 1 ;"
What is the name of the winner with the most rank points who participated in the var0 tournament ?,spider,"SELECT MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 WHERE TOURNEY_NAME = ""var0"" ORDER BY MATCHESalias0.WINNER_RANK_POINTS DESC LIMIT 1 ;"
find the names of loser and winner who played in the match with greatest number of minutes .,spider,"SELECT MATCHESalias0.LOSER_NAME , MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 ORDER BY MATCHESalias0.MINUTES DESC LIMIT 1 ;"
What are the names of the winner and loser who played in the longest match ?,spider,"SELECT MATCHESalias0.LOSER_NAME , MATCHESalias0.WINNER_NAME FROM MATCHES AS MATCHESalias0 ORDER BY MATCHESalias0.MINUTES DESC LIMIT 1 ;"
Find the average ranking for each player and their first name .,spider,"SELECT AVG( RANKINGSalias0.RANKING ) , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;"
"What are the first names of all players , and their average rankings ?",spider,"SELECT AVG( RANKINGSalias0.RANKING ) , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;"
Find the total ranking points for each player and their first name .,spider,"SELECT PLAYERSalias0.FIRST_NAME , SUM( RANKINGSalias0.RANKING_POINTS ) FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;"
"What are the first names of all players , and their total ranking points ?",spider,"SELECT PLAYERSalias0.FIRST_NAME , SUM( RANKINGSalias0.RANKING_POINTS ) FROM PLAYERS AS PLAYERSalias0 JOIN RANKINGS AS RANKINGSalias0 ON RANKINGSalias0.PLAYER_ID = PLAYERSalias0.PLAYER_ID GROUP BY PLAYERSalias0.FIRST_NAME ;"
find the number of players for each country .,spider,"SELECT COUNT( * ) , PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE ;"
How many players are from each country ?,spider,"SELECT COUNT( * ) , PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE ;"
find the code of the country where has the greatest number of players .,spider,SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY COUNTRY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the code of the country with the most players ?,spider,SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY COUNTRY_CODE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the codes of countries that have more than var0 players .,spider,SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE HAVING COUNT( * ) > var0 ;
What are the codes of countries with more than var0 players ?,spider,SELECT PLAYERSalias0.COUNTRY_CODE FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.COUNTRY_CODE HAVING COUNT( * ) > var0 ;
Find the total number of tours for each ranking date .,spider,"SELECT RANKINGSalias0.RANKING_DATE , SUM( RANKINGSalias0.TOURS ) FROM RANKINGS AS RANKINGSalias0 GROUP BY RANKINGSalias0.RANKING_DATE ;"
How many total tours were there for each ranking date ?,spider,"SELECT RANKINGSalias0.RANKING_DATE , SUM( RANKINGSalias0.TOURS ) FROM RANKINGS AS RANKINGSalias0 GROUP BY RANKINGSalias0.RANKING_DATE ;"
Find the number of matches happened in each year .,spider,"SELECT COUNT( * ) , MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.YEAR ;"
How many matches were played in each year ?,spider,"SELECT COUNT( * ) , MATCHESalias0.YEAR FROM MATCHES AS MATCHESalias0 GROUP BY MATCHESalias0.YEAR ;"
Find the name and rank of the var0 youngest winners across all matches .,spider,"SELECT DISTINCT MATCHESalias0.WINNER_NAME , MATCHESalias0.WINNER_RANK FROM MATCHES AS MATCHESalias0 ORDER BY MATCHESalias0.WINNER_AGE LIMIT var0 ;"
What are the names and ranks of the three youngest winners across all matches ?,spider,"SELECT DISTINCT MATCHESalias0.WINNER_NAME , MATCHESalias0.WINNER_RANK FROM MATCHES AS MATCHESalias0 ORDER BY MATCHESalias0.WINNER_AGE LIMIT var0 ;"
How many different winners both participated in the var0 and were left handed ?,spider,"SELECT COUNT( DISTINCT MATCHESalias0.WINNER_NAME ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.TOURNEY_NAME = ""var0"" AND MATCHESalias0.WINNER_HAND = ""var1"" ;"
Find the number of left handed winners who participated in the var0 .,spider,"SELECT COUNT( DISTINCT MATCHESalias0.WINNER_NAME ) FROM MATCHES AS MATCHESalias0 WHERE MATCHESalias0.TOURNEY_NAME = ""var0"" AND MATCHESalias0.WINNER_HAND = ""var1"" ;"
"Find the first name , country code and birth date of the winner who has the highest rank points in all matches .",spider,"SELECT PLAYERSalias0.BIRTH_DATE , PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN MATCHES AS MATCHESalias0 ON PLAYERSalias0.PLAYER_ID = MATCHESalias0.WINNER_ID ORDER BY MATCHESalias0.WINNER_RANK_POINTS DESC LIMIT 1 ;"
"What is the first name , country code , and birth date of the player with the most winner rank points across all matches ?",spider,"SELECT PLAYERSalias0.BIRTH_DATE , PLAYERSalias0.COUNTRY_CODE , PLAYERSalias0.FIRST_NAME FROM PLAYERS AS PLAYERSalias0 JOIN MATCHES AS MATCHESalias0 ON PLAYERSalias0.PLAYER_ID = MATCHESalias0.WINNER_ID ORDER BY MATCHESalias0.WINNER_RANK_POINTS DESC LIMIT 1 ;"
Find the number of players for each hand type .,spider,"SELECT COUNT( * ) , PLAYERSalias0.HAND FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.HAND ;"
How many players are there for each hand type ?,spider,"SELECT COUNT( * ) , PLAYERSalias0.HAND FROM PLAYERS AS PLAYERSalias0 GROUP BY PLAYERSalias0.HAND ;"
How many ships ended up being ' var0 ' ?,spider,"SELECT COUNT( * ) FROM SHIP AS SHIPalias0 WHERE SHIPalias0.DISPOSITION_OF_SHIP = ""var0"" ;"
List the name and tonnage ordered by in descending alphaetical order for the names .,spider,"SELECT SHIPalias0.NAME , SHIPalias0.TONNAGE FROM SHIP AS SHIPalias0 ORDER BY SHIPalias0.NAME DESC ;"
"List the name , date and result of each battle .",spider,"SELECT BATTLEalias0.DATE , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 ;"
What is maximum and minimum death toll caused each time ?,spider,"SELECT MAX( DEATHalias0.KILLED ) , MIN( DEATHalias0.KILLED ) FROM DEATH AS DEATHalias0 ;"
What is the average number of injuries caused each time ?,spider,SELECT AVG( DEATHalias0.INJURED ) FROM DEATH AS DEATHalias0 ;
Whavar0 are var0he deavar0h and injury sivar0uavar0ions caused by var0he ship wivar0h var0onnage ' var0 ' ?,spider,"SELECT DEATHalias0.INJURED , DEATHalias0.KILLED FROM DEATH AS DEATHalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID WHERE SHIPalias0.TONNAGE = ""var0"" ;"
What are the name and results of the battles when the bulgarian commander is not ' var0 ',spider,"SELECT BATTLEalias0.NAME , BATTLEalias0.RESULT FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.BULGARIAN_COMMANDER != ""var0"" ;"
What are the different ids and names of the battles that lost any ' var0 ' type shipes ?,spider,"SELECT DISTINCT BATTLEalias0.ID , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID WHERE SHIPalias0.SHIP_TYPE = ""var0"" ;"
What are the ids and names of the battles that led to more than var0 people killed in total .,spider,"SELECT BATTLEalias0.ID , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID JOIN DEATH AS DEATHalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID GROUP BY BATTLEalias0.ID HAVING SUM( DEATHalias0.KILLED ) > var0 ;"
What is the ship id and name that caused most total injuries ?,spider,"SELECT SHIPalias0.ID , SHIPalias0.NAME FROM DEATH AS DEATHalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.ID = DEATHalias0.CAUSED_BY_SHIP_ID GROUP BY SHIPalias0.ID ORDER BY COUNT( DEATHalias0.* ) DESC LIMIT 1 ;"
What are the distinct battle names which are between bulgarian commander ' var0 ' and latin commander ' var1 ' ?,spider,"SELECT BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.BULGARIAN_COMMANDER = ""var0"" AND BATTLEalias0.LATIN_COMMANDER = ""var1"" ;"
How many different results are there for the battles ?,spider,SELECT COUNT( DISTINCT BATTLEalias0.RESULT ) FROM BATTLE AS BATTLEalias0 ;
How many battles did not lose any ship with tonnage ' var0 ' ?,spider,"SELECT COUNT( * ) FROM BATTLE AS BATTLEalias0 WHERE BATTLEalias0.ID NOT IN ( SELECT SHIPalias0.LOST_IN_BATTLE FROM SHIP AS SHIPalias0 WHERE SHIPalias0.TONNAGE = ""var0"" ) ;"
List the name and date the battle that has lost the ship named ' var0 ' and the ship named ' var1 ',spider,"SELECT BATTLEalias0.DATE , BATTLEalias0.NAME FROM BATTLE AS BATTLEalias0 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias0.ID WHERE SHIPalias0.NAME = ""var0"" INTERSECT SELECT BATTLEalias1.DATE , BATTLEalias1.NAME FROM BATTLE AS BATTLEalias1 JOIN SHIP AS SHIPalias1 ON SHIPalias1.LOST_IN_BATTLE = BATTLEalias1.ID WHERE SHIPalias1.NAME = ""var1"" ;"
"Show names , results and bulgarian commanders of the battles with no ships lost in the ' var0 ' .",spider,"SELECT BATTLEalias0.BULGARIAN_COMMANDER , BATTLEalias0.NAME , BATTLEalias0.RESULT FROM BATTLE AS BATTLEalias0 EXCEPT SELECT BATTLEalias1.BULGARIAN_COMMANDER , BATTLEalias1.NAME , BATTLEalias1.RESULT FROM BATTLE AS BATTLEalias1 JOIN SHIP AS SHIPalias0 ON SHIPalias0.LOST_IN_BATTLE = BATTLEalias1.ID WHERE SHIPalias0.LOCATION = ""var0"" ;"
What are the notes of the death events which has substring ' var0 ' ?,spider,"SELECT DEATHalias0.NOTE FROM DEATH AS DEATHalias0 WHERE DEATHalias0.NOTE LIKE ""var0"" ;"
what are all the addresses including line 1 and line 2 ?,spider,"SELECT ADDRESSESalias0.LINE_1 , ADDRESSESalias0.LINE_2 FROM ADDRESSES AS ADDRESSESalias0 ;"
What is the first and second line for all addresses ?,spider,"SELECT ADDRESSESalias0.LINE_1 , ADDRESSESalias0.LINE_2 FROM ADDRESSES AS ADDRESSESalias0 ;"
What is the zip code of the address in the city var0 ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = ""var0"" ;"
What is the zip code for var0 ?,spider,"SELECT ADDRESSESalias0.ZIP_POSTCODE FROM ADDRESSES AS ADDRESSESalias0 WHERE ADDRESSESalias0.CITY = ""var0"" ;"
Which department offers the most number of degrees ? List department name and id .,spider,"SELECT DEGREE_PROGRAMSalias0.DEPARTMENT_ID , DEPARTMENTSalias0.DEPARTMENT_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON DEPARTMENTSalias0.DEPARTMENT_ID = DEGREE_PROGRAMSalias0.DEPARTMENT_ID GROUP BY DEGREE_PROGRAMSalias0.DEPARTMENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"For each department id , what is the name of the department with the most number of degrees ?",spider,"SELECT DEGREE_PROGRAMSalias0.DEPARTMENT_ID , DEPARTMENTSalias0.DEPARTMENT_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN DEPARTMENTS AS DEPARTMENTSalias0 ON DEPARTMENTSalias0.DEPARTMENT_ID = DEGREE_PROGRAMSalias0.DEPARTMENT_ID GROUP BY DEGREE_PROGRAMSalias0.DEPARTMENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
How many departments offer any degree ?,spider,SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEPARTMENT_ID ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
How many different departments offer degrees ?,spider,SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEPARTMENT_ID ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
How many different degree names are offered ?,spider,SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
How many different degrees are offered ?,spider,SELECT COUNT( DISTINCT DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME ) FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ;
How many degrees does the var0ing department offer ?,spider,"SELECT COUNT( * ) FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ON DEPARTMENTSalias0.DEPARTMENT_ID = DEGREE_PROGRAMSalias0.DEPARTMENT_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
How many degrees does the var0ing department have ?,spider,"SELECT COUNT( * ) FROM DEPARTMENTS AS DEPARTMENTSalias0 JOIN DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ON DEPARTMENTSalias0.DEPARTMENT_ID = DEGREE_PROGRAMSalias0.DEPARTMENT_ID WHERE DEPARTMENTSalias0.DEPARTMENT_NAME = ""var0"" ;"
What are the names and descriptions of all the sections ?,spider,"SELECT SECTIONSalias0.SECTION_DESCRIPTION , SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ;"
What are the names and descriptions for all the sections ?,spider,"SELECT SECTIONSalias0.SECTION_DESCRIPTION , SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ;"
What are the names and id of courses having at most var0 sections ?,spider,"SELECT COURSESalias0.COURSE_ID , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SECTIONS AS SECTIONSalias0 ON SECTIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_ID HAVING COUNT( * ) <= var0 ;"
What are the names and ids of every course with less than var0 sections ?,spider,"SELECT COURSESalias0.COURSE_ID , COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN SECTIONS AS SECTIONSalias0 ON SECTIONSalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_ID HAVING COUNT( * ) <= var0 ;"
List the section_name in reversed lexicographical order .,spider,SELECT SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ORDER BY SECTIONSalias0.SECTION_NAME DESC ;
What are the names of the sections in reverse alphabetical order ?,spider,SELECT SECTIONSalias0.SECTION_NAME FROM SECTIONS AS SECTIONSalias0 ORDER BY SECTIONSalias0.SECTION_NAME DESC ;
What is the semester which most student registered in ? Show both the name and the id .,spider,"SELECT SEMESTERSalias0.SEMESTER_ID , SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.SEMESTER_ID = SEMESTERSalias0.SEMESTER_ID GROUP BY SEMESTERSalias0.SEMESTER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"For each semester , what is the name and id of the one with the most students registered ?",spider,"SELECT SEMESTERSalias0.SEMESTER_ID , SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.SEMESTER_ID = SEMESTERSalias0.SEMESTER_ID GROUP BY SEMESTERSalias0.SEMESTER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the description of the department whose name has the substring the var0 ?,spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_DESCRIPTION FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME LIKE ""var0"" ;"
What is the department description for the one whose name has the word var0 ?,spider,"SELECT DEPARTMENTSalias0.DEPARTMENT_DESCRIPTION FROM DEPARTMENTS AS DEPARTMENTSalias0 WHERE DEPARTMENTSalias0.DEPARTMENT_NAME LIKE ""var0"" ;"
"Who are enrolled in var0 degree programs in one semester ? List the first name , middle name and last name and the id .",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID HAVING COUNT( * ) = var0 ;"
"What are the first , middle , and last names , along with the ids , of all students who enrolled in var0 degree programs in one semester ?",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID HAVING COUNT( * ) = var0 ;"
"Who is enrolled in a var0 degree program ? List the first name , middle name , last name .",spider,"SELECT DISTINCT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = ""var0"" ;"
"What are the first , middle , and last names for everybody enrolled in a var0s program ?",spider,"SELECT DISTINCT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID JOIN DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = ""var0"" ;"
Find the kind of program which most number of students are enrolled in ?,spider,SELECT DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID GROUP BY DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the degree summary name that has the most number of students enrolled ?,spider,SELECT DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID GROUP BY DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the program which most number of students are enrolled in . List both the id and the summary .,spider,"SELECT DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID , DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID GROUP BY DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the program id and the summary of the degree that has the most students enrolled ?,spider,"SELECT DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID , DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID GROUP BY DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Which student has enrolled for the most times in any program ? List the id , first name , middle name , last name , the number of enrollments and student id .",spider,"SELECT COUNT( * ) , STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME , STUDENTSalias0.STUDENT_ID , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What is the first , middle , and last name , along with the id and number of enrollments , for the student who enrolled the most in any program ?",spider,"SELECT COUNT( * ) , STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME , STUDENTSalias0.STUDENT_ID , STUDENTSalias0.STUDENT_ID FROM STUDENTS AS STUDENTSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias0.STUDENT_ID GROUP BY STUDENTSalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
Which semesters do not have any student enrolled ? List the semester name .,spider,SELECT SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 WHERE SEMESTERSalias0.SEMESTER_ID NOT IN ( SELECT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ) ;
What is the name of the semester with no students enrolled ?,spider,SELECT SEMESTERSalias0.SEMESTER_NAME FROM SEMESTERS AS SEMESTERSalias0 WHERE SEMESTERSalias0.SEMESTER_ID NOT IN ( SELECT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ) ;
What are all the course names of the courses which ever have students enrolled in ?,spider,SELECT DISTINCT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_ENROLMENT_COURSES AS STUDENT_ENROLMENT_COURSESalias0 ON STUDENT_ENROLMENT_COURSESalias0.COURSE_ID = COURSESalias0.COURSE_ID ;
What are the names of all courses that have some students enrolled ?,spider,SELECT DISTINCT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_ENROLMENT_COURSES AS STUDENT_ENROLMENT_COURSESalias0 ON STUDENT_ENROLMENT_COURSESalias0.COURSE_ID = COURSESalias0.COURSE_ID ;
What's the name of the course with most number of enrollments ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_ENROLMENT_COURSES AS STUDENT_ENROLMENT_COURSESalias0 ON STUDENT_ENROLMENT_COURSESalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the course with the most students enrolled ?,spider,SELECT COURSESalias0.COURSE_NAME FROM COURSES AS COURSESalias0 JOIN STUDENT_ENROLMENT_COURSES AS STUDENT_ENROLMENT_COURSESalias0 ON STUDENT_ENROLMENT_COURSESalias0.COURSE_ID = COURSESalias0.COURSE_ID GROUP BY COURSESalias0.COURSE_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program .,spider,"SELECT STUDENTSalias0.LAST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" EXCEPT SELECT DISTINCT STUDENTSalias1.LAST_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;"
What are the last name of the students who live in North Carolina but have not registered in any degree programs ?,spider,"SELECT STUDENTSalias0.LAST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.STATE_PROVINCE_COUNTY = ""var0"" EXCEPT SELECT DISTINCT STUDENTSalias1.LAST_NAME FROM STUDENTS AS STUDENTSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.STUDENT_ID = STUDENTSalias1.STUDENT_ID ;"
Show the date and id of the transcript with at least var0 course results .,spider,"SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID HAVING COUNT( TRANSCRIPT_CONTENTSalias0.* ) >= var0 ;"
What is the date and id of the transcript with at least var0 courses listed ?,spider,"SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID HAVING COUNT( TRANSCRIPT_CONTENTSalias0.* ) >= var0 ;"
What is the phone number of the man with the first name var0 and the last name var1 ?,spider,"SELECT STUDENTSalias0.CELL_MOBILE_NUMBER FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FIRST_NAME = ""var0"" AND STUDENTSalias0.LAST_NAME = ""var1"" ;"
What is the mobile phone number of the student named Timothy var1 ?,spider,"SELECT STUDENTSalias0.CELL_MOBILE_NUMBER FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.FIRST_NAME = ""var0"" AND STUDENTSalias0.LAST_NAME = ""var1"" ;"
"Who is the first student to register ? List the first name , middle name and last name .",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_FIRST_REGISTERED ASC LIMIT 1 ;"
"What is the first , middle , and last name of the first student to register ?",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_FIRST_REGISTERED ASC LIMIT 1 ;"
"Who is the earliest graduate of the school ? List the first name , middle name and last name .",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_LEFT ASC LIMIT 1 ;"
"What is the first , middle , and last name of the earliest school graduate ?",spider,"SELECT STUDENTSalias0.FIRST_NAME , STUDENTSalias0.LAST_NAME , STUDENTSalias0.MIDDLE_NAME FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.DATE_LEFT ASC LIMIT 1 ;"
Whose permanent address is different from his or her current address ? List his or her first name .,spider,SELECT STUDENTSalias0.FIRST_NAME FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERMANENT_ADDRESS_ID != STUDENTSalias0.CURRENT_ADDRESS_ID ;
What is the first name of the student whose permanent address is different from his or her current one ?,spider,SELECT STUDENTSalias0.FIRST_NAME FROM STUDENTS AS STUDENTSalias0 WHERE STUDENTSalias0.PERMANENT_ADDRESS_ID != STUDENTSalias0.CURRENT_ADDRESS_ID ;
Which address holds the most number of students currently ? List the address id and all lines .,spider,"SELECT ADDRESSESalias0.ADDRESS_ID , ADDRESSESalias0.LINE_1 , ADDRESSESalias0.LINE_2 FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.ADDRESS_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"What is the id , line var0 , and line 2 of the address with the most students ?",spider,"SELECT ADDRESSESalias0.ADDRESS_ID , ADDRESSESalias0.LINE_1 , ADDRESSESalias0.LINE_2 FROM ADDRESSES AS ADDRESSESalias0 JOIN STUDENTS AS STUDENTSalias0 ON STUDENTSalias0.CURRENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID GROUP BY ADDRESSESalias0.ADDRESS_ID ORDER BY COUNT( * ) DESC LIMIT var0 ;"
"On average , when were the transcripts printed ?",spider,SELECT AVG( TRANSCRIPTSalias0.TRANSCRIPT_DATE ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
What is the average transcript date ?,spider,SELECT AVG( TRANSCRIPTSalias0.TRANSCRIPT_DATE ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
When is the first transcript released ? List the date and details .,spider,"SELECT TRANSCRIPTSalias0.OTHER_DETAILS , TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE ASC LIMIT 1 ;"
"What is the earliest date of a transcript release , and what details can you tell me ?",spider,"SELECT TRANSCRIPTSalias0.OTHER_DETAILS , TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE ASC LIMIT 1 ;"
How many transcripts are released ?,spider,SELECT COUNT( * ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
How many transcripts are listed ?,spider,SELECT COUNT( * ) FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ;
What is the last transcript release date ?,spider,SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE DESC LIMIT 1 ;
When was the last transcript released ?,spider,SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE FROM TRANSCRIPTS AS TRANSCRIPTSalias0 ORDER BY TRANSCRIPTSalias0.TRANSCRIPT_DATE DESC LIMIT 1 ;
How many times at most can a course enrollment result show in different transcripts ? Also show the course enrollment id .,spider,"SELECT COUNT( TRANSCRIPT_CONTENTSalias0.* ) , TRANSCRIPT_CONTENTSalias0.STUDENT_COURSE_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 GROUP BY STUDENT_COURSE_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) DESC LIMIT 1 ;"
What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id ?,spider,"SELECT COUNT( TRANSCRIPT_CONTENTSalias0.* ) , TRANSCRIPT_CONTENTSalias0.STUDENT_COURSE_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 GROUP BY STUDENT_COURSE_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) DESC LIMIT 1 ;"
"Show the date of the transcript which shows the least number of results , also list the id .",spider,"SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) ASC LIMIT 1 ;"
What is the date and id of the transcript with the least number of results ?,spider,"SELECT TRANSCRIPTSalias0.TRANSCRIPT_DATE , TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID FROM TRANSCRIPT_CONTENTS AS TRANSCRIPT_CONTENTSalias0 JOIN TRANSCRIPTS AS TRANSCRIPTSalias0 ON TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID = TRANSCRIPTSalias0.TRANSCRIPT_ID GROUP BY TRANSCRIPT_CONTENTSalias0.TRANSCRIPT_ID ORDER BY COUNT( TRANSCRIPT_CONTENTSalias0.* ) ASC LIMIT 1 ;"
Find the semester when both var0 students and var1 students got enrolled in .,spider,"SELECT DISTINCT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = ""var0"" INTERSECT SELECT DISTINCT STUDENT_ENROLMENTalias1.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias1 ON STUDENT_ENROLMENTalias1.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias1.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias1.DEGREE_SUMMARY_NAME = ""var1"" ;"
What is the id of the semester that had both var0s and var1s students enrolled ?,spider,"SELECT DISTINCT STUDENT_ENROLMENTalias0.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias0 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias0 ON STUDENT_ENROLMENTalias0.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias0.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias0.DEGREE_SUMMARY_NAME = ""var0"" INTERSECT SELECT DISTINCT STUDENT_ENROLMENTalias1.SEMESTER_ID FROM DEGREE_PROGRAMS AS DEGREE_PROGRAMSalias1 JOIN STUDENT_ENROLMENT AS STUDENT_ENROLMENTalias1 ON STUDENT_ENROLMENTalias1.DEGREE_PROGRAM_ID = DEGREE_PROGRAMSalias1.DEGREE_PROGRAM_ID WHERE DEGREE_PROGRAMSalias1.DEGREE_SUMMARY_NAME = ""var1"" ;"
How many different addresses do the students currently live ?,spider,SELECT COUNT( DISTINCT STUDENTSalias0.CURRENT_ADDRESS_ID ) FROM STUDENTS AS STUDENTSalias0 ;
What are the different addresses that have students living there ?,spider,SELECT COUNT( DISTINCT STUDENTSalias0.CURRENT_ADDRESS_ID ) FROM STUDENTS AS STUDENTSalias0 ;
List all the student details in reversed lexicographical order .,spider,SELECT STUDENTSalias0.OTHER_STUDENT_DETAILS FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.OTHER_STUDENT_DETAILS DESC ;
What other details can you tell me about students in reverse alphabetical order ?,spider,SELECT STUDENTSalias0.OTHER_STUDENT_DETAILS FROM STUDENTS AS STUDENTSalias0 ORDER BY STUDENTSalias0.OTHER_STUDENT_DETAILS DESC ;
Describe tvar0e section var0 .,spider,"SELECT SECTIONSalias0.SECTION_DESCRIPTION FROM SECTIONS AS SECTIONSalias0 WHERE SECTIONSalias0.SECTION_NAME = ""var0"" ;"
Wvar0at is tvar0e description for tvar0e section named var0 ?,spider,"SELECT SECTIONSalias0.SECTION_DESCRIPTION FROM SECTIONS AS SECTIONSalias0 WHERE SECTIONSalias0.SECTION_NAME = ""var0"" ;"
Find the first name of the students who permanently live in the country var0 or have the cell phone number var1 .,spider,"SELECT STUDENTSalias0.FIRST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.PERMANENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.COUNTRY = ""var0"" UNION SELECT STUDENTSalias1.FIRST_NAME FROM STUDENTS AS STUDENTSalias1 WHERE STUDENTSalias1.CELL_MOBILE_NUMBER = ""var1"" ;"
What are the first names of the students who live in var0 permanently or have the cell phone number var1 ?,spider,"SELECT STUDENTSalias0.FIRST_NAME FROM STUDENTS AS STUDENTSalias0 JOIN ADDRESSES AS ADDRESSESalias0 ON STUDENTSalias0.PERMANENT_ADDRESS_ID = ADDRESSESalias0.ADDRESS_ID WHERE ADDRESSESalias0.COUNTRY = ""var0"" UNION SELECT STUDENTSalias1.FIRST_NAME FROM STUDENTS AS STUDENTSalias1 WHERE STUDENTSalias1.CELL_MOBILE_NUMBER = ""var1"" ;"
List the title of all cartoons in alphabetical order .,spider,SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.TITLE ;
What are the titles of the cartoons sorted alphabetically ?,spider,SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.TITLE ;
"List all cartoon directed by "" var0 "" .",spider,"SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ;"
What are the names of all cartoons directed by var0 ?,spider,"SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ;"
"How many cartoons were written by "" var0 "" ?",spider,"SELECT COUNT( CARTOONalias0.* ) FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
What is the number of cartoones written by var0 ?,spider,"SELECT COUNT( CARTOONalias0.* ) FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
list all cartoon titles and their directors ordered by their air date,spider,"SELECT CARTOONalias0.DIRECTED_BY , CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.ORIGINAL_AIR_DATE ;"
What is the name and directors of all the cartoons that are ordered by air date ?,spider,"SELECT CARTOONalias0.DIRECTED_BY , CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.ORIGINAL_AIR_DATE ;"
"List the title of all cartoon directed by "" var0 "" or "" var1 "" .",spider,"SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" OR CARTOONalias0.DIRECTED_BY = ""var1"" ;"
What are the titles of all cartoons directed by var0 or var1 ?,spider,"SELECT CARTOONalias0.TITLE FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" OR CARTOONalias0.DIRECTED_BY = ""var1"" ;"
Which country has the most of TV Channels ? List the country and number of TV Channels it has .,spider,"SELECT COUNT( * ) , TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
What is the country with the most number of TV Channels and how many does it have ?,spider,"SELECT COUNT( * ) , TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY COUNTRY ORDER BY COUNT( * ) DESC LIMIT 1 ;"
List the number of different series names and contents in the TV Channel table .,spider,"SELECT COUNT( DISTINCT TV_CHANNELalias0.CONTENT ) , COUNT( DISTINCT TV_CHANNELalias0.SERIES_NAME ) FROM TV_CHANNEL AS TV_CHANNELalias0 ;"
How many different series and contents are listed in the TV Channel table ?,spider,"SELECT COUNT( DISTINCT TV_CHANNELalias0.CONTENT ) , COUNT( DISTINCT TV_CHANNELalias0.SERIES_NAME ) FROM TV_CHANNEL AS TV_CHANNELalias0 ;"
"What is the content of TV Channel with serial name "" var0 "" ?",spider,"SELECT TV_CHANNELalias0.CONTENT FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
What is the content of the series var0 ?,spider,"SELECT TV_CHANNELalias0.CONTENT FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
"What is the Package Option of TV Channel with serial name "" var0 "" ?",spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
What are the Package Options of the TV Channels whose series names are var0 ?,spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
How many TV Channel using language var0 ?,spider,"SELECT COUNT( * ) FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.LANGUAGE = ""var0"" ;"
How many TV Channels use the var0 language ?,spider,"SELECT COUNT( * ) FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.LANGUAGE = ""var0"" ;"
List the language used least number of TV Channel . List language and number of TV Channel .,spider,"SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY LANGUAGE ORDER BY COUNT( * ) ASC LIMIT 1 ;"
What are the languages used by the least number of TV Channels and how many channels use it ?,spider,"SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY LANGUAGE ORDER BY COUNT( * ) ASC LIMIT 1 ;"
List each language and the number of TV Channels using it .,spider,"SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.LANGUAGE ;"
"For each language , list the number of TV Channels that use it .",spider,"SELECT COUNT( * ) , TV_CHANNELalias0.LANGUAGE FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.LANGUAGE ;"
"What is the TV Channel that shows the cartoon "" The Rise of the Blue Beetle ! "" ? List the TV Channel's series name .",spider,"SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.TITLE = ""var0"" ;"
"What is the series name of the TV Channel that shows the cartoon "" The Rise of the Blue Beetle "" ?",spider,"SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.TITLE = ""var0"" ;"
"List the title of all Cartoons showed on TV Channel with series name "" var0 "" .",spider,"SELECT CARTOONalias0.TITLE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
"What is the title of all the cartools that are on the TV Channel with the series name "" var0 "" ?",spider,"SELECT CARTOONalias0.TITLE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
List the Episode of all TV series sorted by rating .,spider,SELECT TV_SERIESalias0.EPISODE FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING ;
What are all of the episodes ordered by ratings ?,spider,SELECT TV_SERIESalias0.EPISODE FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING ;
List top var0 highest Rating TV series . List the TV series's Episode and Rating .,spider,"SELECT TV_SERIESalias0.EPISODE , TV_SERIESalias0.RATING FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING DESC LIMIT var0 ;"
What are var0 most highly rated episodes in the TV series table and what were those ratings ?,spider,"SELECT TV_SERIESalias0.EPISODE , TV_SERIESalias0.RATING FROM TV_SERIES AS TV_SERIESalias0 ORDER BY TV_SERIESalias0.RATING DESC LIMIT var0 ;"
What is minimum and maximum share of TV series ?,spider,"SELECT MAX( TV_SERIESalias0.SHARE ) , MIN( TV_SERIESalias0.SHARE ) FROM TV_SERIES AS TV_SERIESalias0 ;"
What is the maximum and minimum share for the TV series ?,spider,"SELECT MAX( TV_SERIESalias0.SHARE ) , MIN( TV_SERIESalias0.SHARE ) FROM TV_SERIES AS TV_SERIESalias0 ;"
"What is the air date of TV series with Episode "" var0 "" ?",spider,"SELECT TV_SERIESalias0.AIR_DATE FROM TV_SERIES AS TV_SERIESalias0 WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"When did the episode "" var0 "" air ?",spider,"SELECT TV_SERIESalias0.AIR_DATE FROM TV_SERIES AS TV_SERIESalias0 WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"What is Weekly Rank of TV series with Episode "" var0 "" ?",spider,"SELECT TV_SERIESalias0.WEEKLY_RANK FROM TV_SERIES AS TV_SERIESalias0 WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"What is the weekly rank for the episode "" var0 "" ?",spider,"SELECT TV_SERIESalias0.WEEKLY_RANK FROM TV_SERIES AS TV_SERIESalias0 WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"What is the TV Channel of TV series with Episode "" var0 "" ? List the TV Channel's series name .",spider,"SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"What is the name of the series that has the episode "" var0 "" ?",spider,"SELECT TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_SERIESalias0.EPISODE = ""var0"" ;"
"List the Episode of all TV series showed on TV Channel with series name "" var0 "" .",spider,"SELECT TV_SERIESalias0.EPISODE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
"What is the episode for the TV series named "" var0 "" ?",spider,"SELECT TV_SERIESalias0.EPISODE FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN TV_SERIES AS TV_SERIESalias0 ON TV_SERIESalias0.CHANNEL = TV_CHANNELalias0.ID WHERE TV_CHANNELalias0.SERIES_NAME = ""var0"" ;"
Find the number of cartoons directed by each of the listed directors .,spider,"SELECT CARTOONalias0.DIRECTED_BY , COUNT( CARTOONalias0.* ) FROM CARTOON AS CARTOONalias0 GROUP BY CARTOONalias0.DIRECTED_BY ;"
How many cartoons did each director create ?,spider,"SELECT CARTOONalias0.DIRECTED_BY , COUNT( CARTOONalias0.* ) FROM CARTOON AS CARTOONalias0 GROUP BY CARTOONalias0.DIRECTED_BY ;"
Find the production code and channel of the most recently aired cartoon .,spider,"SELECT CARTOONalias0.CHANNEL , CARTOONalias0.PRODUCTION_CODE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.ORIGINAL_AIR_DATE LIMIT 1 ;"
What is the produdction code and channel of the most recent cartoon ?,spider,"SELECT CARTOONalias0.CHANNEL , CARTOONalias0.PRODUCTION_CODE FROM CARTOON AS CARTOONalias0 ORDER BY CARTOONalias0.ORIGINAL_AIR_DATE LIMIT 1 ;"
Find the package choice and series name of the TV channel that has high definition TV .,spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.HIGHT_DEFINITION_TV = ""var0"" ;"
What are the package options and the name of the series for the TV Channel that supports high definition TV ?,spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.HIGHT_DEFINITION_TV = ""var0"" ;"
which countries ' tv channels are playing some cartoon written by var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
What are the countries that have cartoons on TV that were written by var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
which countries ' tv channels are not playing any cartoon written by var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT TV_CHANNELalias1.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias1.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
What are the countries that are not playing cartoons written by var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT TV_CHANNELalias1.COUNTRY FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias1.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.WRITTEN_BY = ""var0"" ;"
Find the series name and country of the tv channel that is playing some cartoons directed by var1 and var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.DIRECTED_BY = ""var0"" INTERSECT SELECT TV_CHANNELalias1.COUNTRY , TV_CHANNELalias1.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias1 ON TV_CHANNELalias1.ID = CARTOONalias1.CHANNEL WHERE CARTOONalias1.DIRECTED_BY = ""var1"" ;"
What is the series name and country of all TV channels that are playing cartoons directed by var1 and cartoons directed by var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias0 JOIN CARTOON AS CARTOONalias0 ON TV_CHANNELalias0.ID = CARTOONalias0.CHANNEL WHERE CARTOONalias0.DIRECTED_BY = ""var0"" INTERSECT SELECT TV_CHANNELalias1.COUNTRY , TV_CHANNELalias1.SERIES_NAME FROM TV_CHANNEL AS TV_CHANNELalias1 JOIN CARTOON AS CARTOONalias1 ON TV_CHANNELalias1.ID = CARTOONalias1.CHANNEL WHERE CARTOONalias1.DIRECTED_BY = ""var1"" ;"
find the pixel aspect ratio and nation of the tv channels that do not use var0 .,spider,"SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.PIXEL_ASPECT_RATIO_PAR FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.LANGUAGE != ""var0"" ;"
What is the pixel aspect ratio and country of origin for all TV channels that do not use var0 ?,spider,"SELECT TV_CHANNELalias0.COUNTRY , TV_CHANNELalias0.PIXEL_ASPECT_RATIO_PAR FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.LANGUAGE != ""var0"" ;"
find id of the tv channels that from the countries where have more than two tv channels .,spider,SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.COUNTRY HAVING COUNT( * ) > var0 ;
What are the ids of all tv channels that have more than var0 TV channels ?,spider,SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 GROUP BY TV_CHANNELalias0.COUNTRY HAVING COUNT( * ) > var0 ;
find the id of tv channels that do not play any cartoon directed by var0 .,spider,"SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ;"
What are the ids of the TV channels that do not have any cartoons directed by var0 ?,spider,"SELECT TV_CHANNELalias0.ID FROM TV_CHANNEL AS TV_CHANNELalias0 EXCEPT SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ;"
find the package option of the tv channel that do not have any cartoon directed by var0 .,spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.ID NOT IN ( SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ) ;"
What are the package options of all tv channels that are not playing any cartoons directed by var0 ?,spider,"SELECT TV_CHANNELalias0.PACKAGE_OPTION FROM TV_CHANNEL AS TV_CHANNELalias0 WHERE TV_CHANNELalias0.ID NOT IN ( SELECT CARTOONalias0.CHANNEL FROM CARTOON AS CARTOONalias0 WHERE CARTOONalias0.DIRECTED_BY = ""var0"" ) ;"
How many poker players are there ?,spider,SELECT COUNT( * ) FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
Count the number of poker players .,spider,SELECT COUNT( * ) FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
List the earnings of poker players in descending order .,spider,SELECT POKER_PLAYERalias0.EARNINGS FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
"What are the earnings of poker players , ordered descending by value ?",spider,SELECT POKER_PLAYERalias0.EARNINGS FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
List the final tables made and the best finishes of poker players .,spider,"SELECT POKER_PLAYERalias0.BEST_FINISH , POKER_PLAYERalias0.FINAL_TABLE_MADE FROM POKER_PLAYER AS POKER_PLAYERalias0 ;"
What are the final tables made and best finishes for all poker players ?,spider,"SELECT POKER_PLAYERalias0.BEST_FINISH , POKER_PLAYERalias0.FINAL_TABLE_MADE FROM POKER_PLAYER AS POKER_PLAYERalias0 ;"
What is the average earnings of poker players ?,spider,SELECT AVG( POKER_PLAYERalias0.EARNINGS ) FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
Return the average earnings across all poker players .,spider,SELECT AVG( POKER_PLAYERalias0.EARNINGS ) FROM POKER_PLAYER AS POKER_PLAYERalias0 ;
What is the money rank of the poker player with the highest earnings ?,spider,SELECT POKER_PLAYERalias0.MONEY_RANK FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC LIMIT 1 ;
Return the money rank of the player with the greatest earnings .,spider,SELECT POKER_PLAYERalias0.MONEY_RANK FROM POKER_PLAYER AS POKER_PLAYERalias0 ORDER BY POKER_PLAYERalias0.EARNINGS DESC LIMIT 1 ;
What is the maximum number of final tables made among poker players with earnings less than var0 ?,spider,SELECT MAX( POKER_PLAYERalias0.FINAL_TABLE_MADE ) FROM POKER_PLAYER AS POKER_PLAYERalias0 WHERE POKER_PLAYERalias0.EARNINGS < var0 ;
Return the maximum final tables made across all poker players who have earnings below var0 .,spider,SELECT MAX( POKER_PLAYERalias0.FINAL_TABLE_MADE ) FROM POKER_PLAYER AS POKER_PLAYERalias0 WHERE POKER_PLAYERalias0.EARNINGS < var0 ;
What are the names of poker players ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ;
Return the names of all the poker players .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ;
What are the names of poker players whose earnings is higher than var0 ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE POKER_PLAYERalias0.EARNINGS > var0 ;
Give the names of poker players who have earnings above var0 .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE POKER_PLAYERalias0.EARNINGS > var0 ;
List the names of poker players ordered by the final tables made in ascending order .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.FINAL_TABLE_MADE ;
"What are the names of poker players , ordered ascending by the number of final tables they have made ?",spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.FINAL_TABLE_MADE ;
What is the birth date of the poker player with the lowest earnings ?,spider,SELECT PEOPLEalias0.BIRTH_DATE FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS ASC LIMIT 1 ;
Return the birth date of the poker player with the lowest earnings .,spider,SELECT PEOPLEalias0.BIRTH_DATE FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS ASC LIMIT 1 ;
What is the money rank of the tallest poker player ?,spider,SELECT POKER_PLAYERalias0.MONEY_RANK FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
Return the money rank of the poker player with the greatest height .,spider,SELECT POKER_PLAYERalias0.MONEY_RANK FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY PEOPLEalias0.HEIGHT DESC LIMIT 1 ;
What is the average earnings of poker players with height higher than var0 ?,spider,SELECT AVG( POKER_PLAYERalias0.EARNINGS ) FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
Give average earnings of poker players who are taller than var0 .,spider,SELECT AVG( POKER_PLAYERalias0.EARNINGS ) FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID WHERE PEOPLEalias0.HEIGHT > var0 ;
What are the names of poker players in descending order of earnings ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
Return the names of poker players sorted by their earnings descending .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 JOIN POKER_PLAYER AS POKER_PLAYERalias0 ON POKER_PLAYERalias0.PEOPLE_ID = PEOPLEalias0.PEOPLE_ID ORDER BY POKER_PLAYERalias0.EARNINGS DESC ;
What are different nationalities of people and the corresponding number of people from each nation ?,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY ;"
How many people are there of each nationality ?,spider,"SELECT COUNT( PEOPLEalias0.* ) , PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY ;"
What is the most common nationality of people ?,spider,SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY NATIONALITY ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
Give the nationality that is most common across all people .,spider,SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY NATIONALITY ORDER BY COUNT( PEOPLEalias0.* ) DESC LIMIT 1 ;
What are the nationalities that are shared by at least two people ?,spider,SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
Return the nationalities for which there are two or more people .,spider,SELECT PEOPLEalias0.NATIONALITY FROM PEOPLE AS PEOPLEalias0 GROUP BY PEOPLEalias0.NATIONALITY HAVING COUNT( PEOPLEalias0.* ) >= var0 ;
List the names and birth dates of people in ascending alphabetical order of name .,spider,"SELECT PEOPLEalias0.BIRTH_DATE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;"
"What are the names and birth dates of people , ordered by their names in alphabetical order ?",spider,"SELECT PEOPLEalias0.BIRTH_DATE , PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 ORDER BY PEOPLEalias0.NAME ASC ;"
"Show names of people whose nationality is not "" var0 "" .",spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.NATIONALITY != ""var0"" ;"
What are the names of people who are not from var0 ?,spider,"SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.NATIONALITY != ""var0"" ;"
List the names of people that are not poker players .,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT POKER_PLAYERalias0.PEOPLE_ID FROM POKER_PLAYER AS POKER_PLAYERalias0 ) ;
What are the names of people who do not play poker ?,spider,SELECT PEOPLEalias0.NAME FROM PEOPLE AS PEOPLEalias0 WHERE PEOPLEalias0.PEOPLE_ID NOT IN ( SELECT POKER_PLAYERalias0.PEOPLE_ID FROM POKER_PLAYER AS POKER_PLAYERalias0 ) ;
How many distinct nationalities are there ?,spider,SELECT COUNT( DISTINCT PEOPLEalias0.NATIONALITY ) FROM PEOPLE AS PEOPLEalias0 ;
Count the number of different nationalities .,spider,SELECT COUNT( DISTINCT PEOPLEalias0.NATIONALITY ) FROM PEOPLE AS PEOPLEalias0 ;
How many states are there ?,spider,SELECT COUNT( * ) FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 ;
"List the contestant numbers and names , ordered by contestant name descending .",spider,"SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 ORDER BY CONTESTANTSalias0.CONTESTANT_NAME DESC ;"
"List the vote ids , phone numbers and states of all votes .",spider,"SELECT VOTESalias0.PHONE_NUMBER , VOTESalias0.STATE , VOTESalias0.VOTE_ID FROM VOTES AS VOTESalias0 ;"
What are the maximum and minimum values of area codes ?,spider,"SELECT MAX( AREA_CODE_STATEalias0.AREA_CODE ) , MIN( AREA_CODE_STATEalias0.AREA_CODE ) FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 ;"
What is last date created of votes from the state ' var0 ' ?,spider,"SELECT MAX( VOTESalias0.CREATED ) FROM VOTES AS VOTESalias0 WHERE VOTESalias0.STATE = ""var0"" ;"
What are the names of the contestants whose names are not ' var0 ',spider,"SELECT CONTESTANTSalias0.CONTESTANT_NAME FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NAME != ""var0"" ;"
What are the distinct states and create time of all votes ?,spider,"SELECT DISTINCT VOTESalias0.CREATED , VOTESalias0.STATE FROM VOTES AS VOTESalias0 ;"
What are the contestant numbers and names of the contestants who had at least two votes ?,spider,"SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER GROUP BY CONTESTANTSalias0.CONTESTANT_NUMBER HAVING COUNT( VOTESalias0.* ) >= var0 ;"
"Of all the contestants who got voted , what is the contestant number and name of the contestant who got least votes ?",spider,"SELECT CONTESTANTSalias0.CONTESTANT_NAME , CONTESTANTSalias0.CONTESTANT_NUMBER FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER GROUP BY CONTESTANTSalias0.CONTESTANT_NUMBER ORDER BY COUNT( VOTESalias0.* ) ASC LIMIT 1 ;"
What are the number of votes from state ' var0 ' or ' var1 ' ?,spider,"SELECT COUNT( VOTESalias0.* ) FROM VOTES AS VOTESalias0 WHERE VOTESalias0.STATE = ""var0"" OR VOTESalias0.STATE = ""var1"" ;"
How many contestants did not get voted ?,spider,SELECT COUNT( * ) FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NUMBER NOT IN ( SELECT VOTESalias0.CONTESTANT_NUMBER FROM VOTES AS VOTESalias0 ) ;
What is the area code in which the most voters voted ?,spider,SELECT AREA_CODE_STATEalias0.AREA_CODE FROM AREA_CODE_STATE AS AREA_CODE_STATEalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.STATE = AREA_CODE_STATEalias0.STATE GROUP BY AREA_CODE_STATEalias0.AREA_CODE ORDER BY COUNT( VOTESalias0.* ) DESC LIMIT 1 ;
"What are the create dates , states , and phone numbers of the votes that were for the contestant named ' var0 ' ?",spider,"SELECT VOTESalias0.CREATED , VOTESalias0.PHONE_NUMBER , VOTESalias0.STATE FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER WHERE CONTESTANTSalias0.CONTESTANT_NAME = ""var0"" ;"
List the area codes in which voters voted both for the contestant ' var0 ' and the contestant ' var1 ' .,spider,"SELECT AREA_CODE_STATEalias0.AREA_CODE FROM CONTESTANTS AS CONTESTANTSalias0 JOIN VOTES AS VOTESalias0 ON VOTESalias0.CONTESTANT_NUMBER = CONTESTANTSalias0.CONTESTANT_NUMBER JOIN AREA_CODE_STATE AS AREA_CODE_STATEalias0 ON VOTESalias0.STATE = AREA_CODE_STATEalias0.STATE WHERE CONTESTANTSalias0.CONTESTANT_NAME = ""var0"" INTERSECT SELECT AREA_CODE_STATEalias1.AREA_CODE FROM CONTESTANTS AS CONTESTANTSalias1 JOIN VOTES AS VOTESalias1 ON VOTESalias1.CONTESTANT_NUMBER = CONTESTANTSalias1.CONTESTANT_NUMBER JOIN AREA_CODE_STATE AS AREA_CODE_STATEalias1 ON VOTESalias1.STATE = AREA_CODE_STATEalias1.STATE WHERE CONTESTANTSalias1.CONTESTANT_NAME = ""var1"" ;"
Return the names the contestants whose names contain the substring ' var0 ' .,spider,"SELECT CONTESTANTSalias0.CONTESTANT_NAME FROM CONTESTANTS AS CONTESTANTSalias0 WHERE CONTESTANTSalias0.CONTESTANT_NAME LIKE ""var0"" ;"
What are the names of all the countries that became independent after var0 ?,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE INDEPYEAR > var0 ;
Give the names of the nations that were founded after var0 .,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE INDEPYEAR > var0 ;
How many countries have a republic as their form of government ?,spider,"SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = ""var0"" ;"
How many countries have governments that are republics ?,spider,"SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = ""var0"" ;"
What is the total surface area of the countries in the var0 region ?,spider,"SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = ""var0"" ;"
How much surface area do the countires in the Carribean cover together ?,spider,"SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = ""var0"" ;"
Which continent is var0 in ?,spider,"SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
What is the continent name which var0 belongs to ?,spider,"SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
Which region is the city var0 located in ?,spider,"SELECT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE CITYalias0.NAME = ""var0"" ;"
What region is var0 in ?,spider,"SELECT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE CITYalias0.NAME = ""var0"" ;"
Which language is the most popular in var0 ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" ORDER BY COUNTRYLANGUAGEalias0.PERCENTAGE DESC LIMIT 1 ;"
What language is predominantly spoken in var0 ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" ORDER BY COUNTRYLANGUAGEalias0.PERCENTAGE DESC LIMIT 1 ;"
What are the population and life expectancies in var0 ?,spider,"SELECT COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
Give me var0 's population and life expectancies .,spider,"SELECT COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
What are the region and population of var0 ?,spider,"SELECT COUNTRYalias0.POPULATION , COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
What region does var0 belong to and what is its population ?,spider,"SELECT COUNTRYalias0.POPULATION , COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME = ""var0"" ;"
What is the average expected life expectancy for countries in the region of var0 ?,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = ""var0"" ;"
How long is the people 's average life expectancy in var0 ?,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.REGION = ""var0"" ;"
What is the name of country that has the shortest life expectancy in var0 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = ""var0"" ORDER BY LIFEEXPECTANCY LIMIT 1 ;"
Give the name of the country in var0 with the lowest life expectancy .,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = ""var0"" ORDER BY LIFEEXPECTANCY LIMIT 1 ;"
What is the total population and maximum GNP in var0 ?,spider,"SELECT MAX( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
"How many people live in var0 , and what is the largest GNP among them ?",spider,"SELECT MAX( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
What is the average life expectancy in var0n countries that are republics ?,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND GOVERNMENTFORM = ""var1"" ;"
Give the average life expectancy for countries in var0 which are republics ?,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND GOVERNMENTFORM = ""var1"" ;"
What is the total surface area of the continents var0 and var1 ?,spider,"SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" OR COUNTRYalias0.CONTINENT = ""var1"" ;"
Give the total surface area covered by countries in var0 or var1 .,spider,"SELECT SUM( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" OR COUNTRYalias0.CONTINENT = ""var1"" ;"
How many people live in var0 district ?,spider,"SELECT SUM( CITYalias0.POPULATION ) FROM CITY AS CITYalias0 WHERE CITYalias0.DISTRICT = ""var0"" ;"
What is the total population of var0 district ?,spider,"SELECT SUM( CITYalias0.POPULATION ) FROM CITY AS CITYalias0 WHERE CITYalias0.DISTRICT = ""var0"" ;"
What is the average GNP and total population in all nations whose government is US territory ?,spider,"SELECT AVG( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = ""var0"" ;"
Give the mean GNP and total population of nations which are considered US territory .,spider,"SELECT AVG( COUNTRYalias0.GNP ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM = ""var0"" ;"
How many unique languages are spoken in the world ?,spider,SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ;
What is the number of distinct languages used around the world ?,spider,SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ;
How many type of governments are in var0 ?,spider,"SELECT COUNT( DISTINCT GOVERNMENTFORM ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
How many different forms of governments are there in var0 ?,spider,"SELECT COUNT( DISTINCT GOVERNMENTFORM ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
What is the total number of languages used in var0 ?,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" ;"
How many languages are spoken in var0 ?,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" ;"
How many official languages does var0 have ?,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.* ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" AND ISOFFICIAL = ""var1"" ;"
How many official languages are spoken in var0 ?,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.* ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.NAME = ""var0"" AND ISOFFICIAL = ""var1"" ;"
What is name of the country that speaks the largest number of languages ?,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.NAME ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
Give the name of the nation that uses the greatest amount of languages .,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.NAME ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
Which continent has the most diverse languages ?,spider,SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.CONTINENT ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
Which continent speaks the most languages ?,spider,SELECT COUNTRYalias0.CONTINENT FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.CONTINENT ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
How many countries speak both var0 and var1 ?,spider,"SELECT COUNT( * ) FROM ( SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var1"" ) ;"
What is the number of nations that use var0 and var1 ?,spider,"SELECT COUNT( * ) FROM ( SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var1"" ) ;"
What are the names of nations speak both var0 and var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var1"" ;"
Give the names of nations that speak both var0 and var1 .,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var1"" ;"
What are the names of nations where both var0 and var2 are official languages ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var2"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" AND COUNTRYLANGUAGEalias1.ISOFFICIAL = ""var3"" ;"
Give the names of countries with var0 and var2 as official languages .,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" INTERSECT SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var2"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" AND COUNTRYLANGUAGEalias1.ISOFFICIAL = ""var3"" ;"
What is the number of distinct continents where var0 is spoken ?,spider,"SELECT COUNT( DISTINCT COUNTRYalias0.CONTINENT ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ;"
How many continents speak var0 ?,spider,"SELECT COUNT( DISTINCT COUNTRYalias0.CONTINENT ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ;"
What are the regions that use var0 or var1 ?,spider,"SELECT DISTINCT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" OR COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" ;"
Which regions speak var1 or var0 ?,spider,"SELECT DISTINCT COUNTRYalias0.REGION FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" OR COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" ;"
What are the countries where either var0 or var2 is the official language ?,spider,"SELECT COUNTRYLANGUAGEalias0.* FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" AND ISOFFICIAL = ""var1"" UNION SELECT COUNTRYLANGUAGEalias1.* FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var2"" AND ISOFFICIAL = ""var3"" ;"
Which countries have either var0 or var2 as an official language ?,spider,"SELECT COUNTRYLANGUAGEalias0.* FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" AND ISOFFICIAL = ""var1"" UNION SELECT COUNTRYLANGUAGEalias1.* FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias1.COUNTRYCODE WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var2"" AND ISOFFICIAL = ""var3"" ;"
Which language is the most popular on the var0n continent ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.CONTINENT = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.LANGUAGE ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;"
What is the language that is used by the largest number of var0n nations ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.CONTINENT = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.LANGUAGE ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;"
Which languages are spoken by only one country in republic governments ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.GOVERNMENTFORM = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.LANGUAGE HAVING COUNT( COUNTRYLANGUAGEalias0.* ) = var1 ;"
What languages are only used by a single country with a republic government ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYalias0.GOVERNMENTFORM = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.LANGUAGE HAVING COUNT( COUNTRYLANGUAGEalias0.* ) = var1 ;"
Find the city with the largest population that uses var0 .,spider,"SELECT CITYalias0.NAME , CITYalias0.POPULATION FROM CITY AS CITYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYLANGUAGEalias0.COUNTRYCODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"
What is the most populace city that speaks var0 ?,spider,"SELECT CITYalias0.NAME , CITYalias0.POPULATION FROM CITY AS CITYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYLANGUAGEalias0.COUNTRYCODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ORDER BY CITYalias0.POPULATION DESC LIMIT 1 ;"
"Find the name , population and expected life length of asian country with the largest area ?",spider,"SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = ""var0"" ORDER BY SURFACEAREA DESC LIMIT 1 ;"
"What are the name , population , and life expectancy of the largest var0n country by land ?",spider,"SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , LIFEEXPECTANCY FROM COUNTRY AS COUNTRYalias0 WHERE CONTINENT = ""var0"" ORDER BY SURFACEAREA DESC LIMIT 1 ;"
What is average life expectancy in the countries where var0 is not the official language ?,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ) ;"
Give the mean life expectancy of countries in which var0 is not the official language .,spider,"SELECT AVG( LIFEEXPECTANCY ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ) ;"
What is the total number of people living in the nations that do not use var0 ?,spider,"SELECT SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ) ;"
How many people live in countries that do not speak var0 ?,spider,"SELECT SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var0"" ) ;"
What is the official language spoken in the country whose head of state is var0 ?,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYalias0.HEADOFSTATE = ""var0"" ;"
What is the official language used in the country the name of whose head of state is var0 .,spider,"SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYalias0.HEADOFSTATE = ""var0"" ;"
What is the total number of unique official languages spoken in the countries that are founded before var0 ?,spider,"SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND INDEPYEAR < var0 ;"
"For the countries founded before var0 , what is the total number of distinct official languages ?",spider,"SELECT COUNT( DISTINCT COUNTRYLANGUAGEalias0.LANGUAGE ) FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND INDEPYEAR < var0 ;"
What are the countries that have greater surface area than any country in var0 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE SURFACEAREA > ( SELECT MIN( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var0"" ) ;"
Which countries have greater area than that of any country in var0 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE SURFACEAREA > ( SELECT MIN( SURFACEAREA ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var0"" ) ;"
What are the var0n countries that have a population less than any country in var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION < ( SELECT MAX( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var1"" ) ;"
Which var0n countries have a smaller population than that of any country in var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION < ( SELECT MIN( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var1"" ) ;"
Which var0n countries have a population that is larger than any country in var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION > ( SELECT MAX( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var1"" ) ;"
What are the var0n countries which have a population larger than that of any country in var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION > ( SELECT MIN( COUNTRYalias1.POPULATION ) FROM COUNTRY AS COUNTRYalias1 WHERE COUNTRYalias1.CONTINENT = ""var1"" ) ;"
What are the country codes for countries that do not speak var0 ?,spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 EXCEPT SELECT COUNTRYLANGUAGEalias1.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var0"" ;"
Return the country codes for countries that do not speak var0 .,spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 EXCEPT SELECT COUNTRYLANGUAGEalias1.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias1 WHERE COUNTRYLANGUAGEalias1.LANGUAGE = ""var0"" ;"
What are the country codes of countries where people use languages other than var0 ?,spider,"SELECT DISTINCT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE != ""var0"" ;"
Give the country codes for countries in which people speak langauges that are not var0 .,spider,"SELECT DISTINCT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE != ""var0"" ;"
What are the codes of the countries that do not speak var1 and whose government forms are not var0 ?,spider,"SELECT COUNTRYalias0.CODE FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM != ""var0"" EXCEPT SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" ;"
Return the codes of countries that do not speak var1 and do not have var0s for governments .,spider,"SELECT COUNTRYalias0.CODE FROM COUNTRY AS COUNTRYalias0 WHERE GOVERNMENTFORM != ""var0"" EXCEPT SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" ;"
Which cities are in var0an countries where var2 is not the official language ?,spider,"SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var2"" ) ;"
What are the names of cities in var0 for which var2 is not the official language ?,spider,"SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.NAME NOT IN ( SELECT COUNTRYalias1.NAME FROM COUNTRY AS COUNTRYalias1 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias1.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var1"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var2"" ) ;"
Whic`h unique cities are in var2n countries where var1 is the official language ?,spider,"SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var0"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" AND COUNTRYalias0.CONTINENT = ""var2"" ;"
Return the different names of cities that are in var2 and for which var1 is the official language .,spider,"SELECT DISTINCT CITYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE JOIN CITY AS CITYalias0 ON COUNTRYalias0.CODE = CITYalias0.COUNTRYCODE WHERE COUNTRYLANGUAGEalias0.ISOFFICIAL = ""var0"" AND COUNTRYLANGUAGEalias0.LANGUAGE = ""var1"" AND COUNTRYalias0.CONTINENT = ""var2"" ;"
"What are the name , independence year , and surface area of the country with the smallest population ?",spider,"SELECT COUNTRYalias0.NAME , INDEPYEAR , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION LIMIT 1 ;"
"Give the name , year of independence , and surface area of the country that has the lowest population .",spider,"SELECT COUNTRYalias0.NAME , INDEPYEAR , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION LIMIT 1 ;"
"What are the population , name and leader of the country with the largest area ?",spider,"SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , HEADOFSTATE FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT 1 ;"
"Give the name , population , and head of state for the country that has the largest area .",spider,"SELECT COUNTRYalias0.NAME , COUNTRYalias0.POPULATION , HEADOFSTATE FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT 1 ;"
Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages .,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.LANGUAGE ) , COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.NAME HAVING COUNT( COUNTRYLANGUAGEalias0.* ) > var0 ;"
"What are the names of countries that speak more than var0 languages , as well as how many languages they speak ?",spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.LANGUAGE ) , COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 JOIN COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 ON COUNTRYalias0.CODE = COUNTRYLANGUAGEalias0.COUNTRYCODE GROUP BY COUNTRYalias0.NAME HAVING COUNT( COUNTRYLANGUAGEalias0.* ) > var0 ;"
Find the number of cities in each district whose population is greater than the average population of cities ?,spider,"SELECT CITYalias0.DISTRICT , COUNT( * ) FROM CITY AS CITYalias0 WHERE POPULATION > ( SELECT AVG( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) GROUP BY CITYalias0.DISTRICT ;"
How many cities in each district have a population that is above the average population across all cities ?,spider,"SELECT CITYalias0.DISTRICT , COUNT( * ) FROM CITY AS CITYalias0 WHERE POPULATION > ( SELECT AVG( CITYalias1.POPULATION ) FROM CITY AS CITYalias1 ) GROUP BY CITYalias0.DISTRICT ;"
Find the government form name and total population for each government form whose average life expectancy is longer than var0 .,spider,"SELECT GOVERNMENTFORM , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY GOVERNMENTFORM HAVING AVG( LIFEEXPECTANCY ) > var0 ;"
What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than var0 ?,spider,"SELECT GOVERNMENTFORM , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY GOVERNMENTFORM HAVING AVG( LIFEEXPECTANCY ) > var0 ;"
Find the average life expectancy and total population for each continent where the average life expectancy is shorter than var0 ?,spider,"SELECT AVG( LIFEEXPECTANCY ) , COUNTRYalias0.CONTINENT , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY COUNTRYalias0.CONTINENT HAVING AVG( LIFEEXPECTANCY ) < var0 ;"
"What are the different continents and the total popuation and average life expectancy corresponding to each , for continents that have an average life expectancy less than var0 ?",spider,"SELECT AVG( LIFEEXPECTANCY ) , COUNTRYalias0.CONTINENT , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 GROUP BY COUNTRYalias0.CONTINENT HAVING AVG( LIFEEXPECTANCY ) < var0 ;"
What are the names and areas of countries with the top var0 largest area ?,spider,"SELECT COUNTRYalias0.NAME , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT var0 ;"
Return the names and surface areas of the var0 largest countries .,spider,"SELECT COUNTRYalias0.NAME , SURFACEAREA FROM COUNTRY AS COUNTRYalias0 ORDER BY SURFACEAREA DESC LIMIT var0 ;"
What are names of countries with the top var0 largest population ?,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION DESC LIMIT var0 ;
Return the names of the var0 most populated countries .,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION DESC LIMIT var0 ;
What are the names of the nations with the var0 lowest populations ?,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION ASC LIMIT var0 ;
Return the names of the var0 countries with the fewest people .,spider,SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 ORDER BY COUNTRYalias0.POPULATION ASC LIMIT var0 ;
how many countries are in var0 ?,spider,"SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
Count the number of countries in var0 .,spider,"SELECT COUNT( * ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" ;"
What are the names of the countries that are in the continent of var0 and have a population of var1 ?,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION = ""var1"" ;"
Give the names of countries that are in var0 and have a population equal to var1 .,spider,"SELECT COUNTRYalias0.NAME FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND COUNTRYalias0.POPULATION = ""var1"" ;"
What is the total population and average area of countries in the continent of var0 whose area is bigger than var1 ?,spider,"SELECT AVG( SURFACEAREA ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND SURFACEAREA > var1 ;"
Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than var1 .,spider,"SELECT AVG( SURFACEAREA ) , SUM( COUNTRYalias0.POPULATION ) FROM COUNTRY AS COUNTRYalias0 WHERE COUNTRYalias0.CONTINENT = ""var0"" AND SURFACEAREA > var1 ;"
What are the cities whose population is between var0 and var1 ?,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION BETWEEN var0 AND var1 ;
Return the names of cities that have a population between var0 and var10 .,spider,SELECT CITYalias0.NAME FROM CITY AS CITYalias0 WHERE CITYalias0.POPULATION BETWEEN var0 AND var1 ;
Which language is spoken by the largest number of countries ?,spider,SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 GROUP BY LANGUAGE ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
Give the language that is spoken in the most countries .,spider,SELECT COUNTRYLANGUAGEalias0.LANGUAGE FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 GROUP BY LANGUAGE ORDER BY COUNT( COUNTRYLANGUAGEalias0.* ) DESC LIMIT 1 ;
What is the language spoken by the largest percentage of people in each country ?,spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , COUNTRYLANGUAGEalias0.LANGUAGE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
"What are the country codes of the different countries , and what are the languages spoken by the greatest percentage of people for each ?",spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , COUNTRYLANGUAGEalias0.LANGUAGE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
What is the total number of countries where var0 is spoken by the largest percentage of people ?,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.* ) , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
Count the number of countries for which var0 is the predominantly spoken language .,spider,"SELECT COUNT( COUNTRYLANGUAGEalias0.* ) , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
What are the codes of countries where var0 is spoken by the largest percentage of people ?,spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
Return the codes of countries for which var0 is the predominantly spoken language .,spider,"SELECT COUNTRYLANGUAGEalias0.COUNTRYCODE , MAX( COUNTRYLANGUAGEalias0.PERCENTAGE ) FROM COUNTRYLANGUAGE AS COUNTRYLANGUAGEalias0 WHERE LANGUAGE = ""var0"" GROUP BY COUNTRYLANGUAGEalias0.COUNTRYCODE ;"
How many conductors are there ?,spider,SELECT COUNT( * ) FROM CONDUCTOR AS CONDUCTORalias0 ;
Count the number of conductors .,spider,SELECT COUNT( * ) FROM CONDUCTOR AS CONDUCTORalias0 ;
List the names of conductors in ascending order of age .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.AGE ASC ;
"What are the names of conductors , ordered by age ?",spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.AGE ASC ;
"What are the names of conductors whose nationalities are not "" var0 "" ?",spider,"SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 WHERE CONDUCTORalias0.NATIONALITY != ""var0"" ;"
"Return the names of conductors that do not have the nationality "" var0 "" .",spider,"SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 WHERE CONDUCTORalias0.NATIONALITY != ""var0"" ;"
What are the record companies of orchestras in descending order of years in which they were founded ?,spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 ORDER BY ORCHESTRAalias0.YEAR_OF_FOUNDED DESC ;
"Return the record companies of orchestras , sorted descending by the years in which they were founded .",spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 ORDER BY ORCHESTRAalias0.YEAR_OF_FOUNDED DESC ;
What is the average attendance of shows ?,spider,SELECT AVG( SHOWalias0.ATTENDANCE ) FROM SHOW AS SHOWalias0 ;
Return the average attendance across all shows .,spider,SELECT AVG( SHOWalias0.ATTENDANCE ) FROM SHOW AS SHOWalias0 ;
"What are the maximum and minimum share of performances whose type is not "" var0 "" .",spider,"SELECT MAX( PERFORMANCEalias0.SHARE ) , MIN( PERFORMANCEalias0.SHARE ) FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.TYPE != ""var0"" ;"
"Return the maximum and minimum shares for performances that do not have the type "" var0 "" .",spider,"SELECT MAX( PERFORMANCEalias0.SHARE ) , MIN( PERFORMANCEalias0.SHARE ) FROM PERFORMANCE AS PERFORMANCEalias0 WHERE PERFORMANCEalias0.TYPE != ""var0"" ;"
How many different nationalities do conductors have ?,spider,SELECT COUNT( DISTINCT CONDUCTORalias0.NATIONALITY ) FROM CONDUCTOR AS CONDUCTORalias0 ;
Count the number of different nationalities of conductors .,spider,SELECT COUNT( DISTINCT CONDUCTORalias0.NATIONALITY ) FROM CONDUCTOR AS CONDUCTORalias0 ;
List names of conductors in descending order of years of work .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC ;
"What are the names of conductors , sorted descending by the number of years they have worked ?",spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC ;
List the name of the conductor with the most years of work .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC LIMIT 1 ;
What is the name of the conductor who has worked the greatest number of years ?,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 ORDER BY CONDUCTORalias0.YEAR_OF_WORK DESC LIMIT 1 ;
Show the names of conductors and the orchestras they have conducted .,spider,"SELECT CONDUCTORalias0.NAME , ORCHESTRAalias0.ORCHESTRA FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID ;"
What are the names of conductors as well as the corresonding orchestras that they have conducted ?,spider,"SELECT CONDUCTORalias0.NAME , ORCHESTRAalias0.ORCHESTRA FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID ;"
Show the names of conductors that have conducted more than one orchestras .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID GROUP BY ORCHESTRAalias0.CONDUCTOR_ID HAVING COUNT( * ) > var0 ;
What are the names of conductors who have conducted at more than one orchestra ?,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID GROUP BY ORCHESTRAalias0.CONDUCTOR_ID HAVING COUNT( * ) > var0 ;
Show the name of the conductor that has conducted the most number of orchestras .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID GROUP BY ORCHESTRAalias0.CONDUCTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the name of the conductor who has conducted the most orchestras ?,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID GROUP BY ORCHESTRAalias0.CONDUCTOR_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Please show the name of the conductor that has conducted orchestras founded after var0 .,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID WHERE ORCHESTRAalias0.YEAR_OF_FOUNDED > var0 ;
What are the names of conductors who have conducted orchestras founded after the year var0 ?,spider,SELECT CONDUCTORalias0.NAME FROM CONDUCTOR AS CONDUCTORalias0 JOIN ORCHESTRA AS ORCHESTRAalias0 ON ORCHESTRAalias0.CONDUCTOR_ID = CONDUCTORalias0.CONDUCTOR_ID WHERE ORCHESTRAalias0.YEAR_OF_FOUNDED > var0 ;
Please show the different record companies and the corresponding number of orchestras .,spider,"SELECT COUNT( * ) , ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY ORCHESTRAalias0.RECORD_COMPANY ;"
How many orchestras does each record company manage ?,spider,"SELECT COUNT( * ) , ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY ORCHESTRAalias0.RECORD_COMPANY ;"
Please show the record formats of orchestras in ascending order of count .,spider,SELECT ORCHESTRAalias0.MAJOR_RECORD_FORMAT FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY MAJOR_RECORD_FORMAT ORDER BY COUNT( * ) ASC ;
"What are the major record formats of orchestras , sorted by their frequency ?",spider,SELECT ORCHESTRAalias0.MAJOR_RECORD_FORMAT FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY MAJOR_RECORD_FORMAT ORDER BY COUNT( * ) ASC ;
List the record company shared by the most number of orchestras .,spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY RECORD_COMPANY ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the record company used by the greatest number of orchestras ?,spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 GROUP BY RECORD_COMPANY ORDER BY COUNT( * ) DESC LIMIT 1 ;
List the names of orchestras that have no performance .,spider,SELECT ORCHESTRAalias0.ORCHESTRA FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.ORCHESTRA_ID NOT IN ( SELECT PERFORMANCEalias0.ORCHESTRA_ID FROM PERFORMANCE AS PERFORMANCEalias0 ) ;
What are the orchestras that do not have any performances ?,spider,SELECT ORCHESTRAalias0.ORCHESTRA FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.ORCHESTRA_ID NOT IN ( SELECT PERFORMANCEalias0.ORCHESTRA_ID FROM PERFORMANCE AS PERFORMANCEalias0 ) ;
Show the record companies shared by orchestras founded before var0 and after var0 .,spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.YEAR_OF_FOUNDED < var0 INTERSECT SELECT ORCHESTRAalias1.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias1 WHERE ORCHESTRAalias1.YEAR_OF_FOUNDED > var1 ;
What are the record companies that are used by both orchestras founded before var0 and those founded after var0 ?,spider,SELECT ORCHESTRAalias0.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.YEAR_OF_FOUNDED < var0 INTERSECT SELECT ORCHESTRAalias1.RECORD_COMPANY FROM ORCHESTRA AS ORCHESTRAalias1 WHERE ORCHESTRAalias1.YEAR_OF_FOUNDED > var1 ;
"Find the number of orchestras whose record format is "" var0 "" or "" var1 "" .",spider,"SELECT COUNT( * ) FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.MAJOR_RECORD_FORMAT = ""var0"" OR ORCHESTRAalias0.MAJOR_RECORD_FORMAT = ""var1"" ;"
Count the number of orchestras that have var0 or var1 as their record format .,spider,"SELECT COUNT( * ) FROM ORCHESTRA AS ORCHESTRAalias0 WHERE ORCHESTRAalias0.MAJOR_RECORD_FORMAT = ""var0"" OR ORCHESTRAalias0.MAJOR_RECORD_FORMAT = ""var1"" ;"
Show the years in which orchestras that have given more than one performance are founded .,spider,SELECT ORCHESTRAalias0.YEAR_OF_FOUNDED FROM ORCHESTRA AS ORCHESTRAalias0 JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.ORCHESTRA_ID = ORCHESTRAalias0.ORCHESTRA_ID GROUP BY PERFORMANCEalias0.ORCHESTRA_ID HAVING COUNT( * ) > var0 ;
What are years of founding for orchestras that have had more than a single performance ?,spider,SELECT ORCHESTRAalias0.YEAR_OF_FOUNDED FROM ORCHESTRA AS ORCHESTRAalias0 JOIN PERFORMANCE AS PERFORMANCEalias0 ON PERFORMANCEalias0.ORCHESTRA_ID = ORCHESTRAalias0.ORCHESTRA_ID GROUP BY PERFORMANCEalias0.ORCHESTRA_ID HAVING COUNT( * ) > var0 ;
How many high schoolers are there ?,spider,SELECT COUNT( * ) FROM HIGHSCHOOLER ;
Count the number of high schoolers .,spider,SELECT COUNT( * ) FROM HIGHSCHOOLER ;
Show the names and grades of each high schooler .,spider,"SELECT GRADE , NAME FROM HIGHSCHOOLER ;"
What are the names and grades for each high schooler ?,spider,"SELECT GRADE , NAME FROM HIGHSCHOOLER ;"
Show all the grades of the high schoolers .,spider,SELECT GRADE FROM HIGHSCHOOLER ;
What is the grade of each high schooler ?,spider,SELECT GRADE FROM HIGHSCHOOLER ;
What grade is var0 in ?,spider,"SELECT GRADE FROM HIGHSCHOOLER WHERE NAME = ""var0"" ;"
Return the grade for the high schooler named var0 .,spider,"SELECT GRADE FROM HIGHSCHOOLER WHERE NAME = ""var0"" ;"
Show the names of all high schoolers in grade var0 .,spider,SELECT NAME FROM HIGHSCHOOLER WHERE GRADE = var0 ;
What are the names of all high schoolers in grade var0 ?,spider,SELECT NAME FROM HIGHSCHOOLER WHERE GRADE = var0 ;
Show the ID of the high schooler named var0 .,spider,"SELECT ID FROM HIGHSCHOOLER WHERE NAME = ""var0"" ;"
What is var0's id ?,spider,"SELECT ID FROM HIGHSCHOOLER WHERE NAME = ""var0"" ;"
How many high schoolers are there in grade var0 or var1 ?,spider,SELECT COUNT( * ) FROM HIGHSCHOOLER WHERE GRADE = var0 OR GRADE = var1 ;
Count the number of high schoolers in grades var0 or var1 .,spider,SELECT COUNT( * ) FROM HIGHSCHOOLER WHERE GRADE = var0 OR GRADE = var1 ;
Show the number of high schoolers for each grade .,spider,"SELECT COUNT( * ) , GRADE FROM HIGHSCHOOLER GROUP BY GRADE ;"
How many high schoolers are in each grade ?,spider,"SELECT COUNT( * ) , GRADE FROM HIGHSCHOOLER GROUP BY GRADE ;"
Which grade has the most high schoolers ?,spider,SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the grade that has the greatest number of high schoolers .,spider,SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show me all grades that have at least var0 students .,spider,SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE HAVING COUNT( * ) >= var0 ;
Which grades have var0 or more high schoolers ?,spider,SELECT GRADE FROM HIGHSCHOOLER GROUP BY GRADE HAVING COUNT( * ) >= var0 ;
Show the student IDs and numbers of friends corresponding to each .,spider,"SELECT COUNT( * ) , FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 GROUP BY FRIENDalias0.STUDENT_ID ;"
How many friends does each student have ?,spider,"SELECT COUNT( * ) , FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 GROUP BY FRIENDalias0.STUDENT_ID ;"
Show the names of high school students and their corresponding number of friends .,spider,"SELECT COUNT( * ) , DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ;"
What are the names of the high schoolers and how many friends does each have ?,spider,"SELECT COUNT( * ) , DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ;"
What is the name of the high schooler who has the greatest number of friends ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Return the name of the high school student with the most friends .,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show the names of high schoolers who have at least var0 friends .,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;
What are the names of high schoolers who have var0 or more friends ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var0 ;
Show the names of all of the high schooler var0's friends .,spider,"SELECT DERIVED_TABLEalias1.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON FRIENDalias0.FRIEND_ID = DERIVED_TABLEalias1.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
Return the names of friends of the high school student var0 .,spider,"SELECT DERIVED_TABLEalias1.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON FRIENDalias0.FRIEND_ID = DERIVED_TABLEalias1.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
How many friends does the high school student var0 have ?,spider,"SELECT COUNT( * ) FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
Count the number of friends var0 has .,spider,"SELECT COUNT( * ) FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
Show ids of all students who do not have any friends .,spider,SELECT ID FROM HIGHSCHOOLER EXCEPT SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 ;
What are the ids of high school students who do not have friends ?,spider,SELECT ID FROM HIGHSCHOOLER EXCEPT SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 ;
Show names of all high school students who do not have any friends .,spider,SELECT NAME FROM HIGHSCHOOLER EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ;
What are the names of students who have no friends ?,spider,SELECT NAME FROM HIGHSCHOOLER EXCEPT SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ;
Show the ids of high schoolers who have friends and are also liked by someone else .,spider,SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 INTERSECT SELECT LIKESalias0.LIKED_ID FROM LIKES AS LIKESalias0 ;
What are the ids of students who both have friends and are liked ?,spider,SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 INTERSECT SELECT LIKESalias0.LIKED_ID FROM LIKES AS LIKESalias0 ;
Show name of all students who have some friends and also are liked by someone else .,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID INTERSECT SELECT DERIVED_TABLEalias1.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON LIKESalias0.LIKED_ID = DERIVED_TABLEalias1.ID ;
What are the names of high schoolers who both have friends and are liked ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID INTERSECT SELECT DERIVED_TABLEalias1.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias1 ON LIKESalias0.LIKED_ID = DERIVED_TABLEalias1.ID ;
Count the number of likes for each student id .,spider,"SELECT COUNT( LIKESalias0.* ) , LIKESalias0.STUDENT_ID FROM LIKES AS LIKESalias0 GROUP BY LIKESalias0.STUDENT_ID ;"
How many likes correspond to each student id ?,spider,"SELECT COUNT( LIKESalias0.* ) , LIKESalias0.STUDENT_ID FROM LIKES AS LIKESalias0 GROUP BY LIKESalias0.STUDENT_ID ;"
"Show the names of high schoolers who have likes , and numbers of likes for each .",spider,"SELECT COUNT( LIKESalias0.* ) , DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ;"
"What are the names of high schoolers who have likes , and how many likes does each have ?",spider,"SELECT COUNT( LIKESalias0.* ) , DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ;"
What is the name of the high schooler who has the greatest number of likes ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ORDER BY COUNT( LIKESalias0.* ) DESC LIMIT 1 ;
Give the name of the student with the most likes .,spider,SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID ORDER BY COUNT( LIKESalias0.* ) DESC LIMIT 1 ;
Show the names of students who have at least var0 likes .,spider,SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID HAVING COUNT( LIKESalias0.* ) >= var0 ;
What are the names of students who have var0 or more likes ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID GROUP BY LIKESalias0.STUDENT_ID HAVING COUNT( LIKESalias0.* ) >= var0 ;
Show the names of students who have a grade higher than var0 and have at least var1 friends .,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.GRADE > var0 GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var1 ;
What are the names of high schoolers who have a grade of over var0 and have var1 or more friends ?,spider,SELECT DERIVED_TABLEalias0.NAME FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.GRADE > var0 GROUP BY FRIENDalias0.STUDENT_ID HAVING COUNT( * ) >= var1 ;
How many likes does var0 have ?,spider,"SELECT COUNT( LIKESalias0.* ) FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
Return the number of likes that the high schooler named var0 has .,spider,"SELECT COUNT( LIKESalias0.* ) FROM LIKES AS LIKESalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON LIKESalias0.STUDENT_ID = DERIVED_TABLEalias0.ID WHERE DERIVED_TABLEalias0.NAME = ""var0"" ;"
Find the average grade of all students who have some friends .,spider,SELECT AVG( GRADE ) FROM HIGHSCHOOLER WHERE ID IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
What is the average grade of students who have friends ?,spider,SELECT AVG( GRADE ) FROM HIGHSCHOOLER WHERE ID IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
Find the minimum grade of students who have no friends .,spider,SELECT MIN( GRADE ) FROM HIGHSCHOOLER WHERE ID NOT IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
What is the lowest grade of students who do not have any friends ?,spider,SELECT MIN( GRADE ) FROM HIGHSCHOOLER WHERE ID NOT IN ( SELECT FRIENDalias0.STUDENT_ID FROM FRIEND AS FRIENDalias0 JOIN HIGHSCHOOLER AS DERIVED_TABLEalias0 ON FRIENDalias0.STUDENT_ID = DERIVED_TABLEalias0.ID ) ;
Which states have both owners and professionals living there ?,spider,SELECT OWNERSalias0.STATE FROM OWNERS AS OWNERSalias0 INTERSECT SELECT PROFESSIONALSalias0.STATE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;
Find the states where both owners and professionals live .,spider,SELECT OWNERSalias0.STATE FROM OWNERS AS OWNERSalias0 INTERSECT SELECT PROFESSIONALSalias0.STATE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;
What is the average age of the dogs who have gone through any treatments ?,spider,SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
Find the average age of the dogs who went through treatments .,spider,SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
"Which professionals live in the state of var0 or have done treatment on more than var1 treatments ? List his or her id , last name and cell phone .",spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.LAST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = ""var0"" UNION SELECT PROFESSIONALSalias1.CELL_NUMBER , PROFESSIONALSalias1.LAST_NAME , PROFESSIONALSalias1.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias1.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) > var1 ;"
"Find the id , last name and cell phone of the professionals who live in the state of var0 or have performed more than two treatments .",spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.LAST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = ""var0"" UNION SELECT PROFESSIONALSalias1.CELL_NUMBER , PROFESSIONALSalias1.LAST_NAME , PROFESSIONALSalias1.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias1.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) > var1 ;"
Which dogs have not cost their owner more than var0 for treatment ? List the dog names .,spider,SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 GROUP BY TREATMENTSalias0.DOG_ID HAVING SUM( TREATMENTSalias0.COST_OF_TREATMENT ) > var0 ) ;
What are the names of the dogs for which the owner spent more than var0 for treatment ?,spider,SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 GROUP BY TREATMENTSalias0.DOG_ID HAVING SUM( TREATMENTSalias0.COST_OF_TREATMENT ) > var0 ) ;
Which first names are used for professionals or owners but are not used as dog names ?,spider,SELECT PROFESSIONALSalias0.FIRST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 UNION SELECT OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 EXCEPT SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 ;
Find the first names that are used for professionals or owners but are not used as dog names .,spider,SELECT PROFESSIONALSalias0.FIRST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 UNION SELECT OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 EXCEPT SELECT DOGSalias0.NAME FROM DOGS AS DOGSalias0 ;
"Which professional did not operate any treatment on dogs ? List the professional's id , role and email .",spider,"SELECT PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 EXCEPT SELECT PROFESSIONALSalias1.EMAIL_ADDRESS , PROFESSIONALSalias1.PROFESSIONAL_ID , PROFESSIONALSalias1.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID ;"
"Give me the id , role and email of the professionals who did not perform any treatment on dogs .",spider,"SELECT PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 EXCEPT SELECT PROFESSIONALSalias1.EMAIL_ADDRESS , PROFESSIONALSalias1.PROFESSIONAL_ID , PROFESSIONALSalias1.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias1 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias1.PROFESSIONAL_ID ;"
"Which owner owns the most dogs ? List the owner id , first name and last name .",spider,"SELECT DOGSalias0.OWNER_ID , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM DOGS AS DOGSalias0 JOIN OWNERS AS OWNERSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID GROUP BY DOGSalias0.OWNER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Return the owner id , first name and last name of the owner who has the most dogs .",spider,"SELECT DOGSalias0.OWNER_ID , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM DOGS AS DOGSalias0 JOIN OWNERS AS OWNERSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID GROUP BY DOGSalias0.OWNER_ID ORDER BY COUNT( * ) DESC LIMIT 1 ;"
"Which professionals have done at least two treatments ? List the professional's id , role , and first name .",spider,"SELECT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias0.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) >= var0 ;"
"What are the id , role , and first name of the professionals who have performed two or more treatments ?",spider,"SELECT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.PROFESSIONAL_ID , PROFESSIONALSalias0.ROLE_CODE FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias0.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) >= var0 ;"
What is the name of the breed with the most dogs ?,spider,SELECT BREEDSalias0.BREED_NAME FROM BREEDS AS BREEDSalias0 JOIN DOGS AS DOGSalias0 ON DOGSalias0.BREED_CODE = BREEDSalias0.BREED_CODE GROUP BY BREEDSalias0.BREED_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which breed do the most dogs have ? Give me the breed name .,spider,SELECT BREEDSalias0.BREED_NAME FROM BREEDS AS BREEDSalias0 JOIN DOGS AS DOGSalias0 ON DOGSalias0.BREED_CODE = BREEDSalias0.BREED_CODE GROUP BY BREEDSalias0.BREED_NAME ORDER BY COUNT( * ) DESC LIMIT 1 ;
Which owner has paid for the most treatments on his or her dogs ? List the owner id and last name .,spider,"SELECT OWNERSalias0.LAST_NAME , OWNERSalias0.OWNER_ID FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY COUNT( TREATMENTSalias0.* ) DESC LIMIT 1 ;"
Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs .,spider,"SELECT OWNERSalias0.LAST_NAME , OWNERSalias0.OWNER_ID FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY COUNT( TREATMENTSalias0.* ) DESC LIMIT 1 ;"
What is the description of the treatment type that costs the least money in total ?,spider,SELECT TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENT_TYPES AS TREATMENT_TYPESalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE GROUP BY TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) ASC LIMIT 1 ;
Give me the description of the treatment type whose total cost is the lowest .,spider,SELECT TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENT_TYPES AS TREATMENT_TYPESalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE GROUP BY TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) ASC LIMIT 1 ;
Which owner has paid the largest amount of money in total for their dogs ? Show the owner id and zip code .,spider,"SELECT OWNERSalias0.OWNER_ID , OWNERSalias0.ZIP_CODE FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) DESC LIMIT 1 ;"
Find the owner id and zip code of the owner who spent the most money in total for his or her dogs .,spider,"SELECT OWNERSalias0.OWNER_ID , OWNERSalias0.ZIP_CODE FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID GROUP BY OWNERSalias0.OWNER_ID ORDER BY SUM( TREATMENTSalias0.COST_OF_TREATMENT ) DESC LIMIT 1 ;"
Which professionals have done at least two types of treatments ? List the professional id and cell phone .,spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias0.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) >= var0 ;"
Find the id and cell phone of the professionals who operate two or more types of treatments .,spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.PROFESSIONAL_ID FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID GROUP BY PROFESSIONALSalias0.PROFESSIONAL_ID HAVING COUNT( TREATMENTSalias0.* ) >= var0 ;"
What are the first name and last name of the professionals who have done treatment with cost below average ?,spider,"SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.LAST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 WHERE TREATMENTSalias0.COST_OF_TREATMENT < ( SELECT AVG( TREATMENTSalias1.COST_OF_TREATMENT ) FROM TREATMENTS AS TREATMENTSalias1 ) ;"
Which professionals have operated a treatment that costs less than the average ? Give me theor first names and last names .,spider,"SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , PROFESSIONALSalias0.LAST_NAME FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 WHERE TREATMENTSalias0.COST_OF_TREATMENT < ( SELECT AVG( TREATMENTSalias1.COST_OF_TREATMENT ) FROM TREATMENTS AS TREATMENTSalias1 ) ;"
"List the date of each treatment , together with the first name of the professional who operated it .",spider,"SELECT PROFESSIONALSalias0.FIRST_NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 JOIN PROFESSIONALS AS PROFESSIONALSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID ;"
What are the date and the operating professional's first name of each treatment ?,spider,"SELECT PROFESSIONALSalias0.FIRST_NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 JOIN PROFESSIONALS AS PROFESSIONALSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID ;"
List the cost of each treatment and the corresponding treatment type description .,spider,"SELECT TREATMENTSalias0.COST_OF_TREATMENT , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENTS AS TREATMENTSalias0 JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;"
What are the cost and treatment type description of each treatment ?,spider,"SELECT TREATMENTSalias0.COST_OF_TREATMENT , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM TREATMENTS AS TREATMENTSalias0 JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;"
"List each owner's first name , last name , and the size of his for her dog .",spider,"SELECT DOGSalias0.SIZE_CODE , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;"
"What are each owner's first name , last name , and the size of their dog ?",spider,"SELECT DOGSalias0.SIZE_CODE , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;"
List pairs of the owner's first name and the dogs's name .,spider,"SELECT DOGSalias0.NAME , OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;"
What are each owner's first name and their dogs's name ?,spider,"SELECT DOGSalias0.NAME , OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID ;"
List the names of the dogs of the rarest breed and the treatment dates of them .,spider,"SELECT DOGSalias0.NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM DOGS AS DOGSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID WHERE DOGSalias0.BREED_CODE = ( SELECT DOGSalias1.BREED_CODE FROM DOGS AS DOGSalias1 GROUP BY BREED_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ) ;"
Which dogs are of the rarest breed ? Show their names and treatment dates .,spider,"SELECT DOGSalias0.NAME , TREATMENTSalias0.DATE_OF_TREATMENT FROM DOGS AS DOGSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID WHERE DOGSalias0.BREED_CODE = ( SELECT DOGSalias1.BREED_CODE FROM DOGS AS DOGSalias1 GROUP BY BREED_CODE ORDER BY COUNT( * ) ASC LIMIT 1 ) ;"
Which dogs are owned by someone who lives in var0 ? List the owner's first name and the dog's name .,spider,"SELECT DOGSalias0.NAME , OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID WHERE OWNERSalias0.STATE = ""var0"" ;"
Find the first names of owners living in var0 and the names of dogs they own .,spider,"SELECT DOGSalias0.NAME , OWNERSalias0.FIRST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID WHERE OWNERSalias0.STATE = ""var0"" ;"
What are the arriving date and the departing date of the dogs who have gone through a treatment ?,spider,"SELECT DISTINCT DOGSalias0.DATE_ARRIVED , DOGSalias0.DATE_DEPARTED FROM DOGS AS DOGSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID ;"
Find the arriving date and the departing date of the dogs that received a treatment .,spider,"SELECT DISTINCT DOGSalias0.DATE_ARRIVED , DOGSalias0.DATE_DEPARTED FROM DOGS AS DOGSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.DOG_ID = DOGSalias0.DOG_ID ;"
List the last name of the owner owning the youngest dog .,spider,SELECT OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID WHERE DOGSalias0.AGE = ( SELECT MAX( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
Who owns the youngest dog ? Give me his or her last name .,spider,SELECT OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 JOIN DOGS AS DOGSalias0 ON OWNERSalias0.OWNER_ID = DOGSalias0.OWNER_ID WHERE DOGSalias0.AGE = ( SELECT MAX( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
List the emails of the professionals who live in the state of var0 or the state of var1 .,spider,"SELECT PROFESSIONALSalias0.EMAIL_ADDRESS FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = ""var0"" OR PROFESSIONALSalias0.STATE = ""var1"" ;"
What are the emails of the professionals living in either the state of var0 or the state of var1 ?,spider,"SELECT PROFESSIONALSalias0.EMAIL_ADDRESS FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.STATE = ""var0"" OR PROFESSIONALSalias0.STATE = ""var1"" ;"
What are the arriving date and the departing date of all the dogs ?,spider,"SELECT DOGSalias0.DATE_ARRIVED , DOGSalias0.DATE_DEPARTED FROM DOGS AS DOGSalias0 ;"
List the arrival date and the departure date for all the dogs .,spider,"SELECT DOGSalias0.DATE_ARRIVED , DOGSalias0.DATE_DEPARTED FROM DOGS AS DOGSalias0 ;"
How many dogs went through any treatments ?,spider,SELECT COUNT( DISTINCT TREATMENTSalias0.DOG_ID ) FROM TREATMENTS AS TREATMENTSalias0 ;
Count the number of dogs that went through a treatment .,spider,SELECT COUNT( DISTINCT TREATMENTSalias0.DOG_ID ) FROM TREATMENTS AS TREATMENTSalias0 ;
How many professionals have performed any treatment to dogs ?,spider,SELECT COUNT( DISTINCT TREATMENTSalias0.PROFESSIONAL_ID ) FROM TREATMENTS AS TREATMENTSalias0 ;
Find the number of professionals who have ever treated dogs .,spider,SELECT COUNT( DISTINCT TREATMENTSalias0.PROFESSIONAL_ID ) FROM TREATMENTS AS TREATMENTSalias0 ;
"Which professionals live in a city containing the substring ' var0 ' ? List his or her role , street , city and state .",spider,"SELECT PROFESSIONALSalias0.CITY , PROFESSIONALSalias0.ROLE_CODE , PROFESSIONALSalias0.STATE , PROFESSIONALSalias0.STREET FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.CITY LIKE ""var0"" ;"
"Find the role , street , city and state of the professionals living in a city that contains the substring ' var0 ' .",spider,"SELECT PROFESSIONALSalias0.CITY , PROFESSIONALSalias0.ROLE_CODE , PROFESSIONALSalias0.STATE , PROFESSIONALSalias0.STREET FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.CITY LIKE ""var0"" ;"
"Which owners live in the state whose name contains the substring ' var0 ' ? List his first name , last name and email .",spider,"SELECT OWNERSalias0.EMAIL_ADDRESS , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 WHERE OWNERSalias0.STATE LIKE ""var0"" ;"
"Return the first name , last name and email of the owners living in a state whose name contains the substring ' var0 ' .",spider,"SELECT OWNERSalias0.EMAIL_ADDRESS , OWNERSalias0.FIRST_NAME , OWNERSalias0.LAST_NAME FROM OWNERS AS OWNERSalias0 WHERE OWNERSalias0.STATE LIKE ""var0"" ;"
How many dogs have an age below the average ?,spider,SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.AGE < ( SELECT AVG( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
Count the number of dogs of an age below the average .,spider,SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.AGE < ( SELECT AVG( DOGSalias1.AGE ) FROM DOGS AS DOGSalias1 ) ;
How much does the most recent treatment cost ?,spider,SELECT TREATMENTSalias0.COST_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 ORDER BY TREATMENTSalias0.DATE_OF_TREATMENT DESC LIMIT 1 ;
Show me the cost of the most recently performed treatment .,spider,SELECT TREATMENTSalias0.COST_OF_TREATMENT FROM TREATMENTS AS TREATMENTSalias0 ORDER BY TREATMENTSalias0.DATE_OF_TREATMENT DESC LIMIT 1 ;
How many dogs have not gone through any treatment ?,spider,SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
Tell me the number of dogs that have received any treatment .,spider,SELECT COUNT( * ) FROM DOGS AS DOGSalias0 WHERE DOGSalias0.DOG_ID NOT IN ( SELECT TREATMENTSalias0.DOG_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
How many owners temporarily do not have any dogs ?,spider,SELECT COUNT( * ) FROM OWNERS AS OWNERSalias0 WHERE OWNERSalias0.OWNER_ID NOT IN ( SELECT DOGSalias0.OWNER_ID FROM DOGS AS DOGSalias0 ) ;
Find the number of owners who do not own any dogs at this moment .,spider,SELECT COUNT( * ) FROM OWNERS AS OWNERSalias0 WHERE OWNERSalias0.OWNER_ID NOT IN ( SELECT DOGSalias0.OWNER_ID FROM DOGS AS DOGSalias0 ) ;
How many professionals did not operate any treatment on dogs ?,spider,SELECT COUNT( * ) FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.PROFESSIONAL_ID NOT IN ( SELECT TREATMENTSalias0.PROFESSIONAL_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
Find the number of professionals who have not treated any dogs .,spider,SELECT COUNT( * ) FROM PROFESSIONALS AS PROFESSIONALSalias0 WHERE PROFESSIONALSalias0.PROFESSIONAL_ID NOT IN ( SELECT TREATMENTSalias0.PROFESSIONAL_ID FROM TREATMENTS AS TREATMENTSalias0 ) ;
"List the dog name , age and weight of the dogs who have been abandoned ? var0 stands for yes , and 0 stands for no .",spider,"SELECT DOGSalias0.AGE , DOGSalias0.NAME , DOGSalias0.WEIGHT FROM DOGS AS DOGSalias0 WHERE ABANDONED_YN = var0 ;"
"What are the dog name , age and weight of the dogs that were abandoned ? Note that var0 stands for yes , and 0 stands for no in the tables .",spider,"SELECT DOGSalias0.AGE , DOGSalias0.NAME , DOGSalias0.WEIGHT FROM DOGS AS DOGSalias0 WHERE ABANDONED_YN = var0 ;"
What is the average age of all the dogs ?,spider,SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 ;
Compute the average age of all the dogs .,spider,SELECT AVG( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 ;
What is the age of the oldest dog ?,spider,SELECT MAX( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 ;
Tell me the age of the oldest dog .,spider,SELECT MAX( DOGSalias0.AGE ) FROM DOGS AS DOGSalias0 ;
How much does each charge type costs ? List both charge type and amount .,spider,"SELECT CHARGESalias0.CHARGE_AMOUNT , CHARGESalias0.CHARGE_TYPE FROM CHARGES AS CHARGESalias0 ;"
List each charge type and its amount .,spider,"SELECT CHARGESalias0.CHARGE_AMOUNT , CHARGESalias0.CHARGE_TYPE FROM CHARGES AS CHARGESalias0 ;"
How much does the most expensive charge type costs ?,spider,SELECT MAX( CHARGESalias0.CHARGE_AMOUNT ) FROM CHARGES AS CHARGESalias0 ;
What is the charge amount of the most expensive charge type ?,spider,SELECT MAX( CHARGESalias0.CHARGE_AMOUNT ) FROM CHARGES AS CHARGESalias0 ;
"List the email , cell phone and home phone of all the professionals .",spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.HOME_PHONE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;"
"What are the email , cell phone and home phone of each professional ?",spider,"SELECT PROFESSIONALSalias0.CELL_NUMBER , PROFESSIONALSalias0.EMAIL_ADDRESS , PROFESSIONALSalias0.HOME_PHONE FROM PROFESSIONALS AS PROFESSIONALSalias0 ;"
What are all the possible breed type and size type combinations ?,spider,"SELECT DISTINCT DOGSalias0.BREED_CODE , DOGSalias0.SIZE_CODE FROM DOGS AS DOGSalias0 ;"
Find the distinct breed type and size type combinations for dogs .,spider,"SELECT DISTINCT DOGSalias0.BREED_CODE , DOGSalias0.SIZE_CODE FROM DOGS AS DOGSalias0 ;"
List the first name of all the professionals along with the description of the treatment they have done .,spider,"SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;"
What are each professional's first name and description of the treatment they have performed ?,spider,"SELECT DISTINCT PROFESSIONALSalias0.FIRST_NAME , TREATMENT_TYPESalias0.TREATMENT_TYPE_DESCRIPTION FROM PROFESSIONALS AS PROFESSIONALSalias0 JOIN TREATMENTS AS TREATMENTSalias0 ON TREATMENTSalias0.PROFESSIONAL_ID = PROFESSIONALSalias0.PROFESSIONAL_ID JOIN TREATMENT_TYPES AS TREATMENT_TYPESalias0 ON TREATMENT_TYPESalias0.TREATMENT_TYPE_CODE = TREATMENTSalias0.TREATMENT_TYPE_CODE ;"
List the name of singers in ascending order of net worth .,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS ASC ;
What are the names of singers ordered by ascending net worth ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS ASC ;
What are the birth year and citizenship of singers ?,spider,"SELECT SINGERalias0.BIRTH_YEAR , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 ;"
What are the birth years and citizenships of the singers ?,spider,"SELECT SINGERalias0.BIRTH_YEAR , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 ;"
"List the name of singers whose citizenship is not "" var0 "" .",spider,"SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.CITIZENSHIP != ""var0"" ;"
What are the names of the singers who are not French citizens ?,spider,"SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.CITIZENSHIP != ""var0"" ;"
Show the name of singers whose birth year is either var0 or var1 ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR = var0 OR SINGERalias0.BIRTH_YEAR = var1 ;
What are the names of the singers whose birth years are either var0 or var1 ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR = var0 OR SINGERalias0.BIRTH_YEAR = var1 ;
What is the name of the singer with the largest net worth ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS DESC LIMIT 1 ;
What is the name of the singer who is worth the most ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 ORDER BY SINGERalias0.NET_WORTH_MILLIONS DESC LIMIT 1 ;
Show different citizenship of singers and the number of singers of each citizenship .,spider,"SELECT COUNT( * ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;"
"For each citizenship , how many singers are from that country ?",spider,"SELECT COUNT( * ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;"
Please show the most common citizenship of singers .,spider,SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY CITIZENSHIP ORDER BY COUNT( * ) DESC LIMIT 1 ;
What is the msot common singer citizenship ?,spider,SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY CITIZENSHIP ORDER BY COUNT( * ) DESC LIMIT 1 ;
Show different citizenships and the maximum net worth of singers of each citizenship .,spider,"SELECT MAX( SINGERalias0.NET_WORTH_MILLIONS ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;"
"For each citizenship , what is the maximum net worth ?",spider,"SELECT MAX( SINGERalias0.NET_WORTH_MILLIONS ) , SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 GROUP BY SINGERalias0.CITIZENSHIP ;"
Show titles of songs and names of singers .,spider,"SELECT SINGERalias0.NAME , SONGalias0.TITLE FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID ;"
What are the song titles and singer names ?,spider,"SELECT SINGERalias0.NAME , SONGalias0.TITLE FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID ;"
Show distinct names of singers that have songs with sales more than var0 .,spider,SELECT DISTINCT SINGERalias0.NAME FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID WHERE SONGalias0.SALES > var0 ;
what are the different names of the singers that have sales more than var0 ?,spider,SELECT DISTINCT SINGERalias0.NAME FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID WHERE SONGalias0.SALES > var0 ;
Show the names of singers that have more than one song .,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME HAVING COUNT( SONGalias0.* ) > var0 ;
What are the names of the singers that have more than one songs ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME HAVING COUNT( SONGalias0.* ) > var0 ;
Show the names of singers and the total sales of their songs .,spider,"SELECT SINGERalias0.NAME , SUM( SONGalias0.SALES ) FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME ;"
"For each singer name , what is the total sales for their songs ?",spider,"SELECT SINGERalias0.NAME , SUM( SONGalias0.SALES ) FROM SINGER AS SINGERalias0 JOIN SONG AS SONGalias0 ON SONGalias0.SINGER_ID = SINGERalias0.SINGER_ID GROUP BY SINGERalias0.NAME ;"
List the name of singers that do not have any song .,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SINGER_ID NOT IN ( SELECT SONGalias0.SINGER_ID FROM SONG AS SONGalias0 ) ;
What is the sname of every sing that does not have any song ?,spider,SELECT SINGERalias0.NAME FROM SINGER AS SINGERalias0 WHERE SINGERalias0.SINGER_ID NOT IN ( SELECT SONGalias0.SINGER_ID FROM SONG AS SONGalias0 ) ;
Show the citizenship shared by singers with birth year before var0 and after var1 .,spider,SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR < var0 INTERSECT SELECT SINGERalias1.CITIZENSHIP FROM SINGER AS SINGERalias1 WHERE SINGERalias1.BIRTH_YEAR > var1 ;
What are the citizenships that are shared by singers with a birth year before var0 and after var1 ?,spider,SELECT SINGERalias0.CITIZENSHIP FROM SINGER AS SINGERalias0 WHERE SINGERalias0.BIRTH_YEAR < var0 INTERSECT SELECT SINGERalias1.CITIZENSHIP FROM SINGER AS SINGERalias1 WHERE SINGERalias1.BIRTH_YEAR > var1 ;
How many available features are there in total ?,spider,SELECT COUNT( * ) FROM OTHER_AVAILABLE_FEATURES AS OTHER_AVAILABLE_FEATURESalias0 ;
What is the feature type name of feature var0 ?,spider,"SELECT DERIVED_TABLEalias0.FEATURE_TYPE_NAME FROM OTHER_AVAILABLE_FEATURES AS OTHER_AVAILABLE_FEATURESalias0 JOIN REF_FEATURE_TYPES AS DERIVED_TABLEalias0 ON OTHER_AVAILABLE_FEATURESalias0.FEATURE_TYPE_CODE = DERIVED_TABLEalias0.FEATURE_TYPE_CODE WHERE OTHER_AVAILABLE_FEATURESalias0.FEATURE_NAME = ""var0"" ;"
Show the property type descriptions of properties belonging to that code .,spider,SELECT DERIVED_TABLEalias0.PROPERTY_TYPE_DESCRIPTION FROM PROPERTIES AS PROPERTIESalias0 JOIN REF_PROPERTY_TYPES AS DERIVED_TABLEalias0 ON PROPERTIESalias0.PROPERTY_TYPE_CODE = DERIVED_TABLEalias0.PROPERTY_TYPE_CODE GROUP BY PROPERTIESalias0.PROPERTY_TYPE_CODE ;
What are the names of properties that are either houses or apartments with more than var2 room ?,spider,"SELECT PROPERTIESalias0.PROPERTY_NAME FROM PROPERTIES AS PROPERTIESalias0 WHERE PROPERTIESalias0.PROPERTY_TYPE_CODE = ""var0"" UNION SELECT PROPERTIESalias1.PROPERTY_NAME FROM PROPERTIES AS PROPERTIESalias1 WHERE PROPERTIESalias1.PROPERTY_TYPE_CODE = ""var1"" AND PROPERTIESalias1.ROOM_COUNT > var2 ;"
